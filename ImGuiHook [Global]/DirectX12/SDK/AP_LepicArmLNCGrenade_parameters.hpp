#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AP_LepicArmLNCGrenade

#include "Basic.hpp"

#include "M1_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "M1Data_structs.hpp"


namespace SDK::Params
{

// Function AP_LepicArmLNCGrenade.AP_LepicArmLNCGrenade_C.BP_OnPostProcessHit
// 0x00A8 (0x00A8 - 0x0000)
struct AP_LepicArmLNCGrenade_C_BP_OnPostProcessHit final
{
public:
	class AActor*                                 OtherActor;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             HitResult;                                         // 0x0008(0x009C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          bPenetrated;                                       // 0x00A4(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AP_LepicArmLNCGrenade_C_BP_OnPostProcessHit) == 0x000008, "Wrong alignment on AP_LepicArmLNCGrenade_C_BP_OnPostProcessHit");
static_assert(sizeof(AP_LepicArmLNCGrenade_C_BP_OnPostProcessHit) == 0x0000A8, "Wrong size on AP_LepicArmLNCGrenade_C_BP_OnPostProcessHit");
static_assert(offsetof(AP_LepicArmLNCGrenade_C_BP_OnPostProcessHit, OtherActor) == 0x000000, "Member 'AP_LepicArmLNCGrenade_C_BP_OnPostProcessHit::OtherActor' has a wrong offset!");
static_assert(offsetof(AP_LepicArmLNCGrenade_C_BP_OnPostProcessHit, HitResult) == 0x000008, "Member 'AP_LepicArmLNCGrenade_C_BP_OnPostProcessHit::HitResult' has a wrong offset!");
static_assert(offsetof(AP_LepicArmLNCGrenade_C_BP_OnPostProcessHit, bPenetrated) == 0x0000A4, "Member 'AP_LepicArmLNCGrenade_C_BP_OnPostProcessHit::bPenetrated' has a wrong offset!");

// Function AP_LepicArmLNCGrenade.AP_LepicArmLNCGrenade_C.ExecuteUbergraph_AP_LepicArmLNCGrenade
// 0x02E0 (0x02E0 - 0x0000)
struct AP_LepicArmLNCGrenade_C_ExecuteUbergraph_AP_LepicArmLNCGrenade final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_OtherActor;                           // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_HitResult;                            // 0x0010(0x009C)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          K2Node_Event_bPenetrated;                          // 0x00AC(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AD[0x3];                                       // 0x00AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FM1TaggedAbilityParamData>      Temp_struct_Variable;                              // 0x00B0(0x0010)(ConstParm, ReferenceParm)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C2[0x2];                                       // 0x00C2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x00CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x00D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x00E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x00F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FC[0x4];                                       // 0x00FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0100(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0108(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0110(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0134(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0140(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x014C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14D[0x3];                                      // 0x014D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotFromZ_ReturnValue;                 // 0x0150(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15C[0x4];                                      // 0x015C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0160(0x0030)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_OtherActor_1;                         // 0x0190(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_ExplosionResult;                      // 0x0198(0x009C)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_234[0x4];                                      // 0x0234(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           Temp_name_Variable;                                // 0x0238(0x0010)(ConstParm, ReferenceParm)
	struct FM1AbilityContextHandle                CallFunc_BP_MakeForwardingContext_ReturnValue;     // 0x0248(0x0010)()
	struct FM1AbilityEvent                        K2Node_MakeStruct_M1AbilityEvent;                  // 0x0258(0x0040)()
	class AM1AbilityActor*                        CallFunc_SpawnFirstAbilityActorByTag_ReturnValue;  // 0x0298(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FM1AbilityContextHandle                CallFunc_GetAbilityContextHandle_ReturnValue;      // 0x02A0(0x0010)(ConstParm)
	class AActor*                                 CallFunc_AbilityContextGetInstigator_ReturnValue;  // 0x02B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UM1AbilityComponent*                    CallFunc_GetComponentByClass_ReturnValue;          // 0x02B8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x02C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x02C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C2[0x6];                                      // 0x02C2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IM1AbilityEventInterface> CallFunc_HandleAbilityEvent_self_CastInput;        // 0x02C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_HandleAbilityEvent_ReturnValue;           // 0x02D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AP_LepicArmLNCGrenade_C_ExecuteUbergraph_AP_LepicArmLNCGrenade) == 0x000010, "Wrong alignment on AP_LepicArmLNCGrenade_C_ExecuteUbergraph_AP_LepicArmLNCGrenade");
static_assert(sizeof(AP_LepicArmLNCGrenade_C_ExecuteUbergraph_AP_LepicArmLNCGrenade) == 0x0002E0, "Wrong size on AP_LepicArmLNCGrenade_C_ExecuteUbergraph_AP_LepicArmLNCGrenade");
static_assert(offsetof(AP_LepicArmLNCGrenade_C_ExecuteUbergraph_AP_LepicArmLNCGrenade, EntryPoint) == 0x000000, "Member 'AP_LepicArmLNCGrenade_C_ExecuteUbergraph_AP_LepicArmLNCGrenade::EntryPoint' has a wrong offset!");
static_assert(offsetof(AP_LepicArmLNCGrenade_C_ExecuteUbergraph_AP_LepicArmLNCGrenade, K2Node_Event_OtherActor) == 0x000008, "Member 'AP_LepicArmLNCGrenade_C_ExecuteUbergraph_AP_LepicArmLNCGrenade::K2Node_Event_OtherActor' has a wrong offset!");
static_assert(offsetof(AP_LepicArmLNCGrenade_C_ExecuteUbergraph_AP_LepicArmLNCGrenade, K2Node_Event_HitResult) == 0x000010, "Member 'AP_LepicArmLNCGrenade_C_ExecuteUbergraph_AP_LepicArmLNCGrenade::K2Node_Event_HitResult' has a wrong offset!");
static_assert(offsetof(AP_LepicArmLNCGrenade_C_ExecuteUbergraph_AP_LepicArmLNCGrenade, K2Node_Event_bPenetrated) == 0x0000AC, "Member 'AP_LepicArmLNCGrenade_C_ExecuteUbergraph_AP_LepicArmLNCGrenade::K2Node_Event_bPenetrated' has a wrong offset!");
static_assert(offsetof(AP_LepicArmLNCGrenade_C_ExecuteUbergraph_AP_LepicArmLNCGrenade, Temp_struct_Variable) == 0x0000B0, "Member 'AP_LepicArmLNCGrenade_C_ExecuteUbergraph_AP_LepicArmLNCGrenade::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(AP_LepicArmLNCGrenade_C_ExecuteUbergraph_AP_LepicArmLNCGrenade, CallFunc_BreakHitResult_bBlockingHit) == 0x0000C0, "Member 'AP_LepicArmLNCGrenade_C_ExecuteUbergraph_AP_LepicArmLNCGrenade::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(AP_LepicArmLNCGrenade_C_ExecuteUbergraph_AP_LepicArmLNCGrenade, CallFunc_BreakHitResult_bInitialOverlap) == 0x0000C1, "Member 'AP_LepicArmLNCGrenade_C_ExecuteUbergraph_AP_LepicArmLNCGrenade::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(AP_LepicArmLNCGrenade_C_ExecuteUbergraph_AP_LepicArmLNCGrenade, CallFunc_BreakHitResult_Time) == 0x0000C4, "Member 'AP_LepicArmLNCGrenade_C_ExecuteUbergraph_AP_LepicArmLNCGrenade::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(AP_LepicArmLNCGrenade_C_ExecuteUbergraph_AP_LepicArmLNCGrenade, CallFunc_BreakHitResult_Distance) == 0x0000C8, "Member 'AP_LepicArmLNCGrenade_C_ExecuteUbergraph_AP_LepicArmLNCGrenade::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(AP_LepicArmLNCGrenade_C_ExecuteUbergraph_AP_LepicArmLNCGrenade, CallFunc_BreakHitResult_Location) == 0x0000CC, "Member 'AP_LepicArmLNCGrenade_C_ExecuteUbergraph_AP_LepicArmLNCGrenade::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(AP_LepicArmLNCGrenade_C_ExecuteUbergraph_AP_LepicArmLNCGrenade, CallFunc_BreakHitResult_ImpactPoint) == 0x0000D8, "Member 'AP_LepicArmLNCGrenade_C_ExecuteUbergraph_AP_LepicArmLNCGrenade::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(AP_LepicArmLNCGrenade_C_ExecuteUbergraph_AP_LepicArmLNCGrenade, CallFunc_BreakHitResult_Normal) == 0x0000E4, "Member 'AP_LepicArmLNCGrenade_C_ExecuteUbergraph_AP_LepicArmLNCGrenade::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(AP_LepicArmLNCGrenade_C_ExecuteUbergraph_AP_LepicArmLNCGrenade, CallFunc_BreakHitResult_ImpactNormal) == 0x0000F0, "Member 'AP_LepicArmLNCGrenade_C_ExecuteUbergraph_AP_LepicArmLNCGrenade::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(AP_LepicArmLNCGrenade_C_ExecuteUbergraph_AP_LepicArmLNCGrenade, CallFunc_BreakHitResult_PhysMat) == 0x000100, "Member 'AP_LepicArmLNCGrenade_C_ExecuteUbergraph_AP_LepicArmLNCGrenade::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(AP_LepicArmLNCGrenade_C_ExecuteUbergraph_AP_LepicArmLNCGrenade, CallFunc_BreakHitResult_HitActor) == 0x000108, "Member 'AP_LepicArmLNCGrenade_C_ExecuteUbergraph_AP_LepicArmLNCGrenade::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(AP_LepicArmLNCGrenade_C_ExecuteUbergraph_AP_LepicArmLNCGrenade, CallFunc_BreakHitResult_HitComponent) == 0x000110, "Member 'AP_LepicArmLNCGrenade_C_ExecuteUbergraph_AP_LepicArmLNCGrenade::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(AP_LepicArmLNCGrenade_C_ExecuteUbergraph_AP_LepicArmLNCGrenade, CallFunc_BreakHitResult_HitBoneName) == 0x000118, "Member 'AP_LepicArmLNCGrenade_C_ExecuteUbergraph_AP_LepicArmLNCGrenade::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(AP_LepicArmLNCGrenade_C_ExecuteUbergraph_AP_LepicArmLNCGrenade, CallFunc_BreakHitResult_BoneName) == 0x000120, "Member 'AP_LepicArmLNCGrenade_C_ExecuteUbergraph_AP_LepicArmLNCGrenade::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(AP_LepicArmLNCGrenade_C_ExecuteUbergraph_AP_LepicArmLNCGrenade, CallFunc_BreakHitResult_HitItem) == 0x000128, "Member 'AP_LepicArmLNCGrenade_C_ExecuteUbergraph_AP_LepicArmLNCGrenade::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(AP_LepicArmLNCGrenade_C_ExecuteUbergraph_AP_LepicArmLNCGrenade, CallFunc_BreakHitResult_ElementIndex) == 0x00012C, "Member 'AP_LepicArmLNCGrenade_C_ExecuteUbergraph_AP_LepicArmLNCGrenade::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(AP_LepicArmLNCGrenade_C_ExecuteUbergraph_AP_LepicArmLNCGrenade, CallFunc_BreakHitResult_FaceIndex) == 0x000130, "Member 'AP_LepicArmLNCGrenade_C_ExecuteUbergraph_AP_LepicArmLNCGrenade::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(AP_LepicArmLNCGrenade_C_ExecuteUbergraph_AP_LepicArmLNCGrenade, CallFunc_BreakHitResult_TraceStart) == 0x000134, "Member 'AP_LepicArmLNCGrenade_C_ExecuteUbergraph_AP_LepicArmLNCGrenade::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(AP_LepicArmLNCGrenade_C_ExecuteUbergraph_AP_LepicArmLNCGrenade, CallFunc_BreakHitResult_TraceEnd) == 0x000140, "Member 'AP_LepicArmLNCGrenade_C_ExecuteUbergraph_AP_LepicArmLNCGrenade::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(AP_LepicArmLNCGrenade_C_ExecuteUbergraph_AP_LepicArmLNCGrenade, CallFunc_HasAuthority_ReturnValue) == 0x00014C, "Member 'AP_LepicArmLNCGrenade_C_ExecuteUbergraph_AP_LepicArmLNCGrenade::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(AP_LepicArmLNCGrenade_C_ExecuteUbergraph_AP_LepicArmLNCGrenade, CallFunc_MakeRotFromZ_ReturnValue) == 0x000150, "Member 'AP_LepicArmLNCGrenade_C_ExecuteUbergraph_AP_LepicArmLNCGrenade::CallFunc_MakeRotFromZ_ReturnValue' has a wrong offset!");
static_assert(offsetof(AP_LepicArmLNCGrenade_C_ExecuteUbergraph_AP_LepicArmLNCGrenade, CallFunc_MakeTransform_ReturnValue) == 0x000160, "Member 'AP_LepicArmLNCGrenade_C_ExecuteUbergraph_AP_LepicArmLNCGrenade::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(AP_LepicArmLNCGrenade_C_ExecuteUbergraph_AP_LepicArmLNCGrenade, K2Node_Event_OtherActor_1) == 0x000190, "Member 'AP_LepicArmLNCGrenade_C_ExecuteUbergraph_AP_LepicArmLNCGrenade::K2Node_Event_OtherActor_1' has a wrong offset!");
static_assert(offsetof(AP_LepicArmLNCGrenade_C_ExecuteUbergraph_AP_LepicArmLNCGrenade, K2Node_Event_ExplosionResult) == 0x000198, "Member 'AP_LepicArmLNCGrenade_C_ExecuteUbergraph_AP_LepicArmLNCGrenade::K2Node_Event_ExplosionResult' has a wrong offset!");
static_assert(offsetof(AP_LepicArmLNCGrenade_C_ExecuteUbergraph_AP_LepicArmLNCGrenade, Temp_name_Variable) == 0x000238, "Member 'AP_LepicArmLNCGrenade_C_ExecuteUbergraph_AP_LepicArmLNCGrenade::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(AP_LepicArmLNCGrenade_C_ExecuteUbergraph_AP_LepicArmLNCGrenade, CallFunc_BP_MakeForwardingContext_ReturnValue) == 0x000248, "Member 'AP_LepicArmLNCGrenade_C_ExecuteUbergraph_AP_LepicArmLNCGrenade::CallFunc_BP_MakeForwardingContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(AP_LepicArmLNCGrenade_C_ExecuteUbergraph_AP_LepicArmLNCGrenade, K2Node_MakeStruct_M1AbilityEvent) == 0x000258, "Member 'AP_LepicArmLNCGrenade_C_ExecuteUbergraph_AP_LepicArmLNCGrenade::K2Node_MakeStruct_M1AbilityEvent' has a wrong offset!");
static_assert(offsetof(AP_LepicArmLNCGrenade_C_ExecuteUbergraph_AP_LepicArmLNCGrenade, CallFunc_SpawnFirstAbilityActorByTag_ReturnValue) == 0x000298, "Member 'AP_LepicArmLNCGrenade_C_ExecuteUbergraph_AP_LepicArmLNCGrenade::CallFunc_SpawnFirstAbilityActorByTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(AP_LepicArmLNCGrenade_C_ExecuteUbergraph_AP_LepicArmLNCGrenade, CallFunc_GetAbilityContextHandle_ReturnValue) == 0x0002A0, "Member 'AP_LepicArmLNCGrenade_C_ExecuteUbergraph_AP_LepicArmLNCGrenade::CallFunc_GetAbilityContextHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(AP_LepicArmLNCGrenade_C_ExecuteUbergraph_AP_LepicArmLNCGrenade, CallFunc_AbilityContextGetInstigator_ReturnValue) == 0x0002B0, "Member 'AP_LepicArmLNCGrenade_C_ExecuteUbergraph_AP_LepicArmLNCGrenade::CallFunc_AbilityContextGetInstigator_ReturnValue' has a wrong offset!");
static_assert(offsetof(AP_LepicArmLNCGrenade_C_ExecuteUbergraph_AP_LepicArmLNCGrenade, CallFunc_GetComponentByClass_ReturnValue) == 0x0002B8, "Member 'AP_LepicArmLNCGrenade_C_ExecuteUbergraph_AP_LepicArmLNCGrenade::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(AP_LepicArmLNCGrenade_C_ExecuteUbergraph_AP_LepicArmLNCGrenade, CallFunc_IsValid_ReturnValue) == 0x0002C0, "Member 'AP_LepicArmLNCGrenade_C_ExecuteUbergraph_AP_LepicArmLNCGrenade::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(AP_LepicArmLNCGrenade_C_ExecuteUbergraph_AP_LepicArmLNCGrenade, CallFunc_IsValid_ReturnValue_1) == 0x0002C1, "Member 'AP_LepicArmLNCGrenade_C_ExecuteUbergraph_AP_LepicArmLNCGrenade::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AP_LepicArmLNCGrenade_C_ExecuteUbergraph_AP_LepicArmLNCGrenade, CallFunc_HandleAbilityEvent_self_CastInput) == 0x0002C8, "Member 'AP_LepicArmLNCGrenade_C_ExecuteUbergraph_AP_LepicArmLNCGrenade::CallFunc_HandleAbilityEvent_self_CastInput' has a wrong offset!");
static_assert(offsetof(AP_LepicArmLNCGrenade_C_ExecuteUbergraph_AP_LepicArmLNCGrenade, CallFunc_HandleAbilityEvent_ReturnValue) == 0x0002D8, "Member 'AP_LepicArmLNCGrenade_C_ExecuteUbergraph_AP_LepicArmLNCGrenade::CallFunc_HandleAbilityEvent_ReturnValue' has a wrong offset!");

// Function AP_LepicArmLNCGrenade.AP_LepicArmLNCGrenade_C.ProcessExplosionToActor
// 0x00A8 (0x00A8 - 0x0000)
struct AP_LepicArmLNCGrenade_C_ProcessExplosionToActor final
{
public:
	class AActor*                                 OtherActor;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             ExplosionResult;                                   // 0x0008(0x009C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(AP_LepicArmLNCGrenade_C_ProcessExplosionToActor) == 0x000008, "Wrong alignment on AP_LepicArmLNCGrenade_C_ProcessExplosionToActor");
static_assert(sizeof(AP_LepicArmLNCGrenade_C_ProcessExplosionToActor) == 0x0000A8, "Wrong size on AP_LepicArmLNCGrenade_C_ProcessExplosionToActor");
static_assert(offsetof(AP_LepicArmLNCGrenade_C_ProcessExplosionToActor, OtherActor) == 0x000000, "Member 'AP_LepicArmLNCGrenade_C_ProcessExplosionToActor::OtherActor' has a wrong offset!");
static_assert(offsetof(AP_LepicArmLNCGrenade_C_ProcessExplosionToActor, ExplosionResult) == 0x000008, "Member 'AP_LepicArmLNCGrenade_C_ProcessExplosionToActor::ExplosionResult' has a wrong offset!");

}

