#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Ability_Debone

#include "Basic.hpp"

#include "GameplayCameras_structs.hpp"
#include "M1_structs.hpp"
#include "Engine_structs.hpp"
#include "M1Data_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function Ability_Debone.Ability_Debone_C.AbilityEvent_DeboneStart
// 0x0008 (0x0008 - 0x0000)
struct Ability_Debone_C_AbilityEvent_DeboneStart final
{
public:
	class UM1MonsterPartsComponent*               Parts;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ability_Debone_C_AbilityEvent_DeboneStart) == 0x000008, "Wrong alignment on Ability_Debone_C_AbilityEvent_DeboneStart");
static_assert(sizeof(Ability_Debone_C_AbilityEvent_DeboneStart) == 0x000008, "Wrong size on Ability_Debone_C_AbilityEvent_DeboneStart");
static_assert(offsetof(Ability_Debone_C_AbilityEvent_DeboneStart, Parts) == 0x000000, "Member 'Ability_Debone_C_AbilityEvent_DeboneStart::Parts' has a wrong offset!");

// Function Ability_Debone.Ability_Debone_C.ApplyArriveCamera
// 0x0048 (0x0048 - 0x0000)
struct Ability_Debone_C_ApplyArriveCamera final
{
public:
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetArriveCameraModifier_OutCameraModifier; // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_GetArriveCameraModifier_OutCameraModifier_1; // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwnerPlayerController_ReturnValue;     // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCameraModifier*                        CallFunc_AddNewCameraModifier_ReturnValue;         // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UCameraModifier*                        CallFunc_FindCameraModifierByClass_ReturnValue;    // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UCameraModifier*                        CallFunc_FindCameraModifierByClass_ReturnValue_1;  // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ability_Debone_C_ApplyArriveCamera) == 0x000008, "Wrong alignment on Ability_Debone_C_ApplyArriveCamera");
static_assert(sizeof(Ability_Debone_C_ApplyArriveCamera) == 0x000048, "Wrong size on Ability_Debone_C_ApplyArriveCamera");
static_assert(offsetof(Ability_Debone_C_ApplyArriveCamera, CallFunc_IsLocallyControlled_ReturnValue) == 0x000000, "Member 'Ability_Debone_C_ApplyArriveCamera::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ApplyArriveCamera, CallFunc_GetArriveCameraModifier_OutCameraModifier) == 0x000008, "Member 'Ability_Debone_C_ApplyArriveCamera::CallFunc_GetArriveCameraModifier_OutCameraModifier' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ApplyArriveCamera, CallFunc_GetArriveCameraModifier_OutCameraModifier_1) == 0x000010, "Member 'Ability_Debone_C_ApplyArriveCamera::CallFunc_GetArriveCameraModifier_OutCameraModifier_1' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ApplyArriveCamera, CallFunc_GetOwnerPlayerController_ReturnValue) == 0x000018, "Member 'Ability_Debone_C_ApplyArriveCamera::CallFunc_GetOwnerPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ApplyArriveCamera, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'Ability_Debone_C_ApplyArriveCamera::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ApplyArriveCamera, CallFunc_AddNewCameraModifier_ReturnValue) == 0x000028, "Member 'Ability_Debone_C_ApplyArriveCamera::CallFunc_AddNewCameraModifier_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ApplyArriveCamera, CallFunc_FindCameraModifierByClass_ReturnValue) == 0x000030, "Member 'Ability_Debone_C_ApplyArriveCamera::CallFunc_FindCameraModifierByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ApplyArriveCamera, CallFunc_FindCameraModifierByClass_ReturnValue_1) == 0x000038, "Member 'Ability_Debone_C_ApplyArriveCamera::CallFunc_FindCameraModifierByClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ApplyArriveCamera, CallFunc_IsValid_ReturnValue_1) == 0x000040, "Member 'Ability_Debone_C_ApplyArriveCamera::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ApplyArriveCamera, CallFunc_IsValid_ReturnValue_2) == 0x000041, "Member 'Ability_Debone_C_ApplyArriveCamera::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ApplyArriveCamera, CallFunc_IsValid_ReturnValue_3) == 0x000042, "Member 'Ability_Debone_C_ApplyArriveCamera::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");

// Function Ability_Debone.Ability_Debone_C.ApplyIgnoreLookInput
// 0x0008 (0x0008 - 0x0000)
struct Ability_Debone_C_ApplyIgnoreLookInput final
{
public:
	class APlayerController*                      CallFunc_GetOwnerPlayerController_ReturnValue;     // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ability_Debone_C_ApplyIgnoreLookInput) == 0x000008, "Wrong alignment on Ability_Debone_C_ApplyIgnoreLookInput");
static_assert(sizeof(Ability_Debone_C_ApplyIgnoreLookInput) == 0x000008, "Wrong size on Ability_Debone_C_ApplyIgnoreLookInput");
static_assert(offsetof(Ability_Debone_C_ApplyIgnoreLookInput, CallFunc_GetOwnerPlayerController_ReturnValue) == 0x000000, "Member 'Ability_Debone_C_ApplyIgnoreLookInput::CallFunc_GetOwnerPlayerController_ReturnValue' has a wrong offset!");

// Function Ability_Debone.Ability_Debone_C.ApplyStartCamera
// 0x0080 (0x0080 - 0x0000)
struct Ability_Debone_C_ApplyStartCamera final
{
public:
	TArray<class UClass*>                         CameraModifierClasses;                             // 0x0000(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UClass*>                         K2Node_MakeArray_Array;                            // 0x0018(0x0010)(ReferenceParm)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UClass*>                         CallFunc_GetAllCameras_OutCameraModifiers;         // 0x0030(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_46[0x2];                                       // 0x0046(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwnerPlayerController_ReturnValue;     // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_Array_Get_Item;                           // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCameraModifier*                        CallFunc_FindCameraModifierByClass_ReturnValue;    // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UCameraModifier*                        CallFunc_AddNewCameraModifier_ReturnValue;         // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RemoveCameraModifier_ReturnValue;         // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x007A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ability_Debone_C_ApplyStartCamera) == 0x000008, "Wrong alignment on Ability_Debone_C_ApplyStartCamera");
static_assert(sizeof(Ability_Debone_C_ApplyStartCamera) == 0x000080, "Wrong size on Ability_Debone_C_ApplyStartCamera");
static_assert(offsetof(Ability_Debone_C_ApplyStartCamera, CameraModifierClasses) == 0x000000, "Member 'Ability_Debone_C_ApplyStartCamera::CameraModifierClasses' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ApplyStartCamera, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'Ability_Debone_C_ApplyStartCamera::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ApplyStartCamera, K2Node_MakeArray_Array) == 0x000018, "Member 'Ability_Debone_C_ApplyStartCamera::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ApplyStartCamera, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'Ability_Debone_C_ApplyStartCamera::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ApplyStartCamera, CallFunc_GetAllCameras_OutCameraModifiers) == 0x000030, "Member 'Ability_Debone_C_ApplyStartCamera::CallFunc_GetAllCameras_OutCameraModifiers' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ApplyStartCamera, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'Ability_Debone_C_ApplyStartCamera::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ApplyStartCamera, CallFunc_IsLocallyControlled_ReturnValue) == 0x000044, "Member 'Ability_Debone_C_ApplyStartCamera::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ApplyStartCamera, CallFunc_Less_IntInt_ReturnValue) == 0x000045, "Member 'Ability_Debone_C_ApplyStartCamera::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ApplyStartCamera, Temp_int_Array_Index_Variable) == 0x000048, "Member 'Ability_Debone_C_ApplyStartCamera::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ApplyStartCamera, CallFunc_GetOwnerPlayerController_ReturnValue) == 0x000050, "Member 'Ability_Debone_C_ApplyStartCamera::CallFunc_GetOwnerPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ApplyStartCamera, CallFunc_Array_Get_Item) == 0x000058, "Member 'Ability_Debone_C_ApplyStartCamera::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ApplyStartCamera, CallFunc_IsValid_ReturnValue) == 0x000060, "Member 'Ability_Debone_C_ApplyStartCamera::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ApplyStartCamera, CallFunc_FindCameraModifierByClass_ReturnValue) == 0x000068, "Member 'Ability_Debone_C_ApplyStartCamera::CallFunc_FindCameraModifierByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ApplyStartCamera, CallFunc_AddNewCameraModifier_ReturnValue) == 0x000070, "Member 'Ability_Debone_C_ApplyStartCamera::CallFunc_AddNewCameraModifier_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ApplyStartCamera, CallFunc_IsValid_ReturnValue_1) == 0x000078, "Member 'Ability_Debone_C_ApplyStartCamera::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ApplyStartCamera, CallFunc_RemoveCameraModifier_ReturnValue) == 0x000079, "Member 'Ability_Debone_C_ApplyStartCamera::CallFunc_RemoveCameraModifier_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ApplyStartCamera, CallFunc_IsValid_ReturnValue_2) == 0x00007A, "Member 'Ability_Debone_C_ApplyStartCamera::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");

// Function Ability_Debone.Ability_Debone_C.ApplyStruggleCamera
// 0x0068 (0x0068 - 0x0000)
struct Ability_Debone_C_ApplyStruggleCamera final
{
public:
	bool                                          bApply;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FCameraAnimationParams                 K2Node_MakeStruct_CameraAnimationParams;           // 0x0004(0x0030)(NoDestructor)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36[0x2];                                       // 0x0036(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwnerPlayerController_ReturnValue;     // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwnerPlayerController_ReturnValue_1;   // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCameraAnimationSequence*               K2Node_Select_Default;                             // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FCameraAnimationHandle                 CallFunc_PlaySequenceCamera_ReturnValue;           // 0x0060(0x0004)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ability_Debone_C_ApplyStruggleCamera) == 0x000008, "Wrong alignment on Ability_Debone_C_ApplyStruggleCamera");
static_assert(sizeof(Ability_Debone_C_ApplyStruggleCamera) == 0x000068, "Wrong size on Ability_Debone_C_ApplyStruggleCamera");
static_assert(offsetof(Ability_Debone_C_ApplyStruggleCamera, bApply) == 0x000000, "Member 'Ability_Debone_C_ApplyStruggleCamera::bApply' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ApplyStruggleCamera, K2Node_MakeStruct_CameraAnimationParams) == 0x000004, "Member 'Ability_Debone_C_ApplyStruggleCamera::K2Node_MakeStruct_CameraAnimationParams' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ApplyStruggleCamera, CallFunc_IsLocallyControlled_ReturnValue) == 0x000034, "Member 'Ability_Debone_C_ApplyStruggleCamera::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ApplyStruggleCamera, CallFunc_IsValid_ReturnValue) == 0x000035, "Member 'Ability_Debone_C_ApplyStruggleCamera::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ApplyStruggleCamera, CallFunc_GetOwnerPlayerController_ReturnValue) == 0x000038, "Member 'Ability_Debone_C_ApplyStruggleCamera::CallFunc_GetOwnerPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ApplyStruggleCamera, Temp_bool_Variable) == 0x000040, "Member 'Ability_Debone_C_ApplyStruggleCamera::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ApplyStruggleCamera, CallFunc_GetOwnerPlayerController_ReturnValue_1) == 0x000048, "Member 'Ability_Debone_C_ApplyStruggleCamera::CallFunc_GetOwnerPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ApplyStruggleCamera, CallFunc_IsValid_ReturnValue_1) == 0x000050, "Member 'Ability_Debone_C_ApplyStruggleCamera::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ApplyStruggleCamera, K2Node_Select_Default) == 0x000058, "Member 'Ability_Debone_C_ApplyStruggleCamera::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ApplyStruggleCamera, CallFunc_PlaySequenceCamera_ReturnValue) == 0x000060, "Member 'Ability_Debone_C_ApplyStruggleCamera::CallFunc_PlaySequenceCamera_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ApplyStruggleCamera, CallFunc_IsValid_ReturnValue_2) == 0x000064, "Member 'Ability_Debone_C_ApplyStruggleCamera::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");

// Function Ability_Debone.Ability_Debone_C.AttachToParts
// 0x0210 (0x0210 - 0x0000)
struct Ability_Debone_C_AttachToParts final
{
public:
	struct FTransform                             RelativeTransform;                                 // 0x0000(0x0030)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwnerActor_ReturnValue;                // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38[0x8];                                       // 0x0038(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0040(0x0030)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwnerActor_ReturnValue_1;              // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwnerActor_ReturnValue_2;              // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorRelativeTransform_SweepHitResult; // 0x0080(0x009C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue;         // 0x011C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11D[0x3];                                      // 0x011D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwnerActor_ReturnValue_3;              // 0x0120(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwnerActor_ReturnValue_4;              // 0x0128(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwnerActor_ReturnValue_5;              // 0x0130(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FM1AbilityOwnerInfo                    CallFunc_GetOwnerInfo_ReturnValue;                 // 0x0138(0x0038)(ConstParm, NoDestructor, ContainsInstancedReference)
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0170(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0180(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue;           // 0x0190(0x0030)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwnerActor_ReturnValue_6;              // 0x01C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C8[0x8];                                      // 0x01C8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeRelativeTransform_ReturnValue;        // 0x01D0(0x0030)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0201(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0202(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ability_Debone_C_AttachToParts) == 0x000010, "Wrong alignment on Ability_Debone_C_AttachToParts");
static_assert(sizeof(Ability_Debone_C_AttachToParts) == 0x000210, "Wrong size on Ability_Debone_C_AttachToParts");
static_assert(offsetof(Ability_Debone_C_AttachToParts, RelativeTransform) == 0x000000, "Member 'Ability_Debone_C_AttachToParts::RelativeTransform' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_AttachToParts, CallFunc_GetOwnerActor_ReturnValue) == 0x000030, "Member 'Ability_Debone_C_AttachToParts::CallFunc_GetOwnerActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_AttachToParts, CallFunc_GetTransform_ReturnValue) == 0x000040, "Member 'Ability_Debone_C_AttachToParts::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_AttachToParts, CallFunc_GetOwnerActor_ReturnValue_1) == 0x000070, "Member 'Ability_Debone_C_AttachToParts::CallFunc_GetOwnerActor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_AttachToParts, CallFunc_GetOwnerActor_ReturnValue_2) == 0x000078, "Member 'Ability_Debone_C_AttachToParts::CallFunc_GetOwnerActor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_AttachToParts, CallFunc_K2_SetActorRelativeTransform_SweepHitResult) == 0x000080, "Member 'Ability_Debone_C_AttachToParts::CallFunc_K2_SetActorRelativeTransform_SweepHitResult' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_AttachToParts, CallFunc_K2_AttachToComponent_ReturnValue) == 0x00011C, "Member 'Ability_Debone_C_AttachToParts::CallFunc_K2_AttachToComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_AttachToParts, CallFunc_GetOwnerActor_ReturnValue_3) == 0x000120, "Member 'Ability_Debone_C_AttachToParts::CallFunc_GetOwnerActor_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_AttachToParts, CallFunc_GetOwnerActor_ReturnValue_4) == 0x000128, "Member 'Ability_Debone_C_AttachToParts::CallFunc_GetOwnerActor_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_AttachToParts, CallFunc_GetOwnerActor_ReturnValue_5) == 0x000130, "Member 'Ability_Debone_C_AttachToParts::CallFunc_GetOwnerActor_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_AttachToParts, CallFunc_GetOwnerInfo_ReturnValue) == 0x000138, "Member 'Ability_Debone_C_AttachToParts::CallFunc_GetOwnerInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_AttachToParts, CallFunc_GetDisplayName_ReturnValue) == 0x000170, "Member 'Ability_Debone_C_AttachToParts::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_AttachToParts, CallFunc_Concat_StrStr_ReturnValue) == 0x000180, "Member 'Ability_Debone_C_AttachToParts::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_AttachToParts, CallFunc_GetSocketTransform_ReturnValue) == 0x000190, "Member 'Ability_Debone_C_AttachToParts::CallFunc_GetSocketTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_AttachToParts, CallFunc_GetOwnerActor_ReturnValue_6) == 0x0001C0, "Member 'Ability_Debone_C_AttachToParts::CallFunc_GetOwnerActor_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_AttachToParts, CallFunc_MakeRelativeTransform_ReturnValue) == 0x0001D0, "Member 'Ability_Debone_C_AttachToParts::CallFunc_MakeRelativeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_AttachToParts, CallFunc_IsValid_ReturnValue) == 0x000200, "Member 'Ability_Debone_C_AttachToParts::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_AttachToParts, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000201, "Member 'Ability_Debone_C_AttachToParts::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_AttachToParts, CallFunc_IsValid_ReturnValue_1) == 0x000202, "Member 'Ability_Debone_C_AttachToParts::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function Ability_Debone.Ability_Debone_C.BP_OnDeactivated
// 0x0001 (0x0001 - 0x0000)
struct Ability_Debone_C_BP_OnDeactivated final
{
public:
	bool                                          bCancelled;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ability_Debone_C_BP_OnDeactivated) == 0x000001, "Wrong alignment on Ability_Debone_C_BP_OnDeactivated");
static_assert(sizeof(Ability_Debone_C_BP_OnDeactivated) == 0x000001, "Wrong size on Ability_Debone_C_BP_OnDeactivated");
static_assert(offsetof(Ability_Debone_C_BP_OnDeactivated, bCancelled) == 0x000000, "Member 'Ability_Debone_C_BP_OnDeactivated::bCancelled' has a wrong offset!");

// Function Ability_Debone.Ability_Debone_C.DeboneAttachedTick
// 0x0004 (0x0004 - 0x0000)
struct Ability_Debone_C_DeboneAttachedTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ability_Debone_C_DeboneAttachedTick) == 0x000004, "Wrong alignment on Ability_Debone_C_DeboneAttachedTick");
static_assert(sizeof(Ability_Debone_C_DeboneAttachedTick) == 0x000004, "Wrong size on Ability_Debone_C_DeboneAttachedTick");
static_assert(offsetof(Ability_Debone_C_DeboneAttachedTick, DeltaSeconds) == 0x000000, "Member 'Ability_Debone_C_DeboneAttachedTick::DeltaSeconds' has a wrong offset!");

// Function Ability_Debone.Ability_Debone_C.DeboneTargetAttacked
// 0x0020 (0x0020 - 0x0000)
struct Ability_Debone_C_DeboneTargetAttacked final
{
public:
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetAttachSocketName_ReturnValue;          // 0x000C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetTaggedIntVariantFrom_ReturnValue;      // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ability_Debone_C_DeboneTargetAttacked) == 0x000008, "Wrong alignment on Ability_Debone_C_DeboneTargetAttacked");
static_assert(sizeof(Ability_Debone_C_DeboneTargetAttacked) == 0x000020, "Wrong size on Ability_Debone_C_DeboneTargetAttacked");
static_assert(offsetof(Ability_Debone_C_DeboneTargetAttacked, CallFunc_GetOwner_ReturnValue) == 0x000000, "Member 'Ability_Debone_C_DeboneTargetAttacked::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_DeboneTargetAttacked, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'Ability_Debone_C_DeboneTargetAttacked::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_DeboneTargetAttacked, CallFunc_GetAttachSocketName_ReturnValue) == 0x00000C, "Member 'Ability_Debone_C_DeboneTargetAttacked::CallFunc_GetAttachSocketName_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_DeboneTargetAttacked, CallFunc_GetTaggedIntVariantFrom_ReturnValue) == 0x000014, "Member 'Ability_Debone_C_DeboneTargetAttacked::CallFunc_GetTaggedIntVariantFrom_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_DeboneTargetAttacked, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'Ability_Debone_C_DeboneTargetAttacked::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function Ability_Debone.Ability_Debone_C.DebugIgnoreDeboneCooltime
// 0x0018 (0x0018 - 0x0000)
struct Ability_Debone_C_DebugIgnoreDeboneCooltime final
{
public:
	class FString                                 Args;                                              // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StriStri_ReturnValue;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StriStri_ReturnValue_1;        // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ability_Debone_C_DebugIgnoreDeboneCooltime) == 0x000008, "Wrong alignment on Ability_Debone_C_DebugIgnoreDeboneCooltime");
static_assert(sizeof(Ability_Debone_C_DebugIgnoreDeboneCooltime) == 0x000018, "Wrong size on Ability_Debone_C_DebugIgnoreDeboneCooltime");
static_assert(offsetof(Ability_Debone_C_DebugIgnoreDeboneCooltime, Args) == 0x000000, "Member 'Ability_Debone_C_DebugIgnoreDeboneCooltime::Args' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_DebugIgnoreDeboneCooltime, CallFunc_EqualEqual_StriStri_ReturnValue) == 0x000010, "Member 'Ability_Debone_C_DebugIgnoreDeboneCooltime::CallFunc_EqualEqual_StriStri_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_DebugIgnoreDeboneCooltime, CallFunc_EqualEqual_StriStri_ReturnValue_1) == 0x000011, "Member 'Ability_Debone_C_DebugIgnoreDeboneCooltime::CallFunc_EqualEqual_StriStri_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_DebugIgnoreDeboneCooltime, CallFunc_BooleanOR_ReturnValue) == 0x000012, "Member 'Ability_Debone_C_DebugIgnoreDeboneCooltime::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_DebugIgnoreDeboneCooltime, CallFunc_Not_PreBool_ReturnValue) == 0x000013, "Member 'Ability_Debone_C_DebugIgnoreDeboneCooltime::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function Ability_Debone.Ability_Debone_C.DebugIgnoreDeboneStamina
// 0x0018 (0x0018 - 0x0000)
struct Ability_Debone_C_DebugIgnoreDeboneStamina final
{
public:
	class FString                                 Args;                                              // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StriStri_ReturnValue;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StriStri_ReturnValue_1;        // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ability_Debone_C_DebugIgnoreDeboneStamina) == 0x000008, "Wrong alignment on Ability_Debone_C_DebugIgnoreDeboneStamina");
static_assert(sizeof(Ability_Debone_C_DebugIgnoreDeboneStamina) == 0x000018, "Wrong size on Ability_Debone_C_DebugIgnoreDeboneStamina");
static_assert(offsetof(Ability_Debone_C_DebugIgnoreDeboneStamina, Args) == 0x000000, "Member 'Ability_Debone_C_DebugIgnoreDeboneStamina::Args' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_DebugIgnoreDeboneStamina, CallFunc_EqualEqual_StriStri_ReturnValue) == 0x000010, "Member 'Ability_Debone_C_DebugIgnoreDeboneStamina::CallFunc_EqualEqual_StriStri_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_DebugIgnoreDeboneStamina, CallFunc_EqualEqual_StriStri_ReturnValue_1) == 0x000011, "Member 'Ability_Debone_C_DebugIgnoreDeboneStamina::CallFunc_EqualEqual_StriStri_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_DebugIgnoreDeboneStamina, CallFunc_BooleanOR_ReturnValue) == 0x000012, "Member 'Ability_Debone_C_DebugIgnoreDeboneStamina::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_DebugIgnoreDeboneStamina, CallFunc_Not_PreBool_ReturnValue) == 0x000013, "Member 'Ability_Debone_C_DebugIgnoreDeboneStamina::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function Ability_Debone.Ability_Debone_C.DebugPrintStamina
// 0x00F0 (0x00F0 - 0x0000)
struct Ability_Debone_C_DebugPrintStamina final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_DoubleToString_ReturnValue;          // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_BoolToString_ReturnValue;            // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_1;          // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEnduring_bEnduring;                     // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A[0x6];                                       // 0x005A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_BoolToString_ReturnValue_1;          // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_DoubleToString_ReturnValue_1;        // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_DoubleToString_ReturnValue_2;        // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_2;          // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_5;              // 0x00C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D9[0x7];                                       // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_6;              // 0x00E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(Ability_Debone_C_DebugPrintStamina) == 0x000008, "Wrong alignment on Ability_Debone_C_DebugPrintStamina");
static_assert(sizeof(Ability_Debone_C_DebugPrintStamina) == 0x0000F0, "Wrong size on Ability_Debone_C_DebugPrintStamina");
static_assert(offsetof(Ability_Debone_C_DebugPrintStamina, DeltaSeconds) == 0x000000, "Member 'Ability_Debone_C_DebugPrintStamina::DeltaSeconds' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_DebugPrintStamina, CallFunc_IsDedicatedServer_ReturnValue) == 0x000004, "Member 'Ability_Debone_C_DebugPrintStamina::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_DebugPrintStamina, CallFunc_Conv_DoubleToString_ReturnValue) == 0x000008, "Member 'Ability_Debone_C_DebugPrintStamina::CallFunc_Conv_DoubleToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_DebugPrintStamina, CallFunc_Not_PreBool_ReturnValue) == 0x000018, "Member 'Ability_Debone_C_DebugPrintStamina::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_DebugPrintStamina, CallFunc_Concat_StrStr_ReturnValue) == 0x000020, "Member 'Ability_Debone_C_DebugPrintStamina::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_DebugPrintStamina, CallFunc_Conv_BoolToString_ReturnValue) == 0x000030, "Member 'Ability_Debone_C_DebugPrintStamina::CallFunc_Conv_BoolToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_DebugPrintStamina, CallFunc_IsDedicatedServer_ReturnValue_1) == 0x000040, "Member 'Ability_Debone_C_DebugPrintStamina::CallFunc_IsDedicatedServer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_DebugPrintStamina, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000048, "Member 'Ability_Debone_C_DebugPrintStamina::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_DebugPrintStamina, CallFunc_Not_PreBool_ReturnValue_1) == 0x000058, "Member 'Ability_Debone_C_DebugPrintStamina::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_DebugPrintStamina, CallFunc_IsEnduring_bEnduring) == 0x000059, "Member 'Ability_Debone_C_DebugPrintStamina::CallFunc_IsEnduring_bEnduring' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_DebugPrintStamina, CallFunc_Conv_BoolToString_ReturnValue_1) == 0x000060, "Member 'Ability_Debone_C_DebugPrintStamina::CallFunc_Conv_BoolToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_DebugPrintStamina, CallFunc_Conv_DoubleToString_ReturnValue_1) == 0x000070, "Member 'Ability_Debone_C_DebugPrintStamina::CallFunc_Conv_DoubleToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_DebugPrintStamina, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000080, "Member 'Ability_Debone_C_DebugPrintStamina::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_DebugPrintStamina, CallFunc_Concat_StrStr_ReturnValue_3) == 0x000090, "Member 'Ability_Debone_C_DebugPrintStamina::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_DebugPrintStamina, CallFunc_Concat_StrStr_ReturnValue_4) == 0x0000A0, "Member 'Ability_Debone_C_DebugPrintStamina::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_DebugPrintStamina, CallFunc_Conv_DoubleToString_ReturnValue_2) == 0x0000B0, "Member 'Ability_Debone_C_DebugPrintStamina::CallFunc_Conv_DoubleToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_DebugPrintStamina, CallFunc_IsDedicatedServer_ReturnValue_2) == 0x0000C0, "Member 'Ability_Debone_C_DebugPrintStamina::CallFunc_IsDedicatedServer_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_DebugPrintStamina, CallFunc_Concat_StrStr_ReturnValue_5) == 0x0000C8, "Member 'Ability_Debone_C_DebugPrintStamina::CallFunc_Concat_StrStr_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_DebugPrintStamina, CallFunc_Not_PreBool_ReturnValue_2) == 0x0000D8, "Member 'Ability_Debone_C_DebugPrintStamina::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_DebugPrintStamina, CallFunc_Concat_StrStr_ReturnValue_6) == 0x0000E0, "Member 'Ability_Debone_C_DebugPrintStamina::CallFunc_Concat_StrStr_ReturnValue_6' has a wrong offset!");

// Function Ability_Debone.Ability_Debone_C.DetachFromParts
// 0x00C0 (0x00C0 - 0x0000)
struct Ability_Debone_C_DetachFromParts final
{
public:
	class AActor*                                 CallFunc_GetOwnerActor_ReturnValue;                // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwnerActor_ReturnValue_1;              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class ACharacter*                             K2Node_DynamicCast_As___;                          // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0070(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwnerActor_ReturnValue_2;              // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwnerActor_ReturnValue_3;              // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0090(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwnerActor_ReturnValue_4;              // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x00B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_SetActorRotation_ReturnValue;          // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ability_Debone_C_DetachFromParts) == 0x000008, "Wrong alignment on Ability_Debone_C_DetachFromParts");
static_assert(sizeof(Ability_Debone_C_DetachFromParts) == 0x0000C0, "Wrong size on Ability_Debone_C_DetachFromParts");
static_assert(offsetof(Ability_Debone_C_DetachFromParts, CallFunc_GetOwnerActor_ReturnValue) == 0x000000, "Member 'Ability_Debone_C_DetachFromParts::CallFunc_GetOwnerActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_DetachFromParts, CallFunc_GetOwnerActor_ReturnValue_1) == 0x000008, "Member 'Ability_Debone_C_DetachFromParts::CallFunc_GetOwnerActor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_DetachFromParts, CallFunc_GetDisplayName_ReturnValue) == 0x000010, "Member 'Ability_Debone_C_DetachFromParts::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_DetachFromParts, K2Node_DynamicCast_As___) == 0x000020, "Member 'Ability_Debone_C_DetachFromParts::K2Node_DynamicCast_As___' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_DetachFromParts, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'Ability_Debone_C_DetachFromParts::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_DetachFromParts, CallFunc_Concat_StrStr_ReturnValue) == 0x000030, "Member 'Ability_Debone_C_DetachFromParts::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_DetachFromParts, CallFunc_GetActorForwardVector_ReturnValue) == 0x000040, "Member 'Ability_Debone_C_DetachFromParts::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_DetachFromParts, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x00004C, "Member 'Ability_Debone_C_DetachFromParts::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_DetachFromParts, CallFunc_BreakVector_X) == 0x000058, "Member 'Ability_Debone_C_DetachFromParts::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_DetachFromParts, CallFunc_BreakVector_Y) == 0x000060, "Member 'Ability_Debone_C_DetachFromParts::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_DetachFromParts, CallFunc_BreakVector_Z) == 0x000068, "Member 'Ability_Debone_C_DetachFromParts::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_DetachFromParts, CallFunc_MakeVector_ReturnValue) == 0x000070, "Member 'Ability_Debone_C_DetachFromParts::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_DetachFromParts, CallFunc_GetOwnerActor_ReturnValue_2) == 0x000080, "Member 'Ability_Debone_C_DetachFromParts::CallFunc_GetOwnerActor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_DetachFromParts, CallFunc_GetOwnerActor_ReturnValue_3) == 0x000088, "Member 'Ability_Debone_C_DetachFromParts::CallFunc_GetOwnerActor_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_DetachFromParts, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000090, "Member 'Ability_Debone_C_DetachFromParts::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_DetachFromParts, CallFunc_BreakRotator_Roll) == 0x00009C, "Member 'Ability_Debone_C_DetachFromParts::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_DetachFromParts, CallFunc_BreakRotator_Pitch) == 0x0000A0, "Member 'Ability_Debone_C_DetachFromParts::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_DetachFromParts, CallFunc_BreakRotator_Yaw) == 0x0000A4, "Member 'Ability_Debone_C_DetachFromParts::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_DetachFromParts, CallFunc_GetOwnerActor_ReturnValue_4) == 0x0000A8, "Member 'Ability_Debone_C_DetachFromParts::CallFunc_GetOwnerActor_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_DetachFromParts, CallFunc_MakeRotator_ReturnValue) == 0x0000B0, "Member 'Ability_Debone_C_DetachFromParts::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_DetachFromParts, CallFunc_K2_SetActorRotation_ReturnValue) == 0x0000BC, "Member 'Ability_Debone_C_DetachFromParts::CallFunc_K2_SetActorRotation_ReturnValue' has a wrong offset!");

// Function Ability_Debone.Ability_Debone_C.ExecuteDeboneAttackOperation
// 0x0178 (0x0178 - 0x0000)
struct Ability_Debone_C_ExecuteDeboneAttackOperation final
{
public:
	float                                         CallFunc_GetPartsHPRate_ReturnValue;               // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetRelatedHitPointBoneName_ReturnValue;   // 0x001C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_MakeHitResult_ReturnValue;                // 0x0024(0x009C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FM1AbilityOperationParam               K2Node_MakeStruct_M1AbilityOperationParam;         // 0x00C0(0x00B0)(ContainsInstancedReference)
	double                                        K2Node_VariableSet_PartsHPRate_ImplicitCast;       // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ability_Debone_C_ExecuteDeboneAttackOperation) == 0x000008, "Wrong alignment on Ability_Debone_C_ExecuteDeboneAttackOperation");
static_assert(sizeof(Ability_Debone_C_ExecuteDeboneAttackOperation) == 0x000178, "Wrong size on Ability_Debone_C_ExecuteDeboneAttackOperation");
static_assert(offsetof(Ability_Debone_C_ExecuteDeboneAttackOperation, CallFunc_GetPartsHPRate_ReturnValue) == 0x000000, "Member 'Ability_Debone_C_ExecuteDeboneAttackOperation::CallFunc_GetPartsHPRate_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ExecuteDeboneAttackOperation, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'Ability_Debone_C_ExecuteDeboneAttackOperation::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ExecuteDeboneAttackOperation, CallFunc_GetOwner_ReturnValue_1) == 0x000010, "Member 'Ability_Debone_C_ExecuteDeboneAttackOperation::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ExecuteDeboneAttackOperation, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'Ability_Debone_C_ExecuteDeboneAttackOperation::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ExecuteDeboneAttackOperation, CallFunc_GetRelatedHitPointBoneName_ReturnValue) == 0x00001C, "Member 'Ability_Debone_C_ExecuteDeboneAttackOperation::CallFunc_GetRelatedHitPointBoneName_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ExecuteDeboneAttackOperation, CallFunc_MakeHitResult_ReturnValue) == 0x000024, "Member 'Ability_Debone_C_ExecuteDeboneAttackOperation::CallFunc_MakeHitResult_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ExecuteDeboneAttackOperation, K2Node_MakeStruct_M1AbilityOperationParam) == 0x0000C0, "Member 'Ability_Debone_C_ExecuteDeboneAttackOperation::K2Node_MakeStruct_M1AbilityOperationParam' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ExecuteDeboneAttackOperation, K2Node_VariableSet_PartsHPRate_ImplicitCast) == 0x000170, "Member 'Ability_Debone_C_ExecuteDeboneAttackOperation::K2Node_VariableSet_PartsHPRate_ImplicitCast' has a wrong offset!");

// Function Ability_Debone.Ability_Debone_C.ExecuteUbergraph_Ability_Debone
// 0x08F0 (0x08F0 - 0x0000)
struct Ability_Debone_C_ExecuteUbergraph_Ability_Debone final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FM1AbilityEvent                        Temp_struct_Variable;                              // 0x0018(0x0040)()
	TDelegate<void(struct FM1AbilityEvent& Event)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0058(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess;   // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FM1AbilityEvent                        K2Node_CustomEvent_Event_8;                        // 0x0070(0x0040)(ConstParm)
	struct FM1AbilityEvent                        K2Node_CustomEvent_Event_7;                        // 0x00B0(0x0040)(ConstParm)
	TDelegate<void(struct FM1AbilityEvent& Event)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x00F0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FM1AbilityEvent                        K2Node_CustomEvent_Event_6;                        // 0x0100(0x0040)(ConstParm)
	TDelegate<void(struct FM1AbilityEvent& Event)> K2Node_CreateDelegate_OutputDelegate_3;            // 0x0140(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FM1AbilityEvent                        Temp_struct_Variable_1;                            // 0x0150(0x0040)()
	TDelegate<void(struct FM1AbilityEvent& Event)> K2Node_CreateDelegate_OutputDelegate_4;            // 0x0190(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FM1AbilityEvent                        K2Node_CustomEvent_Event_5;                        // 0x01A0(0x0040)(ConstParm)
	struct FM1AbilityEvent                        Temp_struct_Variable_2;                            // 0x01E0(0x0040)()
	class UM1AbilityTask_WaitAbilityEvent*        CallFunc_WaitAbilityEvent_ReturnValue;             // 0x0220(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_229[0x3];                                      // 0x0229(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(struct FM1AbilityEvent& Event)> K2Node_CreateDelegate_OutputDelegate_5;            // 0x022C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_23C[0x4];                                      // 0x023C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FM1AbilityEvent                        K2Node_CustomEvent_Event_4;                        // 0x0240(0x0040)(ConstParm)
	struct FM1AbilityEvent                        Temp_struct_Variable_3;                            // 0x0280(0x0040)()
	TDelegate<void(struct FM1AbilityEvent& Event)> K2Node_CreateDelegate_OutputDelegate_6;            // 0x02C0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FM1AbilityEvent                        K2Node_CustomEvent_Event_3;                        // 0x02D0(0x0040)(ConstParm)
	bool                                          GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess_1; // 0x0310(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_311[0x7];                                      // 0x0311(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FM1AbilityEvent                        Temp_struct_Variable_4;                            // 0x0318(0x0040)()
	class UM1AbilityTask_WaitAbilityEvent*        CallFunc_WaitAbilityEvent_ReturnValue_1;           // 0x0358(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0360(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_361[0x3];                                      // 0x0361(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(struct FM1AbilityEvent& Event)> K2Node_CreateDelegate_OutputDelegate_7;            // 0x0364(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_374[0x4];                                      // 0x0374(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FM1AbilityEvent                        K2Node_CustomEvent_Event_2;                        // 0x0378(0x0040)(ConstParm)
	struct FM1AbilityEvent                        Temp_struct_Variable_5;                            // 0x03B8(0x0040)()
	class UM1AbilityTask_WaitAbilityEvent*        CallFunc_WaitAbilityEvent_ReturnValue_2;           // 0x03F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0400(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_401[0x3];                                      // 0x0401(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(struct FM1AbilityEvent& Event)> K2Node_CreateDelegate_OutputDelegate_8;            // 0x0404(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_414[0x4];                                      // 0x0414(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FM1AbilityEvent                        K2Node_CustomEvent_Event_1;                        // 0x0418(0x0040)(ConstParm)
	struct FM1AbilityEvent                        Temp_struct_Variable_6;                            // 0x0458(0x0040)()
	class UM1AbilityTask_WaitAbilityEvent*        CallFunc_WaitAbilityEvent_ReturnValue_3;           // 0x0498(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x04A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A1[0x3];                                      // 0x04A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(struct FM1AbilityEvent& Event)> K2Node_CreateDelegate_OutputDelegate_9;            // 0x04A4(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B4[0x4];                                      // 0x04B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FM1AbilityEvent                        K2Node_CustomEvent_Event;                          // 0x04B8(0x0040)(ConstParm)
	struct FM1AbilityEvent                        Temp_struct_Variable_7;                            // 0x04F8(0x0040)()
	class UM1AbilityTask_WaitAbilityEvent*        CallFunc_WaitAbilityEvent_ReturnValue_4;           // 0x0538(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0540(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_541[0x7];                                      // 0x0541(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded_1;                       // 0x0548(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable;                              // 0x0550(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         K2Node_DynamicCast_As_________;                    // 0x0558(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0560(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_561[0x7];                                      // 0x0561(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                K2Node_CustomEvent_Loaded;                         // 0x0568(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                Temp_object_Variable_1;                            // 0x0570(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         K2Node_DynamicCast_As__________1;                  // 0x0578(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0580(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_581[0x3];                                      // 0x0581(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_10;           // 0x0584(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_594[0x4];                                      // 0x0594(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UM1AbilityTask_LocalWaitInput*          CallFunc_LocalWaitInput_ReturnValue;               // 0x0598(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_11;           // 0x05A0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x05B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5B1[0x7];                                      // 0x05B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UM1AbilityTask_LocalWaitInput*          CallFunc_LocalWaitInput_ReturnValue_1;             // 0x05B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x05C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x05C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_8;                    // 0x05C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C3[0x5];                                      // 0x05C3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwnerActor_ReturnValue;                // 0x05C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_9;                    // 0x05D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EM1CharacterGender                            CallFunc_GetPlayerAnimPresetType_ReturnValue;      // 0x05D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D2[0x2];                                      // 0x05D2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_CustomEvent_DeltaSeconds;                   // 0x05D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_UpdateStamina_bRunOutStamina;             // 0x05D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D9[0x7];                                      // 0x05D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UObject>                 CallFunc_Conv_SoftObjPathToSoftObjRef_ReturnValue; // 0x05E0(0x0030)(UObjectWrapper, HasGetValueTypeHash)
	class UAnimMontage*                           CallFunc_GetDeboneSucceedMontage_Montage;          // 0x0610(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UM1AbilityTask_PlayMontageAndWait*      CallFunc_PlayMontageAndWaitForEvent_ReturnValue;   // 0x0618(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_10;                   // 0x0620(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_11;                   // 0x0621(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_622[0x6];                                      // 0x0622(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraComponent*                      CallFunc_SpawnSystemAttached_ReturnValue;          // 0x0628(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasRemainLastDeboneAttack_ReturnValue;    // 0x0630(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_631[0x7];                                      // 0x0631(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UObject>                 CallFunc_Conv_SoftObjPathToSoftObjRef_ReturnValue_1; // 0x0638(0x0030)(UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_12;                   // 0x0668(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_669[0x7];                                      // 0x0669(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraComponent*                      CallFunc_SpawnSystemAttached_ReturnValue_1;        // 0x0670(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<struct FM1ActiveAbilityOperationId>    CallFunc_BP_StartOperationsToSelfByTag_ReturnValue; // 0x0678(0x0010)(ReferenceParm)
	struct FM1AbilityId                           CallFunc_InvokeFirstStatusEffectToTargetByTag_ReturnValue; // 0x0688(0x0010)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_13;                   // 0x0698(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_14;                   // 0x0699(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69A[0x6];                                      // 0x069A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FM1AbilityId                           CallFunc_InvokeFirstStatusEffectToTargetByTag_ReturnValue_1; // 0x06A0(0x0010)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x06B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6B4[0x4];                                      // 0x06B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           CallFunc_GetDeboneAttackMontage_Montage;           // 0x06B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UM1AbilityTask_PlayMontageAndWait*      CallFunc_PlayMontageAndWaitForEvent_ReturnValue_1; // 0x06C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(struct FM1AbilityEvent& Event)> K2Node_CreateDelegate_OutputDelegate_12;           // 0x06C8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_15;                   // 0x06D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6D9[0x3];                                      // 0x06D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x06DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bCancelled;                           // 0x06E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6E1[0x7];                                      // 0x06E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FM1AbilityEvent                        K2Node_CustomEvent_Event_9;                        // 0x06E8(0x0040)(ConstParm)
	class APlayerController*                      CallFunc_GetOwnerPlayerController_ReturnValue;     // 0x0728(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AM1PlayerController*                    K2Node_DynamicCast_AsM1Player_Controller;          // 0x0730(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0738(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_739[0x7];                                      // 0x0739(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FM1ActiveAbilityOperationId>    CallFunc_BP_StartOperationsToSelfByTag_ReturnValue_1; // 0x0740(0x0010)(ReferenceParm)
	class UM1AkComponent*                         CallFunc_GetAkComponent_ReturnValue;               // 0x0750(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UM1MonsterPartsComponent*               K2Node_CustomEvent_Parts;                          // 0x0758(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FM1AbilityEvent                        K2Node_CustomEvent_Event_10;                       // 0x0760(0x0040)(ConstParm)
	bool                                          K2Node_CustomEvent_bIgnore_1;                      // 0x07A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7A1[0x3];                                      // 0x07A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(struct FM1AbilityEvent& Event)> K2Node_CreateDelegate_OutputDelegate_13;           // 0x07A4(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bIgnore;                        // 0x07B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7B5[0x3];                                      // 0x07B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwnerActor_ReturnValue_1;              // 0x07B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x07C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7CC[0x4];                                      // 0x07CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             K2Node_DynamicCast_As___;                          // 0x07D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x07D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7D9[0x3];                                      // 0x07D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x07DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UM1AbilityTask_WaitAbilityEvent*        CallFunc_WaitAbilityEvent_ReturnValue_5;           // 0x07E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_16;                   // 0x07F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x07F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7F2[0x6];                                      // 0x07F2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwnerPlayerController_ReturnValue_1;   // 0x07F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AM1PlayerController*                    K2Node_DynamicCast_AsM1Player_Controller_1;        // 0x0800(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0808(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_809[0x7];                                      // 0x0809(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FM1AbilityEvent                        K2Node_CustomEvent_Event_11;                       // 0x0810(0x0040)(ConstParm)
	class UM1AkComponent*                         CallFunc_GetAkComponent_ReturnValue_1;             // 0x0850(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_1;          // 0x0858(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_859[0x3];                                      // 0x0859(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(struct FM1AbilityEvent& Event)> K2Node_CreateDelegate_OutputDelegate_14;           // 0x085C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x086C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_86D[0x3];                                      // 0x086D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0870(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwnerActor_ReturnValue_2;              // 0x0878(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDestroyed_ReturnValue;                  // 0x0880(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_881[0x7];                                      // 0x0881(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AM1WireCaster*                          CallFunc_GetWireCaster_ReturnValue;                // 0x0888(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UM1MonsterPartsComponent*               CallFunc_GetDebonePartsComponent_ReturnValue;      // 0x0890(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_17;                   // 0x0898(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_899[0x7];                                      // 0x0899(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_GetAttachParent_ReturnValue;              // 0x08A0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwnerActor_ReturnValue_3;              // 0x08A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AM1Player*                              K2Node_DynamicCast_AsM1Player;                     // 0x08B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x08B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8B9[0x3];                                      // 0x08B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(float DeltaSeconds)>           K2Node_CreateDelegate_OutputDelegate_15;           // 0x08BC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate_16;           // 0x08CC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8DC[0x4];                                      // 0x08DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_UpdatePositionAndIK_DeltaSeconds_ImplicitCast; // 0x08E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_UpdateStamina_DeltaSeconds_ImplicitCast;  // 0x08E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ability_Debone_C_ExecuteUbergraph_Ability_Debone) == 0x000008, "Wrong alignment on Ability_Debone_C_ExecuteUbergraph_Ability_Debone");
static_assert(sizeof(Ability_Debone_C_ExecuteUbergraph_Ability_Debone) == 0x0008F0, "Wrong size on Ability_Debone_C_ExecuteUbergraph_Ability_Debone");
static_assert(offsetof(Ability_Debone_C_ExecuteUbergraph_Ability_Debone, EntryPoint) == 0x000000, "Member 'Ability_Debone_C_ExecuteUbergraph_Ability_Debone::EntryPoint' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ExecuteUbergraph_Ability_Debone, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'Ability_Debone_C_ExecuteUbergraph_Ability_Debone::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ExecuteUbergraph_Ability_Debone, Temp_struct_Variable) == 0x000018, "Member 'Ability_Debone_C_ExecuteUbergraph_Ability_Debone::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ExecuteUbergraph_Ability_Debone, K2Node_CreateDelegate_OutputDelegate_1) == 0x000058, "Member 'Ability_Debone_C_ExecuteUbergraph_Ability_Debone::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ExecuteUbergraph_Ability_Debone, GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess) == 0x000068, "Member 'Ability_Debone_C_ExecuteUbergraph_Ability_Debone::GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ExecuteUbergraph_Ability_Debone, K2Node_CustomEvent_Event_8) == 0x000070, "Member 'Ability_Debone_C_ExecuteUbergraph_Ability_Debone::K2Node_CustomEvent_Event_8' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ExecuteUbergraph_Ability_Debone, K2Node_CustomEvent_Event_7) == 0x0000B0, "Member 'Ability_Debone_C_ExecuteUbergraph_Ability_Debone::K2Node_CustomEvent_Event_7' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ExecuteUbergraph_Ability_Debone, K2Node_CreateDelegate_OutputDelegate_2) == 0x0000F0, "Member 'Ability_Debone_C_ExecuteUbergraph_Ability_Debone::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ExecuteUbergraph_Ability_Debone, K2Node_CustomEvent_Event_6) == 0x000100, "Member 'Ability_Debone_C_ExecuteUbergraph_Ability_Debone::K2Node_CustomEvent_Event_6' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ExecuteUbergraph_Ability_Debone, K2Node_CreateDelegate_OutputDelegate_3) == 0x000140, "Member 'Ability_Debone_C_ExecuteUbergraph_Ability_Debone::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ExecuteUbergraph_Ability_Debone, Temp_struct_Variable_1) == 0x000150, "Member 'Ability_Debone_C_ExecuteUbergraph_Ability_Debone::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ExecuteUbergraph_Ability_Debone, K2Node_CreateDelegate_OutputDelegate_4) == 0x000190, "Member 'Ability_Debone_C_ExecuteUbergraph_Ability_Debone::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ExecuteUbergraph_Ability_Debone, K2Node_CustomEvent_Event_5) == 0x0001A0, "Member 'Ability_Debone_C_ExecuteUbergraph_Ability_Debone::K2Node_CustomEvent_Event_5' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ExecuteUbergraph_Ability_Debone, Temp_struct_Variable_2) == 0x0001E0, "Member 'Ability_Debone_C_ExecuteUbergraph_Ability_Debone::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ExecuteUbergraph_Ability_Debone, CallFunc_WaitAbilityEvent_ReturnValue) == 0x000220, "Member 'Ability_Debone_C_ExecuteUbergraph_Ability_Debone::CallFunc_WaitAbilityEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ExecuteUbergraph_Ability_Debone, CallFunc_IsValid_ReturnValue) == 0x000228, "Member 'Ability_Debone_C_ExecuteUbergraph_Ability_Debone::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ExecuteUbergraph_Ability_Debone, K2Node_CreateDelegate_OutputDelegate_5) == 0x00022C, "Member 'Ability_Debone_C_ExecuteUbergraph_Ability_Debone::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ExecuteUbergraph_Ability_Debone, K2Node_CustomEvent_Event_4) == 0x000240, "Member 'Ability_Debone_C_ExecuteUbergraph_Ability_Debone::K2Node_CustomEvent_Event_4' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ExecuteUbergraph_Ability_Debone, Temp_struct_Variable_3) == 0x000280, "Member 'Ability_Debone_C_ExecuteUbergraph_Ability_Debone::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ExecuteUbergraph_Ability_Debone, K2Node_CreateDelegate_OutputDelegate_6) == 0x0002C0, "Member 'Ability_Debone_C_ExecuteUbergraph_Ability_Debone::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ExecuteUbergraph_Ability_Debone, K2Node_CustomEvent_Event_3) == 0x0002D0, "Member 'Ability_Debone_C_ExecuteUbergraph_Ability_Debone::K2Node_CustomEvent_Event_3' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ExecuteUbergraph_Ability_Debone, GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess_1) == 0x000310, "Member 'Ability_Debone_C_ExecuteUbergraph_Ability_Debone::GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ExecuteUbergraph_Ability_Debone, Temp_struct_Variable_4) == 0x000318, "Member 'Ability_Debone_C_ExecuteUbergraph_Ability_Debone::Temp_struct_Variable_4' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ExecuteUbergraph_Ability_Debone, CallFunc_WaitAbilityEvent_ReturnValue_1) == 0x000358, "Member 'Ability_Debone_C_ExecuteUbergraph_Ability_Debone::CallFunc_WaitAbilityEvent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ExecuteUbergraph_Ability_Debone, CallFunc_IsValid_ReturnValue_1) == 0x000360, "Member 'Ability_Debone_C_ExecuteUbergraph_Ability_Debone::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ExecuteUbergraph_Ability_Debone, K2Node_CreateDelegate_OutputDelegate_7) == 0x000364, "Member 'Ability_Debone_C_ExecuteUbergraph_Ability_Debone::K2Node_CreateDelegate_OutputDelegate_7' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ExecuteUbergraph_Ability_Debone, K2Node_CustomEvent_Event_2) == 0x000378, "Member 'Ability_Debone_C_ExecuteUbergraph_Ability_Debone::K2Node_CustomEvent_Event_2' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ExecuteUbergraph_Ability_Debone, Temp_struct_Variable_5) == 0x0003B8, "Member 'Ability_Debone_C_ExecuteUbergraph_Ability_Debone::Temp_struct_Variable_5' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ExecuteUbergraph_Ability_Debone, CallFunc_WaitAbilityEvent_ReturnValue_2) == 0x0003F8, "Member 'Ability_Debone_C_ExecuteUbergraph_Ability_Debone::CallFunc_WaitAbilityEvent_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ExecuteUbergraph_Ability_Debone, CallFunc_IsValid_ReturnValue_2) == 0x000400, "Member 'Ability_Debone_C_ExecuteUbergraph_Ability_Debone::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ExecuteUbergraph_Ability_Debone, K2Node_CreateDelegate_OutputDelegate_8) == 0x000404, "Member 'Ability_Debone_C_ExecuteUbergraph_Ability_Debone::K2Node_CreateDelegate_OutputDelegate_8' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ExecuteUbergraph_Ability_Debone, K2Node_CustomEvent_Event_1) == 0x000418, "Member 'Ability_Debone_C_ExecuteUbergraph_Ability_Debone::K2Node_CustomEvent_Event_1' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ExecuteUbergraph_Ability_Debone, Temp_struct_Variable_6) == 0x000458, "Member 'Ability_Debone_C_ExecuteUbergraph_Ability_Debone::Temp_struct_Variable_6' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ExecuteUbergraph_Ability_Debone, CallFunc_WaitAbilityEvent_ReturnValue_3) == 0x000498, "Member 'Ability_Debone_C_ExecuteUbergraph_Ability_Debone::CallFunc_WaitAbilityEvent_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ExecuteUbergraph_Ability_Debone, CallFunc_IsValid_ReturnValue_3) == 0x0004A0, "Member 'Ability_Debone_C_ExecuteUbergraph_Ability_Debone::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ExecuteUbergraph_Ability_Debone, K2Node_CreateDelegate_OutputDelegate_9) == 0x0004A4, "Member 'Ability_Debone_C_ExecuteUbergraph_Ability_Debone::K2Node_CreateDelegate_OutputDelegate_9' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ExecuteUbergraph_Ability_Debone, K2Node_CustomEvent_Event) == 0x0004B8, "Member 'Ability_Debone_C_ExecuteUbergraph_Ability_Debone::K2Node_CustomEvent_Event' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ExecuteUbergraph_Ability_Debone, Temp_struct_Variable_7) == 0x0004F8, "Member 'Ability_Debone_C_ExecuteUbergraph_Ability_Debone::Temp_struct_Variable_7' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ExecuteUbergraph_Ability_Debone, CallFunc_WaitAbilityEvent_ReturnValue_4) == 0x000538, "Member 'Ability_Debone_C_ExecuteUbergraph_Ability_Debone::CallFunc_WaitAbilityEvent_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ExecuteUbergraph_Ability_Debone, CallFunc_IsValid_ReturnValue_4) == 0x000540, "Member 'Ability_Debone_C_ExecuteUbergraph_Ability_Debone::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ExecuteUbergraph_Ability_Debone, K2Node_CustomEvent_Loaded_1) == 0x000548, "Member 'Ability_Debone_C_ExecuteUbergraph_Ability_Debone::K2Node_CustomEvent_Loaded_1' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ExecuteUbergraph_Ability_Debone, Temp_object_Variable) == 0x000550, "Member 'Ability_Debone_C_ExecuteUbergraph_Ability_Debone::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ExecuteUbergraph_Ability_Debone, K2Node_DynamicCast_As_________) == 0x000558, "Member 'Ability_Debone_C_ExecuteUbergraph_Ability_Debone::K2Node_DynamicCast_As_________' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ExecuteUbergraph_Ability_Debone, K2Node_DynamicCast_bSuccess) == 0x000560, "Member 'Ability_Debone_C_ExecuteUbergraph_Ability_Debone::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ExecuteUbergraph_Ability_Debone, K2Node_CustomEvent_Loaded) == 0x000568, "Member 'Ability_Debone_C_ExecuteUbergraph_Ability_Debone::K2Node_CustomEvent_Loaded' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ExecuteUbergraph_Ability_Debone, Temp_object_Variable_1) == 0x000570, "Member 'Ability_Debone_C_ExecuteUbergraph_Ability_Debone::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ExecuteUbergraph_Ability_Debone, K2Node_DynamicCast_As__________1) == 0x000578, "Member 'Ability_Debone_C_ExecuteUbergraph_Ability_Debone::K2Node_DynamicCast_As__________1' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ExecuteUbergraph_Ability_Debone, K2Node_DynamicCast_bSuccess_1) == 0x000580, "Member 'Ability_Debone_C_ExecuteUbergraph_Ability_Debone::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ExecuteUbergraph_Ability_Debone, K2Node_CreateDelegate_OutputDelegate_10) == 0x000584, "Member 'Ability_Debone_C_ExecuteUbergraph_Ability_Debone::K2Node_CreateDelegate_OutputDelegate_10' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ExecuteUbergraph_Ability_Debone, CallFunc_LocalWaitInput_ReturnValue) == 0x000598, "Member 'Ability_Debone_C_ExecuteUbergraph_Ability_Debone::CallFunc_LocalWaitInput_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ExecuteUbergraph_Ability_Debone, K2Node_CreateDelegate_OutputDelegate_11) == 0x0005A0, "Member 'Ability_Debone_C_ExecuteUbergraph_Ability_Debone::K2Node_CreateDelegate_OutputDelegate_11' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ExecuteUbergraph_Ability_Debone, CallFunc_IsValid_ReturnValue_5) == 0x0005B0, "Member 'Ability_Debone_C_ExecuteUbergraph_Ability_Debone::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ExecuteUbergraph_Ability_Debone, CallFunc_LocalWaitInput_ReturnValue_1) == 0x0005B8, "Member 'Ability_Debone_C_ExecuteUbergraph_Ability_Debone::CallFunc_LocalWaitInput_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ExecuteUbergraph_Ability_Debone, CallFunc_IsValid_ReturnValue_6) == 0x0005C0, "Member 'Ability_Debone_C_ExecuteUbergraph_Ability_Debone::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ExecuteUbergraph_Ability_Debone, CallFunc_IsValid_ReturnValue_7) == 0x0005C1, "Member 'Ability_Debone_C_ExecuteUbergraph_Ability_Debone::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ExecuteUbergraph_Ability_Debone, CallFunc_IsValid_ReturnValue_8) == 0x0005C2, "Member 'Ability_Debone_C_ExecuteUbergraph_Ability_Debone::CallFunc_IsValid_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ExecuteUbergraph_Ability_Debone, CallFunc_GetOwnerActor_ReturnValue) == 0x0005C8, "Member 'Ability_Debone_C_ExecuteUbergraph_Ability_Debone::CallFunc_GetOwnerActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ExecuteUbergraph_Ability_Debone, CallFunc_IsValid_ReturnValue_9) == 0x0005D0, "Member 'Ability_Debone_C_ExecuteUbergraph_Ability_Debone::CallFunc_IsValid_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ExecuteUbergraph_Ability_Debone, CallFunc_GetPlayerAnimPresetType_ReturnValue) == 0x0005D1, "Member 'Ability_Debone_C_ExecuteUbergraph_Ability_Debone::CallFunc_GetPlayerAnimPresetType_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ExecuteUbergraph_Ability_Debone, K2Node_CustomEvent_DeltaSeconds) == 0x0005D4, "Member 'Ability_Debone_C_ExecuteUbergraph_Ability_Debone::K2Node_CustomEvent_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ExecuteUbergraph_Ability_Debone, CallFunc_UpdateStamina_bRunOutStamina) == 0x0005D8, "Member 'Ability_Debone_C_ExecuteUbergraph_Ability_Debone::CallFunc_UpdateStamina_bRunOutStamina' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ExecuteUbergraph_Ability_Debone, CallFunc_Conv_SoftObjPathToSoftObjRef_ReturnValue) == 0x0005E0, "Member 'Ability_Debone_C_ExecuteUbergraph_Ability_Debone::CallFunc_Conv_SoftObjPathToSoftObjRef_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ExecuteUbergraph_Ability_Debone, CallFunc_GetDeboneSucceedMontage_Montage) == 0x000610, "Member 'Ability_Debone_C_ExecuteUbergraph_Ability_Debone::CallFunc_GetDeboneSucceedMontage_Montage' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ExecuteUbergraph_Ability_Debone, CallFunc_PlayMontageAndWaitForEvent_ReturnValue) == 0x000618, "Member 'Ability_Debone_C_ExecuteUbergraph_Ability_Debone::CallFunc_PlayMontageAndWaitForEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ExecuteUbergraph_Ability_Debone, CallFunc_IsValid_ReturnValue_10) == 0x000620, "Member 'Ability_Debone_C_ExecuteUbergraph_Ability_Debone::CallFunc_IsValid_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ExecuteUbergraph_Ability_Debone, CallFunc_IsValid_ReturnValue_11) == 0x000621, "Member 'Ability_Debone_C_ExecuteUbergraph_Ability_Debone::CallFunc_IsValid_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ExecuteUbergraph_Ability_Debone, CallFunc_SpawnSystemAttached_ReturnValue) == 0x000628, "Member 'Ability_Debone_C_ExecuteUbergraph_Ability_Debone::CallFunc_SpawnSystemAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ExecuteUbergraph_Ability_Debone, CallFunc_HasRemainLastDeboneAttack_ReturnValue) == 0x000630, "Member 'Ability_Debone_C_ExecuteUbergraph_Ability_Debone::CallFunc_HasRemainLastDeboneAttack_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ExecuteUbergraph_Ability_Debone, CallFunc_Conv_SoftObjPathToSoftObjRef_ReturnValue_1) == 0x000638, "Member 'Ability_Debone_C_ExecuteUbergraph_Ability_Debone::CallFunc_Conv_SoftObjPathToSoftObjRef_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ExecuteUbergraph_Ability_Debone, CallFunc_IsValid_ReturnValue_12) == 0x000668, "Member 'Ability_Debone_C_ExecuteUbergraph_Ability_Debone::CallFunc_IsValid_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ExecuteUbergraph_Ability_Debone, CallFunc_SpawnSystemAttached_ReturnValue_1) == 0x000670, "Member 'Ability_Debone_C_ExecuteUbergraph_Ability_Debone::CallFunc_SpawnSystemAttached_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ExecuteUbergraph_Ability_Debone, CallFunc_BP_StartOperationsToSelfByTag_ReturnValue) == 0x000678, "Member 'Ability_Debone_C_ExecuteUbergraph_Ability_Debone::CallFunc_BP_StartOperationsToSelfByTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ExecuteUbergraph_Ability_Debone, CallFunc_InvokeFirstStatusEffectToTargetByTag_ReturnValue) == 0x000688, "Member 'Ability_Debone_C_ExecuteUbergraph_Ability_Debone::CallFunc_InvokeFirstStatusEffectToTargetByTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ExecuteUbergraph_Ability_Debone, CallFunc_IsValid_ReturnValue_13) == 0x000698, "Member 'Ability_Debone_C_ExecuteUbergraph_Ability_Debone::CallFunc_IsValid_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ExecuteUbergraph_Ability_Debone, CallFunc_IsValid_ReturnValue_14) == 0x000699, "Member 'Ability_Debone_C_ExecuteUbergraph_Ability_Debone::CallFunc_IsValid_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ExecuteUbergraph_Ability_Debone, CallFunc_InvokeFirstStatusEffectToTargetByTag_ReturnValue_1) == 0x0006A0, "Member 'Ability_Debone_C_ExecuteUbergraph_Ability_Debone::CallFunc_InvokeFirstStatusEffectToTargetByTag_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ExecuteUbergraph_Ability_Debone, CallFunc_Array_Add_ReturnValue) == 0x0006B0, "Member 'Ability_Debone_C_ExecuteUbergraph_Ability_Debone::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ExecuteUbergraph_Ability_Debone, CallFunc_GetDeboneAttackMontage_Montage) == 0x0006B8, "Member 'Ability_Debone_C_ExecuteUbergraph_Ability_Debone::CallFunc_GetDeboneAttackMontage_Montage' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ExecuteUbergraph_Ability_Debone, CallFunc_PlayMontageAndWaitForEvent_ReturnValue_1) == 0x0006C0, "Member 'Ability_Debone_C_ExecuteUbergraph_Ability_Debone::CallFunc_PlayMontageAndWaitForEvent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ExecuteUbergraph_Ability_Debone, K2Node_CreateDelegate_OutputDelegate_12) == 0x0006C8, "Member 'Ability_Debone_C_ExecuteUbergraph_Ability_Debone::K2Node_CreateDelegate_OutputDelegate_12' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ExecuteUbergraph_Ability_Debone, CallFunc_IsValid_ReturnValue_15) == 0x0006D8, "Member 'Ability_Debone_C_ExecuteUbergraph_Ability_Debone::CallFunc_IsValid_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ExecuteUbergraph_Ability_Debone, CallFunc_Array_Add_ReturnValue_1) == 0x0006DC, "Member 'Ability_Debone_C_ExecuteUbergraph_Ability_Debone::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ExecuteUbergraph_Ability_Debone, K2Node_Event_bCancelled) == 0x0006E0, "Member 'Ability_Debone_C_ExecuteUbergraph_Ability_Debone::K2Node_Event_bCancelled' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ExecuteUbergraph_Ability_Debone, K2Node_CustomEvent_Event_9) == 0x0006E8, "Member 'Ability_Debone_C_ExecuteUbergraph_Ability_Debone::K2Node_CustomEvent_Event_9' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ExecuteUbergraph_Ability_Debone, CallFunc_GetOwnerPlayerController_ReturnValue) == 0x000728, "Member 'Ability_Debone_C_ExecuteUbergraph_Ability_Debone::CallFunc_GetOwnerPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ExecuteUbergraph_Ability_Debone, K2Node_DynamicCast_AsM1Player_Controller) == 0x000730, "Member 'Ability_Debone_C_ExecuteUbergraph_Ability_Debone::K2Node_DynamicCast_AsM1Player_Controller' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ExecuteUbergraph_Ability_Debone, K2Node_DynamicCast_bSuccess_2) == 0x000738, "Member 'Ability_Debone_C_ExecuteUbergraph_Ability_Debone::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ExecuteUbergraph_Ability_Debone, CallFunc_BP_StartOperationsToSelfByTag_ReturnValue_1) == 0x000740, "Member 'Ability_Debone_C_ExecuteUbergraph_Ability_Debone::CallFunc_BP_StartOperationsToSelfByTag_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ExecuteUbergraph_Ability_Debone, CallFunc_GetAkComponent_ReturnValue) == 0x000750, "Member 'Ability_Debone_C_ExecuteUbergraph_Ability_Debone::CallFunc_GetAkComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ExecuteUbergraph_Ability_Debone, K2Node_CustomEvent_Parts) == 0x000758, "Member 'Ability_Debone_C_ExecuteUbergraph_Ability_Debone::K2Node_CustomEvent_Parts' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ExecuteUbergraph_Ability_Debone, K2Node_CustomEvent_Event_10) == 0x000760, "Member 'Ability_Debone_C_ExecuteUbergraph_Ability_Debone::K2Node_CustomEvent_Event_10' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ExecuteUbergraph_Ability_Debone, K2Node_CustomEvent_bIgnore_1) == 0x0007A0, "Member 'Ability_Debone_C_ExecuteUbergraph_Ability_Debone::K2Node_CustomEvent_bIgnore_1' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ExecuteUbergraph_Ability_Debone, K2Node_CreateDelegate_OutputDelegate_13) == 0x0007A4, "Member 'Ability_Debone_C_ExecuteUbergraph_Ability_Debone::K2Node_CreateDelegate_OutputDelegate_13' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ExecuteUbergraph_Ability_Debone, K2Node_CustomEvent_bIgnore) == 0x0007B4, "Member 'Ability_Debone_C_ExecuteUbergraph_Ability_Debone::K2Node_CustomEvent_bIgnore' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ExecuteUbergraph_Ability_Debone, CallFunc_GetOwnerActor_ReturnValue_1) == 0x0007B8, "Member 'Ability_Debone_C_ExecuteUbergraph_Ability_Debone::CallFunc_GetOwnerActor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ExecuteUbergraph_Ability_Debone, CallFunc_GetActorForwardVector_ReturnValue) == 0x0007C0, "Member 'Ability_Debone_C_ExecuteUbergraph_Ability_Debone::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ExecuteUbergraph_Ability_Debone, K2Node_DynamicCast_As___) == 0x0007D0, "Member 'Ability_Debone_C_ExecuteUbergraph_Ability_Debone::K2Node_DynamicCast_As___' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ExecuteUbergraph_Ability_Debone, K2Node_DynamicCast_bSuccess_3) == 0x0007D8, "Member 'Ability_Debone_C_ExecuteUbergraph_Ability_Debone::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ExecuteUbergraph_Ability_Debone, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0007DC, "Member 'Ability_Debone_C_ExecuteUbergraph_Ability_Debone::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ExecuteUbergraph_Ability_Debone, CallFunc_WaitAbilityEvent_ReturnValue_5) == 0x0007E8, "Member 'Ability_Debone_C_ExecuteUbergraph_Ability_Debone::CallFunc_WaitAbilityEvent_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ExecuteUbergraph_Ability_Debone, CallFunc_IsValid_ReturnValue_16) == 0x0007F0, "Member 'Ability_Debone_C_ExecuteUbergraph_Ability_Debone::CallFunc_IsValid_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ExecuteUbergraph_Ability_Debone, CallFunc_IsDedicatedServer_ReturnValue) == 0x0007F1, "Member 'Ability_Debone_C_ExecuteUbergraph_Ability_Debone::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ExecuteUbergraph_Ability_Debone, CallFunc_GetOwnerPlayerController_ReturnValue_1) == 0x0007F8, "Member 'Ability_Debone_C_ExecuteUbergraph_Ability_Debone::CallFunc_GetOwnerPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ExecuteUbergraph_Ability_Debone, K2Node_DynamicCast_AsM1Player_Controller_1) == 0x000800, "Member 'Ability_Debone_C_ExecuteUbergraph_Ability_Debone::K2Node_DynamicCast_AsM1Player_Controller_1' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ExecuteUbergraph_Ability_Debone, K2Node_DynamicCast_bSuccess_4) == 0x000808, "Member 'Ability_Debone_C_ExecuteUbergraph_Ability_Debone::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ExecuteUbergraph_Ability_Debone, K2Node_CustomEvent_Event_11) == 0x000810, "Member 'Ability_Debone_C_ExecuteUbergraph_Ability_Debone::K2Node_CustomEvent_Event_11' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ExecuteUbergraph_Ability_Debone, CallFunc_GetAkComponent_ReturnValue_1) == 0x000850, "Member 'Ability_Debone_C_ExecuteUbergraph_Ability_Debone::CallFunc_GetAkComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ExecuteUbergraph_Ability_Debone, CallFunc_IsDedicatedServer_ReturnValue_1) == 0x000858, "Member 'Ability_Debone_C_ExecuteUbergraph_Ability_Debone::CallFunc_IsDedicatedServer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ExecuteUbergraph_Ability_Debone, K2Node_CreateDelegate_OutputDelegate_14) == 0x00085C, "Member 'Ability_Debone_C_ExecuteUbergraph_Ability_Debone::K2Node_CreateDelegate_OutputDelegate_14' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ExecuteUbergraph_Ability_Debone, CallFunc_IsLocallyControlled_ReturnValue) == 0x00086C, "Member 'Ability_Debone_C_ExecuteUbergraph_Ability_Debone::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ExecuteUbergraph_Ability_Debone, CallFunc_GetOwner_ReturnValue) == 0x000870, "Member 'Ability_Debone_C_ExecuteUbergraph_Ability_Debone::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ExecuteUbergraph_Ability_Debone, CallFunc_GetOwnerActor_ReturnValue_2) == 0x000878, "Member 'Ability_Debone_C_ExecuteUbergraph_Ability_Debone::CallFunc_GetOwnerActor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ExecuteUbergraph_Ability_Debone, CallFunc_IsDestroyed_ReturnValue) == 0x000880, "Member 'Ability_Debone_C_ExecuteUbergraph_Ability_Debone::CallFunc_IsDestroyed_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ExecuteUbergraph_Ability_Debone, CallFunc_GetWireCaster_ReturnValue) == 0x000888, "Member 'Ability_Debone_C_ExecuteUbergraph_Ability_Debone::CallFunc_GetWireCaster_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ExecuteUbergraph_Ability_Debone, CallFunc_GetDebonePartsComponent_ReturnValue) == 0x000890, "Member 'Ability_Debone_C_ExecuteUbergraph_Ability_Debone::CallFunc_GetDebonePartsComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ExecuteUbergraph_Ability_Debone, CallFunc_IsValid_ReturnValue_17) == 0x000898, "Member 'Ability_Debone_C_ExecuteUbergraph_Ability_Debone::CallFunc_IsValid_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ExecuteUbergraph_Ability_Debone, CallFunc_GetAttachParent_ReturnValue) == 0x0008A0, "Member 'Ability_Debone_C_ExecuteUbergraph_Ability_Debone::CallFunc_GetAttachParent_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ExecuteUbergraph_Ability_Debone, CallFunc_GetOwnerActor_ReturnValue_3) == 0x0008A8, "Member 'Ability_Debone_C_ExecuteUbergraph_Ability_Debone::CallFunc_GetOwnerActor_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ExecuteUbergraph_Ability_Debone, K2Node_DynamicCast_AsM1Player) == 0x0008B0, "Member 'Ability_Debone_C_ExecuteUbergraph_Ability_Debone::K2Node_DynamicCast_AsM1Player' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ExecuteUbergraph_Ability_Debone, K2Node_DynamicCast_bSuccess_5) == 0x0008B8, "Member 'Ability_Debone_C_ExecuteUbergraph_Ability_Debone::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ExecuteUbergraph_Ability_Debone, K2Node_CreateDelegate_OutputDelegate_15) == 0x0008BC, "Member 'Ability_Debone_C_ExecuteUbergraph_Ability_Debone::K2Node_CreateDelegate_OutputDelegate_15' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ExecuteUbergraph_Ability_Debone, K2Node_CreateDelegate_OutputDelegate_16) == 0x0008CC, "Member 'Ability_Debone_C_ExecuteUbergraph_Ability_Debone::K2Node_CreateDelegate_OutputDelegate_16' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ExecuteUbergraph_Ability_Debone, CallFunc_UpdatePositionAndIK_DeltaSeconds_ImplicitCast) == 0x0008E0, "Member 'Ability_Debone_C_ExecuteUbergraph_Ability_Debone::CallFunc_UpdatePositionAndIK_DeltaSeconds_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ExecuteUbergraph_Ability_Debone, CallFunc_UpdateStamina_DeltaSeconds_ImplicitCast) == 0x0008E8, "Member 'Ability_Debone_C_ExecuteUbergraph_Ability_Debone::CallFunc_UpdateStamina_DeltaSeconds_ImplicitCast' has a wrong offset!");

// Function Ability_Debone.Ability_Debone_C.GetArriveCameraModifier
// 0x0010 (0x0010 - 0x0000)
struct Ability_Debone_C_GetArriveCameraModifier final
{
public:
	class UClass*                                 OutCameraModifier;                                 // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ability_Debone_C_GetArriveCameraModifier) == 0x000008, "Wrong alignment on Ability_Debone_C_GetArriveCameraModifier");
static_assert(sizeof(Ability_Debone_C_GetArriveCameraModifier) == 0x000010, "Wrong size on Ability_Debone_C_GetArriveCameraModifier");
static_assert(offsetof(Ability_Debone_C_GetArriveCameraModifier, OutCameraModifier) == 0x000000, "Member 'Ability_Debone_C_GetArriveCameraModifier::OutCameraModifier' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_GetArriveCameraModifier, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'Ability_Debone_C_GetArriveCameraModifier::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_GetArriveCameraModifier, K2Node_SwitchEnum_CmpSuccess) == 0x000009, "Member 'Ability_Debone_C_GetArriveCameraModifier::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function Ability_Debone.Ability_Debone_C.GetDeboneAttackMontage
// 0x0030 (0x0030 - 0x0000)
struct Ability_Debone_C_GetDeboneAttackMontage final
{
public:
	class UAnimMontage*                           Montage;                                           // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           CallFunc_Map_Find_Value;                           // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           CallFunc_Map_Find_Value_1;                         // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ability_Debone_C_GetDeboneAttackMontage) == 0x000008, "Wrong alignment on Ability_Debone_C_GetDeboneAttackMontage");
static_assert(sizeof(Ability_Debone_C_GetDeboneAttackMontage) == 0x000030, "Wrong size on Ability_Debone_C_GetDeboneAttackMontage");
static_assert(offsetof(Ability_Debone_C_GetDeboneAttackMontage, Montage) == 0x000000, "Member 'Ability_Debone_C_GetDeboneAttackMontage::Montage' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_GetDeboneAttackMontage, K2Node_SwitchEnum_CmpSuccess) == 0x000008, "Member 'Ability_Debone_C_GetDeboneAttackMontage::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_GetDeboneAttackMontage, CallFunc_Map_Find_Value) == 0x000010, "Member 'Ability_Debone_C_GetDeboneAttackMontage::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_GetDeboneAttackMontage, CallFunc_Map_Find_ReturnValue) == 0x000018, "Member 'Ability_Debone_C_GetDeboneAttackMontage::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_GetDeboneAttackMontage, CallFunc_Map_Find_Value_1) == 0x000020, "Member 'Ability_Debone_C_GetDeboneAttackMontage::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_GetDeboneAttackMontage, CallFunc_Map_Find_ReturnValue_1) == 0x000028, "Member 'Ability_Debone_C_GetDeboneAttackMontage::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");

// Function Ability_Debone.Ability_Debone_C.GetDeboneSucceedMontage
// 0x0030 (0x0030 - 0x0000)
struct Ability_Debone_C_GetDeboneSucceedMontage final
{
public:
	class UAnimMontage*                           Montage;                                           // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           CallFunc_Map_Find_Value;                           // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           CallFunc_Map_Find_Value_1;                         // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ability_Debone_C_GetDeboneSucceedMontage) == 0x000008, "Wrong alignment on Ability_Debone_C_GetDeboneSucceedMontage");
static_assert(sizeof(Ability_Debone_C_GetDeboneSucceedMontage) == 0x000030, "Wrong size on Ability_Debone_C_GetDeboneSucceedMontage");
static_assert(offsetof(Ability_Debone_C_GetDeboneSucceedMontage, Montage) == 0x000000, "Member 'Ability_Debone_C_GetDeboneSucceedMontage::Montage' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_GetDeboneSucceedMontage, K2Node_SwitchEnum_CmpSuccess) == 0x000008, "Member 'Ability_Debone_C_GetDeboneSucceedMontage::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_GetDeboneSucceedMontage, CallFunc_Map_Find_Value) == 0x000010, "Member 'Ability_Debone_C_GetDeboneSucceedMontage::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_GetDeboneSucceedMontage, CallFunc_Map_Find_ReturnValue) == 0x000018, "Member 'Ability_Debone_C_GetDeboneSucceedMontage::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_GetDeboneSucceedMontage, CallFunc_Map_Find_Value_1) == 0x000020, "Member 'Ability_Debone_C_GetDeboneSucceedMontage::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_GetDeboneSucceedMontage, CallFunc_Map_Find_ReturnValue_1) == 0x000028, "Member 'Ability_Debone_C_GetDeboneSucceedMontage::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");

// Function Ability_Debone.Ability_Debone_C.HideDeboneUI
// 0x0002 (0x0002 - 0x0000)
struct Ability_Debone_C_HideDeboneUI final
{
public:
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ability_Debone_C_HideDeboneUI) == 0x000001, "Wrong alignment on Ability_Debone_C_HideDeboneUI");
static_assert(sizeof(Ability_Debone_C_HideDeboneUI) == 0x000002, "Wrong size on Ability_Debone_C_HideDeboneUI");
static_assert(offsetof(Ability_Debone_C_HideDeboneUI, CallFunc_IsDedicatedServer_ReturnValue) == 0x000000, "Member 'Ability_Debone_C_HideDeboneUI::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_HideDeboneUI, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'Ability_Debone_C_HideDeboneUI::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function Ability_Debone.Ability_Debone_C.IncrementPartsHangonCount
// 0x0010 (0x0010 - 0x0000)
struct Ability_Debone_C_IncrementPartsHangonCount final
{
public:
	class AActor*                                 CallFunc_GetOwnerActor_ReturnValue;                // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ability_Debone_C_IncrementPartsHangonCount) == 0x000008, "Wrong alignment on Ability_Debone_C_IncrementPartsHangonCount");
static_assert(sizeof(Ability_Debone_C_IncrementPartsHangonCount) == 0x000010, "Wrong size on Ability_Debone_C_IncrementPartsHangonCount");
static_assert(offsetof(Ability_Debone_C_IncrementPartsHangonCount, CallFunc_GetOwnerActor_ReturnValue) == 0x000000, "Member 'Ability_Debone_C_IncrementPartsHangonCount::CallFunc_GetOwnerActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_IncrementPartsHangonCount, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'Ability_Debone_C_IncrementPartsHangonCount::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_IncrementPartsHangonCount, CallFunc_HasAuthority_ReturnValue) == 0x000009, "Member 'Ability_Debone_C_IncrementPartsHangonCount::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");

// Function Ability_Debone.Ability_Debone_C.OnAbilityEvent_1530179148E34C18C2B07C8EA37CF409
// 0x0040 (0x0040 - 0x0000)
struct Ability_Debone_C_OnAbilityEvent_1530179148E34C18C2B07C8EA37CF409 final
{
public:
	struct FM1AbilityEvent                        Event;                                             // 0x0000(0x0040)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(Ability_Debone_C_OnAbilityEvent_1530179148E34C18C2B07C8EA37CF409) == 0x000008, "Wrong alignment on Ability_Debone_C_OnAbilityEvent_1530179148E34C18C2B07C8EA37CF409");
static_assert(sizeof(Ability_Debone_C_OnAbilityEvent_1530179148E34C18C2B07C8EA37CF409) == 0x000040, "Wrong size on Ability_Debone_C_OnAbilityEvent_1530179148E34C18C2B07C8EA37CF409");
static_assert(offsetof(Ability_Debone_C_OnAbilityEvent_1530179148E34C18C2B07C8EA37CF409, Event) == 0x000000, "Member 'Ability_Debone_C_OnAbilityEvent_1530179148E34C18C2B07C8EA37CF409::Event' has a wrong offset!");

// Function Ability_Debone.Ability_Debone_C.OnAbilityEvent_50AC98084D5FAC1BCBD9EDA054BAAD2B
// 0x0040 (0x0040 - 0x0000)
struct Ability_Debone_C_OnAbilityEvent_50AC98084D5FAC1BCBD9EDA054BAAD2B final
{
public:
	struct FM1AbilityEvent                        Event;                                             // 0x0000(0x0040)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(Ability_Debone_C_OnAbilityEvent_50AC98084D5FAC1BCBD9EDA054BAAD2B) == 0x000008, "Wrong alignment on Ability_Debone_C_OnAbilityEvent_50AC98084D5FAC1BCBD9EDA054BAAD2B");
static_assert(sizeof(Ability_Debone_C_OnAbilityEvent_50AC98084D5FAC1BCBD9EDA054BAAD2B) == 0x000040, "Wrong size on Ability_Debone_C_OnAbilityEvent_50AC98084D5FAC1BCBD9EDA054BAAD2B");
static_assert(offsetof(Ability_Debone_C_OnAbilityEvent_50AC98084D5FAC1BCBD9EDA054BAAD2B, Event) == 0x000000, "Member 'Ability_Debone_C_OnAbilityEvent_50AC98084D5FAC1BCBD9EDA054BAAD2B::Event' has a wrong offset!");

// Function Ability_Debone.Ability_Debone_C.OnAbilityEvent_792E32904B35F1C03B854FBCAA6B6319
// 0x0040 (0x0040 - 0x0000)
struct Ability_Debone_C_OnAbilityEvent_792E32904B35F1C03B854FBCAA6B6319 final
{
public:
	struct FM1AbilityEvent                        Event;                                             // 0x0000(0x0040)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(Ability_Debone_C_OnAbilityEvent_792E32904B35F1C03B854FBCAA6B6319) == 0x000008, "Wrong alignment on Ability_Debone_C_OnAbilityEvent_792E32904B35F1C03B854FBCAA6B6319");
static_assert(sizeof(Ability_Debone_C_OnAbilityEvent_792E32904B35F1C03B854FBCAA6B6319) == 0x000040, "Wrong size on Ability_Debone_C_OnAbilityEvent_792E32904B35F1C03B854FBCAA6B6319");
static_assert(offsetof(Ability_Debone_C_OnAbilityEvent_792E32904B35F1C03B854FBCAA6B6319, Event) == 0x000000, "Member 'Ability_Debone_C_OnAbilityEvent_792E32904B35F1C03B854FBCAA6B6319::Event' has a wrong offset!");

// Function Ability_Debone.Ability_Debone_C.OnAbilityEvent_C04518B1422087423B7917B34F50F3BC
// 0x0040 (0x0040 - 0x0000)
struct Ability_Debone_C_OnAbilityEvent_C04518B1422087423B7917B34F50F3BC final
{
public:
	struct FM1AbilityEvent                        Event;                                             // 0x0000(0x0040)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(Ability_Debone_C_OnAbilityEvent_C04518B1422087423B7917B34F50F3BC) == 0x000008, "Wrong alignment on Ability_Debone_C_OnAbilityEvent_C04518B1422087423B7917B34F50F3BC");
static_assert(sizeof(Ability_Debone_C_OnAbilityEvent_C04518B1422087423B7917B34F50F3BC) == 0x000040, "Wrong size on Ability_Debone_C_OnAbilityEvent_C04518B1422087423B7917B34F50F3BC");
static_assert(offsetof(Ability_Debone_C_OnAbilityEvent_C04518B1422087423B7917B34F50F3BC, Event) == 0x000000, "Member 'Ability_Debone_C_OnAbilityEvent_C04518B1422087423B7917B34F50F3BC::Event' has a wrong offset!");

// Function Ability_Debone.Ability_Debone_C.OnAbilityEvent_E8E28EE7440C80A186429789BA43CD6F
// 0x0040 (0x0040 - 0x0000)
struct Ability_Debone_C_OnAbilityEvent_E8E28EE7440C80A186429789BA43CD6F final
{
public:
	struct FM1AbilityEvent                        Event;                                             // 0x0000(0x0040)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(Ability_Debone_C_OnAbilityEvent_E8E28EE7440C80A186429789BA43CD6F) == 0x000008, "Wrong alignment on Ability_Debone_C_OnAbilityEvent_E8E28EE7440C80A186429789BA43CD6F");
static_assert(sizeof(Ability_Debone_C_OnAbilityEvent_E8E28EE7440C80A186429789BA43CD6F) == 0x000040, "Wrong size on Ability_Debone_C_OnAbilityEvent_E8E28EE7440C80A186429789BA43CD6F");
static_assert(offsetof(Ability_Debone_C_OnAbilityEvent_E8E28EE7440C80A186429789BA43CD6F, Event) == 0x000000, "Member 'Ability_Debone_C_OnAbilityEvent_E8E28EE7440C80A186429789BA43CD6F::Event' has a wrong offset!");

// Function Ability_Debone.Ability_Debone_C.OnAbilityEvent_F7D92B584B0C87393F7FFD97C44B9AC9
// 0x0040 (0x0040 - 0x0000)
struct Ability_Debone_C_OnAbilityEvent_F7D92B584B0C87393F7FFD97C44B9AC9 final
{
public:
	struct FM1AbilityEvent                        Event;                                             // 0x0000(0x0040)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(Ability_Debone_C_OnAbilityEvent_F7D92B584B0C87393F7FFD97C44B9AC9) == 0x000008, "Wrong alignment on Ability_Debone_C_OnAbilityEvent_F7D92B584B0C87393F7FFD97C44B9AC9");
static_assert(sizeof(Ability_Debone_C_OnAbilityEvent_F7D92B584B0C87393F7FFD97C44B9AC9) == 0x000040, "Wrong size on Ability_Debone_C_OnAbilityEvent_F7D92B584B0C87393F7FFD97C44B9AC9");
static_assert(offsetof(Ability_Debone_C_OnAbilityEvent_F7D92B584B0C87393F7FFD97C44B9AC9, Event) == 0x000000, "Member 'Ability_Debone_C_OnAbilityEvent_F7D92B584B0C87393F7FFD97C44B9AC9::Event' has a wrong offset!");

// Function Ability_Debone.Ability_Debone_C.OnBlendOut_11FB4BDF4B03E32FA2E626B37853433C
// 0x0040 (0x0040 - 0x0000)
struct Ability_Debone_C_OnBlendOut_11FB4BDF4B03E32FA2E626B37853433C final
{
public:
	struct FM1AbilityEvent                        Event;                                             // 0x0000(0x0040)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(Ability_Debone_C_OnBlendOut_11FB4BDF4B03E32FA2E626B37853433C) == 0x000008, "Wrong alignment on Ability_Debone_C_OnBlendOut_11FB4BDF4B03E32FA2E626B37853433C");
static_assert(sizeof(Ability_Debone_C_OnBlendOut_11FB4BDF4B03E32FA2E626B37853433C) == 0x000040, "Wrong size on Ability_Debone_C_OnBlendOut_11FB4BDF4B03E32FA2E626B37853433C");
static_assert(offsetof(Ability_Debone_C_OnBlendOut_11FB4BDF4B03E32FA2E626B37853433C, Event) == 0x000000, "Member 'Ability_Debone_C_OnBlendOut_11FB4BDF4B03E32FA2E626B37853433C::Event' has a wrong offset!");

// Function Ability_Debone.Ability_Debone_C.OnBlendOut_D1EBFD224EC7C71DB2BF95AB4E4FF3AE
// 0x0040 (0x0040 - 0x0000)
struct Ability_Debone_C_OnBlendOut_D1EBFD224EC7C71DB2BF95AB4E4FF3AE final
{
public:
	struct FM1AbilityEvent                        Event;                                             // 0x0000(0x0040)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(Ability_Debone_C_OnBlendOut_D1EBFD224EC7C71DB2BF95AB4E4FF3AE) == 0x000008, "Wrong alignment on Ability_Debone_C_OnBlendOut_D1EBFD224EC7C71DB2BF95AB4E4FF3AE");
static_assert(sizeof(Ability_Debone_C_OnBlendOut_D1EBFD224EC7C71DB2BF95AB4E4FF3AE) == 0x000040, "Wrong size on Ability_Debone_C_OnBlendOut_D1EBFD224EC7C71DB2BF95AB4E4FF3AE");
static_assert(offsetof(Ability_Debone_C_OnBlendOut_D1EBFD224EC7C71DB2BF95AB4E4FF3AE, Event) == 0x000000, "Member 'Ability_Debone_C_OnBlendOut_D1EBFD224EC7C71DB2BF95AB4E4FF3AE::Event' has a wrong offset!");

// Function Ability_Debone.Ability_Debone_C.OnCompleted_11FB4BDF4B03E32FA2E626B37853433C
// 0x0040 (0x0040 - 0x0000)
struct Ability_Debone_C_OnCompleted_11FB4BDF4B03E32FA2E626B37853433C final
{
public:
	struct FM1AbilityEvent                        Event;                                             // 0x0000(0x0040)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(Ability_Debone_C_OnCompleted_11FB4BDF4B03E32FA2E626B37853433C) == 0x000008, "Wrong alignment on Ability_Debone_C_OnCompleted_11FB4BDF4B03E32FA2E626B37853433C");
static_assert(sizeof(Ability_Debone_C_OnCompleted_11FB4BDF4B03E32FA2E626B37853433C) == 0x000040, "Wrong size on Ability_Debone_C_OnCompleted_11FB4BDF4B03E32FA2E626B37853433C");
static_assert(offsetof(Ability_Debone_C_OnCompleted_11FB4BDF4B03E32FA2E626B37853433C, Event) == 0x000000, "Member 'Ability_Debone_C_OnCompleted_11FB4BDF4B03E32FA2E626B37853433C::Event' has a wrong offset!");

// Function Ability_Debone.Ability_Debone_C.OnCompleted_D1EBFD224EC7C71DB2BF95AB4E4FF3AE
// 0x0040 (0x0040 - 0x0000)
struct Ability_Debone_C_OnCompleted_D1EBFD224EC7C71DB2BF95AB4E4FF3AE final
{
public:
	struct FM1AbilityEvent                        Event;                                             // 0x0000(0x0040)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(Ability_Debone_C_OnCompleted_D1EBFD224EC7C71DB2BF95AB4E4FF3AE) == 0x000008, "Wrong alignment on Ability_Debone_C_OnCompleted_D1EBFD224EC7C71DB2BF95AB4E4FF3AE");
static_assert(sizeof(Ability_Debone_C_OnCompleted_D1EBFD224EC7C71DB2BF95AB4E4FF3AE) == 0x000040, "Wrong size on Ability_Debone_C_OnCompleted_D1EBFD224EC7C71DB2BF95AB4E4FF3AE");
static_assert(offsetof(Ability_Debone_C_OnCompleted_D1EBFD224EC7C71DB2BF95AB4E4FF3AE, Event) == 0x000000, "Member 'Ability_Debone_C_OnCompleted_D1EBFD224EC7C71DB2BF95AB4E4FF3AE::Event' has a wrong offset!");

// Function Ability_Debone.Ability_Debone_C.OnEventReceived_11FB4BDF4B03E32FA2E626B37853433C
// 0x0040 (0x0040 - 0x0000)
struct Ability_Debone_C_OnEventReceived_11FB4BDF4B03E32FA2E626B37853433C final
{
public:
	struct FM1AbilityEvent                        Event;                                             // 0x0000(0x0040)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(Ability_Debone_C_OnEventReceived_11FB4BDF4B03E32FA2E626B37853433C) == 0x000008, "Wrong alignment on Ability_Debone_C_OnEventReceived_11FB4BDF4B03E32FA2E626B37853433C");
static_assert(sizeof(Ability_Debone_C_OnEventReceived_11FB4BDF4B03E32FA2E626B37853433C) == 0x000040, "Wrong size on Ability_Debone_C_OnEventReceived_11FB4BDF4B03E32FA2E626B37853433C");
static_assert(offsetof(Ability_Debone_C_OnEventReceived_11FB4BDF4B03E32FA2E626B37853433C, Event) == 0x000000, "Member 'Ability_Debone_C_OnEventReceived_11FB4BDF4B03E32FA2E626B37853433C::Event' has a wrong offset!");

// Function Ability_Debone.Ability_Debone_C.OnEventReceived_D1EBFD224EC7C71DB2BF95AB4E4FF3AE
// 0x0040 (0x0040 - 0x0000)
struct Ability_Debone_C_OnEventReceived_D1EBFD224EC7C71DB2BF95AB4E4FF3AE final
{
public:
	struct FM1AbilityEvent                        Event;                                             // 0x0000(0x0040)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(Ability_Debone_C_OnEventReceived_D1EBFD224EC7C71DB2BF95AB4E4FF3AE) == 0x000008, "Wrong alignment on Ability_Debone_C_OnEventReceived_D1EBFD224EC7C71DB2BF95AB4E4FF3AE");
static_assert(sizeof(Ability_Debone_C_OnEventReceived_D1EBFD224EC7C71DB2BF95AB4E4FF3AE) == 0x000040, "Wrong size on Ability_Debone_C_OnEventReceived_D1EBFD224EC7C71DB2BF95AB4E4FF3AE");
static_assert(offsetof(Ability_Debone_C_OnEventReceived_D1EBFD224EC7C71DB2BF95AB4E4FF3AE, Event) == 0x000000, "Member 'Ability_Debone_C_OnEventReceived_D1EBFD224EC7C71DB2BF95AB4E4FF3AE::Event' has a wrong offset!");

// Function Ability_Debone.Ability_Debone_C.OnLoaded_DE97FAB246F4BF4917611E837526426C
// 0x0008 (0x0008 - 0x0000)
struct Ability_Debone_C_OnLoaded_DE97FAB246F4BF4917611E837526426C final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ability_Debone_C_OnLoaded_DE97FAB246F4BF4917611E837526426C) == 0x000008, "Wrong alignment on Ability_Debone_C_OnLoaded_DE97FAB246F4BF4917611E837526426C");
static_assert(sizeof(Ability_Debone_C_OnLoaded_DE97FAB246F4BF4917611E837526426C) == 0x000008, "Wrong size on Ability_Debone_C_OnLoaded_DE97FAB246F4BF4917611E837526426C");
static_assert(offsetof(Ability_Debone_C_OnLoaded_DE97FAB246F4BF4917611E837526426C, Loaded) == 0x000000, "Member 'Ability_Debone_C_OnLoaded_DE97FAB246F4BF4917611E837526426C::Loaded' has a wrong offset!");

// Function Ability_Debone.Ability_Debone_C.OnLoaded_EFA70D4A40BAE9A5094A22B1E777DFB0
// 0x0008 (0x0008 - 0x0000)
struct Ability_Debone_C_OnLoaded_EFA70D4A40BAE9A5094A22B1E777DFB0 final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ability_Debone_C_OnLoaded_EFA70D4A40BAE9A5094A22B1E777DFB0) == 0x000008, "Wrong alignment on Ability_Debone_C_OnLoaded_EFA70D4A40BAE9A5094A22B1E777DFB0");
static_assert(sizeof(Ability_Debone_C_OnLoaded_EFA70D4A40BAE9A5094A22B1E777DFB0) == 0x000008, "Wrong size on Ability_Debone_C_OnLoaded_EFA70D4A40BAE9A5094A22B1E777DFB0");
static_assert(offsetof(Ability_Debone_C_OnLoaded_EFA70D4A40BAE9A5094A22B1E777DFB0, Loaded) == 0x000000, "Member 'Ability_Debone_C_OnLoaded_EFA70D4A40BAE9A5094A22B1E777DFB0::Loaded' has a wrong offset!");

// Function Ability_Debone.Ability_Debone_C.OnRep_bOwnerAttacking
// 0x0001 (0x0001 - 0x0000)
struct Ability_Debone_C_OnRep_bOwnerAttacking final
{
public:
	bool                                          CallFunc_IsEnduring_bEnduring;                     // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ability_Debone_C_OnRep_bOwnerAttacking) == 0x000001, "Wrong alignment on Ability_Debone_C_OnRep_bOwnerAttacking");
static_assert(sizeof(Ability_Debone_C_OnRep_bOwnerAttacking) == 0x000001, "Wrong size on Ability_Debone_C_OnRep_bOwnerAttacking");
static_assert(offsetof(Ability_Debone_C_OnRep_bOwnerAttacking, CallFunc_IsEnduring_bEnduring) == 0x000000, "Member 'Ability_Debone_C_OnRep_bOwnerAttacking::CallFunc_IsEnduring_bEnduring' has a wrong offset!");

// Function Ability_Debone.Ability_Debone_C.OnRep_bOwnerEnduring
// 0x0001 (0x0001 - 0x0000)
struct Ability_Debone_C_OnRep_bOwnerEnduring final
{
public:
	bool                                          CallFunc_IsEnduring_bEnduring;                     // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ability_Debone_C_OnRep_bOwnerEnduring) == 0x000001, "Wrong alignment on Ability_Debone_C_OnRep_bOwnerEnduring");
static_assert(sizeof(Ability_Debone_C_OnRep_bOwnerEnduring) == 0x000001, "Wrong size on Ability_Debone_C_OnRep_bOwnerEnduring");
static_assert(offsetof(Ability_Debone_C_OnRep_bOwnerEnduring, CallFunc_IsEnduring_bEnduring) == 0x000000, "Member 'Ability_Debone_C_OnRep_bOwnerEnduring::CallFunc_IsEnduring_bEnduring' has a wrong offset!");

// Function Ability_Debone.Ability_Debone_C.OnRep_PartsHPRate
// 0x0001 (0x0001 - 0x0000)
struct Ability_Debone_C_OnRep_PartsHPRate final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ability_Debone_C_OnRep_PartsHPRate) == 0x000001, "Wrong alignment on Ability_Debone_C_OnRep_PartsHPRate");
static_assert(sizeof(Ability_Debone_C_OnRep_PartsHPRate) == 0x000001, "Wrong size on Ability_Debone_C_OnRep_PartsHPRate");
static_assert(offsetof(Ability_Debone_C_OnRep_PartsHPRate, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'Ability_Debone_C_OnRep_PartsHPRate::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function Ability_Debone.Ability_Debone_C.ResetCameras
// 0x0058 (0x0058 - 0x0000)
struct Ability_Debone_C_ResetCameras final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UClass*>                         CallFunc_GetAllCameras_OutCameraModifiers;         // 0x0010(0x0010)(ReferenceParm)
	class UClass*                                 CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E[0x2];                                       // 0x002E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwnerPlayerController_ReturnValue;     // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A[0x6];                                       // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UCameraModifier*                        CallFunc_FindCameraModifierByClass_ReturnValue;    // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UCameraModifier_DeboneStart_C*          K2Node_DynamicCast_AsCamera_Modifier_Debone_Start; // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ability_Debone_C_ResetCameras) == 0x000008, "Wrong alignment on Ability_Debone_C_ResetCameras");
static_assert(sizeof(Ability_Debone_C_ResetCameras) == 0x000058, "Wrong size on Ability_Debone_C_ResetCameras");
static_assert(offsetof(Ability_Debone_C_ResetCameras, Temp_int_Array_Index_Variable) == 0x000000, "Member 'Ability_Debone_C_ResetCameras::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ResetCameras, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'Ability_Debone_C_ResetCameras::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ResetCameras, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'Ability_Debone_C_ResetCameras::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ResetCameras, CallFunc_GetAllCameras_OutCameraModifiers) == 0x000010, "Member 'Ability_Debone_C_ResetCameras::CallFunc_GetAllCameras_OutCameraModifiers' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ResetCameras, CallFunc_Array_Get_Item) == 0x000020, "Member 'Ability_Debone_C_ResetCameras::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ResetCameras, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'Ability_Debone_C_ResetCameras::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ResetCameras, CallFunc_IsLocallyControlled_ReturnValue) == 0x00002C, "Member 'Ability_Debone_C_ResetCameras::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ResetCameras, CallFunc_Less_IntInt_ReturnValue) == 0x00002D, "Member 'Ability_Debone_C_ResetCameras::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ResetCameras, CallFunc_GetOwnerPlayerController_ReturnValue) == 0x000030, "Member 'Ability_Debone_C_ResetCameras::CallFunc_GetOwnerPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ResetCameras, CallFunc_IsValid_ReturnValue) == 0x000038, "Member 'Ability_Debone_C_ResetCameras::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ResetCameras, CallFunc_IsValid_ReturnValue_1) == 0x000039, "Member 'Ability_Debone_C_ResetCameras::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ResetCameras, CallFunc_FindCameraModifierByClass_ReturnValue) == 0x000040, "Member 'Ability_Debone_C_ResetCameras::CallFunc_FindCameraModifierByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ResetCameras, K2Node_DynamicCast_AsCamera_Modifier_Debone_Start) == 0x000048, "Member 'Ability_Debone_C_ResetCameras::K2Node_DynamicCast_AsCamera_Modifier_Debone_Start' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ResetCameras, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'Ability_Debone_C_ResetCameras::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ResetCameras, CallFunc_IsValid_ReturnValue_2) == 0x000051, "Member 'Ability_Debone_C_ResetCameras::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");

// Function Ability_Debone.Ability_Debone_C.ResetDebone
// 0x0020 (0x0020 - 0x0000)
struct Ability_Debone_C_ResetDebone final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UM1AbilityTask_LocalWaitInput*          CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ability_Debone_C_ResetDebone) == 0x000008, "Wrong alignment on Ability_Debone_C_ResetDebone");
static_assert(sizeof(Ability_Debone_C_ResetDebone) == 0x000020, "Wrong size on Ability_Debone_C_ResetDebone");
static_assert(offsetof(Ability_Debone_C_ResetDebone, Temp_int_Array_Index_Variable) == 0x000000, "Member 'Ability_Debone_C_ResetDebone::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ResetDebone, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'Ability_Debone_C_ResetDebone::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ResetDebone, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'Ability_Debone_C_ResetDebone::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ResetDebone, CallFunc_Array_Length_ReturnValue) == 0x00000C, "Member 'Ability_Debone_C_ResetDebone::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ResetDebone, CallFunc_Array_Get_Item) == 0x000010, "Member 'Ability_Debone_C_ResetDebone::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ResetDebone, CallFunc_Less_IntInt_ReturnValue) == 0x000018, "Member 'Ability_Debone_C_ResetDebone::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ResetDebone, CallFunc_IsValid_ReturnValue) == 0x000019, "Member 'Ability_Debone_C_ResetDebone::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function Ability_Debone.Ability_Debone_C.ServerIgnoreDeboneCooltime
// 0x0001 (0x0001 - 0x0000)
struct Ability_Debone_C_ServerIgnoreDeboneCooltime final
{
public:
	bool                                          bIgnore;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ability_Debone_C_ServerIgnoreDeboneCooltime) == 0x000001, "Wrong alignment on Ability_Debone_C_ServerIgnoreDeboneCooltime");
static_assert(sizeof(Ability_Debone_C_ServerIgnoreDeboneCooltime) == 0x000001, "Wrong size on Ability_Debone_C_ServerIgnoreDeboneCooltime");
static_assert(offsetof(Ability_Debone_C_ServerIgnoreDeboneCooltime, bIgnore) == 0x000000, "Member 'Ability_Debone_C_ServerIgnoreDeboneCooltime::bIgnore' has a wrong offset!");

// Function Ability_Debone.Ability_Debone_C.ServerIgnoreDeboneStamina
// 0x0001 (0x0001 - 0x0000)
struct Ability_Debone_C_ServerIgnoreDeboneStamina final
{
public:
	bool                                          bIgnore;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ability_Debone_C_ServerIgnoreDeboneStamina) == 0x000001, "Wrong alignment on Ability_Debone_C_ServerIgnoreDeboneStamina");
static_assert(sizeof(Ability_Debone_C_ServerIgnoreDeboneStamina) == 0x000001, "Wrong size on Ability_Debone_C_ServerIgnoreDeboneStamina");
static_assert(offsetof(Ability_Debone_C_ServerIgnoreDeboneStamina, bIgnore) == 0x000000, "Member 'Ability_Debone_C_ServerIgnoreDeboneStamina::bIgnore' has a wrong offset!");

// Function Ability_Debone.Ability_Debone_C.SetOwnerLocalEnduring
// 0x0001 (0x0001 - 0x0000)
struct Ability_Debone_C_SetOwnerLocalEnduring final
{
public:
	bool                                          InEnduring;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ability_Debone_C_SetOwnerLocalEnduring) == 0x000001, "Wrong alignment on Ability_Debone_C_SetOwnerLocalEnduring");
static_assert(sizeof(Ability_Debone_C_SetOwnerLocalEnduring) == 0x000001, "Wrong size on Ability_Debone_C_SetOwnerLocalEnduring");
static_assert(offsetof(Ability_Debone_C_SetOwnerLocalEnduring, InEnduring) == 0x000000, "Member 'Ability_Debone_C_SetOwnerLocalEnduring::InEnduring' has a wrong offset!");

// Function Ability_Debone.Ability_Debone_C.ShowDeboneUI
// 0x0038 (0x0038 - 0x0000)
struct Ability_Debone_C_ShowDeboneUI final
{
public:
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetPartsHPRate_ReturnValue;               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UM1UIActorWidget*                       CallFunc_GetActorWidget_ReturnValue;               // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UUI_GameHP_Debone_C*                    K2Node_DynamicCast_AsUI_Game_HP_Debone;            // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwnerActor_ReturnValue;                // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UDebonePartsWidgetComp_C*               CallFunc_AddComponentByClass_ReturnValue;          // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_UpdateHPGauge_HpRate_ImplicitCast;        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ability_Debone_C_ShowDeboneUI) == 0x000008, "Wrong alignment on Ability_Debone_C_ShowDeboneUI");
static_assert(sizeof(Ability_Debone_C_ShowDeboneUI) == 0x000038, "Wrong size on Ability_Debone_C_ShowDeboneUI");
static_assert(offsetof(Ability_Debone_C_ShowDeboneUI, CallFunc_IsDedicatedServer_ReturnValue) == 0x000000, "Member 'Ability_Debone_C_ShowDeboneUI::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ShowDeboneUI, CallFunc_IsLocallyControlled_ReturnValue) == 0x000001, "Member 'Ability_Debone_C_ShowDeboneUI::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ShowDeboneUI, CallFunc_GetPartsHPRate_ReturnValue) == 0x000004, "Member 'Ability_Debone_C_ShowDeboneUI::CallFunc_GetPartsHPRate_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ShowDeboneUI, CallFunc_GetActorWidget_ReturnValue) == 0x000008, "Member 'Ability_Debone_C_ShowDeboneUI::CallFunc_GetActorWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ShowDeboneUI, K2Node_DynamicCast_AsUI_Game_HP_Debone) == 0x000010, "Member 'Ability_Debone_C_ShowDeboneUI::K2Node_DynamicCast_AsUI_Game_HP_Debone' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ShowDeboneUI, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'Ability_Debone_C_ShowDeboneUI::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ShowDeboneUI, CallFunc_GetOwnerActor_ReturnValue) == 0x000020, "Member 'Ability_Debone_C_ShowDeboneUI::CallFunc_GetOwnerActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ShowDeboneUI, CallFunc_AddComponentByClass_ReturnValue) == 0x000028, "Member 'Ability_Debone_C_ShowDeboneUI::CallFunc_AddComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ShowDeboneUI, CallFunc_UpdateHPGauge_HpRate_ImplicitCast) == 0x000030, "Member 'Ability_Debone_C_ShowDeboneUI::CallFunc_UpdateHPGauge_HpRate_ImplicitCast' has a wrong offset!");

// Function Ability_Debone.Ability_Debone_C.ShowStamina
// 0x001C (0x001C - 0x0000)
struct Ability_Debone_C_ShowStamina final
{
public:
	int32                                         IsEnable;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(float DeltaSeconds)>           K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ability_Debone_C_ShowStamina) == 0x000004, "Wrong alignment on Ability_Debone_C_ShowStamina");
static_assert(sizeof(Ability_Debone_C_ShowStamina) == 0x00001C, "Wrong size on Ability_Debone_C_ShowStamina");
static_assert(offsetof(Ability_Debone_C_ShowStamina, IsEnable) == 0x000000, "Member 'Ability_Debone_C_ShowStamina::IsEnable' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ShowStamina, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000004, "Member 'Ability_Debone_C_ShowStamina::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ShowStamina, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'Ability_Debone_C_ShowStamina::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_ShowStamina, CallFunc_IsDedicatedServer_ReturnValue) == 0x000018, "Member 'Ability_Debone_C_ShowStamina::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");

// Function Ability_Debone.Ability_Debone_C.StopArriveCameraClamp
// 0x0040 (0x0040 - 0x0000)
struct Ability_Debone_C_StopArriveCameraClamp final
{
public:
	bool                                          bStop;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetArriveCameraModifier_OutCameraModifier; // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwnerPlayerController_ReturnValue;     // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UCameraModifier*                        CallFunc_FindCameraModifierByClass_ReturnValue;    // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UCameraModifier_DeboneArrived_C*        K2Node_DynamicCast_AsCamera_Modifier_Debone_Arrived; // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ability_Debone_C_StopArriveCameraClamp) == 0x000008, "Wrong alignment on Ability_Debone_C_StopArriveCameraClamp");
static_assert(sizeof(Ability_Debone_C_StopArriveCameraClamp) == 0x000040, "Wrong size on Ability_Debone_C_StopArriveCameraClamp");
static_assert(offsetof(Ability_Debone_C_StopArriveCameraClamp, bStop) == 0x000000, "Member 'Ability_Debone_C_StopArriveCameraClamp::bStop' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_StopArriveCameraClamp, CallFunc_GetArriveCameraModifier_OutCameraModifier) == 0x000008, "Member 'Ability_Debone_C_StopArriveCameraClamp::CallFunc_GetArriveCameraModifier_OutCameraModifier' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_StopArriveCameraClamp, CallFunc_IsDedicatedServer_ReturnValue) == 0x000010, "Member 'Ability_Debone_C_StopArriveCameraClamp::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_StopArriveCameraClamp, CallFunc_GetOwnerPlayerController_ReturnValue) == 0x000018, "Member 'Ability_Debone_C_StopArriveCameraClamp::CallFunc_GetOwnerPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_StopArriveCameraClamp, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'Ability_Debone_C_StopArriveCameraClamp::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_StopArriveCameraClamp, CallFunc_IsValid_ReturnValue_1) == 0x000021, "Member 'Ability_Debone_C_StopArriveCameraClamp::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_StopArriveCameraClamp, CallFunc_FindCameraModifierByClass_ReturnValue) == 0x000028, "Member 'Ability_Debone_C_StopArriveCameraClamp::CallFunc_FindCameraModifierByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_StopArriveCameraClamp, K2Node_DynamicCast_AsCamera_Modifier_Debone_Arrived) == 0x000030, "Member 'Ability_Debone_C_StopArriveCameraClamp::K2Node_DynamicCast_AsCamera_Modifier_Debone_Arrived' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_StopArriveCameraClamp, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'Ability_Debone_C_StopArriveCameraClamp::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function Ability_Debone.Ability_Debone_C.TryAbilityEventDeboneEnd
// 0x0018 (0x0018 - 0x0000)
struct Ability_Debone_C_TryAbilityEventDeboneEnd final
{
public:
	class AActor*                                 CallFunc_GetOwnerActor_ReturnValue;                // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwnerActor_ReturnValue_1;              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ability_Debone_C_TryAbilityEventDeboneEnd) == 0x000008, "Wrong alignment on Ability_Debone_C_TryAbilityEventDeboneEnd");
static_assert(sizeof(Ability_Debone_C_TryAbilityEventDeboneEnd) == 0x000018, "Wrong size on Ability_Debone_C_TryAbilityEventDeboneEnd");
static_assert(offsetof(Ability_Debone_C_TryAbilityEventDeboneEnd, CallFunc_GetOwnerActor_ReturnValue) == 0x000000, "Member 'Ability_Debone_C_TryAbilityEventDeboneEnd::CallFunc_GetOwnerActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_TryAbilityEventDeboneEnd, CallFunc_GetOwnerActor_ReturnValue_1) == 0x000008, "Member 'Ability_Debone_C_TryAbilityEventDeboneEnd::CallFunc_GetOwnerActor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_TryAbilityEventDeboneEnd, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'Ability_Debone_C_TryAbilityEventDeboneEnd::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_TryAbilityEventDeboneEnd, CallFunc_IsValid_ReturnValue_1) == 0x000011, "Member 'Ability_Debone_C_TryAbilityEventDeboneEnd::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_TryAbilityEventDeboneEnd, CallFunc_HasAuthority_ReturnValue) == 0x000012, "Member 'Ability_Debone_C_TryAbilityEventDeboneEnd::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");

// Function Ability_Debone.Ability_Debone_C.UnapplyIgnoreLookInput
// 0x0010 (0x0010 - 0x0000)
struct Ability_Debone_C_UnapplyIgnoreLookInput final
{
public:
	class APlayerController*                      CallFunc_GetOwnerPlayerController_ReturnValue;     // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ability_Debone_C_UnapplyIgnoreLookInput) == 0x000008, "Wrong alignment on Ability_Debone_C_UnapplyIgnoreLookInput");
static_assert(sizeof(Ability_Debone_C_UnapplyIgnoreLookInput) == 0x000010, "Wrong size on Ability_Debone_C_UnapplyIgnoreLookInput");
static_assert(offsetof(Ability_Debone_C_UnapplyIgnoreLookInput, CallFunc_GetOwnerPlayerController_ReturnValue) == 0x000000, "Member 'Ability_Debone_C_UnapplyIgnoreLookInput::CallFunc_GetOwnerPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_UnapplyIgnoreLookInput, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'Ability_Debone_C_UnapplyIgnoreLookInput::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function Ability_Debone.Ability_Debone_C.UpdatePositionAndIK
// 0x0590 (0x0590 - 0x0000)
struct Ability_Debone_C_UpdatePositionAndIK final
{
public:
	double                                        DeltaSeconds;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8[0x8];                                        // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             PlayerMeshTrans;                                   // 0x0010(0x0030)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FM1AbilityOwnerInfo                    CallFunc_GetOwnerInfo_ReturnValue;                 // 0x0040(0x0038)(ConstParm, NoDestructor, ContainsInstancedReference)
	class AActor*                                 CallFunc_GetOwnerActor_ReturnValue;                // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             K2Node_DynamicCast_As___;                          // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0090(0x0030)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetBaseRotationOffsetRotator_ReturnValue; // 0x00C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetBaseTranslationOffset_ReturnValue;     // 0x00CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D8[0x8];                                       // 0x00D8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_1;              // 0x00E0(0x0030)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesSocketExist_ReturnValue;              // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesSocketExist_ReturnValue_1;            // 0x0119(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesSocketExist_ReturnValue_2;            // 0x011A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesSocketExist_ReturnValue_3;            // 0x011B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11C[0x4];                                      // 0x011C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwnerActor_ReturnValue_1;              // 0x0120(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_128[0x8];                                      // 0x0128(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0130(0x0030)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesSocketExist_ReturnValue_4;            // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_161[0xF];                                      // 0x0161(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_ComposeTransforms_ReturnValue;            // 0x0170(0x0030)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue;           // 0x01A0(0x0030)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue_1;         // 0x01D0(0x0030)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeRelativeTransform_ReturnValue;        // 0x0200(0x0030)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeRelativeTransform_ReturnValue_1;      // 0x0230(0x0030)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue_2;         // 0x0260(0x0030)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue_3;         // 0x0290(0x0030)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeRelativeTransform_ReturnValue_2;      // 0x02C0(0x0030)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeRelativeTransform_ReturnValue_3;      // 0x02F0(0x0030)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue_4;         // 0x0320(0x0030)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeRelativeTransform_ReturnValue_4;      // 0x0350(0x0030)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwnerActor_ReturnValue_2;              // 0x0380(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x0388(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0390(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_391[0xF];                                      // 0x0391(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetRelativeTransform_ReturnValue;         // 0x03A0(0x0030)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x03D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x03DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x03E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F4[0xC];                                      // 0x03F4(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_2;              // 0x0400(0x0030)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0430(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_TransformTransform_ReturnValue; // 0x0431(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_432[0x2];                                      // 0x0432(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_RFixedTurn_ReturnValue;                   // 0x0434(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_VInterpTo_Constant_ReturnValue;           // 0x0440(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorRelativeRotation_SweepHitResult; // 0x044C(0x009C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_SetActorRelativeLocation_SweepHitResult; // 0x04E8(0x009C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         CallFunc_RFixedTurn_InDeltaRate_ImplicitCast;      // 0x0584(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VInterpTo_Constant_InterpSpeed_ImplicitCast; // 0x0588(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VInterpTo_Constant_DeltaTime_ImplicitCast; // 0x058C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ability_Debone_C_UpdatePositionAndIK) == 0x000010, "Wrong alignment on Ability_Debone_C_UpdatePositionAndIK");
static_assert(sizeof(Ability_Debone_C_UpdatePositionAndIK) == 0x000590, "Wrong size on Ability_Debone_C_UpdatePositionAndIK");
static_assert(offsetof(Ability_Debone_C_UpdatePositionAndIK, DeltaSeconds) == 0x000000, "Member 'Ability_Debone_C_UpdatePositionAndIK::DeltaSeconds' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_UpdatePositionAndIK, PlayerMeshTrans) == 0x000010, "Member 'Ability_Debone_C_UpdatePositionAndIK::PlayerMeshTrans' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_UpdatePositionAndIK, CallFunc_GetOwnerInfo_ReturnValue) == 0x000040, "Member 'Ability_Debone_C_UpdatePositionAndIK::CallFunc_GetOwnerInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_UpdatePositionAndIK, CallFunc_GetOwnerActor_ReturnValue) == 0x000078, "Member 'Ability_Debone_C_UpdatePositionAndIK::CallFunc_GetOwnerActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_UpdatePositionAndIK, K2Node_DynamicCast_As___) == 0x000080, "Member 'Ability_Debone_C_UpdatePositionAndIK::K2Node_DynamicCast_As___' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_UpdatePositionAndIK, K2Node_DynamicCast_bSuccess) == 0x000088, "Member 'Ability_Debone_C_UpdatePositionAndIK::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_UpdatePositionAndIK, CallFunc_MakeTransform_ReturnValue) == 0x000090, "Member 'Ability_Debone_C_UpdatePositionAndIK::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_UpdatePositionAndIK, CallFunc_GetBaseRotationOffsetRotator_ReturnValue) == 0x0000C0, "Member 'Ability_Debone_C_UpdatePositionAndIK::CallFunc_GetBaseRotationOffsetRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_UpdatePositionAndIK, CallFunc_GetBaseTranslationOffset_ReturnValue) == 0x0000CC, "Member 'Ability_Debone_C_UpdatePositionAndIK::CallFunc_GetBaseTranslationOffset_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_UpdatePositionAndIK, CallFunc_MakeTransform_ReturnValue_1) == 0x0000E0, "Member 'Ability_Debone_C_UpdatePositionAndIK::CallFunc_MakeTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_UpdatePositionAndIK, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000110, "Member 'Ability_Debone_C_UpdatePositionAndIK::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_UpdatePositionAndIK, CallFunc_DoesSocketExist_ReturnValue) == 0x000118, "Member 'Ability_Debone_C_UpdatePositionAndIK::CallFunc_DoesSocketExist_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_UpdatePositionAndIK, CallFunc_DoesSocketExist_ReturnValue_1) == 0x000119, "Member 'Ability_Debone_C_UpdatePositionAndIK::CallFunc_DoesSocketExist_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_UpdatePositionAndIK, CallFunc_DoesSocketExist_ReturnValue_2) == 0x00011A, "Member 'Ability_Debone_C_UpdatePositionAndIK::CallFunc_DoesSocketExist_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_UpdatePositionAndIK, CallFunc_DoesSocketExist_ReturnValue_3) == 0x00011B, "Member 'Ability_Debone_C_UpdatePositionAndIK::CallFunc_DoesSocketExist_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_UpdatePositionAndIK, CallFunc_GetOwnerActor_ReturnValue_1) == 0x000120, "Member 'Ability_Debone_C_UpdatePositionAndIK::CallFunc_GetOwnerActor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_UpdatePositionAndIK, CallFunc_GetTransform_ReturnValue) == 0x000130, "Member 'Ability_Debone_C_UpdatePositionAndIK::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_UpdatePositionAndIK, CallFunc_DoesSocketExist_ReturnValue_4) == 0x000160, "Member 'Ability_Debone_C_UpdatePositionAndIK::CallFunc_DoesSocketExist_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_UpdatePositionAndIK, CallFunc_ComposeTransforms_ReturnValue) == 0x000170, "Member 'Ability_Debone_C_UpdatePositionAndIK::CallFunc_ComposeTransforms_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_UpdatePositionAndIK, CallFunc_GetSocketTransform_ReturnValue) == 0x0001A0, "Member 'Ability_Debone_C_UpdatePositionAndIK::CallFunc_GetSocketTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_UpdatePositionAndIK, CallFunc_GetSocketTransform_ReturnValue_1) == 0x0001D0, "Member 'Ability_Debone_C_UpdatePositionAndIK::CallFunc_GetSocketTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_UpdatePositionAndIK, CallFunc_MakeRelativeTransform_ReturnValue) == 0x000200, "Member 'Ability_Debone_C_UpdatePositionAndIK::CallFunc_MakeRelativeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_UpdatePositionAndIK, CallFunc_MakeRelativeTransform_ReturnValue_1) == 0x000230, "Member 'Ability_Debone_C_UpdatePositionAndIK::CallFunc_MakeRelativeTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_UpdatePositionAndIK, CallFunc_GetSocketTransform_ReturnValue_2) == 0x000260, "Member 'Ability_Debone_C_UpdatePositionAndIK::CallFunc_GetSocketTransform_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_UpdatePositionAndIK, CallFunc_GetSocketTransform_ReturnValue_3) == 0x000290, "Member 'Ability_Debone_C_UpdatePositionAndIK::CallFunc_GetSocketTransform_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_UpdatePositionAndIK, CallFunc_MakeRelativeTransform_ReturnValue_2) == 0x0002C0, "Member 'Ability_Debone_C_UpdatePositionAndIK::CallFunc_MakeRelativeTransform_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_UpdatePositionAndIK, CallFunc_MakeRelativeTransform_ReturnValue_3) == 0x0002F0, "Member 'Ability_Debone_C_UpdatePositionAndIK::CallFunc_MakeRelativeTransform_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_UpdatePositionAndIK, CallFunc_GetSocketTransform_ReturnValue_4) == 0x000320, "Member 'Ability_Debone_C_UpdatePositionAndIK::CallFunc_GetSocketTransform_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_UpdatePositionAndIK, CallFunc_MakeRelativeTransform_ReturnValue_4) == 0x000350, "Member 'Ability_Debone_C_UpdatePositionAndIK::CallFunc_MakeRelativeTransform_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_UpdatePositionAndIK, CallFunc_GetOwnerActor_ReturnValue_2) == 0x000380, "Member 'Ability_Debone_C_UpdatePositionAndIK::CallFunc_GetOwnerActor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_UpdatePositionAndIK, CallFunc_K2_GetRootComponent_ReturnValue) == 0x000388, "Member 'Ability_Debone_C_UpdatePositionAndIK::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_UpdatePositionAndIK, CallFunc_IsValid_ReturnValue) == 0x000390, "Member 'Ability_Debone_C_UpdatePositionAndIK::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_UpdatePositionAndIK, CallFunc_GetRelativeTransform_ReturnValue) == 0x0003A0, "Member 'Ability_Debone_C_UpdatePositionAndIK::CallFunc_GetRelativeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_UpdatePositionAndIK, CallFunc_BreakTransform_Location) == 0x0003D0, "Member 'Ability_Debone_C_UpdatePositionAndIK::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_UpdatePositionAndIK, CallFunc_BreakTransform_Rotation) == 0x0003DC, "Member 'Ability_Debone_C_UpdatePositionAndIK::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_UpdatePositionAndIK, CallFunc_BreakTransform_Scale) == 0x0003E8, "Member 'Ability_Debone_C_UpdatePositionAndIK::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_UpdatePositionAndIK, CallFunc_MakeTransform_ReturnValue_2) == 0x000400, "Member 'Ability_Debone_C_UpdatePositionAndIK::CallFunc_MakeTransform_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_UpdatePositionAndIK, CallFunc_IsValid_ReturnValue_1) == 0x000430, "Member 'Ability_Debone_C_UpdatePositionAndIK::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_UpdatePositionAndIK, CallFunc_NearlyEqual_TransformTransform_ReturnValue) == 0x000431, "Member 'Ability_Debone_C_UpdatePositionAndIK::CallFunc_NearlyEqual_TransformTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_UpdatePositionAndIK, CallFunc_RFixedTurn_ReturnValue) == 0x000434, "Member 'Ability_Debone_C_UpdatePositionAndIK::CallFunc_RFixedTurn_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_UpdatePositionAndIK, CallFunc_VInterpTo_Constant_ReturnValue) == 0x000440, "Member 'Ability_Debone_C_UpdatePositionAndIK::CallFunc_VInterpTo_Constant_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_UpdatePositionAndIK, CallFunc_K2_SetActorRelativeRotation_SweepHitResult) == 0x00044C, "Member 'Ability_Debone_C_UpdatePositionAndIK::CallFunc_K2_SetActorRelativeRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_UpdatePositionAndIK, CallFunc_K2_SetActorRelativeLocation_SweepHitResult) == 0x0004E8, "Member 'Ability_Debone_C_UpdatePositionAndIK::CallFunc_K2_SetActorRelativeLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_UpdatePositionAndIK, CallFunc_RFixedTurn_InDeltaRate_ImplicitCast) == 0x000584, "Member 'Ability_Debone_C_UpdatePositionAndIK::CallFunc_RFixedTurn_InDeltaRate_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_UpdatePositionAndIK, CallFunc_VInterpTo_Constant_InterpSpeed_ImplicitCast) == 0x000588, "Member 'Ability_Debone_C_UpdatePositionAndIK::CallFunc_VInterpTo_Constant_InterpSpeed_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_UpdatePositionAndIK, CallFunc_VInterpTo_Constant_DeltaTime_ImplicitCast) == 0x00058C, "Member 'Ability_Debone_C_UpdatePositionAndIK::CallFunc_VInterpTo_Constant_DeltaTime_ImplicitCast' has a wrong offset!");

// Function Ability_Debone.Ability_Debone_C.UpdateStamina
// 0x00A0 (0x00A0 - 0x0000)
struct Ability_Debone_C_UpdateStamina final
{
public:
	double                                        DeltaSeconds;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bRunOutStamina;                                    // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        LocalEndureRatio;                                  // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        LocalModifier;                                     // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEnduring_bEnduring;                     // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetHangOnCount_ReturnValue;               // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEnduring_bEnduring_1;                   // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B[0x5];                                       // 0x004B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwnerActor_ReturnValue;                // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6A[0x6];                                       // 0x006A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue;                         // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ability_Debone_C_UpdateStamina) == 0x000008, "Wrong alignment on Ability_Debone_C_UpdateStamina");
static_assert(sizeof(Ability_Debone_C_UpdateStamina) == 0x0000A0, "Wrong size on Ability_Debone_C_UpdateStamina");
static_assert(offsetof(Ability_Debone_C_UpdateStamina, DeltaSeconds) == 0x000000, "Member 'Ability_Debone_C_UpdateStamina::DeltaSeconds' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_UpdateStamina, bRunOutStamina) == 0x000008, "Member 'Ability_Debone_C_UpdateStamina::bRunOutStamina' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_UpdateStamina, LocalEndureRatio) == 0x000010, "Member 'Ability_Debone_C_UpdateStamina::LocalEndureRatio' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_UpdateStamina, LocalModifier) == 0x000018, "Member 'Ability_Debone_C_UpdateStamina::LocalModifier' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_UpdateStamina, CallFunc_IsEnduring_bEnduring) == 0x000020, "Member 'Ability_Debone_C_UpdateStamina::CallFunc_IsEnduring_bEnduring' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_UpdateStamina, CallFunc_GetHangOnCount_ReturnValue) == 0x000024, "Member 'Ability_Debone_C_UpdateStamina::CallFunc_GetHangOnCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_UpdateStamina, CallFunc_IsEnduring_bEnduring_1) == 0x000028, "Member 'Ability_Debone_C_UpdateStamina::CallFunc_IsEnduring_bEnduring_1' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_UpdateStamina, CallFunc_Subtract_IntInt_ReturnValue) == 0x00002C, "Member 'Ability_Debone_C_UpdateStamina::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_UpdateStamina, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000030, "Member 'Ability_Debone_C_UpdateStamina::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_UpdateStamina, CallFunc_IsValid_ReturnValue) == 0x000038, "Member 'Ability_Debone_C_UpdateStamina::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_UpdateStamina, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000040, "Member 'Ability_Debone_C_UpdateStamina::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_UpdateStamina, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000048, "Member 'Ability_Debone_C_UpdateStamina::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_UpdateStamina, CallFunc_Not_PreBool_ReturnValue) == 0x000049, "Member 'Ability_Debone_C_UpdateStamina::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_UpdateStamina, CallFunc_BooleanAND_ReturnValue) == 0x00004A, "Member 'Ability_Debone_C_UpdateStamina::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_UpdateStamina, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000050, "Member 'Ability_Debone_C_UpdateStamina::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_UpdateStamina, CallFunc_BooleanAND_ReturnValue_1) == 0x000058, "Member 'Ability_Debone_C_UpdateStamina::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_UpdateStamina, CallFunc_GetOwnerActor_ReturnValue) == 0x000060, "Member 'Ability_Debone_C_UpdateStamina::CallFunc_GetOwnerActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_UpdateStamina, CallFunc_IsValid_ReturnValue_1) == 0x000068, "Member 'Ability_Debone_C_UpdateStamina::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_UpdateStamina, CallFunc_HasAuthority_ReturnValue) == 0x000069, "Member 'Ability_Debone_C_UpdateStamina::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_UpdateStamina, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000070, "Member 'Ability_Debone_C_UpdateStamina::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_UpdateStamina, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000078, "Member 'Ability_Debone_C_UpdateStamina::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_UpdateStamina, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000080, "Member 'Ability_Debone_C_UpdateStamina::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_UpdateStamina, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000088, "Member 'Ability_Debone_C_UpdateStamina::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_UpdateStamina, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000090, "Member 'Ability_Debone_C_UpdateStamina::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_UpdateStamina, CallFunc_FMax_ReturnValue) == 0x000098, "Member 'Ability_Debone_C_UpdateStamina::CallFunc_FMax_ReturnValue' has a wrong offset!");

// Function Ability_Debone.Ability_Debone_C.GetAllCameras
// 0x0020 (0x0020 - 0x0000)
struct Ability_Debone_C_GetAllCameras final
{
public:
	TArray<class UClass*>                         OutCameraModifiers;                                // 0x0000(0x0010)(Parm, OutParm)
	TArray<class UClass*>                         K2Node_MakeArray_Array;                            // 0x0010(0x0010)(ReferenceParm)
};
static_assert(alignof(Ability_Debone_C_GetAllCameras) == 0x000008, "Wrong alignment on Ability_Debone_C_GetAllCameras");
static_assert(sizeof(Ability_Debone_C_GetAllCameras) == 0x000020, "Wrong size on Ability_Debone_C_GetAllCameras");
static_assert(offsetof(Ability_Debone_C_GetAllCameras, OutCameraModifiers) == 0x000000, "Member 'Ability_Debone_C_GetAllCameras::OutCameraModifiers' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_GetAllCameras, K2Node_MakeArray_Array) == 0x000010, "Member 'Ability_Debone_C_GetAllCameras::K2Node_MakeArray_Array' has a wrong offset!");

// Function Ability_Debone.Ability_Debone_C.IsEnduring
// 0x0003 (0x0003 - 0x0000)
struct Ability_Debone_C_IsEnduring final
{
public:
	bool                                          bEnduring;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ability_Debone_C_IsEnduring) == 0x000001, "Wrong alignment on Ability_Debone_C_IsEnduring");
static_assert(sizeof(Ability_Debone_C_IsEnduring) == 0x000003, "Wrong size on Ability_Debone_C_IsEnduring");
static_assert(offsetof(Ability_Debone_C_IsEnduring, bEnduring) == 0x000000, "Member 'Ability_Debone_C_IsEnduring::bEnduring' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_IsEnduring, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'Ability_Debone_C_IsEnduring::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_Debone_C_IsEnduring, CallFunc_BooleanAND_ReturnValue) == 0x000002, "Member 'Ability_Debone_C_IsEnduring::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

}

