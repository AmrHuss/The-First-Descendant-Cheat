#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Ability_ElementalDamage

#include "Basic.hpp"

#include "M1_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function Ability_ElementalDamage.Ability_ElementalDamage_C.AbilityEvent_HitTarget
// 0x0138 (0x0138 - 0x0000)
struct Ability_ElementalDamage_C_AbilityEvent_HitTarget final
{
public:
	struct FM1CalcDamageInfo                      DamageInfo;                                        // 0x0000(0x0138)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(Ability_ElementalDamage_C_AbilityEvent_HitTarget) == 0x000008, "Wrong alignment on Ability_ElementalDamage_C_AbilityEvent_HitTarget");
static_assert(sizeof(Ability_ElementalDamage_C_AbilityEvent_HitTarget) == 0x000138, "Wrong size on Ability_ElementalDamage_C_AbilityEvent_HitTarget");
static_assert(offsetof(Ability_ElementalDamage_C_AbilityEvent_HitTarget, DamageInfo) == 0x000000, "Member 'Ability_ElementalDamage_C_AbilityEvent_HitTarget::DamageInfo' has a wrong offset!");

// Function Ability_ElementalDamage.Ability_ElementalDamage_C.ExecuteUbergraph_Ability_ElementalDamage
// 0x0470 (0x0470 - 0x0000)
struct Ability_ElementalDamage_C_ExecuteUbergraph_Ability_ElementalDamage final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FM1CalcDamageInfo                      Temp_struct_Variable;                              // 0x0008(0x0138)(ContainsInstancedReference)
	class UM1AbilityTask_WaitDamageEvent*         CallFunc_WaitGiveDamageEvent_ReturnValue;          // 0x0140(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_149[0x7];                                      // 0x0149(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FM1CalcDamageInfo                      K2Node_CustomEvent_DamageInfo;                     // 0x0150(0x0138)(ConstParm, ContainsInstancedReference)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0288(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x028C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x028D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x028E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_28F[0x1];                                      // 0x028F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0290(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0294(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0298(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x02A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x02B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x02BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x02C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x02D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x02D8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x02E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x02E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x02F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x02F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x02F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x02FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0308(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_314[0x4];                                      // 0x0314(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FM1CalcDamageInfo                      K2Node_CustomEvent_DamageInfo_1;                   // 0x0318(0x0138)(ConstParm, ContainsInstancedReference)
	TScriptInterface<class IM1AbilityBase>        CallFunc_InvokeDotDamageStatusEffect_InAbility_CastInput; // 0x0450(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(struct FM1CalcDamageInfo& DamageInfo)> K2Node_CreateDelegate_OutputDelegate;              // 0x0460(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ability_ElementalDamage_C_ExecuteUbergraph_Ability_ElementalDamage) == 0x000008, "Wrong alignment on Ability_ElementalDamage_C_ExecuteUbergraph_Ability_ElementalDamage");
static_assert(sizeof(Ability_ElementalDamage_C_ExecuteUbergraph_Ability_ElementalDamage) == 0x000470, "Wrong size on Ability_ElementalDamage_C_ExecuteUbergraph_Ability_ElementalDamage");
static_assert(offsetof(Ability_ElementalDamage_C_ExecuteUbergraph_Ability_ElementalDamage, EntryPoint) == 0x000000, "Member 'Ability_ElementalDamage_C_ExecuteUbergraph_Ability_ElementalDamage::EntryPoint' has a wrong offset!");
static_assert(offsetof(Ability_ElementalDamage_C_ExecuteUbergraph_Ability_ElementalDamage, Temp_struct_Variable) == 0x000008, "Member 'Ability_ElementalDamage_C_ExecuteUbergraph_Ability_ElementalDamage::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(Ability_ElementalDamage_C_ExecuteUbergraph_Ability_ElementalDamage, CallFunc_WaitGiveDamageEvent_ReturnValue) == 0x000140, "Member 'Ability_ElementalDamage_C_ExecuteUbergraph_Ability_ElementalDamage::CallFunc_WaitGiveDamageEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_ElementalDamage_C_ExecuteUbergraph_Ability_ElementalDamage, CallFunc_IsValid_ReturnValue) == 0x000148, "Member 'Ability_ElementalDamage_C_ExecuteUbergraph_Ability_ElementalDamage::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_ElementalDamage_C_ExecuteUbergraph_Ability_ElementalDamage, K2Node_CustomEvent_DamageInfo) == 0x000150, "Member 'Ability_ElementalDamage_C_ExecuteUbergraph_Ability_ElementalDamage::K2Node_CustomEvent_DamageInfo' has a wrong offset!");
static_assert(offsetof(Ability_ElementalDamage_C_ExecuteUbergraph_Ability_ElementalDamage, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000288, "Member 'Ability_ElementalDamage_C_ExecuteUbergraph_Ability_ElementalDamage::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_ElementalDamage_C_ExecuteUbergraph_Ability_ElementalDamage, K2Node_SwitchEnum_CmpSuccess) == 0x00028C, "Member 'Ability_ElementalDamage_C_ExecuteUbergraph_Ability_ElementalDamage::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Ability_ElementalDamage_C_ExecuteUbergraph_Ability_ElementalDamage, CallFunc_BreakHitResult_bBlockingHit) == 0x00028D, "Member 'Ability_ElementalDamage_C_ExecuteUbergraph_Ability_ElementalDamage::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(Ability_ElementalDamage_C_ExecuteUbergraph_Ability_ElementalDamage, CallFunc_BreakHitResult_bInitialOverlap) == 0x00028E, "Member 'Ability_ElementalDamage_C_ExecuteUbergraph_Ability_ElementalDamage::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(Ability_ElementalDamage_C_ExecuteUbergraph_Ability_ElementalDamage, CallFunc_BreakHitResult_Time) == 0x000290, "Member 'Ability_ElementalDamage_C_ExecuteUbergraph_Ability_ElementalDamage::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(Ability_ElementalDamage_C_ExecuteUbergraph_Ability_ElementalDamage, CallFunc_BreakHitResult_Distance) == 0x000294, "Member 'Ability_ElementalDamage_C_ExecuteUbergraph_Ability_ElementalDamage::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(Ability_ElementalDamage_C_ExecuteUbergraph_Ability_ElementalDamage, CallFunc_BreakHitResult_Location) == 0x000298, "Member 'Ability_ElementalDamage_C_ExecuteUbergraph_Ability_ElementalDamage::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(Ability_ElementalDamage_C_ExecuteUbergraph_Ability_ElementalDamage, CallFunc_BreakHitResult_ImpactPoint) == 0x0002A4, "Member 'Ability_ElementalDamage_C_ExecuteUbergraph_Ability_ElementalDamage::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(Ability_ElementalDamage_C_ExecuteUbergraph_Ability_ElementalDamage, CallFunc_BreakHitResult_Normal) == 0x0002B0, "Member 'Ability_ElementalDamage_C_ExecuteUbergraph_Ability_ElementalDamage::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(Ability_ElementalDamage_C_ExecuteUbergraph_Ability_ElementalDamage, CallFunc_BreakHitResult_ImpactNormal) == 0x0002BC, "Member 'Ability_ElementalDamage_C_ExecuteUbergraph_Ability_ElementalDamage::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(Ability_ElementalDamage_C_ExecuteUbergraph_Ability_ElementalDamage, CallFunc_BreakHitResult_PhysMat) == 0x0002C8, "Member 'Ability_ElementalDamage_C_ExecuteUbergraph_Ability_ElementalDamage::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(Ability_ElementalDamage_C_ExecuteUbergraph_Ability_ElementalDamage, CallFunc_BreakHitResult_HitActor) == 0x0002D0, "Member 'Ability_ElementalDamage_C_ExecuteUbergraph_Ability_ElementalDamage::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(Ability_ElementalDamage_C_ExecuteUbergraph_Ability_ElementalDamage, CallFunc_BreakHitResult_HitComponent) == 0x0002D8, "Member 'Ability_ElementalDamage_C_ExecuteUbergraph_Ability_ElementalDamage::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(Ability_ElementalDamage_C_ExecuteUbergraph_Ability_ElementalDamage, CallFunc_BreakHitResult_HitBoneName) == 0x0002E0, "Member 'Ability_ElementalDamage_C_ExecuteUbergraph_Ability_ElementalDamage::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(Ability_ElementalDamage_C_ExecuteUbergraph_Ability_ElementalDamage, CallFunc_BreakHitResult_BoneName) == 0x0002E8, "Member 'Ability_ElementalDamage_C_ExecuteUbergraph_Ability_ElementalDamage::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(Ability_ElementalDamage_C_ExecuteUbergraph_Ability_ElementalDamage, CallFunc_BreakHitResult_HitItem) == 0x0002F0, "Member 'Ability_ElementalDamage_C_ExecuteUbergraph_Ability_ElementalDamage::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(Ability_ElementalDamage_C_ExecuteUbergraph_Ability_ElementalDamage, CallFunc_BreakHitResult_ElementIndex) == 0x0002F4, "Member 'Ability_ElementalDamage_C_ExecuteUbergraph_Ability_ElementalDamage::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(Ability_ElementalDamage_C_ExecuteUbergraph_Ability_ElementalDamage, CallFunc_BreakHitResult_FaceIndex) == 0x0002F8, "Member 'Ability_ElementalDamage_C_ExecuteUbergraph_Ability_ElementalDamage::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(Ability_ElementalDamage_C_ExecuteUbergraph_Ability_ElementalDamage, CallFunc_BreakHitResult_TraceStart) == 0x0002FC, "Member 'Ability_ElementalDamage_C_ExecuteUbergraph_Ability_ElementalDamage::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(Ability_ElementalDamage_C_ExecuteUbergraph_Ability_ElementalDamage, CallFunc_BreakHitResult_TraceEnd) == 0x000308, "Member 'Ability_ElementalDamage_C_ExecuteUbergraph_Ability_ElementalDamage::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(Ability_ElementalDamage_C_ExecuteUbergraph_Ability_ElementalDamage, K2Node_CustomEvent_DamageInfo_1) == 0x000318, "Member 'Ability_ElementalDamage_C_ExecuteUbergraph_Ability_ElementalDamage::K2Node_CustomEvent_DamageInfo_1' has a wrong offset!");
static_assert(offsetof(Ability_ElementalDamage_C_ExecuteUbergraph_Ability_ElementalDamage, CallFunc_InvokeDotDamageStatusEffect_InAbility_CastInput) == 0x000450, "Member 'Ability_ElementalDamage_C_ExecuteUbergraph_Ability_ElementalDamage::CallFunc_InvokeDotDamageStatusEffect_InAbility_CastInput' has a wrong offset!");
static_assert(offsetof(Ability_ElementalDamage_C_ExecuteUbergraph_Ability_ElementalDamage, K2Node_CreateDelegate_OutputDelegate) == 0x000460, "Member 'Ability_ElementalDamage_C_ExecuteUbergraph_Ability_ElementalDamage::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");

// Function Ability_ElementalDamage.Ability_ElementalDamage_C.OnEvent_BE0F038B44F0F6C67C165ABA2878E835
// 0x0138 (0x0138 - 0x0000)
struct Ability_ElementalDamage_C_OnEvent_BE0F038B44F0F6C67C165ABA2878E835 final
{
public:
	struct FM1CalcDamageInfo                      DamageInfo;                                        // 0x0000(0x0138)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(Ability_ElementalDamage_C_OnEvent_BE0F038B44F0F6C67C165ABA2878E835) == 0x000008, "Wrong alignment on Ability_ElementalDamage_C_OnEvent_BE0F038B44F0F6C67C165ABA2878E835");
static_assert(sizeof(Ability_ElementalDamage_C_OnEvent_BE0F038B44F0F6C67C165ABA2878E835) == 0x000138, "Wrong size on Ability_ElementalDamage_C_OnEvent_BE0F038B44F0F6C67C165ABA2878E835");
static_assert(offsetof(Ability_ElementalDamage_C_OnEvent_BE0F038B44F0F6C67C165ABA2878E835, DamageInfo) == 0x000000, "Member 'Ability_ElementalDamage_C_OnEvent_BE0F038B44F0F6C67C165ABA2878E835::DamageInfo' has a wrong offset!");

}

