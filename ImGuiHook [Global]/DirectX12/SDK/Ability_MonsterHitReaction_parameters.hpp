#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Ability_MonsterHitReaction

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "M1_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function Ability_MonsterHitReaction.Ability_MonsterHitReaction_C.ApplyHitReaction
// 0x03E0 (0x03E0 - 0x0000)
struct Ability_MonsterHitReaction_C_ApplyHitReaction final
{
public:
	struct FM1CalcDamageInfo                      InDamageInfo;                                      // 0x0000(0x0138)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference)
	struct FM1CalcDamageInfo                      DamageInfo;                                        // 0x0138(0x0138)(Edit, BlueprintVisible, ContainsInstancedReference)
	struct FVector                                TargetVectorForCheckFront;                         // 0x0270(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetDamageDirection_ReturnValue;           // 0x027C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_ScaledIntToFloat_ReturnValue;        // 0x0288(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x028C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x028D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_28E[0x2];                                      // 0x028E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0290(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0294(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0298(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x02A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x02B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x02BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x02C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x02D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x02D8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x02E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x02E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x02F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x02F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x02F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x02FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0308(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0314(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FM1NormalMonsterHitReactionData        CallFunc_FindConfigDataByBoneName_FoundData;       // 0x0320(0x0058)()
	double                                        CallFunc_Dot_VectorVector_ReturnValue;             // 0x0378(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0380(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_381[0x7];                                      // 0x0381(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FM1NormalMonsterHitReactionData        K2Node_SetFieldsInStruct_StructOut;                // 0x0388(0x0058)()
};
static_assert(alignof(Ability_MonsterHitReaction_C_ApplyHitReaction) == 0x000008, "Wrong alignment on Ability_MonsterHitReaction_C_ApplyHitReaction");
static_assert(sizeof(Ability_MonsterHitReaction_C_ApplyHitReaction) == 0x0003E0, "Wrong size on Ability_MonsterHitReaction_C_ApplyHitReaction");
static_assert(offsetof(Ability_MonsterHitReaction_C_ApplyHitReaction, InDamageInfo) == 0x000000, "Member 'Ability_MonsterHitReaction_C_ApplyHitReaction::InDamageInfo' has a wrong offset!");
static_assert(offsetof(Ability_MonsterHitReaction_C_ApplyHitReaction, DamageInfo) == 0x000138, "Member 'Ability_MonsterHitReaction_C_ApplyHitReaction::DamageInfo' has a wrong offset!");
static_assert(offsetof(Ability_MonsterHitReaction_C_ApplyHitReaction, TargetVectorForCheckFront) == 0x000270, "Member 'Ability_MonsterHitReaction_C_ApplyHitReaction::TargetVectorForCheckFront' has a wrong offset!");
static_assert(offsetof(Ability_MonsterHitReaction_C_ApplyHitReaction, CallFunc_GetDamageDirection_ReturnValue) == 0x00027C, "Member 'Ability_MonsterHitReaction_C_ApplyHitReaction::CallFunc_GetDamageDirection_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_MonsterHitReaction_C_ApplyHitReaction, CallFunc_Conv_ScaledIntToFloat_ReturnValue) == 0x000288, "Member 'Ability_MonsterHitReaction_C_ApplyHitReaction::CallFunc_Conv_ScaledIntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_MonsterHitReaction_C_ApplyHitReaction, CallFunc_BreakHitResult_bBlockingHit) == 0x00028C, "Member 'Ability_MonsterHitReaction_C_ApplyHitReaction::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(Ability_MonsterHitReaction_C_ApplyHitReaction, CallFunc_BreakHitResult_bInitialOverlap) == 0x00028D, "Member 'Ability_MonsterHitReaction_C_ApplyHitReaction::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(Ability_MonsterHitReaction_C_ApplyHitReaction, CallFunc_BreakHitResult_Time) == 0x000290, "Member 'Ability_MonsterHitReaction_C_ApplyHitReaction::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(Ability_MonsterHitReaction_C_ApplyHitReaction, CallFunc_BreakHitResult_Distance) == 0x000294, "Member 'Ability_MonsterHitReaction_C_ApplyHitReaction::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(Ability_MonsterHitReaction_C_ApplyHitReaction, CallFunc_BreakHitResult_Location) == 0x000298, "Member 'Ability_MonsterHitReaction_C_ApplyHitReaction::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(Ability_MonsterHitReaction_C_ApplyHitReaction, CallFunc_BreakHitResult_ImpactPoint) == 0x0002A4, "Member 'Ability_MonsterHitReaction_C_ApplyHitReaction::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(Ability_MonsterHitReaction_C_ApplyHitReaction, CallFunc_BreakHitResult_Normal) == 0x0002B0, "Member 'Ability_MonsterHitReaction_C_ApplyHitReaction::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(Ability_MonsterHitReaction_C_ApplyHitReaction, CallFunc_BreakHitResult_ImpactNormal) == 0x0002BC, "Member 'Ability_MonsterHitReaction_C_ApplyHitReaction::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(Ability_MonsterHitReaction_C_ApplyHitReaction, CallFunc_BreakHitResult_PhysMat) == 0x0002C8, "Member 'Ability_MonsterHitReaction_C_ApplyHitReaction::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(Ability_MonsterHitReaction_C_ApplyHitReaction, CallFunc_BreakHitResult_HitActor) == 0x0002D0, "Member 'Ability_MonsterHitReaction_C_ApplyHitReaction::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(Ability_MonsterHitReaction_C_ApplyHitReaction, CallFunc_BreakHitResult_HitComponent) == 0x0002D8, "Member 'Ability_MonsterHitReaction_C_ApplyHitReaction::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(Ability_MonsterHitReaction_C_ApplyHitReaction, CallFunc_BreakHitResult_HitBoneName) == 0x0002E0, "Member 'Ability_MonsterHitReaction_C_ApplyHitReaction::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(Ability_MonsterHitReaction_C_ApplyHitReaction, CallFunc_BreakHitResult_BoneName) == 0x0002E8, "Member 'Ability_MonsterHitReaction_C_ApplyHitReaction::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(Ability_MonsterHitReaction_C_ApplyHitReaction, CallFunc_BreakHitResult_HitItem) == 0x0002F0, "Member 'Ability_MonsterHitReaction_C_ApplyHitReaction::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(Ability_MonsterHitReaction_C_ApplyHitReaction, CallFunc_BreakHitResult_ElementIndex) == 0x0002F4, "Member 'Ability_MonsterHitReaction_C_ApplyHitReaction::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(Ability_MonsterHitReaction_C_ApplyHitReaction, CallFunc_BreakHitResult_FaceIndex) == 0x0002F8, "Member 'Ability_MonsterHitReaction_C_ApplyHitReaction::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(Ability_MonsterHitReaction_C_ApplyHitReaction, CallFunc_BreakHitResult_TraceStart) == 0x0002FC, "Member 'Ability_MonsterHitReaction_C_ApplyHitReaction::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(Ability_MonsterHitReaction_C_ApplyHitReaction, CallFunc_BreakHitResult_TraceEnd) == 0x000308, "Member 'Ability_MonsterHitReaction_C_ApplyHitReaction::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(Ability_MonsterHitReaction_C_ApplyHitReaction, CallFunc_GetActorForwardVector_ReturnValue) == 0x000314, "Member 'Ability_MonsterHitReaction_C_ApplyHitReaction::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_MonsterHitReaction_C_ApplyHitReaction, CallFunc_FindConfigDataByBoneName_FoundData) == 0x000320, "Member 'Ability_MonsterHitReaction_C_ApplyHitReaction::CallFunc_FindConfigDataByBoneName_FoundData' has a wrong offset!");
static_assert(offsetof(Ability_MonsterHitReaction_C_ApplyHitReaction, CallFunc_Dot_VectorVector_ReturnValue) == 0x000378, "Member 'Ability_MonsterHitReaction_C_ApplyHitReaction::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_MonsterHitReaction_C_ApplyHitReaction, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000380, "Member 'Ability_MonsterHitReaction_C_ApplyHitReaction::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_MonsterHitReaction_C_ApplyHitReaction, K2Node_SetFieldsInStruct_StructOut) == 0x000388, "Member 'Ability_MonsterHitReaction_C_ApplyHitReaction::K2Node_SetFieldsInStruct_StructOut' has a wrong offset!");

// Function Ability_MonsterHitReaction.Ability_MonsterHitReaction_C.ApplyHitReactionData
// 0x0010 (0x0010 - 0x0000)
struct Ability_MonsterHitReaction_C_ApplyHitReactionData final
{
public:
	bool                                          CallFunc_EqualEqual_BoolBool_ReturnValue;          // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3[0x1];                                        // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_FindConfigIndexByPartsName_ConfigIndex;   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ability_MonsterHitReaction_C_ApplyHitReactionData) == 0x000004, "Wrong alignment on Ability_MonsterHitReaction_C_ApplyHitReactionData");
static_assert(sizeof(Ability_MonsterHitReaction_C_ApplyHitReactionData) == 0x000010, "Wrong size on Ability_MonsterHitReaction_C_ApplyHitReactionData");
static_assert(offsetof(Ability_MonsterHitReaction_C_ApplyHitReactionData, CallFunc_EqualEqual_BoolBool_ReturnValue) == 0x000000, "Member 'Ability_MonsterHitReaction_C_ApplyHitReactionData::CallFunc_EqualEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_MonsterHitReaction_C_ApplyHitReactionData, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000001, "Member 'Ability_MonsterHitReaction_C_ApplyHitReactionData::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_MonsterHitReaction_C_ApplyHitReactionData, CallFunc_BooleanAND_ReturnValue) == 0x000002, "Member 'Ability_MonsterHitReaction_C_ApplyHitReactionData::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_MonsterHitReaction_C_ApplyHitReactionData, CallFunc_FindConfigIndexByPartsName_ConfigIndex) == 0x000004, "Member 'Ability_MonsterHitReaction_C_ApplyHitReactionData::CallFunc_FindConfigIndexByPartsName_ConfigIndex' has a wrong offset!");
static_assert(offsetof(Ability_MonsterHitReaction_C_ApplyHitReactionData, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000008, "Member 'Ability_MonsterHitReaction_C_ApplyHitReactionData::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_MonsterHitReaction_C_ApplyHitReactionData, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'Ability_MonsterHitReaction_C_ApplyHitReactionData::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function Ability_MonsterHitReaction.Ability_MonsterHitReaction_C.ApplyShake
// 0x0140 (0x0140 - 0x0000)
struct Ability_MonsterHitReaction_C_ApplyShake final
{
public:
	struct FM1CalcDamageInfo                      DamageInfo;                                        // 0x0000(0x0138)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_HasTag_ReturnValue;                       // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ability_MonsterHitReaction_C_ApplyShake) == 0x000008, "Wrong alignment on Ability_MonsterHitReaction_C_ApplyShake");
static_assert(sizeof(Ability_MonsterHitReaction_C_ApplyShake) == 0x000140, "Wrong size on Ability_MonsterHitReaction_C_ApplyShake");
static_assert(offsetof(Ability_MonsterHitReaction_C_ApplyShake, DamageInfo) == 0x000000, "Member 'Ability_MonsterHitReaction_C_ApplyShake::DamageInfo' has a wrong offset!");
static_assert(offsetof(Ability_MonsterHitReaction_C_ApplyShake, CallFunc_HasTag_ReturnValue) == 0x000138, "Member 'Ability_MonsterHitReaction_C_ApplyShake::CallFunc_HasTag_ReturnValue' has a wrong offset!");

// Function Ability_MonsterHitReaction.Ability_MonsterHitReaction_C.CheckCanHandleHitReaction
// 0x0158 (0x0158 - 0x0000)
struct Ability_MonsterHitReaction_C_CheckCanHandleHitReaction final
{
public:
	struct FGameplayTag                           InTag;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FM1CalcDamageInfo                      InDamageInfo;                                      // 0x0008(0x0138)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	bool                                          bCanHandle;                                        // 0x0140(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bInstigatorLocallyControlled;                      // 0x0141(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bResult;                                           // 0x0142(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_143[0x5];                                      // 0x0143(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  K2Node_DynamicCast_As_;                            // 0x0148(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasTag_ReturnValue;                       // 0x0151(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x0152(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_GameplayTag_ReturnValue;       // 0x0153(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ability_MonsterHitReaction_C_CheckCanHandleHitReaction) == 0x000008, "Wrong alignment on Ability_MonsterHitReaction_C_CheckCanHandleHitReaction");
static_assert(sizeof(Ability_MonsterHitReaction_C_CheckCanHandleHitReaction) == 0x000158, "Wrong size on Ability_MonsterHitReaction_C_CheckCanHandleHitReaction");
static_assert(offsetof(Ability_MonsterHitReaction_C_CheckCanHandleHitReaction, InTag) == 0x000000, "Member 'Ability_MonsterHitReaction_C_CheckCanHandleHitReaction::InTag' has a wrong offset!");
static_assert(offsetof(Ability_MonsterHitReaction_C_CheckCanHandleHitReaction, InDamageInfo) == 0x000008, "Member 'Ability_MonsterHitReaction_C_CheckCanHandleHitReaction::InDamageInfo' has a wrong offset!");
static_assert(offsetof(Ability_MonsterHitReaction_C_CheckCanHandleHitReaction, bCanHandle) == 0x000140, "Member 'Ability_MonsterHitReaction_C_CheckCanHandleHitReaction::bCanHandle' has a wrong offset!");
static_assert(offsetof(Ability_MonsterHitReaction_C_CheckCanHandleHitReaction, bInstigatorLocallyControlled) == 0x000141, "Member 'Ability_MonsterHitReaction_C_CheckCanHandleHitReaction::bInstigatorLocallyControlled' has a wrong offset!");
static_assert(offsetof(Ability_MonsterHitReaction_C_CheckCanHandleHitReaction, bResult) == 0x000142, "Member 'Ability_MonsterHitReaction_C_CheckCanHandleHitReaction::bResult' has a wrong offset!");
static_assert(offsetof(Ability_MonsterHitReaction_C_CheckCanHandleHitReaction, K2Node_DynamicCast_As_) == 0x000148, "Member 'Ability_MonsterHitReaction_C_CheckCanHandleHitReaction::K2Node_DynamicCast_As_' has a wrong offset!");
static_assert(offsetof(Ability_MonsterHitReaction_C_CheckCanHandleHitReaction, K2Node_DynamicCast_bSuccess) == 0x000150, "Member 'Ability_MonsterHitReaction_C_CheckCanHandleHitReaction::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Ability_MonsterHitReaction_C_CheckCanHandleHitReaction, CallFunc_HasTag_ReturnValue) == 0x000151, "Member 'Ability_MonsterHitReaction_C_CheckCanHandleHitReaction::CallFunc_HasTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_MonsterHitReaction_C_CheckCanHandleHitReaction, CallFunc_IsLocallyControlled_ReturnValue) == 0x000152, "Member 'Ability_MonsterHitReaction_C_CheckCanHandleHitReaction::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_MonsterHitReaction_C_CheckCanHandleHitReaction, CallFunc_EqualEqual_GameplayTag_ReturnValue) == 0x000153, "Member 'Ability_MonsterHitReaction_C_CheckCanHandleHitReaction::CallFunc_EqualEqual_GameplayTag_ReturnValue' has a wrong offset!");

// Function Ability_MonsterHitReaction.Ability_MonsterHitReaction_C.ExecuteUbergraph_Ability_MonsterHitReaction
// 0x0140 (0x0140 - 0x0000)
struct Ability_MonsterHitReaction_C_ExecuteUbergraph_Ability_MonsterHitReaction final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FM1AbilityEvent                        Temp_struct_Variable;                              // 0x0008(0x0040)()
	class UM1AbilityTask_WaitAbilityEvent*        CallFunc_WaitAbilityEvent_ReturnValue;             // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0054(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UM1AbilityTask_WaitDelay*               CallFunc_WaitDelay_ReturnValue;                    // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_72[0x2];                                       // 0x0072(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0074(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_85[0x3];                                       // 0x0085(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_2;            // 0x0088(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwnerActor_ReturnValue;                // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FM1NormalMonsterHitReactionData> CallFunc_GetNormalMonsterHitReactionData_ReturnValue; // 0x00A8(0x0010)(ConstParm, ReferenceParm)
	struct FM1AbilityEvent                        K2Node_CustomEvent_Event;                          // 0x00B8(0x0040)(ConstParm)
	TDelegate<void(struct FM1AbilityEvent& Event)> K2Node_CreateDelegate_OutputDelegate_3;            // 0x00F8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetAnimLengthOfMaxDamagedParts_AnimLength; // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10C[0x4];                                      // 0x010C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UM1AbilityTask_WaitDelay*               CallFunc_WaitDelay_ReturnValue_1;                  // 0x0110(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0119(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11A[0x6];                                      // 0x011A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwnerActor_ReturnValue_1;              // 0x0120(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetAnimInstancePropertyAnimLength_ReturnValue; // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12C[0x4];                                      // 0x012C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UM1AbilityTask_WaitDelay*               CallFunc_WaitDelay_ReturnValue_2;                  // 0x0130(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ability_MonsterHitReaction_C_ExecuteUbergraph_Ability_MonsterHitReaction) == 0x000008, "Wrong alignment on Ability_MonsterHitReaction_C_ExecuteUbergraph_Ability_MonsterHitReaction");
static_assert(sizeof(Ability_MonsterHitReaction_C_ExecuteUbergraph_Ability_MonsterHitReaction) == 0x000140, "Wrong size on Ability_MonsterHitReaction_C_ExecuteUbergraph_Ability_MonsterHitReaction");
static_assert(offsetof(Ability_MonsterHitReaction_C_ExecuteUbergraph_Ability_MonsterHitReaction, EntryPoint) == 0x000000, "Member 'Ability_MonsterHitReaction_C_ExecuteUbergraph_Ability_MonsterHitReaction::EntryPoint' has a wrong offset!");
static_assert(offsetof(Ability_MonsterHitReaction_C_ExecuteUbergraph_Ability_MonsterHitReaction, Temp_struct_Variable) == 0x000008, "Member 'Ability_MonsterHitReaction_C_ExecuteUbergraph_Ability_MonsterHitReaction::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(Ability_MonsterHitReaction_C_ExecuteUbergraph_Ability_MonsterHitReaction, CallFunc_WaitAbilityEvent_ReturnValue) == 0x000048, "Member 'Ability_MonsterHitReaction_C_ExecuteUbergraph_Ability_MonsterHitReaction::CallFunc_WaitAbilityEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_MonsterHitReaction_C_ExecuteUbergraph_Ability_MonsterHitReaction, CallFunc_IsValid_ReturnValue) == 0x000050, "Member 'Ability_MonsterHitReaction_C_ExecuteUbergraph_Ability_MonsterHitReaction::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_MonsterHitReaction_C_ExecuteUbergraph_Ability_MonsterHitReaction, K2Node_CreateDelegate_OutputDelegate) == 0x000054, "Member 'Ability_MonsterHitReaction_C_ExecuteUbergraph_Ability_MonsterHitReaction::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Ability_MonsterHitReaction_C_ExecuteUbergraph_Ability_MonsterHitReaction, CallFunc_WaitDelay_ReturnValue) == 0x000068, "Member 'Ability_MonsterHitReaction_C_ExecuteUbergraph_Ability_MonsterHitReaction::CallFunc_WaitDelay_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_MonsterHitReaction_C_ExecuteUbergraph_Ability_MonsterHitReaction, CallFunc_IsValid_ReturnValue_1) == 0x000070, "Member 'Ability_MonsterHitReaction_C_ExecuteUbergraph_Ability_MonsterHitReaction::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ability_MonsterHitReaction_C_ExecuteUbergraph_Ability_MonsterHitReaction, CallFunc_IsValid_ReturnValue_2) == 0x000071, "Member 'Ability_MonsterHitReaction_C_ExecuteUbergraph_Ability_MonsterHitReaction::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ability_MonsterHitReaction_C_ExecuteUbergraph_Ability_MonsterHitReaction, K2Node_CreateDelegate_OutputDelegate_1) == 0x000074, "Member 'Ability_MonsterHitReaction_C_ExecuteUbergraph_Ability_MonsterHitReaction::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(Ability_MonsterHitReaction_C_ExecuteUbergraph_Ability_MonsterHitReaction, CallFunc_IsValid_ReturnValue_3) == 0x000084, "Member 'Ability_MonsterHitReaction_C_ExecuteUbergraph_Ability_MonsterHitReaction::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ability_MonsterHitReaction_C_ExecuteUbergraph_Ability_MonsterHitReaction, K2Node_CreateDelegate_OutputDelegate_2) == 0x000088, "Member 'Ability_MonsterHitReaction_C_ExecuteUbergraph_Ability_MonsterHitReaction::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(Ability_MonsterHitReaction_C_ExecuteUbergraph_Ability_MonsterHitReaction, CallFunc_GetOwnerActor_ReturnValue) == 0x000098, "Member 'Ability_MonsterHitReaction_C_ExecuteUbergraph_Ability_MonsterHitReaction::CallFunc_GetOwnerActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_MonsterHitReaction_C_ExecuteUbergraph_Ability_MonsterHitReaction, CallFunc_IsValid_ReturnValue_4) == 0x0000A0, "Member 'Ability_MonsterHitReaction_C_ExecuteUbergraph_Ability_MonsterHitReaction::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ability_MonsterHitReaction_C_ExecuteUbergraph_Ability_MonsterHitReaction, CallFunc_GetNormalMonsterHitReactionData_ReturnValue) == 0x0000A8, "Member 'Ability_MonsterHitReaction_C_ExecuteUbergraph_Ability_MonsterHitReaction::CallFunc_GetNormalMonsterHitReactionData_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_MonsterHitReaction_C_ExecuteUbergraph_Ability_MonsterHitReaction, K2Node_CustomEvent_Event) == 0x0000B8, "Member 'Ability_MonsterHitReaction_C_ExecuteUbergraph_Ability_MonsterHitReaction::K2Node_CustomEvent_Event' has a wrong offset!");
static_assert(offsetof(Ability_MonsterHitReaction_C_ExecuteUbergraph_Ability_MonsterHitReaction, K2Node_CreateDelegate_OutputDelegate_3) == 0x0000F8, "Member 'Ability_MonsterHitReaction_C_ExecuteUbergraph_Ability_MonsterHitReaction::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(Ability_MonsterHitReaction_C_ExecuteUbergraph_Ability_MonsterHitReaction, CallFunc_GetAnimLengthOfMaxDamagedParts_AnimLength) == 0x000108, "Member 'Ability_MonsterHitReaction_C_ExecuteUbergraph_Ability_MonsterHitReaction::CallFunc_GetAnimLengthOfMaxDamagedParts_AnimLength' has a wrong offset!");
static_assert(offsetof(Ability_MonsterHitReaction_C_ExecuteUbergraph_Ability_MonsterHitReaction, CallFunc_WaitDelay_ReturnValue_1) == 0x000110, "Member 'Ability_MonsterHitReaction_C_ExecuteUbergraph_Ability_MonsterHitReaction::CallFunc_WaitDelay_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ability_MonsterHitReaction_C_ExecuteUbergraph_Ability_MonsterHitReaction, CallFunc_IsValid_ReturnValue_5) == 0x000118, "Member 'Ability_MonsterHitReaction_C_ExecuteUbergraph_Ability_MonsterHitReaction::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ability_MonsterHitReaction_C_ExecuteUbergraph_Ability_MonsterHitReaction, CallFunc_IsDedicatedServer_ReturnValue) == 0x000119, "Member 'Ability_MonsterHitReaction_C_ExecuteUbergraph_Ability_MonsterHitReaction::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_MonsterHitReaction_C_ExecuteUbergraph_Ability_MonsterHitReaction, CallFunc_GetOwnerActor_ReturnValue_1) == 0x000120, "Member 'Ability_MonsterHitReaction_C_ExecuteUbergraph_Ability_MonsterHitReaction::CallFunc_GetOwnerActor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ability_MonsterHitReaction_C_ExecuteUbergraph_Ability_MonsterHitReaction, CallFunc_GetAnimInstancePropertyAnimLength_ReturnValue) == 0x000128, "Member 'Ability_MonsterHitReaction_C_ExecuteUbergraph_Ability_MonsterHitReaction::CallFunc_GetAnimInstancePropertyAnimLength_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_MonsterHitReaction_C_ExecuteUbergraph_Ability_MonsterHitReaction, CallFunc_WaitDelay_ReturnValue_2) == 0x000130, "Member 'Ability_MonsterHitReaction_C_ExecuteUbergraph_Ability_MonsterHitReaction::CallFunc_WaitDelay_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ability_MonsterHitReaction_C_ExecuteUbergraph_Ability_MonsterHitReaction, CallFunc_IsValid_ReturnValue_6) == 0x000138, "Member 'Ability_MonsterHitReaction_C_ExecuteUbergraph_Ability_MonsterHitReaction::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");

// Function Ability_MonsterHitReaction.Ability_MonsterHitReaction_C.FindConfigDataByBoneName
// 0x00D0 (0x00D0 - 0x0000)
struct Ability_MonsterHitReaction_C_FindConfigDataByBoneName final
{
public:
	class FName                                   InBoneName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FM1NormalMonsterHitReactionData        FoundData;                                         // 0x0008(0x0058)(Parm, OutParm)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FindConfigIndexByPartsName_ConfigIndex;   // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FM1NormalMonsterHitReactionData        CallFunc_Array_Get_Item;                           // 0x0070(0x0058)()
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00CD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00CE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00CF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ability_MonsterHitReaction_C_FindConfigDataByBoneName) == 0x000008, "Wrong alignment on Ability_MonsterHitReaction_C_FindConfigDataByBoneName");
static_assert(sizeof(Ability_MonsterHitReaction_C_FindConfigDataByBoneName) == 0x0000D0, "Wrong size on Ability_MonsterHitReaction_C_FindConfigDataByBoneName");
static_assert(offsetof(Ability_MonsterHitReaction_C_FindConfigDataByBoneName, InBoneName) == 0x000000, "Member 'Ability_MonsterHitReaction_C_FindConfigDataByBoneName::InBoneName' has a wrong offset!");
static_assert(offsetof(Ability_MonsterHitReaction_C_FindConfigDataByBoneName, FoundData) == 0x000008, "Member 'Ability_MonsterHitReaction_C_FindConfigDataByBoneName::FoundData' has a wrong offset!");
static_assert(offsetof(Ability_MonsterHitReaction_C_FindConfigDataByBoneName, Temp_int_Array_Index_Variable) == 0x000060, "Member 'Ability_MonsterHitReaction_C_FindConfigDataByBoneName::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Ability_MonsterHitReaction_C_FindConfigDataByBoneName, Temp_int_Loop_Counter_Variable) == 0x000064, "Member 'Ability_MonsterHitReaction_C_FindConfigDataByBoneName::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Ability_MonsterHitReaction_C_FindConfigDataByBoneName, CallFunc_Add_IntInt_ReturnValue) == 0x000068, "Member 'Ability_MonsterHitReaction_C_FindConfigDataByBoneName::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_MonsterHitReaction_C_FindConfigDataByBoneName, CallFunc_FindConfigIndexByPartsName_ConfigIndex) == 0x00006C, "Member 'Ability_MonsterHitReaction_C_FindConfigDataByBoneName::CallFunc_FindConfigIndexByPartsName_ConfigIndex' has a wrong offset!");
static_assert(offsetof(Ability_MonsterHitReaction_C_FindConfigDataByBoneName, CallFunc_Array_Get_Item) == 0x000070, "Member 'Ability_MonsterHitReaction_C_FindConfigDataByBoneName::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Ability_MonsterHitReaction_C_FindConfigDataByBoneName, CallFunc_Array_Length_ReturnValue) == 0x0000C8, "Member 'Ability_MonsterHitReaction_C_FindConfigDataByBoneName::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_MonsterHitReaction_C_FindConfigDataByBoneName, CallFunc_Array_Contains_ReturnValue) == 0x0000CC, "Member 'Ability_MonsterHitReaction_C_FindConfigDataByBoneName::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_MonsterHitReaction_C_FindConfigDataByBoneName, CallFunc_Less_IntInt_ReturnValue) == 0x0000CD, "Member 'Ability_MonsterHitReaction_C_FindConfigDataByBoneName::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_MonsterHitReaction_C_FindConfigDataByBoneName, CallFunc_Not_PreBool_ReturnValue) == 0x0000CE, "Member 'Ability_MonsterHitReaction_C_FindConfigDataByBoneName::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_MonsterHitReaction_C_FindConfigDataByBoneName, CallFunc_BooleanAND_ReturnValue) == 0x0000CF, "Member 'Ability_MonsterHitReaction_C_FindConfigDataByBoneName::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function Ability_MonsterHitReaction.Ability_MonsterHitReaction_C.FindConfigIndexByPartsName
// 0x0080 (0x0080 - 0x0000)
struct Ability_MonsterHitReaction_C_FindConfigIndexByPartsName final
{
public:
	class FName                                   PartsName;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ConfigIndex;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FindConfigIndexByPartsName_ConfigIndex;   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FM1NormalMonsterHitReactionData        CallFunc_Array_Get_Item;                           // 0x0020(0x0058)()
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x007A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x007B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ability_MonsterHitReaction_C_FindConfigIndexByPartsName) == 0x000008, "Wrong alignment on Ability_MonsterHitReaction_C_FindConfigIndexByPartsName");
static_assert(sizeof(Ability_MonsterHitReaction_C_FindConfigIndexByPartsName) == 0x000080, "Wrong size on Ability_MonsterHitReaction_C_FindConfigIndexByPartsName");
static_assert(offsetof(Ability_MonsterHitReaction_C_FindConfigIndexByPartsName, PartsName) == 0x000000, "Member 'Ability_MonsterHitReaction_C_FindConfigIndexByPartsName::PartsName' has a wrong offset!");
static_assert(offsetof(Ability_MonsterHitReaction_C_FindConfigIndexByPartsName, ConfigIndex) == 0x000008, "Member 'Ability_MonsterHitReaction_C_FindConfigIndexByPartsName::ConfigIndex' has a wrong offset!");
static_assert(offsetof(Ability_MonsterHitReaction_C_FindConfigIndexByPartsName, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'Ability_MonsterHitReaction_C_FindConfigIndexByPartsName::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Ability_MonsterHitReaction_C_FindConfigIndexByPartsName, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'Ability_MonsterHitReaction_C_FindConfigIndexByPartsName::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Ability_MonsterHitReaction_C_FindConfigIndexByPartsName, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'Ability_MonsterHitReaction_C_FindConfigIndexByPartsName::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_MonsterHitReaction_C_FindConfigIndexByPartsName, CallFunc_FindConfigIndexByPartsName_ConfigIndex) == 0x000018, "Member 'Ability_MonsterHitReaction_C_FindConfigIndexByPartsName::CallFunc_FindConfigIndexByPartsName_ConfigIndex' has a wrong offset!");
static_assert(offsetof(Ability_MonsterHitReaction_C_FindConfigIndexByPartsName, CallFunc_Array_Length_ReturnValue) == 0x00001C, "Member 'Ability_MonsterHitReaction_C_FindConfigIndexByPartsName::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_MonsterHitReaction_C_FindConfigIndexByPartsName, CallFunc_Array_Get_Item) == 0x000020, "Member 'Ability_MonsterHitReaction_C_FindConfigIndexByPartsName::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Ability_MonsterHitReaction_C_FindConfigIndexByPartsName, CallFunc_Less_IntInt_ReturnValue) == 0x000078, "Member 'Ability_MonsterHitReaction_C_FindConfigIndexByPartsName::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_MonsterHitReaction_C_FindConfigIndexByPartsName, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000079, "Member 'Ability_MonsterHitReaction_C_FindConfigIndexByPartsName::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_MonsterHitReaction_C_FindConfigIndexByPartsName, CallFunc_Not_PreBool_ReturnValue) == 0x00007A, "Member 'Ability_MonsterHitReaction_C_FindConfigIndexByPartsName::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_MonsterHitReaction_C_FindConfigIndexByPartsName, CallFunc_BooleanAND_ReturnValue) == 0x00007B, "Member 'Ability_MonsterHitReaction_C_FindConfigIndexByPartsName::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function Ability_MonsterHitReaction.Ability_MonsterHitReaction_C.GetAnimLengthOfMaxDamagedParts
// 0x0010 (0x0010 - 0x0000)
struct Ability_MonsterHitReaction_C_GetAnimLengthOfMaxDamagedParts final
{
public:
	float                                         AnimLength;                                        // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Result;                                            // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPlayLength_ReturnValue;                // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPlayLength_ReturnValue_1;              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ability_MonsterHitReaction_C_GetAnimLengthOfMaxDamagedParts) == 0x000004, "Wrong alignment on Ability_MonsterHitReaction_C_GetAnimLengthOfMaxDamagedParts");
static_assert(sizeof(Ability_MonsterHitReaction_C_GetAnimLengthOfMaxDamagedParts) == 0x000010, "Wrong size on Ability_MonsterHitReaction_C_GetAnimLengthOfMaxDamagedParts");
static_assert(offsetof(Ability_MonsterHitReaction_C_GetAnimLengthOfMaxDamagedParts, AnimLength) == 0x000000, "Member 'Ability_MonsterHitReaction_C_GetAnimLengthOfMaxDamagedParts::AnimLength' has a wrong offset!");
static_assert(offsetof(Ability_MonsterHitReaction_C_GetAnimLengthOfMaxDamagedParts, Result) == 0x000004, "Member 'Ability_MonsterHitReaction_C_GetAnimLengthOfMaxDamagedParts::Result' has a wrong offset!");
static_assert(offsetof(Ability_MonsterHitReaction_C_GetAnimLengthOfMaxDamagedParts, CallFunc_GetPlayLength_ReturnValue) == 0x000008, "Member 'Ability_MonsterHitReaction_C_GetAnimLengthOfMaxDamagedParts::CallFunc_GetPlayLength_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_MonsterHitReaction_C_GetAnimLengthOfMaxDamagedParts, CallFunc_GetPlayLength_ReturnValue_1) == 0x00000C, "Member 'Ability_MonsterHitReaction_C_GetAnimLengthOfMaxDamagedParts::CallFunc_GetPlayLength_ReturnValue_1' has a wrong offset!");

// Function Ability_MonsterHitReaction.Ability_MonsterHitReaction_C.HandleHitReaction
// 0x02F0 (0x02F0 - 0x0000)
struct Ability_MonsterHitReaction_C_HandleHitReaction final
{
public:
	struct FM1AbilityEvent                        InAbilityEvent;                                    // 0x0000(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm)
	double                                        CurrentTime;                                       // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FM1CalcDamageInfo                      DamageInfo;                                        // 0x0048(0x0138)(Edit, BlueprintVisible, ContainsInstancedReference)
	bool                                          CallFunc_TryFillHitReactionData_bSuccess;          // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_181[0x7];                                      // 0x0181(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FM1AbilityEventData_DamageInfo         CallFunc_GetAbilityEventData_DamageInfo_ReturnValue; // 0x0188(0x0140)(ContainsInstancedReference)
	double                                        CallFunc_GetTimeSeconds_ReturnValue;               // 0x02C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasTag_ReturnValue;                       // 0x02D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckCanHandleHitReaction_bCanHandle;     // 0x02D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D2[0x6];                                      // 0x02D2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x02D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwnerActor_ReturnValue;                // 0x02E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x02E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsActiveTag_ReturnValue;                  // 0x02E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x02EA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ability_MonsterHitReaction_C_HandleHitReaction) == 0x000008, "Wrong alignment on Ability_MonsterHitReaction_C_HandleHitReaction");
static_assert(sizeof(Ability_MonsterHitReaction_C_HandleHitReaction) == 0x0002F0, "Wrong size on Ability_MonsterHitReaction_C_HandleHitReaction");
static_assert(offsetof(Ability_MonsterHitReaction_C_HandleHitReaction, InAbilityEvent) == 0x000000, "Member 'Ability_MonsterHitReaction_C_HandleHitReaction::InAbilityEvent' has a wrong offset!");
static_assert(offsetof(Ability_MonsterHitReaction_C_HandleHitReaction, CurrentTime) == 0x000040, "Member 'Ability_MonsterHitReaction_C_HandleHitReaction::CurrentTime' has a wrong offset!");
static_assert(offsetof(Ability_MonsterHitReaction_C_HandleHitReaction, DamageInfo) == 0x000048, "Member 'Ability_MonsterHitReaction_C_HandleHitReaction::DamageInfo' has a wrong offset!");
static_assert(offsetof(Ability_MonsterHitReaction_C_HandleHitReaction, CallFunc_TryFillHitReactionData_bSuccess) == 0x000180, "Member 'Ability_MonsterHitReaction_C_HandleHitReaction::CallFunc_TryFillHitReactionData_bSuccess' has a wrong offset!");
static_assert(offsetof(Ability_MonsterHitReaction_C_HandleHitReaction, CallFunc_GetAbilityEventData_DamageInfo_ReturnValue) == 0x000188, "Member 'Ability_MonsterHitReaction_C_HandleHitReaction::CallFunc_GetAbilityEventData_DamageInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_MonsterHitReaction_C_HandleHitReaction, CallFunc_GetTimeSeconds_ReturnValue) == 0x0002C8, "Member 'Ability_MonsterHitReaction_C_HandleHitReaction::CallFunc_GetTimeSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_MonsterHitReaction_C_HandleHitReaction, CallFunc_HasTag_ReturnValue) == 0x0002D0, "Member 'Ability_MonsterHitReaction_C_HandleHitReaction::CallFunc_HasTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_MonsterHitReaction_C_HandleHitReaction, CallFunc_CheckCanHandleHitReaction_bCanHandle) == 0x0002D1, "Member 'Ability_MonsterHitReaction_C_HandleHitReaction::CallFunc_CheckCanHandleHitReaction_bCanHandle' has a wrong offset!");
static_assert(offsetof(Ability_MonsterHitReaction_C_HandleHitReaction, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x0002D8, "Member 'Ability_MonsterHitReaction_C_HandleHitReaction::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_MonsterHitReaction_C_HandleHitReaction, CallFunc_GetOwnerActor_ReturnValue) == 0x0002E0, "Member 'Ability_MonsterHitReaction_C_HandleHitReaction::CallFunc_GetOwnerActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_MonsterHitReaction_C_HandleHitReaction, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x0002E8, "Member 'Ability_MonsterHitReaction_C_HandleHitReaction::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_MonsterHitReaction_C_HandleHitReaction, CallFunc_IsActiveTag_ReturnValue) == 0x0002E9, "Member 'Ability_MonsterHitReaction_C_HandleHitReaction::CallFunc_IsActiveTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_MonsterHitReaction_C_HandleHitReaction, CallFunc_Not_PreBool_ReturnValue) == 0x0002EA, "Member 'Ability_MonsterHitReaction_C_HandleHitReaction::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function Ability_MonsterHitReaction.Ability_MonsterHitReaction_C.OnAbilityEvent_251AA2D44B9389D9339DBFAF8E4C08D6
// 0x0040 (0x0040 - 0x0000)
struct Ability_MonsterHitReaction_C_OnAbilityEvent_251AA2D44B9389D9339DBFAF8E4C08D6 final
{
public:
	struct FM1AbilityEvent                        Event;                                             // 0x0000(0x0040)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(Ability_MonsterHitReaction_C_OnAbilityEvent_251AA2D44B9389D9339DBFAF8E4C08D6) == 0x000008, "Wrong alignment on Ability_MonsterHitReaction_C_OnAbilityEvent_251AA2D44B9389D9339DBFAF8E4C08D6");
static_assert(sizeof(Ability_MonsterHitReaction_C_OnAbilityEvent_251AA2D44B9389D9339DBFAF8E4C08D6) == 0x000040, "Wrong size on Ability_MonsterHitReaction_C_OnAbilityEvent_251AA2D44B9389D9339DBFAF8E4C08D6");
static_assert(offsetof(Ability_MonsterHitReaction_C_OnAbilityEvent_251AA2D44B9389D9339DBFAF8E4C08D6, Event) == 0x000000, "Member 'Ability_MonsterHitReaction_C_OnAbilityEvent_251AA2D44B9389D9339DBFAF8E4C08D6::Event' has a wrong offset!");

// Function Ability_MonsterHitReaction.Ability_MonsterHitReaction_C.ResetPlayCountAndHitParts
// 0x0060 (0x0060 - 0x0000)
struct Ability_MonsterHitReaction_C_ResetPlayCountAndHitParts final
{
public:
	struct FM1NormalMonsterHitReactionData        TempMaxDamagedParts;                               // 0x0000(0x0058)(Edit, BlueprintVisible)
	int32                                         CallFunc_FindConfigIndexByPartsName_ConfigIndex;   // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ability_MonsterHitReaction_C_ResetPlayCountAndHitParts) == 0x000008, "Wrong alignment on Ability_MonsterHitReaction_C_ResetPlayCountAndHitParts");
static_assert(sizeof(Ability_MonsterHitReaction_C_ResetPlayCountAndHitParts) == 0x000060, "Wrong size on Ability_MonsterHitReaction_C_ResetPlayCountAndHitParts");
static_assert(offsetof(Ability_MonsterHitReaction_C_ResetPlayCountAndHitParts, TempMaxDamagedParts) == 0x000000, "Member 'Ability_MonsterHitReaction_C_ResetPlayCountAndHitParts::TempMaxDamagedParts' has a wrong offset!");
static_assert(offsetof(Ability_MonsterHitReaction_C_ResetPlayCountAndHitParts, CallFunc_FindConfigIndexByPartsName_ConfigIndex) == 0x000058, "Member 'Ability_MonsterHitReaction_C_ResetPlayCountAndHitParts::CallFunc_FindConfigIndexByPartsName_ConfigIndex' has a wrong offset!");

// Function Ability_MonsterHitReaction.Ability_MonsterHitReaction_C.TryFillHitReactionData
// 0x00D0 (0x00D0 - 0x0000)
struct Ability_MonsterHitReaction_C_TryFillHitReactionData final
{
public:
	bool                                          bSuccess;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsEmpty_ReturnValue;                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwnerActor_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_ObjectToText_ReturnValue;            // 0x0010(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0028(0x0050)(HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwnerActor_ReturnValue_1;              // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0080(0x0010)(ReferenceParm)
	TArray<struct FM1NormalMonsterHitReactionData> CallFunc_GetNormalMonsterHitReactionData_ReturnValue; // 0x0090(0x0010)(ConstParm, ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00A0(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x00B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsEmpty_ReturnValue_1;              // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ability_MonsterHitReaction_C_TryFillHitReactionData) == 0x000008, "Wrong alignment on Ability_MonsterHitReaction_C_TryFillHitReactionData");
static_assert(sizeof(Ability_MonsterHitReaction_C_TryFillHitReactionData) == 0x0000D0, "Wrong size on Ability_MonsterHitReaction_C_TryFillHitReactionData");
static_assert(offsetof(Ability_MonsterHitReaction_C_TryFillHitReactionData, bSuccess) == 0x000000, "Member 'Ability_MonsterHitReaction_C_TryFillHitReactionData::bSuccess' has a wrong offset!");
static_assert(offsetof(Ability_MonsterHitReaction_C_TryFillHitReactionData, CallFunc_Array_IsEmpty_ReturnValue) == 0x000001, "Member 'Ability_MonsterHitReaction_C_TryFillHitReactionData::CallFunc_Array_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_MonsterHitReaction_C_TryFillHitReactionData, CallFunc_GetOwnerActor_ReturnValue) == 0x000008, "Member 'Ability_MonsterHitReaction_C_TryFillHitReactionData::CallFunc_GetOwnerActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_MonsterHitReaction_C_TryFillHitReactionData, CallFunc_Conv_ObjectToText_ReturnValue) == 0x000010, "Member 'Ability_MonsterHitReaction_C_TryFillHitReactionData::CallFunc_Conv_ObjectToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_MonsterHitReaction_C_TryFillHitReactionData, K2Node_MakeStruct_FormatArgumentData) == 0x000028, "Member 'Ability_MonsterHitReaction_C_TryFillHitReactionData::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(Ability_MonsterHitReaction_C_TryFillHitReactionData, CallFunc_GetOwnerActor_ReturnValue_1) == 0x000078, "Member 'Ability_MonsterHitReaction_C_TryFillHitReactionData::CallFunc_GetOwnerActor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ability_MonsterHitReaction_C_TryFillHitReactionData, K2Node_MakeArray_Array) == 0x000080, "Member 'Ability_MonsterHitReaction_C_TryFillHitReactionData::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Ability_MonsterHitReaction_C_TryFillHitReactionData, CallFunc_GetNormalMonsterHitReactionData_ReturnValue) == 0x000090, "Member 'Ability_MonsterHitReaction_C_TryFillHitReactionData::CallFunc_GetNormalMonsterHitReactionData_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_MonsterHitReaction_C_TryFillHitReactionData, CallFunc_Format_ReturnValue) == 0x0000A0, "Member 'Ability_MonsterHitReaction_C_TryFillHitReactionData::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_MonsterHitReaction_C_TryFillHitReactionData, CallFunc_Conv_TextToString_ReturnValue) == 0x0000B8, "Member 'Ability_MonsterHitReaction_C_TryFillHitReactionData::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_MonsterHitReaction_C_TryFillHitReactionData, CallFunc_Array_IsEmpty_ReturnValue_1) == 0x0000C8, "Member 'Ability_MonsterHitReaction_C_TryFillHitReactionData::CallFunc_Array_IsEmpty_ReturnValue_1' has a wrong offset!");

}

