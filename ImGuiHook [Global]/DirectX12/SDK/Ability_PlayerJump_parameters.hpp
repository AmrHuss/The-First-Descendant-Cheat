#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Ability_PlayerJump

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "M1_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "M1Data_structs.hpp"


namespace SDK::Params
{

// Function Ability_PlayerJump.Ability_PlayerJump_C.Apply_FallHighVFX
// 0x0010 (0x0010 - 0x0000)
struct Ability_PlayerJump_C_Apply_FallHighVFX final
{
public:
	TArray<class UNiagaraComponent*>              CallFunc_SpawnFXsForAbility_ReturnValue;           // 0x0000(0x0010)(ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(Ability_PlayerJump_C_Apply_FallHighVFX) == 0x000008, "Wrong alignment on Ability_PlayerJump_C_Apply_FallHighVFX");
static_assert(sizeof(Ability_PlayerJump_C_Apply_FallHighVFX) == 0x000010, "Wrong size on Ability_PlayerJump_C_Apply_FallHighVFX");
static_assert(offsetof(Ability_PlayerJump_C_Apply_FallHighVFX, CallFunc_SpawnFXsForAbility_ReturnValue) == 0x000000, "Member 'Ability_PlayerJump_C_Apply_FallHighVFX::CallFunc_SpawnFXsForAbility_ReturnValue' has a wrong offset!");

// Function Ability_PlayerJump.Ability_PlayerJump_C.Apply_JumpMontage
// 0x0058 (0x0058 - 0x0000)
struct Ability_PlayerJump_C_Apply_JumpMontage final
{
public:
	class FName                                   InSectionName;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           CallFunc_GetJumpMontageParam_outMontage;           // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FAlphaBlendArgs                        CallFunc_GetBlendInArgs_ReturnValue;               // 0x0010(0x0010)(NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwnerActor_ReturnValue;                // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AM1Player*                              K2Node_DynamicCast_AsM1Player;                     // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Montage_PlayWithBlendIn_ReturnValue;      // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Montage_IsPlaying_ReturnValue;            // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ability_PlayerJump_C_Apply_JumpMontage) == 0x000008, "Wrong alignment on Ability_PlayerJump_C_Apply_JumpMontage");
static_assert(sizeof(Ability_PlayerJump_C_Apply_JumpMontage) == 0x000058, "Wrong size on Ability_PlayerJump_C_Apply_JumpMontage");
static_assert(offsetof(Ability_PlayerJump_C_Apply_JumpMontage, InSectionName) == 0x000000, "Member 'Ability_PlayerJump_C_Apply_JumpMontage::InSectionName' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_Apply_JumpMontage, CallFunc_GetJumpMontageParam_outMontage) == 0x000008, "Member 'Ability_PlayerJump_C_Apply_JumpMontage::CallFunc_GetJumpMontageParam_outMontage' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_Apply_JumpMontage, CallFunc_GetBlendInArgs_ReturnValue) == 0x000010, "Member 'Ability_PlayerJump_C_Apply_JumpMontage::CallFunc_GetBlendInArgs_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_Apply_JumpMontage, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'Ability_PlayerJump_C_Apply_JumpMontage::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_Apply_JumpMontage, CallFunc_IsValid_ReturnValue_1) == 0x000021, "Member 'Ability_PlayerJump_C_Apply_JumpMontage::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_Apply_JumpMontage, CallFunc_GetOwnerActor_ReturnValue) == 0x000028, "Member 'Ability_PlayerJump_C_Apply_JumpMontage::CallFunc_GetOwnerActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_Apply_JumpMontage, K2Node_DynamicCast_AsM1Player) == 0x000030, "Member 'Ability_PlayerJump_C_Apply_JumpMontage::K2Node_DynamicCast_AsM1Player' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_Apply_JumpMontage, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'Ability_PlayerJump_C_Apply_JumpMontage::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_Apply_JumpMontage, CallFunc_GetAnimInstance_ReturnValue) == 0x000040, "Member 'Ability_PlayerJump_C_Apply_JumpMontage::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_Apply_JumpMontage, CallFunc_IsValid_ReturnValue_2) == 0x000048, "Member 'Ability_PlayerJump_C_Apply_JumpMontage::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_Apply_JumpMontage, CallFunc_Montage_PlayWithBlendIn_ReturnValue) == 0x00004C, "Member 'Ability_PlayerJump_C_Apply_JumpMontage::CallFunc_Montage_PlayWithBlendIn_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_Apply_JumpMontage, CallFunc_Montage_IsPlaying_ReturnValue) == 0x000050, "Member 'Ability_PlayerJump_C_Apply_JumpMontage::CallFunc_Montage_IsPlaying_ReturnValue' has a wrong offset!");

// Function Ability_PlayerJump.Ability_PlayerJump_C.Apply_JumpMontageSection
// 0x0038 (0x0038 - 0x0000)
struct Ability_PlayerJump_C_Apply_JumpMontageSection final
{
public:
	class FName                                   NewSectionName;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwnerActor_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AM1Player*                              K2Node_DynamicCast_AsM1Player;                     // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Montage_GetCurrentSection_ReturnValue;    // 0x002C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ability_PlayerJump_C_Apply_JumpMontageSection) == 0x000008, "Wrong alignment on Ability_PlayerJump_C_Apply_JumpMontageSection");
static_assert(sizeof(Ability_PlayerJump_C_Apply_JumpMontageSection) == 0x000038, "Wrong size on Ability_PlayerJump_C_Apply_JumpMontageSection");
static_assert(offsetof(Ability_PlayerJump_C_Apply_JumpMontageSection, NewSectionName) == 0x000000, "Member 'Ability_PlayerJump_C_Apply_JumpMontageSection::NewSectionName' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_Apply_JumpMontageSection, CallFunc_GetOwnerActor_ReturnValue) == 0x000008, "Member 'Ability_PlayerJump_C_Apply_JumpMontageSection::CallFunc_GetOwnerActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_Apply_JumpMontageSection, K2Node_DynamicCast_AsM1Player) == 0x000010, "Member 'Ability_PlayerJump_C_Apply_JumpMontageSection::K2Node_DynamicCast_AsM1Player' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_Apply_JumpMontageSection, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'Ability_PlayerJump_C_Apply_JumpMontageSection::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_Apply_JumpMontageSection, CallFunc_IsValid_ReturnValue) == 0x000019, "Member 'Ability_PlayerJump_C_Apply_JumpMontageSection::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_Apply_JumpMontageSection, CallFunc_GetAnimInstance_ReturnValue) == 0x000020, "Member 'Ability_PlayerJump_C_Apply_JumpMontageSection::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_Apply_JumpMontageSection, CallFunc_IsValid_ReturnValue_1) == 0x000028, "Member 'Ability_PlayerJump_C_Apply_JumpMontageSection::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_Apply_JumpMontageSection, CallFunc_Montage_GetCurrentSection_ReturnValue) == 0x00002C, "Member 'Ability_PlayerJump_C_Apply_JumpMontageSection::CallFunc_Montage_GetCurrentSection_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_Apply_JumpMontageSection, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000034, "Member 'Ability_PlayerJump_C_Apply_JumpMontageSection::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");

// Function Ability_PlayerJump.Ability_PlayerJump_C.BP_OnDeactivated
// 0x0001 (0x0001 - 0x0000)
struct Ability_PlayerJump_C_BP_OnDeactivated final
{
public:
	bool                                          bCancelled;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ability_PlayerJump_C_BP_OnDeactivated) == 0x000001, "Wrong alignment on Ability_PlayerJump_C_BP_OnDeactivated");
static_assert(sizeof(Ability_PlayerJump_C_BP_OnDeactivated) == 0x000001, "Wrong size on Ability_PlayerJump_C_BP_OnDeactivated");
static_assert(offsetof(Ability_PlayerJump_C_BP_OnDeactivated, bCancelled) == 0x000000, "Member 'Ability_PlayerJump_C_BP_OnDeactivated::bCancelled' has a wrong offset!");

// Function Ability_PlayerJump.Ability_PlayerJump_C.CanApplyFallingFX
// 0x0020 (0x0020 - 0x0000)
struct Ability_PlayerJump_C_CanApplyFallingFX final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetTimeSeconds_ReturnValue;               // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ability_PlayerJump_C_CanApplyFallingFX) == 0x000008, "Wrong alignment on Ability_PlayerJump_C_CanApplyFallingFX");
static_assert(sizeof(Ability_PlayerJump_C_CanApplyFallingFX) == 0x000020, "Wrong size on Ability_PlayerJump_C_CanApplyFallingFX");
static_assert(offsetof(Ability_PlayerJump_C_CanApplyFallingFX, ReturnValue) == 0x000000, "Member 'Ability_PlayerJump_C_CanApplyFallingFX::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_CanApplyFallingFX, CallFunc_GetTimeSeconds_ReturnValue) == 0x000008, "Member 'Ability_PlayerJump_C_CanApplyFallingFX::CallFunc_GetTimeSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_CanApplyFallingFX, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000010, "Member 'Ability_PlayerJump_C_CanApplyFallingFX::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_CanApplyFallingFX, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000018, "Member 'Ability_PlayerJump_C_CanApplyFallingFX::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");

// Function Ability_PlayerJump.Ability_PlayerJump_C.CanApplyLandFX
// 0x0020 (0x0020 - 0x0000)
struct Ability_PlayerJump_C_CanApplyLandFX final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetTimeSeconds_ReturnValue;               // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ability_PlayerJump_C_CanApplyLandFX) == 0x000008, "Wrong alignment on Ability_PlayerJump_C_CanApplyLandFX");
static_assert(sizeof(Ability_PlayerJump_C_CanApplyLandFX) == 0x000020, "Wrong size on Ability_PlayerJump_C_CanApplyLandFX");
static_assert(offsetof(Ability_PlayerJump_C_CanApplyLandFX, ReturnValue) == 0x000000, "Member 'Ability_PlayerJump_C_CanApplyLandFX::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_CanApplyLandFX, CallFunc_GetTimeSeconds_ReturnValue) == 0x000008, "Member 'Ability_PlayerJump_C_CanApplyLandFX::CallFunc_GetTimeSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_CanApplyLandFX, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000010, "Member 'Ability_PlayerJump_C_CanApplyLandFX::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_CanApplyLandFX, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000018, "Member 'Ability_PlayerJump_C_CanApplyLandFX::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");

// Function Ability_PlayerJump.Ability_PlayerJump_C.ExecuteUbergraph_Ability_PlayerJump
// 0x03A0 (0x03A0 - 0x0000)
struct Ability_PlayerJump_C_ExecuteUbergraph_Ability_PlayerJump final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UM1AbilityTask_WaitAbilityEvent*        CallFunc_WaitAbilityEvent_ReturnValue;             // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(struct FM1AbilityEvent& Event)> K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FM1AbilityEvent                        K2Node_CustomEvent_Event_3;                        // 0x0028(0x0040)(ConstParm)
	struct FM1AbilityEvent                        Temp_struct_Variable;                              // 0x0068(0x0040)()
	class UM1AbilityTask_WaitAbilityEvent*        CallFunc_WaitAbilityEvent_ReturnValue_1;           // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x3];                                       // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class ACharacter* Character, EMovementMode PrevMovementMode, uint8 PreviousCustomMode)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x00B4(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C4[0x4];                                       // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FM1AbilityEvent                        K2Node_CustomEvent_Event_2;                        // 0x00C8(0x0040)(ConstParm)
	TDelegate<void(struct FM1AbilityEvent& Event)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x0108(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FM1AbilityEvent                        Temp_struct_Variable_1;                            // 0x0118(0x0040)()
	class UM1AbilityTask_WaitAbilityEvent*        CallFunc_WaitAbilityEvent_ReturnValue_2;           // 0x0158(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_161[0x3];                                      // 0x0161(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(struct FM1AbilityEvent& Event)> K2Node_CreateDelegate_OutputDelegate_3;            // 0x0164(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_174[0x4];                                      // 0x0174(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FM1AbilityEvent                        K2Node_CustomEvent_Event_1;                        // 0x0178(0x0040)(ConstParm)
	struct FM1AbilityEvent                        Temp_struct_Variable_2;                            // 0x01B8(0x0040)()
	class UM1AbilityTask_WaitAbilityEvent*        CallFunc_WaitAbilityEvent_ReturnValue_3;           // 0x01F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_201[0x3];                                      // 0x0201(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(struct FM1AbilityEvent& Event)> K2Node_CreateDelegate_OutputDelegate_4;            // 0x0204(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_214[0x4];                                      // 0x0214(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FM1AbilityEvent                        K2Node_CustomEvent_Event;                          // 0x0218(0x0040)(ConstParm)
	struct FM1AbilityEvent                        Temp_struct_Variable_3;                            // 0x0258(0x0040)()
	class UM1AbilityTask_WaitAbilityEvent*        CallFunc_WaitAbilityEvent_ReturnValue_4;           // 0x0298(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x02A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A1[0x7];                                      // 0x02A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UM1AbilityEventObject_SkillActivated*   K2Node_DynamicCast_AsM1Ability_Event_Object_Skill_Activated; // 0x02A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x02B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bCancelled;                           // 0x02B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x02B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x02B3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue_1;        // 0x02B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue_2;        // 0x02B5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x02B6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B7[0x1];                                      // 0x02B7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FM1AbilityEvent                        K2Node_CustomEvent_Event_4;                        // 0x02B8(0x0040)(ConstParm)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_1;          // 0x02F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F9[0x7];                                      // 0x02F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwnerActor_ReturnValue;                // 0x0300(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AM1Player*                              K2Node_DynamicCast_AsM1Player;                     // 0x0308(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0310(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_311[0x7];                                      // 0x0311(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             K2Node_CustomEvent_Character;                      // 0x0318(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EMovementMode                                 K2Node_CustomEvent_PrevMovementMode;               // 0x0320(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         K2Node_CustomEvent_PreviousCustomMode;             // 0x0321(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_WasPlayerStateReady_ReturnValue;          // 0x0322(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsFalling_ReturnValue;                    // 0x0323(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldPlayFallAnim_ReturnValue;           // 0x0324(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_325[0x3];                                      // 0x0325(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(struct FM1AbilityEvent& Event)> K2Node_CreateDelegate_OutputDelegate_5;            // 0x0328(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwnerActor_ReturnValue_1;              // 0x0338(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AM1Player*                              K2Node_DynamicCast_AsM1Player_1;                   // 0x0340(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0348(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_2;          // 0x0349(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34A[0x6];                                      // 0x034A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwnerActor_ReturnValue_2;              // 0x0350(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FM1AbilityEvent                        Temp_struct_Variable_4;                            // 0x0358(0x0040)()
	bool                                          CallFunc_IsActiveTag_ReturnValue;                  // 0x0398(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ability_PlayerJump_C_ExecuteUbergraph_Ability_PlayerJump) == 0x000008, "Wrong alignment on Ability_PlayerJump_C_ExecuteUbergraph_Ability_PlayerJump");
static_assert(sizeof(Ability_PlayerJump_C_ExecuteUbergraph_Ability_PlayerJump) == 0x0003A0, "Wrong size on Ability_PlayerJump_C_ExecuteUbergraph_Ability_PlayerJump");
static_assert(offsetof(Ability_PlayerJump_C_ExecuteUbergraph_Ability_PlayerJump, EntryPoint) == 0x000000, "Member 'Ability_PlayerJump_C_ExecuteUbergraph_Ability_PlayerJump::EntryPoint' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_ExecuteUbergraph_Ability_PlayerJump, CallFunc_WaitAbilityEvent_ReturnValue) == 0x000008, "Member 'Ability_PlayerJump_C_ExecuteUbergraph_Ability_PlayerJump::CallFunc_WaitAbilityEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_ExecuteUbergraph_Ability_PlayerJump, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'Ability_PlayerJump_C_ExecuteUbergraph_Ability_PlayerJump::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_ExecuteUbergraph_Ability_PlayerJump, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'Ability_PlayerJump_C_ExecuteUbergraph_Ability_PlayerJump::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_ExecuteUbergraph_Ability_PlayerJump, K2Node_CustomEvent_Event_3) == 0x000028, "Member 'Ability_PlayerJump_C_ExecuteUbergraph_Ability_PlayerJump::K2Node_CustomEvent_Event_3' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_ExecuteUbergraph_Ability_PlayerJump, Temp_struct_Variable) == 0x000068, "Member 'Ability_PlayerJump_C_ExecuteUbergraph_Ability_PlayerJump::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_ExecuteUbergraph_Ability_PlayerJump, CallFunc_WaitAbilityEvent_ReturnValue_1) == 0x0000A8, "Member 'Ability_PlayerJump_C_ExecuteUbergraph_Ability_PlayerJump::CallFunc_WaitAbilityEvent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_ExecuteUbergraph_Ability_PlayerJump, CallFunc_IsValid_ReturnValue_1) == 0x0000B0, "Member 'Ability_PlayerJump_C_ExecuteUbergraph_Ability_PlayerJump::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_ExecuteUbergraph_Ability_PlayerJump, K2Node_CreateDelegate_OutputDelegate_1) == 0x0000B4, "Member 'Ability_PlayerJump_C_ExecuteUbergraph_Ability_PlayerJump::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_ExecuteUbergraph_Ability_PlayerJump, K2Node_CustomEvent_Event_2) == 0x0000C8, "Member 'Ability_PlayerJump_C_ExecuteUbergraph_Ability_PlayerJump::K2Node_CustomEvent_Event_2' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_ExecuteUbergraph_Ability_PlayerJump, K2Node_CreateDelegate_OutputDelegate_2) == 0x000108, "Member 'Ability_PlayerJump_C_ExecuteUbergraph_Ability_PlayerJump::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_ExecuteUbergraph_Ability_PlayerJump, Temp_struct_Variable_1) == 0x000118, "Member 'Ability_PlayerJump_C_ExecuteUbergraph_Ability_PlayerJump::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_ExecuteUbergraph_Ability_PlayerJump, CallFunc_WaitAbilityEvent_ReturnValue_2) == 0x000158, "Member 'Ability_PlayerJump_C_ExecuteUbergraph_Ability_PlayerJump::CallFunc_WaitAbilityEvent_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_ExecuteUbergraph_Ability_PlayerJump, CallFunc_IsValid_ReturnValue_2) == 0x000160, "Member 'Ability_PlayerJump_C_ExecuteUbergraph_Ability_PlayerJump::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_ExecuteUbergraph_Ability_PlayerJump, K2Node_CreateDelegate_OutputDelegate_3) == 0x000164, "Member 'Ability_PlayerJump_C_ExecuteUbergraph_Ability_PlayerJump::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_ExecuteUbergraph_Ability_PlayerJump, K2Node_CustomEvent_Event_1) == 0x000178, "Member 'Ability_PlayerJump_C_ExecuteUbergraph_Ability_PlayerJump::K2Node_CustomEvent_Event_1' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_ExecuteUbergraph_Ability_PlayerJump, Temp_struct_Variable_2) == 0x0001B8, "Member 'Ability_PlayerJump_C_ExecuteUbergraph_Ability_PlayerJump::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_ExecuteUbergraph_Ability_PlayerJump, CallFunc_WaitAbilityEvent_ReturnValue_3) == 0x0001F8, "Member 'Ability_PlayerJump_C_ExecuteUbergraph_Ability_PlayerJump::CallFunc_WaitAbilityEvent_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_ExecuteUbergraph_Ability_PlayerJump, CallFunc_IsValid_ReturnValue_3) == 0x000200, "Member 'Ability_PlayerJump_C_ExecuteUbergraph_Ability_PlayerJump::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_ExecuteUbergraph_Ability_PlayerJump, K2Node_CreateDelegate_OutputDelegate_4) == 0x000204, "Member 'Ability_PlayerJump_C_ExecuteUbergraph_Ability_PlayerJump::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_ExecuteUbergraph_Ability_PlayerJump, K2Node_CustomEvent_Event) == 0x000218, "Member 'Ability_PlayerJump_C_ExecuteUbergraph_Ability_PlayerJump::K2Node_CustomEvent_Event' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_ExecuteUbergraph_Ability_PlayerJump, Temp_struct_Variable_3) == 0x000258, "Member 'Ability_PlayerJump_C_ExecuteUbergraph_Ability_PlayerJump::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_ExecuteUbergraph_Ability_PlayerJump, CallFunc_WaitAbilityEvent_ReturnValue_4) == 0x000298, "Member 'Ability_PlayerJump_C_ExecuteUbergraph_Ability_PlayerJump::CallFunc_WaitAbilityEvent_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_ExecuteUbergraph_Ability_PlayerJump, CallFunc_IsValid_ReturnValue_4) == 0x0002A0, "Member 'Ability_PlayerJump_C_ExecuteUbergraph_Ability_PlayerJump::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_ExecuteUbergraph_Ability_PlayerJump, K2Node_DynamicCast_AsM1Ability_Event_Object_Skill_Activated) == 0x0002A8, "Member 'Ability_PlayerJump_C_ExecuteUbergraph_Ability_PlayerJump::K2Node_DynamicCast_AsM1Ability_Event_Object_Skill_Activated' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_ExecuteUbergraph_Ability_PlayerJump, K2Node_DynamicCast_bSuccess) == 0x0002B0, "Member 'Ability_PlayerJump_C_ExecuteUbergraph_Ability_PlayerJump::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_ExecuteUbergraph_Ability_PlayerJump, K2Node_Event_bCancelled) == 0x0002B1, "Member 'Ability_PlayerJump_C_ExecuteUbergraph_Ability_PlayerJump::K2Node_Event_bCancelled' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_ExecuteUbergraph_Ability_PlayerJump, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0002B2, "Member 'Ability_PlayerJump_C_ExecuteUbergraph_Ability_PlayerJump::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_ExecuteUbergraph_Ability_PlayerJump, CallFunc_IsLocallyControlled_ReturnValue) == 0x0002B3, "Member 'Ability_PlayerJump_C_ExecuteUbergraph_Ability_PlayerJump::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_ExecuteUbergraph_Ability_PlayerJump, CallFunc_IsLocallyControlled_ReturnValue_1) == 0x0002B4, "Member 'Ability_PlayerJump_C_ExecuteUbergraph_Ability_PlayerJump::CallFunc_IsLocallyControlled_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_ExecuteUbergraph_Ability_PlayerJump, CallFunc_IsLocallyControlled_ReturnValue_2) == 0x0002B5, "Member 'Ability_PlayerJump_C_ExecuteUbergraph_Ability_PlayerJump::CallFunc_IsLocallyControlled_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_ExecuteUbergraph_Ability_PlayerJump, CallFunc_IsDedicatedServer_ReturnValue) == 0x0002B6, "Member 'Ability_PlayerJump_C_ExecuteUbergraph_Ability_PlayerJump::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_ExecuteUbergraph_Ability_PlayerJump, K2Node_CustomEvent_Event_4) == 0x0002B8, "Member 'Ability_PlayerJump_C_ExecuteUbergraph_Ability_PlayerJump::K2Node_CustomEvent_Event_4' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_ExecuteUbergraph_Ability_PlayerJump, CallFunc_IsDedicatedServer_ReturnValue_1) == 0x0002F8, "Member 'Ability_PlayerJump_C_ExecuteUbergraph_Ability_PlayerJump::CallFunc_IsDedicatedServer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_ExecuteUbergraph_Ability_PlayerJump, CallFunc_GetOwnerActor_ReturnValue) == 0x000300, "Member 'Ability_PlayerJump_C_ExecuteUbergraph_Ability_PlayerJump::CallFunc_GetOwnerActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_ExecuteUbergraph_Ability_PlayerJump, K2Node_DynamicCast_AsM1Player) == 0x000308, "Member 'Ability_PlayerJump_C_ExecuteUbergraph_Ability_PlayerJump::K2Node_DynamicCast_AsM1Player' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_ExecuteUbergraph_Ability_PlayerJump, K2Node_DynamicCast_bSuccess_1) == 0x000310, "Member 'Ability_PlayerJump_C_ExecuteUbergraph_Ability_PlayerJump::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_ExecuteUbergraph_Ability_PlayerJump, K2Node_CustomEvent_Character) == 0x000318, "Member 'Ability_PlayerJump_C_ExecuteUbergraph_Ability_PlayerJump::K2Node_CustomEvent_Character' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_ExecuteUbergraph_Ability_PlayerJump, K2Node_CustomEvent_PrevMovementMode) == 0x000320, "Member 'Ability_PlayerJump_C_ExecuteUbergraph_Ability_PlayerJump::K2Node_CustomEvent_PrevMovementMode' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_ExecuteUbergraph_Ability_PlayerJump, K2Node_CustomEvent_PreviousCustomMode) == 0x000321, "Member 'Ability_PlayerJump_C_ExecuteUbergraph_Ability_PlayerJump::K2Node_CustomEvent_PreviousCustomMode' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_ExecuteUbergraph_Ability_PlayerJump, CallFunc_WasPlayerStateReady_ReturnValue) == 0x000322, "Member 'Ability_PlayerJump_C_ExecuteUbergraph_Ability_PlayerJump::CallFunc_WasPlayerStateReady_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_ExecuteUbergraph_Ability_PlayerJump, CallFunc_IsFalling_ReturnValue) == 0x000323, "Member 'Ability_PlayerJump_C_ExecuteUbergraph_Ability_PlayerJump::CallFunc_IsFalling_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_ExecuteUbergraph_Ability_PlayerJump, CallFunc_ShouldPlayFallAnim_ReturnValue) == 0x000324, "Member 'Ability_PlayerJump_C_ExecuteUbergraph_Ability_PlayerJump::CallFunc_ShouldPlayFallAnim_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_ExecuteUbergraph_Ability_PlayerJump, K2Node_CreateDelegate_OutputDelegate_5) == 0x000328, "Member 'Ability_PlayerJump_C_ExecuteUbergraph_Ability_PlayerJump::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_ExecuteUbergraph_Ability_PlayerJump, CallFunc_GetOwnerActor_ReturnValue_1) == 0x000338, "Member 'Ability_PlayerJump_C_ExecuteUbergraph_Ability_PlayerJump::CallFunc_GetOwnerActor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_ExecuteUbergraph_Ability_PlayerJump, K2Node_DynamicCast_AsM1Player_1) == 0x000340, "Member 'Ability_PlayerJump_C_ExecuteUbergraph_Ability_PlayerJump::K2Node_DynamicCast_AsM1Player_1' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_ExecuteUbergraph_Ability_PlayerJump, K2Node_DynamicCast_bSuccess_2) == 0x000348, "Member 'Ability_PlayerJump_C_ExecuteUbergraph_Ability_PlayerJump::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_ExecuteUbergraph_Ability_PlayerJump, CallFunc_IsDedicatedServer_ReturnValue_2) == 0x000349, "Member 'Ability_PlayerJump_C_ExecuteUbergraph_Ability_PlayerJump::CallFunc_IsDedicatedServer_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_ExecuteUbergraph_Ability_PlayerJump, CallFunc_GetOwnerActor_ReturnValue_2) == 0x000350, "Member 'Ability_PlayerJump_C_ExecuteUbergraph_Ability_PlayerJump::CallFunc_GetOwnerActor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_ExecuteUbergraph_Ability_PlayerJump, Temp_struct_Variable_4) == 0x000358, "Member 'Ability_PlayerJump_C_ExecuteUbergraph_Ability_PlayerJump::Temp_struct_Variable_4' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_ExecuteUbergraph_Ability_PlayerJump, CallFunc_IsActiveTag_ReturnValue) == 0x000398, "Member 'Ability_PlayerJump_C_ExecuteUbergraph_Ability_PlayerJump::CallFunc_IsActiveTag_ReturnValue' has a wrong offset!");

// Function Ability_PlayerJump.Ability_PlayerJump_C.GetJumpMontageParam
// 0x0040 (0x0040 - 0x0000)
struct Ability_PlayerJump_C_GetJumpMontageParam final
{
public:
	class UAnimMontage*                           OutMontage;                                        // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwnerActor_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AM1Player*                              K2Node_DynamicCast_AsM1Player;                     // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwnerActor_ReturnValue_1;              // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EM1CharacterGender                            CallFunc_GetPlayerAnimPresetType_ReturnValue;      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsActiveTag_ReturnValue;                  // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           CallFunc_Map_Find_Value;                           // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ability_PlayerJump_C_GetJumpMontageParam) == 0x000008, "Wrong alignment on Ability_PlayerJump_C_GetJumpMontageParam");
static_assert(sizeof(Ability_PlayerJump_C_GetJumpMontageParam) == 0x000040, "Wrong size on Ability_PlayerJump_C_GetJumpMontageParam");
static_assert(offsetof(Ability_PlayerJump_C_GetJumpMontageParam, OutMontage) == 0x000000, "Member 'Ability_PlayerJump_C_GetJumpMontageParam::OutMontage' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_GetJumpMontageParam, CallFunc_GetOwnerActor_ReturnValue) == 0x000008, "Member 'Ability_PlayerJump_C_GetJumpMontageParam::CallFunc_GetOwnerActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_GetJumpMontageParam, K2Node_DynamicCast_AsM1Player) == 0x000010, "Member 'Ability_PlayerJump_C_GetJumpMontageParam::K2Node_DynamicCast_AsM1Player' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_GetJumpMontageParam, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'Ability_PlayerJump_C_GetJumpMontageParam::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_GetJumpMontageParam, CallFunc_GetOwnerActor_ReturnValue_1) == 0x000020, "Member 'Ability_PlayerJump_C_GetJumpMontageParam::CallFunc_GetOwnerActor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_GetJumpMontageParam, CallFunc_GetPlayerAnimPresetType_ReturnValue) == 0x000028, "Member 'Ability_PlayerJump_C_GetJumpMontageParam::CallFunc_GetPlayerAnimPresetType_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_GetJumpMontageParam, CallFunc_IsActiveTag_ReturnValue) == 0x000029, "Member 'Ability_PlayerJump_C_GetJumpMontageParam::CallFunc_IsActiveTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_GetJumpMontageParam, CallFunc_Map_Find_Value) == 0x000030, "Member 'Ability_PlayerJump_C_GetJumpMontageParam::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_GetJumpMontageParam, CallFunc_Map_Find_ReturnValue) == 0x000038, "Member 'Ability_PlayerJump_C_GetJumpMontageParam::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function Ability_PlayerJump.Ability_PlayerJump_C.Handle_FallingFX
// 0x0010 (0x0010 - 0x0000)
struct Ability_PlayerJump_C_Handle_FallingFX final
{
public:
	double                                        CallFunc_GetTimeSeconds_ReturnValue;               // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanApplyFallingFX_ReturnValue;            // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ability_PlayerJump_C_Handle_FallingFX) == 0x000008, "Wrong alignment on Ability_PlayerJump_C_Handle_FallingFX");
static_assert(sizeof(Ability_PlayerJump_C_Handle_FallingFX) == 0x000010, "Wrong size on Ability_PlayerJump_C_Handle_FallingFX");
static_assert(offsetof(Ability_PlayerJump_C_Handle_FallingFX, CallFunc_GetTimeSeconds_ReturnValue) == 0x000000, "Member 'Ability_PlayerJump_C_Handle_FallingFX::CallFunc_GetTimeSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_Handle_FallingFX, CallFunc_CanApplyFallingFX_ReturnValue) == 0x000008, "Member 'Ability_PlayerJump_C_Handle_FallingFX::CallFunc_CanApplyFallingFX_ReturnValue' has a wrong offset!");

// Function Ability_PlayerJump.Ability_PlayerJump_C.Handle_FallingHighVFX
// 0x0001 (0x0001 - 0x0000)
struct Ability_PlayerJump_C_Handle_FallingHighVFX final
{
public:
	bool                                          CallFunc_ShouldApplyFallHighVFX_ReturnValue;       // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ability_PlayerJump_C_Handle_FallingHighVFX) == 0x000001, "Wrong alignment on Ability_PlayerJump_C_Handle_FallingHighVFX");
static_assert(sizeof(Ability_PlayerJump_C_Handle_FallingHighVFX) == 0x000001, "Wrong size on Ability_PlayerJump_C_Handle_FallingHighVFX");
static_assert(offsetof(Ability_PlayerJump_C_Handle_FallingHighVFX, CallFunc_ShouldApplyFallHighVFX_ReturnValue) == 0x000000, "Member 'Ability_PlayerJump_C_Handle_FallingHighVFX::CallFunc_ShouldApplyFallHighVFX_ReturnValue' has a wrong offset!");

// Function Ability_PlayerJump.Ability_PlayerJump_C.Handle_FallingSFX
// 0x0048 (0x0048 - 0x0000)
struct Ability_PlayerJump_C_Handle_FallingSFX final
{
public:
	bool                                          CallFunc_ShouldApplyFallingSFX_ReturnValue;        // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwnerActor_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetVelocity_ReturnValue;                  // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EValidOutputPin                               CallFunc_FindAkComponentWithValid_OutputPins;      // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UM1AkComponent*                         CallFunc_FindAkComponentWithValid_ReturnValue;     // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_OnPlayerFalling_VelocityZ_ImplicitCast;   // 0x0044(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ability_PlayerJump_C_Handle_FallingSFX) == 0x000008, "Wrong alignment on Ability_PlayerJump_C_Handle_FallingSFX");
static_assert(sizeof(Ability_PlayerJump_C_Handle_FallingSFX) == 0x000048, "Wrong size on Ability_PlayerJump_C_Handle_FallingSFX");
static_assert(offsetof(Ability_PlayerJump_C_Handle_FallingSFX, CallFunc_ShouldApplyFallingSFX_ReturnValue) == 0x000000, "Member 'Ability_PlayerJump_C_Handle_FallingSFX::CallFunc_ShouldApplyFallingSFX_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_Handle_FallingSFX, CallFunc_GetOwnerActor_ReturnValue) == 0x000008, "Member 'Ability_PlayerJump_C_Handle_FallingSFX::CallFunc_GetOwnerActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_Handle_FallingSFX, CallFunc_GetVelocity_ReturnValue) == 0x000010, "Member 'Ability_PlayerJump_C_Handle_FallingSFX::CallFunc_GetVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_Handle_FallingSFX, CallFunc_FindAkComponentWithValid_OutputPins) == 0x00001C, "Member 'Ability_PlayerJump_C_Handle_FallingSFX::CallFunc_FindAkComponentWithValid_OutputPins' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_Handle_FallingSFX, CallFunc_FindAkComponentWithValid_ReturnValue) == 0x000020, "Member 'Ability_PlayerJump_C_Handle_FallingSFX::CallFunc_FindAkComponentWithValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_Handle_FallingSFX, CallFunc_BreakVector_X) == 0x000028, "Member 'Ability_PlayerJump_C_Handle_FallingSFX::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_Handle_FallingSFX, CallFunc_BreakVector_Y) == 0x000030, "Member 'Ability_PlayerJump_C_Handle_FallingSFX::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_Handle_FallingSFX, CallFunc_BreakVector_Z) == 0x000038, "Member 'Ability_PlayerJump_C_Handle_FallingSFX::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_Handle_FallingSFX, K2Node_SwitchEnum_CmpSuccess) == 0x000040, "Member 'Ability_PlayerJump_C_Handle_FallingSFX::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_Handle_FallingSFX, CallFunc_OnPlayerFalling_VelocityZ_ImplicitCast) == 0x000044, "Member 'Ability_PlayerJump_C_Handle_FallingSFX::CallFunc_OnPlayerFalling_VelocityZ_ImplicitCast' has a wrong offset!");

// Function Ability_PlayerJump.Ability_PlayerJump_C.Handle_LandFX
// 0x0010 (0x0010 - 0x0000)
struct Ability_PlayerJump_C_Handle_LandFX final
{
public:
	bool                                          CallFunc_CanApplyLandFX_ReturnValue;               // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetTimeSeconds_ReturnValue;               // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ability_PlayerJump_C_Handle_LandFX) == 0x000008, "Wrong alignment on Ability_PlayerJump_C_Handle_LandFX");
static_assert(sizeof(Ability_PlayerJump_C_Handle_LandFX) == 0x000010, "Wrong size on Ability_PlayerJump_C_Handle_LandFX");
static_assert(offsetof(Ability_PlayerJump_C_Handle_LandFX, CallFunc_CanApplyLandFX_ReturnValue) == 0x000000, "Member 'Ability_PlayerJump_C_Handle_LandFX::CallFunc_CanApplyLandFX_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_Handle_LandFX, CallFunc_GetTimeSeconds_ReturnValue) == 0x000008, "Member 'Ability_PlayerJump_C_Handle_LandFX::CallFunc_GetTimeSeconds_ReturnValue' has a wrong offset!");

// Function Ability_PlayerJump.Ability_PlayerJump_C.Handle_LandHardVFX
// 0x0050 (0x0050 - 0x0000)
struct Ability_PlayerJump_C_Handle_LandHardVFX final
{
public:
	bool                                          CallFunc_ShouldApplyLandHardVFX_ReturnValue;       // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_ShouldApplyLandHardVFX_LandHardVFX;       // 0x0004(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_ShouldApplyLandHardVFX_LandHardTransform; // 0x0010(0x0030)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UNiagaraComponent*>              CallFunc_SpawnFXsForAbility_ReturnValue;           // 0x0040(0x0010)(ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(Ability_PlayerJump_C_Handle_LandHardVFX) == 0x000010, "Wrong alignment on Ability_PlayerJump_C_Handle_LandHardVFX");
static_assert(sizeof(Ability_PlayerJump_C_Handle_LandHardVFX) == 0x000050, "Wrong size on Ability_PlayerJump_C_Handle_LandHardVFX");
static_assert(offsetof(Ability_PlayerJump_C_Handle_LandHardVFX, CallFunc_ShouldApplyLandHardVFX_ReturnValue) == 0x000000, "Member 'Ability_PlayerJump_C_Handle_LandHardVFX::CallFunc_ShouldApplyLandHardVFX_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_Handle_LandHardVFX, CallFunc_ShouldApplyLandHardVFX_LandHardVFX) == 0x000004, "Member 'Ability_PlayerJump_C_Handle_LandHardVFX::CallFunc_ShouldApplyLandHardVFX_LandHardVFX' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_Handle_LandHardVFX, CallFunc_ShouldApplyLandHardVFX_LandHardTransform) == 0x000010, "Member 'Ability_PlayerJump_C_Handle_LandHardVFX::CallFunc_ShouldApplyLandHardVFX_LandHardTransform' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_Handle_LandHardVFX, CallFunc_SpawnFXsForAbility_ReturnValue) == 0x000040, "Member 'Ability_PlayerJump_C_Handle_LandHardVFX::CallFunc_SpawnFXsForAbility_ReturnValue' has a wrong offset!");

// Function Ability_PlayerJump.Ability_PlayerJump_C.Handle_LandSFX
// 0x0048 (0x0048 - 0x0000)
struct Ability_PlayerJump_C_Handle_LandSFX final
{
public:
	class AActor*                                 CallFunc_GetOwnerActor_ReturnValue;                // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EValidOutputPin                               CallFunc_FindAkComponentWithValid_OutputPins;      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UM1AkComponent*                         CallFunc_FindAkComponentWithValid_ReturnValue;     // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsActiveTag_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AM1Player*                              K2Node_DynamicCast_AsM1Player;                     // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPawnMovementComponent*                 CallFunc_GetMovementComponent_ReturnValue;         // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UM1PlayerMovementComponent*             K2Node_DynamicCast_AsM1Player_Movement_Component;  // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_WillLandHard_ReturnValue;                 // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ability_PlayerJump_C_Handle_LandSFX) == 0x000008, "Wrong alignment on Ability_PlayerJump_C_Handle_LandSFX");
static_assert(sizeof(Ability_PlayerJump_C_Handle_LandSFX) == 0x000048, "Wrong size on Ability_PlayerJump_C_Handle_LandSFX");
static_assert(offsetof(Ability_PlayerJump_C_Handle_LandSFX, CallFunc_GetOwnerActor_ReturnValue) == 0x000000, "Member 'Ability_PlayerJump_C_Handle_LandSFX::CallFunc_GetOwnerActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_Handle_LandSFX, CallFunc_FindAkComponentWithValid_OutputPins) == 0x000008, "Member 'Ability_PlayerJump_C_Handle_LandSFX::CallFunc_FindAkComponentWithValid_OutputPins' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_Handle_LandSFX, CallFunc_FindAkComponentWithValid_ReturnValue) == 0x000010, "Member 'Ability_PlayerJump_C_Handle_LandSFX::CallFunc_FindAkComponentWithValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_Handle_LandSFX, CallFunc_IsActiveTag_ReturnValue) == 0x000018, "Member 'Ability_PlayerJump_C_Handle_LandSFX::CallFunc_IsActiveTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_Handle_LandSFX, K2Node_SwitchEnum_CmpSuccess) == 0x000019, "Member 'Ability_PlayerJump_C_Handle_LandSFX::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_Handle_LandSFX, K2Node_DynamicCast_AsM1Player) == 0x000020, "Member 'Ability_PlayerJump_C_Handle_LandSFX::K2Node_DynamicCast_AsM1Player' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_Handle_LandSFX, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'Ability_PlayerJump_C_Handle_LandSFX::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_Handle_LandSFX, CallFunc_GetMovementComponent_ReturnValue) == 0x000030, "Member 'Ability_PlayerJump_C_Handle_LandSFX::CallFunc_GetMovementComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_Handle_LandSFX, K2Node_DynamicCast_AsM1Player_Movement_Component) == 0x000038, "Member 'Ability_PlayerJump_C_Handle_LandSFX::K2Node_DynamicCast_AsM1Player_Movement_Component' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_Handle_LandSFX, K2Node_DynamicCast_bSuccess_1) == 0x000040, "Member 'Ability_PlayerJump_C_Handle_LandSFX::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_Handle_LandSFX, CallFunc_WillLandHard_ReturnValue) == 0x000041, "Member 'Ability_PlayerJump_C_Handle_LandSFX::CallFunc_WillLandHard_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_Handle_LandSFX, CallFunc_BooleanOR_ReturnValue) == 0x000042, "Member 'Ability_PlayerJump_C_Handle_LandSFX::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function Ability_PlayerJump.Ability_PlayerJump_C.OnAbilityEvent_14C22D8E4EC91E31776CB1961AA65F52
// 0x0040 (0x0040 - 0x0000)
struct Ability_PlayerJump_C_OnAbilityEvent_14C22D8E4EC91E31776CB1961AA65F52 final
{
public:
	struct FM1AbilityEvent                        Event;                                             // 0x0000(0x0040)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(Ability_PlayerJump_C_OnAbilityEvent_14C22D8E4EC91E31776CB1961AA65F52) == 0x000008, "Wrong alignment on Ability_PlayerJump_C_OnAbilityEvent_14C22D8E4EC91E31776CB1961AA65F52");
static_assert(sizeof(Ability_PlayerJump_C_OnAbilityEvent_14C22D8E4EC91E31776CB1961AA65F52) == 0x000040, "Wrong size on Ability_PlayerJump_C_OnAbilityEvent_14C22D8E4EC91E31776CB1961AA65F52");
static_assert(offsetof(Ability_PlayerJump_C_OnAbilityEvent_14C22D8E4EC91E31776CB1961AA65F52, Event) == 0x000000, "Member 'Ability_PlayerJump_C_OnAbilityEvent_14C22D8E4EC91E31776CB1961AA65F52::Event' has a wrong offset!");

// Function Ability_PlayerJump.Ability_PlayerJump_C.OnAbilityEvent_1F79FB04463ECA4E6A1854B978E38E08
// 0x0040 (0x0040 - 0x0000)
struct Ability_PlayerJump_C_OnAbilityEvent_1F79FB04463ECA4E6A1854B978E38E08 final
{
public:
	struct FM1AbilityEvent                        Event;                                             // 0x0000(0x0040)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(Ability_PlayerJump_C_OnAbilityEvent_1F79FB04463ECA4E6A1854B978E38E08) == 0x000008, "Wrong alignment on Ability_PlayerJump_C_OnAbilityEvent_1F79FB04463ECA4E6A1854B978E38E08");
static_assert(sizeof(Ability_PlayerJump_C_OnAbilityEvent_1F79FB04463ECA4E6A1854B978E38E08) == 0x000040, "Wrong size on Ability_PlayerJump_C_OnAbilityEvent_1F79FB04463ECA4E6A1854B978E38E08");
static_assert(offsetof(Ability_PlayerJump_C_OnAbilityEvent_1F79FB04463ECA4E6A1854B978E38E08, Event) == 0x000000, "Member 'Ability_PlayerJump_C_OnAbilityEvent_1F79FB04463ECA4E6A1854B978E38E08::Event' has a wrong offset!");

// Function Ability_PlayerJump.Ability_PlayerJump_C.OnAbilityEvent_4573FAC14446C984EDA447BA7B2D81EB
// 0x0040 (0x0040 - 0x0000)
struct Ability_PlayerJump_C_OnAbilityEvent_4573FAC14446C984EDA447BA7B2D81EB final
{
public:
	struct FM1AbilityEvent                        Event;                                             // 0x0000(0x0040)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(Ability_PlayerJump_C_OnAbilityEvent_4573FAC14446C984EDA447BA7B2D81EB) == 0x000008, "Wrong alignment on Ability_PlayerJump_C_OnAbilityEvent_4573FAC14446C984EDA447BA7B2D81EB");
static_assert(sizeof(Ability_PlayerJump_C_OnAbilityEvent_4573FAC14446C984EDA447BA7B2D81EB) == 0x000040, "Wrong size on Ability_PlayerJump_C_OnAbilityEvent_4573FAC14446C984EDA447BA7B2D81EB");
static_assert(offsetof(Ability_PlayerJump_C_OnAbilityEvent_4573FAC14446C984EDA447BA7B2D81EB, Event) == 0x000000, "Member 'Ability_PlayerJump_C_OnAbilityEvent_4573FAC14446C984EDA447BA7B2D81EB::Event' has a wrong offset!");

// Function Ability_PlayerJump.Ability_PlayerJump_C.OnAbilityEvent_C0CEC1D14A18DDAC0474CFB1BAB64EAA
// 0x0040 (0x0040 - 0x0000)
struct Ability_PlayerJump_C_OnAbilityEvent_C0CEC1D14A18DDAC0474CFB1BAB64EAA final
{
public:
	struct FM1AbilityEvent                        Event;                                             // 0x0000(0x0040)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(Ability_PlayerJump_C_OnAbilityEvent_C0CEC1D14A18DDAC0474CFB1BAB64EAA) == 0x000008, "Wrong alignment on Ability_PlayerJump_C_OnAbilityEvent_C0CEC1D14A18DDAC0474CFB1BAB64EAA");
static_assert(sizeof(Ability_PlayerJump_C_OnAbilityEvent_C0CEC1D14A18DDAC0474CFB1BAB64EAA) == 0x000040, "Wrong size on Ability_PlayerJump_C_OnAbilityEvent_C0CEC1D14A18DDAC0474CFB1BAB64EAA");
static_assert(offsetof(Ability_PlayerJump_C_OnAbilityEvent_C0CEC1D14A18DDAC0474CFB1BAB64EAA, Event) == 0x000000, "Member 'Ability_PlayerJump_C_OnAbilityEvent_C0CEC1D14A18DDAC0474CFB1BAB64EAA::Event' has a wrong offset!");

// Function Ability_PlayerJump.Ability_PlayerJump_C.OnAbilityEvent_F0DF10F847B72C4747A91A8F8E4D78B3
// 0x0040 (0x0040 - 0x0000)
struct Ability_PlayerJump_C_OnAbilityEvent_F0DF10F847B72C4747A91A8F8E4D78B3 final
{
public:
	struct FM1AbilityEvent                        Event;                                             // 0x0000(0x0040)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(Ability_PlayerJump_C_OnAbilityEvent_F0DF10F847B72C4747A91A8F8E4D78B3) == 0x000008, "Wrong alignment on Ability_PlayerJump_C_OnAbilityEvent_F0DF10F847B72C4747A91A8F8E4D78B3");
static_assert(sizeof(Ability_PlayerJump_C_OnAbilityEvent_F0DF10F847B72C4747A91A8F8E4D78B3) == 0x000040, "Wrong size on Ability_PlayerJump_C_OnAbilityEvent_F0DF10F847B72C4747A91A8F8E4D78B3");
static_assert(offsetof(Ability_PlayerJump_C_OnAbilityEvent_F0DF10F847B72C4747A91A8F8E4D78B3, Event) == 0x000000, "Member 'Ability_PlayerJump_C_OnAbilityEvent_F0DF10F847B72C4747A91A8F8E4D78B3::Event' has a wrong offset!");

// Function Ability_PlayerJump.Ability_PlayerJump_C.OwnerOnMovementModeChanged
// 0x0010 (0x0010 - 0x0000)
struct Ability_PlayerJump_C_OwnerOnMovementModeChanged final
{
public:
	class ACharacter*                             Character;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EMovementMode                                 PrevMovementMode;                                  // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         PreviousCustomMode;                                // 0x0009(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ability_PlayerJump_C_OwnerOnMovementModeChanged) == 0x000008, "Wrong alignment on Ability_PlayerJump_C_OwnerOnMovementModeChanged");
static_assert(sizeof(Ability_PlayerJump_C_OwnerOnMovementModeChanged) == 0x000010, "Wrong size on Ability_PlayerJump_C_OwnerOnMovementModeChanged");
static_assert(offsetof(Ability_PlayerJump_C_OwnerOnMovementModeChanged, Character) == 0x000000, "Member 'Ability_PlayerJump_C_OwnerOnMovementModeChanged::Character' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_OwnerOnMovementModeChanged, PrevMovementMode) == 0x000008, "Member 'Ability_PlayerJump_C_OwnerOnMovementModeChanged::PrevMovementMode' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_OwnerOnMovementModeChanged, PreviousCustomMode) == 0x000009, "Member 'Ability_PlayerJump_C_OwnerOnMovementModeChanged::PreviousCustomMode' has a wrong offset!");

// Function Ability_PlayerJump.Ability_PlayerJump_C.ShouldApplyFallHighVFX
// 0x0068 (0x0068 - 0x0000)
struct Ability_PlayerJump_C_ShouldApplyFallHighVFX final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwnerActor_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AM1Player*                              K2Node_DynamicCast_AsM1Player;                     // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPawnMovementComponent*                 CallFunc_GetMovementComponent_ReturnValue;         // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	const class UM1CharacterAttribute*            CallFunc_BP_AttributeRef_ReturnValue;              // 0x0028(0x0008)(ConstParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UM1PlayerMovementComponent*             K2Node_DynamicCast_AsM1Player_Movement_Component;  // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UM1PlayerAttribute*                     K2Node_DynamicCast_AsM1Player_Attribute;           // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetFallingFromHeightTime_ReturnValue;     // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast;      // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_B_ImplicitCast;      // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ability_PlayerJump_C_ShouldApplyFallHighVFX) == 0x000008, "Wrong alignment on Ability_PlayerJump_C_ShouldApplyFallHighVFX");
static_assert(sizeof(Ability_PlayerJump_C_ShouldApplyFallHighVFX) == 0x000068, "Wrong size on Ability_PlayerJump_C_ShouldApplyFallHighVFX");
static_assert(offsetof(Ability_PlayerJump_C_ShouldApplyFallHighVFX, ReturnValue) == 0x000000, "Member 'Ability_PlayerJump_C_ShouldApplyFallHighVFX::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_ShouldApplyFallHighVFX, CallFunc_GetOwnerActor_ReturnValue) == 0x000008, "Member 'Ability_PlayerJump_C_ShouldApplyFallHighVFX::CallFunc_GetOwnerActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_ShouldApplyFallHighVFX, K2Node_DynamicCast_AsM1Player) == 0x000010, "Member 'Ability_PlayerJump_C_ShouldApplyFallHighVFX::K2Node_DynamicCast_AsM1Player' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_ShouldApplyFallHighVFX, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'Ability_PlayerJump_C_ShouldApplyFallHighVFX::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_ShouldApplyFallHighVFX, CallFunc_GetMovementComponent_ReturnValue) == 0x000020, "Member 'Ability_PlayerJump_C_ShouldApplyFallHighVFX::CallFunc_GetMovementComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_ShouldApplyFallHighVFX, CallFunc_BP_AttributeRef_ReturnValue) == 0x000028, "Member 'Ability_PlayerJump_C_ShouldApplyFallHighVFX::CallFunc_BP_AttributeRef_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_ShouldApplyFallHighVFX, K2Node_DynamicCast_AsM1Player_Movement_Component) == 0x000030, "Member 'Ability_PlayerJump_C_ShouldApplyFallHighVFX::K2Node_DynamicCast_AsM1Player_Movement_Component' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_ShouldApplyFallHighVFX, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'Ability_PlayerJump_C_ShouldApplyFallHighVFX::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_ShouldApplyFallHighVFX, K2Node_DynamicCast_AsM1Player_Attribute) == 0x000040, "Member 'Ability_PlayerJump_C_ShouldApplyFallHighVFX::K2Node_DynamicCast_AsM1Player_Attribute' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_ShouldApplyFallHighVFX, K2Node_DynamicCast_bSuccess_2) == 0x000048, "Member 'Ability_PlayerJump_C_ShouldApplyFallHighVFX::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_ShouldApplyFallHighVFX, CallFunc_GetFallingFromHeightTime_ReturnValue) == 0x00004C, "Member 'Ability_PlayerJump_C_ShouldApplyFallHighVFX::CallFunc_GetFallingFromHeightTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_ShouldApplyFallHighVFX, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000050, "Member 'Ability_PlayerJump_C_ShouldApplyFallHighVFX::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_ShouldApplyFallHighVFX, CallFunc_Greater_DoubleDouble_A_ImplicitCast) == 0x000058, "Member 'Ability_PlayerJump_C_ShouldApplyFallHighVFX::CallFunc_Greater_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_ShouldApplyFallHighVFX, CallFunc_Greater_DoubleDouble_B_ImplicitCast) == 0x000060, "Member 'Ability_PlayerJump_C_ShouldApplyFallHighVFX::CallFunc_Greater_DoubleDouble_B_ImplicitCast' has a wrong offset!");

// Function Ability_PlayerJump.Ability_PlayerJump_C.ShouldApplyLandHardVFX
// 0x0210 (0x0210 - 0x0000)
struct Ability_PlayerJump_C_ShouldApplyLandHardVFX final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   LandHardVFX;                                       // 0x0004(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             LandHardTransform;                                 // 0x0010(0x0030)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwnerActor_ReturnValue;                // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AM1Player*                              K2Node_DynamicCast_AsM1Player;                     // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsActiveTag_ReturnValue;                  // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52[0x6];                                       // 0x0052(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UPawnMovementComponent*                 CallFunc_GetMovementComponent_ReturnValue;         // 0x0058(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x0060(0x0010)(ConstParm, ReferenceParm)
	class UM1PlayerMovementComponent*             K2Node_DynamicCast_AsM1Player_Movement_Component;  // 0x0070(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x007C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_WillLandHard_ReturnValue;                 // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x3];                                       // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x008C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x3];                                       // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x009C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x00A8(0x009C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x0144(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0145(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0146(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_147[0x1];                                      // 0x0147(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0150(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x015C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0168(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0174(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0180(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0188(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0190(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x01AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x01B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x01C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CC[0x4];                                      // 0x01CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_Conv_VectorToTransform_ReturnValue;       // 0x01D0(0x0030)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Map_Find_Value;                           // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ability_PlayerJump_C_ShouldApplyLandHardVFX) == 0x000010, "Wrong alignment on Ability_PlayerJump_C_ShouldApplyLandHardVFX");
static_assert(sizeof(Ability_PlayerJump_C_ShouldApplyLandHardVFX) == 0x000210, "Wrong size on Ability_PlayerJump_C_ShouldApplyLandHardVFX");
static_assert(offsetof(Ability_PlayerJump_C_ShouldApplyLandHardVFX, ReturnValue) == 0x000000, "Member 'Ability_PlayerJump_C_ShouldApplyLandHardVFX::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_ShouldApplyLandHardVFX, LandHardVFX) == 0x000004, "Member 'Ability_PlayerJump_C_ShouldApplyLandHardVFX::LandHardVFX' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_ShouldApplyLandHardVFX, LandHardTransform) == 0x000010, "Member 'Ability_PlayerJump_C_ShouldApplyLandHardVFX::LandHardTransform' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_ShouldApplyLandHardVFX, CallFunc_GetOwnerActor_ReturnValue) == 0x000040, "Member 'Ability_PlayerJump_C_ShouldApplyLandHardVFX::CallFunc_GetOwnerActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_ShouldApplyLandHardVFX, K2Node_DynamicCast_AsM1Player) == 0x000048, "Member 'Ability_PlayerJump_C_ShouldApplyLandHardVFX::K2Node_DynamicCast_AsM1Player' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_ShouldApplyLandHardVFX, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'Ability_PlayerJump_C_ShouldApplyLandHardVFX::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_ShouldApplyLandHardVFX, CallFunc_IsActiveTag_ReturnValue) == 0x000051, "Member 'Ability_PlayerJump_C_ShouldApplyLandHardVFX::CallFunc_IsActiveTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_ShouldApplyLandHardVFX, CallFunc_GetMovementComponent_ReturnValue) == 0x000058, "Member 'Ability_PlayerJump_C_ShouldApplyLandHardVFX::CallFunc_GetMovementComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_ShouldApplyLandHardVFX, K2Node_MakeArray_Array) == 0x000060, "Member 'Ability_PlayerJump_C_ShouldApplyLandHardVFX::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_ShouldApplyLandHardVFX, K2Node_DynamicCast_AsM1Player_Movement_Component) == 0x000070, "Member 'Ability_PlayerJump_C_ShouldApplyLandHardVFX::K2Node_DynamicCast_AsM1Player_Movement_Component' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_ShouldApplyLandHardVFX, K2Node_DynamicCast_bSuccess_1) == 0x000078, "Member 'Ability_PlayerJump_C_ShouldApplyLandHardVFX::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_ShouldApplyLandHardVFX, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00007C, "Member 'Ability_PlayerJump_C_ShouldApplyLandHardVFX::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_ShouldApplyLandHardVFX, CallFunc_WillLandHard_ReturnValue) == 0x000088, "Member 'Ability_PlayerJump_C_ShouldApplyLandHardVFX::CallFunc_WillLandHard_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_ShouldApplyLandHardVFX, CallFunc_Subtract_VectorVector_ReturnValue) == 0x00008C, "Member 'Ability_PlayerJump_C_ShouldApplyLandHardVFX::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_ShouldApplyLandHardVFX, CallFunc_BooleanOR_ReturnValue) == 0x000098, "Member 'Ability_PlayerJump_C_ShouldApplyLandHardVFX::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_ShouldApplyLandHardVFX, CallFunc_Add_VectorVector_ReturnValue) == 0x00009C, "Member 'Ability_PlayerJump_C_ShouldApplyLandHardVFX::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_ShouldApplyLandHardVFX, CallFunc_LineTraceSingle_OutHit) == 0x0000A8, "Member 'Ability_PlayerJump_C_ShouldApplyLandHardVFX::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_ShouldApplyLandHardVFX, CallFunc_LineTraceSingle_ReturnValue) == 0x000144, "Member 'Ability_PlayerJump_C_ShouldApplyLandHardVFX::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_ShouldApplyLandHardVFX, CallFunc_BreakHitResult_bBlockingHit) == 0x000145, "Member 'Ability_PlayerJump_C_ShouldApplyLandHardVFX::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_ShouldApplyLandHardVFX, CallFunc_BreakHitResult_bInitialOverlap) == 0x000146, "Member 'Ability_PlayerJump_C_ShouldApplyLandHardVFX::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_ShouldApplyLandHardVFX, CallFunc_BreakHitResult_Time) == 0x000148, "Member 'Ability_PlayerJump_C_ShouldApplyLandHardVFX::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_ShouldApplyLandHardVFX, CallFunc_BreakHitResult_Distance) == 0x00014C, "Member 'Ability_PlayerJump_C_ShouldApplyLandHardVFX::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_ShouldApplyLandHardVFX, CallFunc_BreakHitResult_Location) == 0x000150, "Member 'Ability_PlayerJump_C_ShouldApplyLandHardVFX::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_ShouldApplyLandHardVFX, CallFunc_BreakHitResult_ImpactPoint) == 0x00015C, "Member 'Ability_PlayerJump_C_ShouldApplyLandHardVFX::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_ShouldApplyLandHardVFX, CallFunc_BreakHitResult_Normal) == 0x000168, "Member 'Ability_PlayerJump_C_ShouldApplyLandHardVFX::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_ShouldApplyLandHardVFX, CallFunc_BreakHitResult_ImpactNormal) == 0x000174, "Member 'Ability_PlayerJump_C_ShouldApplyLandHardVFX::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_ShouldApplyLandHardVFX, CallFunc_BreakHitResult_PhysMat) == 0x000180, "Member 'Ability_PlayerJump_C_ShouldApplyLandHardVFX::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_ShouldApplyLandHardVFX, CallFunc_BreakHitResult_HitActor) == 0x000188, "Member 'Ability_PlayerJump_C_ShouldApplyLandHardVFX::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_ShouldApplyLandHardVFX, CallFunc_BreakHitResult_HitComponent) == 0x000190, "Member 'Ability_PlayerJump_C_ShouldApplyLandHardVFX::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_ShouldApplyLandHardVFX, CallFunc_BreakHitResult_HitBoneName) == 0x000198, "Member 'Ability_PlayerJump_C_ShouldApplyLandHardVFX::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_ShouldApplyLandHardVFX, CallFunc_BreakHitResult_BoneName) == 0x0001A0, "Member 'Ability_PlayerJump_C_ShouldApplyLandHardVFX::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_ShouldApplyLandHardVFX, CallFunc_BreakHitResult_HitItem) == 0x0001A8, "Member 'Ability_PlayerJump_C_ShouldApplyLandHardVFX::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_ShouldApplyLandHardVFX, CallFunc_BreakHitResult_ElementIndex) == 0x0001AC, "Member 'Ability_PlayerJump_C_ShouldApplyLandHardVFX::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_ShouldApplyLandHardVFX, CallFunc_BreakHitResult_FaceIndex) == 0x0001B0, "Member 'Ability_PlayerJump_C_ShouldApplyLandHardVFX::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_ShouldApplyLandHardVFX, CallFunc_BreakHitResult_TraceStart) == 0x0001B4, "Member 'Ability_PlayerJump_C_ShouldApplyLandHardVFX::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_ShouldApplyLandHardVFX, CallFunc_BreakHitResult_TraceEnd) == 0x0001C0, "Member 'Ability_PlayerJump_C_ShouldApplyLandHardVFX::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_ShouldApplyLandHardVFX, CallFunc_Conv_VectorToTransform_ReturnValue) == 0x0001D0, "Member 'Ability_PlayerJump_C_ShouldApplyLandHardVFX::CallFunc_Conv_VectorToTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_ShouldApplyLandHardVFX, CallFunc_Map_Find_Value) == 0x000200, "Member 'Ability_PlayerJump_C_ShouldApplyLandHardVFX::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_ShouldApplyLandHardVFX, CallFunc_Map_Find_ReturnValue) == 0x000208, "Member 'Ability_PlayerJump_C_ShouldApplyLandHardVFX::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function Ability_PlayerJump.Ability_PlayerJump_C.ShouldPlayFallAnim
// 0x0060 (0x0060 - 0x0000)
struct Ability_PlayerJump_C_ShouldPlayFallAnim final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwnerActor_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AM1Player*                              K2Node_DynamicCast_AsM1Player;                     // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPawnMovementComponent*                 CallFunc_GetMovementComponent_ReturnValue;         // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UM1PlayerMovementComponent*             K2Node_DynamicCast_AsM1Player_Movement_Component;  // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32[0x2];                                       // 0x0032(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetFallingFromHeightTime_ReturnValue;     // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UM1CharacterAttribute*            CallFunc_BP_AttributeRef_ReturnValue;              // 0x0038(0x0008)(ConstParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UM1PlayerAttribute*                     K2Node_DynamicCast_AsM1Player_Attribute;           // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A[0x6];                                       // 0x004A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast;      // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_B_ImplicitCast;      // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ability_PlayerJump_C_ShouldPlayFallAnim) == 0x000008, "Wrong alignment on Ability_PlayerJump_C_ShouldPlayFallAnim");
static_assert(sizeof(Ability_PlayerJump_C_ShouldPlayFallAnim) == 0x000060, "Wrong size on Ability_PlayerJump_C_ShouldPlayFallAnim");
static_assert(offsetof(Ability_PlayerJump_C_ShouldPlayFallAnim, ReturnValue) == 0x000000, "Member 'Ability_PlayerJump_C_ShouldPlayFallAnim::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_ShouldPlayFallAnim, CallFunc_GetOwnerActor_ReturnValue) == 0x000008, "Member 'Ability_PlayerJump_C_ShouldPlayFallAnim::CallFunc_GetOwnerActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_ShouldPlayFallAnim, K2Node_DynamicCast_AsM1Player) == 0x000010, "Member 'Ability_PlayerJump_C_ShouldPlayFallAnim::K2Node_DynamicCast_AsM1Player' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_ShouldPlayFallAnim, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'Ability_PlayerJump_C_ShouldPlayFallAnim::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_ShouldPlayFallAnim, CallFunc_GetMovementComponent_ReturnValue) == 0x000020, "Member 'Ability_PlayerJump_C_ShouldPlayFallAnim::CallFunc_GetMovementComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_ShouldPlayFallAnim, K2Node_DynamicCast_AsM1Player_Movement_Component) == 0x000028, "Member 'Ability_PlayerJump_C_ShouldPlayFallAnim::K2Node_DynamicCast_AsM1Player_Movement_Component' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_ShouldPlayFallAnim, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'Ability_PlayerJump_C_ShouldPlayFallAnim::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_ShouldPlayFallAnim, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000031, "Member 'Ability_PlayerJump_C_ShouldPlayFallAnim::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_ShouldPlayFallAnim, CallFunc_GetFallingFromHeightTime_ReturnValue) == 0x000034, "Member 'Ability_PlayerJump_C_ShouldPlayFallAnim::CallFunc_GetFallingFromHeightTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_ShouldPlayFallAnim, CallFunc_BP_AttributeRef_ReturnValue) == 0x000038, "Member 'Ability_PlayerJump_C_ShouldPlayFallAnim::CallFunc_BP_AttributeRef_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_ShouldPlayFallAnim, K2Node_DynamicCast_AsM1Player_Attribute) == 0x000040, "Member 'Ability_PlayerJump_C_ShouldPlayFallAnim::K2Node_DynamicCast_AsM1Player_Attribute' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_ShouldPlayFallAnim, K2Node_DynamicCast_bSuccess_2) == 0x000048, "Member 'Ability_PlayerJump_C_ShouldPlayFallAnim::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_ShouldPlayFallAnim, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000049, "Member 'Ability_PlayerJump_C_ShouldPlayFallAnim::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_ShouldPlayFallAnim, CallFunc_Greater_DoubleDouble_A_ImplicitCast) == 0x000050, "Member 'Ability_PlayerJump_C_ShouldPlayFallAnim::CallFunc_Greater_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_ShouldPlayFallAnim, CallFunc_Greater_DoubleDouble_B_ImplicitCast) == 0x000058, "Member 'Ability_PlayerJump_C_ShouldPlayFallAnim::CallFunc_Greater_DoubleDouble_B_ImplicitCast' has a wrong offset!");

// Function Ability_PlayerJump.Ability_PlayerJump_C.Unapply_FallingSFX
// 0x0020 (0x0020 - 0x0000)
struct Ability_PlayerJump_C_Unapply_FallingSFX final
{
public:
	class AActor*                                 CallFunc_GetOwnerActor_ReturnValue;                // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EValidOutputPin                               CallFunc_FindAkComponentWithValid_OutputPins;      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UM1AkComponent*                         CallFunc_FindAkComponentWithValid_ReturnValue;     // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ability_PlayerJump_C_Unapply_FallingSFX) == 0x000008, "Wrong alignment on Ability_PlayerJump_C_Unapply_FallingSFX");
static_assert(sizeof(Ability_PlayerJump_C_Unapply_FallingSFX) == 0x000020, "Wrong size on Ability_PlayerJump_C_Unapply_FallingSFX");
static_assert(offsetof(Ability_PlayerJump_C_Unapply_FallingSFX, CallFunc_GetOwnerActor_ReturnValue) == 0x000000, "Member 'Ability_PlayerJump_C_Unapply_FallingSFX::CallFunc_GetOwnerActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_Unapply_FallingSFX, CallFunc_FindAkComponentWithValid_OutputPins) == 0x000008, "Member 'Ability_PlayerJump_C_Unapply_FallingSFX::CallFunc_FindAkComponentWithValid_OutputPins' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_Unapply_FallingSFX, CallFunc_FindAkComponentWithValid_ReturnValue) == 0x000010, "Member 'Ability_PlayerJump_C_Unapply_FallingSFX::CallFunc_FindAkComponentWithValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_Unapply_FallingSFX, K2Node_SwitchEnum_CmpSuccess) == 0x000018, "Member 'Ability_PlayerJump_C_Unapply_FallingSFX::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function Ability_PlayerJump.Ability_PlayerJump_C.Unapply_JumpMontage
// 0x0058 (0x0058 - 0x0000)
struct Ability_PlayerJump_C_Unapply_JumpMontage final
{
public:
	bool                                          bImmediately;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAlphaBlendArgs                        CallFunc_GetBlendOutArgs_ReturnValue;              // 0x0008(0x0010)(NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           CallFunc_GetJumpMontageParam_outMontage;           // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwnerActor_ReturnValue;                // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AM1Player*                              K2Node_DynamicCast_AsM1Player;                     // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ability_PlayerJump_C_Unapply_JumpMontage) == 0x000008, "Wrong alignment on Ability_PlayerJump_C_Unapply_JumpMontage");
static_assert(sizeof(Ability_PlayerJump_C_Unapply_JumpMontage) == 0x000058, "Wrong size on Ability_PlayerJump_C_Unapply_JumpMontage");
static_assert(offsetof(Ability_PlayerJump_C_Unapply_JumpMontage, bImmediately) == 0x000000, "Member 'Ability_PlayerJump_C_Unapply_JumpMontage::bImmediately' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_Unapply_JumpMontage, CallFunc_GetBlendOutArgs_ReturnValue) == 0x000008, "Member 'Ability_PlayerJump_C_Unapply_JumpMontage::CallFunc_GetBlendOutArgs_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_Unapply_JumpMontage, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'Ability_PlayerJump_C_Unapply_JumpMontage::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_Unapply_JumpMontage, CallFunc_GetJumpMontageParam_outMontage) == 0x000020, "Member 'Ability_PlayerJump_C_Unapply_JumpMontage::CallFunc_GetJumpMontageParam_outMontage' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_Unapply_JumpMontage, CallFunc_GetOwnerActor_ReturnValue) == 0x000028, "Member 'Ability_PlayerJump_C_Unapply_JumpMontage::CallFunc_GetOwnerActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_Unapply_JumpMontage, CallFunc_IsValid_ReturnValue_1) == 0x000030, "Member 'Ability_PlayerJump_C_Unapply_JumpMontage::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_Unapply_JumpMontage, K2Node_DynamicCast_AsM1Player) == 0x000038, "Member 'Ability_PlayerJump_C_Unapply_JumpMontage::K2Node_DynamicCast_AsM1Player' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_Unapply_JumpMontage, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'Ability_PlayerJump_C_Unapply_JumpMontage::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_Unapply_JumpMontage, CallFunc_GetAnimInstance_ReturnValue) == 0x000048, "Member 'Ability_PlayerJump_C_Unapply_JumpMontage::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_Unapply_JumpMontage, CallFunc_IsValid_ReturnValue_2) == 0x000050, "Member 'Ability_PlayerJump_C_Unapply_JumpMontage::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");

// Function Ability_PlayerJump.Ability_PlayerJump_C.ShouldApplyFallingSFX
// 0x0020 (0x0020 - 0x0000)
struct Ability_PlayerJump_C_ShouldApplyFallingSFX final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsGamePaused_ReturnValue;                 // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwnerActor_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsActiveTag_ReturnValue;                  // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsActiveTag_ReturnValue_1;                // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsActiveTag_ReturnValue_2;                // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0017(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ability_PlayerJump_C_ShouldApplyFallingSFX) == 0x000008, "Wrong alignment on Ability_PlayerJump_C_ShouldApplyFallingSFX");
static_assert(sizeof(Ability_PlayerJump_C_ShouldApplyFallingSFX) == 0x000020, "Wrong size on Ability_PlayerJump_C_ShouldApplyFallingSFX");
static_assert(offsetof(Ability_PlayerJump_C_ShouldApplyFallingSFX, ReturnValue) == 0x000000, "Member 'Ability_PlayerJump_C_ShouldApplyFallingSFX::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_ShouldApplyFallingSFX, CallFunc_IsGamePaused_ReturnValue) == 0x000001, "Member 'Ability_PlayerJump_C_ShouldApplyFallingSFX::CallFunc_IsGamePaused_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_ShouldApplyFallingSFX, CallFunc_GetOwnerActor_ReturnValue) == 0x000008, "Member 'Ability_PlayerJump_C_ShouldApplyFallingSFX::CallFunc_GetOwnerActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_ShouldApplyFallingSFX, CallFunc_Not_PreBool_ReturnValue) == 0x000010, "Member 'Ability_PlayerJump_C_ShouldApplyFallingSFX::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_ShouldApplyFallingSFX, CallFunc_IsActiveTag_ReturnValue) == 0x000011, "Member 'Ability_PlayerJump_C_ShouldApplyFallingSFX::CallFunc_IsActiveTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_ShouldApplyFallingSFX, CallFunc_IsActiveTag_ReturnValue_1) == 0x000012, "Member 'Ability_PlayerJump_C_ShouldApplyFallingSFX::CallFunc_IsActiveTag_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_ShouldApplyFallingSFX, CallFunc_IsActiveTag_ReturnValue_2) == 0x000013, "Member 'Ability_PlayerJump_C_ShouldApplyFallingSFX::CallFunc_IsActiveTag_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_ShouldApplyFallingSFX, CallFunc_Not_PreBool_ReturnValue_1) == 0x000014, "Member 'Ability_PlayerJump_C_ShouldApplyFallingSFX::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_ShouldApplyFallingSFX, CallFunc_Not_PreBool_ReturnValue_2) == 0x000015, "Member 'Ability_PlayerJump_C_ShouldApplyFallingSFX::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_ShouldApplyFallingSFX, CallFunc_BooleanAND_ReturnValue) == 0x000016, "Member 'Ability_PlayerJump_C_ShouldApplyFallingSFX::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_ShouldApplyFallingSFX, CallFunc_BooleanAND_ReturnValue_1) == 0x000017, "Member 'Ability_PlayerJump_C_ShouldApplyFallingSFX::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ability_PlayerJump_C_ShouldApplyFallingSFX, CallFunc_BooleanAND_ReturnValue_2) == 0x000018, "Member 'Ability_PlayerJump_C_ShouldApplyFallingSFX::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");

}

