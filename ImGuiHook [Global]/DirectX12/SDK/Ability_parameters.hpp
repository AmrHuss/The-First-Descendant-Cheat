#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Ability

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function Ability.Ability_C.AbilityLayer
// 0x0020 (0x0020 - 0x0000)
struct Ability_C_AbilityLayer final
{
public:
	struct FPoseLink                              InPose;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              AbilityLayer_0;                                    // 0x0010(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(Ability_C_AbilityLayer) == 0x000008, "Wrong alignment on Ability_C_AbilityLayer");
static_assert(sizeof(Ability_C_AbilityLayer) == 0x000020, "Wrong size on Ability_C_AbilityLayer");
static_assert(offsetof(Ability_C_AbilityLayer, InPose) == 0x000000, "Member 'Ability_C_AbilityLayer::InPose' has a wrong offset!");
static_assert(offsetof(Ability_C_AbilityLayer, AbilityLayer_0) == 0x000010, "Member 'Ability_C_AbilityLayer::AbilityLayer_0' has a wrong offset!");

// Function Ability.Ability_C.AnimGraph
// 0x0010 (0x0010 - 0x0000)
struct Ability_C_AnimGraph final
{
public:
	struct FPoseLink                              AnimGraph_0;                                       // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(Ability_C_AnimGraph) == 0x000008, "Wrong alignment on Ability_C_AnimGraph");
static_assert(sizeof(Ability_C_AnimGraph) == 0x000010, "Wrong size on Ability_C_AnimGraph");
static_assert(offsetof(Ability_C_AnimGraph, AnimGraph_0) == 0x000000, "Member 'Ability_C_AnimGraph::AnimGraph_0' has a wrong offset!");

// Function Ability.Ability_C.DeboneIKLayer
// 0x0020 (0x0020 - 0x0000)
struct Ability_C_DeboneIKLayer final
{
public:
	struct FPoseLink                              InPose_BeforeDeboneIK;                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              DeboneIKLayer_0;                                   // 0x0010(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(Ability_C_DeboneIKLayer) == 0x000008, "Wrong alignment on Ability_C_DeboneIKLayer");
static_assert(sizeof(Ability_C_DeboneIKLayer) == 0x000020, "Wrong size on Ability_C_DeboneIKLayer");
static_assert(offsetof(Ability_C_DeboneIKLayer, InPose_BeforeDeboneIK) == 0x000000, "Member 'Ability_C_DeboneIKLayer::InPose_BeforeDeboneIK' has a wrong offset!");
static_assert(offsetof(Ability_C_DeboneIKLayer, DeboneIKLayer_0) == 0x000010, "Member 'Ability_C_DeboneIKLayer::DeboneIKLayer_0' has a wrong offset!");

// Function Ability.Ability_C.ExecuteUbergraph_Ability
// 0x0148 (0x0148 - 0x0000)
struct Ability_C_ExecuteUbergraph_Ability final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue_1;             // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue_2;             // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRelevantAnimTimeRemaining_ReturnValue; // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13[0x5];                                       // 0x0013(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetDeboneSocketAlpha_OutAlpha;            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetDeboneSocketAlpha_OutAlpha_1;          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x0058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x0064(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_2;                // 0x0070(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_2;                // 0x007C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_2;                   // 0x0088(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetDeboneSocketAlpha_OutAlpha_2;          // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetDeboneSocketAlpha_OutAlpha_3;          // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetDeboneSocketAlpha_OutAlpha_4;          // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetDeboneSocketAlpha_OutAlpha_5;          // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetDeboneSocketAlpha_OutAlpha_6;          // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_3;                // 0x00C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_3;                // 0x00CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_3;                   // 0x00D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_4;                // 0x00E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_4;                // 0x00F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_4;                   // 0x00FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetDeboneSocketAlpha_OutAlpha_7;          // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetDeboneSocketAlpha_OutAlpha_8;          // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_LessEqual_DoubleDouble_A_ImplicitCast;    // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_StructMemberSet_Alpha_ImplicitCast;         // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_StructMemberSet_Alpha_ImplicitCast_1;       // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_StructMemberSet_Alpha_ImplicitCast_2;       // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_StructMemberSet_Alpha_ImplicitCast_3;       // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_StructMemberSet_Alpha_ImplicitCast_4;       // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_StructMemberSet_Alpha_ImplicitCast_5;       // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_StructMemberSet_Alpha_ImplicitCast_6;       // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_StructMemberSet_Alpha_ImplicitCast_7;       // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_StructMemberSet_Alpha_ImplicitCast_8;       // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ability_C_ExecuteUbergraph_Ability) == 0x000008, "Wrong alignment on Ability_C_ExecuteUbergraph_Ability");
static_assert(sizeof(Ability_C_ExecuteUbergraph_Ability) == 0x000148, "Wrong size on Ability_C_ExecuteUbergraph_Ability");
static_assert(offsetof(Ability_C_ExecuteUbergraph_Ability, EntryPoint) == 0x000000, "Member 'Ability_C_ExecuteUbergraph_Ability::EntryPoint' has a wrong offset!");
static_assert(offsetof(Ability_C_ExecuteUbergraph_Ability, CallFunc_Greater_IntInt_ReturnValue) == 0x000004, "Member 'Ability_C_ExecuteUbergraph_Ability::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_C_ExecuteUbergraph_Ability, CallFunc_Conv_IntToByte_ReturnValue) == 0x000005, "Member 'Ability_C_ExecuteUbergraph_Ability::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_C_ExecuteUbergraph_Ability, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000006, "Member 'Ability_C_ExecuteUbergraph_Ability::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ability_C_ExecuteUbergraph_Ability, CallFunc_Conv_IntToByte_ReturnValue_1) == 0x000007, "Member 'Ability_C_ExecuteUbergraph_Ability::CallFunc_Conv_IntToByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ability_C_ExecuteUbergraph_Ability, CallFunc_Conv_IntToByte_ReturnValue_2) == 0x000008, "Member 'Ability_C_ExecuteUbergraph_Ability::CallFunc_Conv_IntToByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ability_C_ExecuteUbergraph_Ability, CallFunc_GetRelevantAnimTimeRemaining_ReturnValue) == 0x00000C, "Member 'Ability_C_ExecuteUbergraph_Ability::CallFunc_GetRelevantAnimTimeRemaining_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_C_ExecuteUbergraph_Ability, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000010, "Member 'Ability_C_ExecuteUbergraph_Ability::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_C_ExecuteUbergraph_Ability, CallFunc_Not_PreBool_ReturnValue) == 0x000011, "Member 'Ability_C_ExecuteUbergraph_Ability::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_C_ExecuteUbergraph_Ability, CallFunc_BooleanAND_ReturnValue) == 0x000012, "Member 'Ability_C_ExecuteUbergraph_Ability::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_C_ExecuteUbergraph_Ability, CallFunc_GetDeboneSocketAlpha_OutAlpha) == 0x000018, "Member 'Ability_C_ExecuteUbergraph_Ability::CallFunc_GetDeboneSocketAlpha_OutAlpha' has a wrong offset!");
static_assert(offsetof(Ability_C_ExecuteUbergraph_Ability, CallFunc_GetDeboneSocketAlpha_OutAlpha_1) == 0x000020, "Member 'Ability_C_ExecuteUbergraph_Ability::CallFunc_GetDeboneSocketAlpha_OutAlpha_1' has a wrong offset!");
static_assert(offsetof(Ability_C_ExecuteUbergraph_Ability, CallFunc_BreakTransform_Location) == 0x000028, "Member 'Ability_C_ExecuteUbergraph_Ability::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(Ability_C_ExecuteUbergraph_Ability, CallFunc_BreakTransform_Rotation) == 0x000034, "Member 'Ability_C_ExecuteUbergraph_Ability::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(Ability_C_ExecuteUbergraph_Ability, CallFunc_BreakTransform_Scale) == 0x000040, "Member 'Ability_C_ExecuteUbergraph_Ability::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(Ability_C_ExecuteUbergraph_Ability, CallFunc_BreakTransform_Location_1) == 0x00004C, "Member 'Ability_C_ExecuteUbergraph_Ability::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(Ability_C_ExecuteUbergraph_Ability, CallFunc_BreakTransform_Rotation_1) == 0x000058, "Member 'Ability_C_ExecuteUbergraph_Ability::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(Ability_C_ExecuteUbergraph_Ability, CallFunc_BreakTransform_Scale_1) == 0x000064, "Member 'Ability_C_ExecuteUbergraph_Ability::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(Ability_C_ExecuteUbergraph_Ability, CallFunc_BreakTransform_Location_2) == 0x000070, "Member 'Ability_C_ExecuteUbergraph_Ability::CallFunc_BreakTransform_Location_2' has a wrong offset!");
static_assert(offsetof(Ability_C_ExecuteUbergraph_Ability, CallFunc_BreakTransform_Rotation_2) == 0x00007C, "Member 'Ability_C_ExecuteUbergraph_Ability::CallFunc_BreakTransform_Rotation_2' has a wrong offset!");
static_assert(offsetof(Ability_C_ExecuteUbergraph_Ability, CallFunc_BreakTransform_Scale_2) == 0x000088, "Member 'Ability_C_ExecuteUbergraph_Ability::CallFunc_BreakTransform_Scale_2' has a wrong offset!");
static_assert(offsetof(Ability_C_ExecuteUbergraph_Ability, CallFunc_GetDeboneSocketAlpha_OutAlpha_2) == 0x000098, "Member 'Ability_C_ExecuteUbergraph_Ability::CallFunc_GetDeboneSocketAlpha_OutAlpha_2' has a wrong offset!");
static_assert(offsetof(Ability_C_ExecuteUbergraph_Ability, CallFunc_GetDeboneSocketAlpha_OutAlpha_3) == 0x0000A0, "Member 'Ability_C_ExecuteUbergraph_Ability::CallFunc_GetDeboneSocketAlpha_OutAlpha_3' has a wrong offset!");
static_assert(offsetof(Ability_C_ExecuteUbergraph_Ability, CallFunc_GetDeboneSocketAlpha_OutAlpha_4) == 0x0000A8, "Member 'Ability_C_ExecuteUbergraph_Ability::CallFunc_GetDeboneSocketAlpha_OutAlpha_4' has a wrong offset!");
static_assert(offsetof(Ability_C_ExecuteUbergraph_Ability, CallFunc_GetDeboneSocketAlpha_OutAlpha_5) == 0x0000B0, "Member 'Ability_C_ExecuteUbergraph_Ability::CallFunc_GetDeboneSocketAlpha_OutAlpha_5' has a wrong offset!");
static_assert(offsetof(Ability_C_ExecuteUbergraph_Ability, CallFunc_GetDeboneSocketAlpha_OutAlpha_6) == 0x0000B8, "Member 'Ability_C_ExecuteUbergraph_Ability::CallFunc_GetDeboneSocketAlpha_OutAlpha_6' has a wrong offset!");
static_assert(offsetof(Ability_C_ExecuteUbergraph_Ability, CallFunc_BreakTransform_Location_3) == 0x0000C0, "Member 'Ability_C_ExecuteUbergraph_Ability::CallFunc_BreakTransform_Location_3' has a wrong offset!");
static_assert(offsetof(Ability_C_ExecuteUbergraph_Ability, CallFunc_BreakTransform_Rotation_3) == 0x0000CC, "Member 'Ability_C_ExecuteUbergraph_Ability::CallFunc_BreakTransform_Rotation_3' has a wrong offset!");
static_assert(offsetof(Ability_C_ExecuteUbergraph_Ability, CallFunc_BreakTransform_Scale_3) == 0x0000D8, "Member 'Ability_C_ExecuteUbergraph_Ability::CallFunc_BreakTransform_Scale_3' has a wrong offset!");
static_assert(offsetof(Ability_C_ExecuteUbergraph_Ability, CallFunc_BreakTransform_Location_4) == 0x0000E4, "Member 'Ability_C_ExecuteUbergraph_Ability::CallFunc_BreakTransform_Location_4' has a wrong offset!");
static_assert(offsetof(Ability_C_ExecuteUbergraph_Ability, CallFunc_BreakTransform_Rotation_4) == 0x0000F0, "Member 'Ability_C_ExecuteUbergraph_Ability::CallFunc_BreakTransform_Rotation_4' has a wrong offset!");
static_assert(offsetof(Ability_C_ExecuteUbergraph_Ability, CallFunc_BreakTransform_Scale_4) == 0x0000FC, "Member 'Ability_C_ExecuteUbergraph_Ability::CallFunc_BreakTransform_Scale_4' has a wrong offset!");
static_assert(offsetof(Ability_C_ExecuteUbergraph_Ability, CallFunc_GetDeboneSocketAlpha_OutAlpha_7) == 0x000108, "Member 'Ability_C_ExecuteUbergraph_Ability::CallFunc_GetDeboneSocketAlpha_OutAlpha_7' has a wrong offset!");
static_assert(offsetof(Ability_C_ExecuteUbergraph_Ability, CallFunc_GetDeboneSocketAlpha_OutAlpha_8) == 0x000110, "Member 'Ability_C_ExecuteUbergraph_Ability::CallFunc_GetDeboneSocketAlpha_OutAlpha_8' has a wrong offset!");
static_assert(offsetof(Ability_C_ExecuteUbergraph_Ability, CallFunc_LessEqual_DoubleDouble_A_ImplicitCast) == 0x000118, "Member 'Ability_C_ExecuteUbergraph_Ability::CallFunc_LessEqual_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ability_C_ExecuteUbergraph_Ability, K2Node_StructMemberSet_Alpha_ImplicitCast) == 0x000120, "Member 'Ability_C_ExecuteUbergraph_Ability::K2Node_StructMemberSet_Alpha_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ability_C_ExecuteUbergraph_Ability, K2Node_StructMemberSet_Alpha_ImplicitCast_1) == 0x000124, "Member 'Ability_C_ExecuteUbergraph_Ability::K2Node_StructMemberSet_Alpha_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Ability_C_ExecuteUbergraph_Ability, K2Node_StructMemberSet_Alpha_ImplicitCast_2) == 0x000128, "Member 'Ability_C_ExecuteUbergraph_Ability::K2Node_StructMemberSet_Alpha_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(Ability_C_ExecuteUbergraph_Ability, K2Node_StructMemberSet_Alpha_ImplicitCast_3) == 0x00012C, "Member 'Ability_C_ExecuteUbergraph_Ability::K2Node_StructMemberSet_Alpha_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(Ability_C_ExecuteUbergraph_Ability, K2Node_StructMemberSet_Alpha_ImplicitCast_4) == 0x000130, "Member 'Ability_C_ExecuteUbergraph_Ability::K2Node_StructMemberSet_Alpha_ImplicitCast_4' has a wrong offset!");
static_assert(offsetof(Ability_C_ExecuteUbergraph_Ability, K2Node_StructMemberSet_Alpha_ImplicitCast_5) == 0x000134, "Member 'Ability_C_ExecuteUbergraph_Ability::K2Node_StructMemberSet_Alpha_ImplicitCast_5' has a wrong offset!");
static_assert(offsetof(Ability_C_ExecuteUbergraph_Ability, K2Node_StructMemberSet_Alpha_ImplicitCast_6) == 0x000138, "Member 'Ability_C_ExecuteUbergraph_Ability::K2Node_StructMemberSet_Alpha_ImplicitCast_6' has a wrong offset!");
static_assert(offsetof(Ability_C_ExecuteUbergraph_Ability, K2Node_StructMemberSet_Alpha_ImplicitCast_7) == 0x00013C, "Member 'Ability_C_ExecuteUbergraph_Ability::K2Node_StructMemberSet_Alpha_ImplicitCast_7' has a wrong offset!");
static_assert(offsetof(Ability_C_ExecuteUbergraph_Ability, K2Node_StructMemberSet_Alpha_ImplicitCast_8) == 0x000140, "Member 'Ability_C_ExecuteUbergraph_Ability::K2Node_StructMemberSet_Alpha_ImplicitCast_8' has a wrong offset!");

// Function Ability.Ability_C.GetDeboneSocketAlpha
// 0x0038 (0x0038 - 0x0000)
struct Ability_C_GetDeboneSocketAlpha final
{
public:
	bool                                          IsValid;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CurveName;                                         // 0x0004(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        OutAlpha;                                          // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_BoolToDouble_ReturnValue;            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurveValue_ReturnValue;                // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_B_ImplicitCast;     // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ability_C_GetDeboneSocketAlpha) == 0x000008, "Wrong alignment on Ability_C_GetDeboneSocketAlpha");
static_assert(sizeof(Ability_C_GetDeboneSocketAlpha) == 0x000038, "Wrong size on Ability_C_GetDeboneSocketAlpha");
static_assert(offsetof(Ability_C_GetDeboneSocketAlpha, IsValid) == 0x000000, "Member 'Ability_C_GetDeboneSocketAlpha::IsValid' has a wrong offset!");
static_assert(offsetof(Ability_C_GetDeboneSocketAlpha, CurveName) == 0x000004, "Member 'Ability_C_GetDeboneSocketAlpha::CurveName' has a wrong offset!");
static_assert(offsetof(Ability_C_GetDeboneSocketAlpha, OutAlpha) == 0x000010, "Member 'Ability_C_GetDeboneSocketAlpha::OutAlpha' has a wrong offset!");
static_assert(offsetof(Ability_C_GetDeboneSocketAlpha, CallFunc_Conv_BoolToDouble_ReturnValue) == 0x000018, "Member 'Ability_C_GetDeboneSocketAlpha::CallFunc_Conv_BoolToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_C_GetDeboneSocketAlpha, CallFunc_GetCurveValue_ReturnValue) == 0x000020, "Member 'Ability_C_GetDeboneSocketAlpha::CallFunc_GetCurveValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_C_GetDeboneSocketAlpha, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000028, "Member 'Ability_C_GetDeboneSocketAlpha::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ability_C_GetDeboneSocketAlpha, CallFunc_Multiply_DoubleDouble_B_ImplicitCast) == 0x000030, "Member 'Ability_C_GetDeboneSocketAlpha::CallFunc_Multiply_DoubleDouble_B_ImplicitCast' has a wrong offset!");

}

