#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AnimBP_NPC_Dialog

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "AnimGraphRuntime_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass AnimBP_NPC_Dialog.AnimBP_NPC_Dialog_C
// 0x0210 (0x0530 - 0x0320)
class UAnimBP_NPC_Dialog_C final : public UAnimInstance
{
public:
	uint8                                         Pad_318[0x8];                                      // 0x0318(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0320(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x0328(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x0330(0x0008)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x0338(0x0020)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x0358(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x0380(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x03C8(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x03E8(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x0430(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x0450(0x00C8)()
	class UAnimSequence*                          StartAnim;                                         // 0x0518(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimSequence*                          LoopAnim;                                          // 0x0520(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          bShouldSkipToLoop;                                 // 0x0528(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_AnimBP_NPC_Dialog(int32 EntryPoint);
	void EvaluateGraphExposedInputs_ExecuteUbergraph_AnimBP_NPC_Dialog_AnimGraphNode_TransitionResult_6FA706E94C9DF2EF1384FF868CBAEB10();
	void AnimGraph(struct FPoseLink* AnimGraph_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"AnimBP_NPC_Dialog_C">();
	}
	static class UAnimBP_NPC_Dialog_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAnimBP_NPC_Dialog_C>();
	}
};
static_assert(alignof(UAnimBP_NPC_Dialog_C) == 0x000010, "Wrong alignment on UAnimBP_NPC_Dialog_C");
static_assert(sizeof(UAnimBP_NPC_Dialog_C) == 0x000530, "Wrong size on UAnimBP_NPC_Dialog_C");
static_assert(offsetof(UAnimBP_NPC_Dialog_C, UberGraphFrame) == 0x000320, "Member 'UAnimBP_NPC_Dialog_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UAnimBP_NPC_Dialog_C, AnimBlueprintExtension_PropertyAccess) == 0x000328, "Member 'UAnimBP_NPC_Dialog_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UAnimBP_NPC_Dialog_C, AnimBlueprintExtension_Base) == 0x000330, "Member 'UAnimBP_NPC_Dialog_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(UAnimBP_NPC_Dialog_C, AnimGraphNode_Root) == 0x000338, "Member 'UAnimBP_NPC_Dialog_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UAnimBP_NPC_Dialog_C, AnimGraphNode_TransitionResult) == 0x000358, "Member 'UAnimBP_NPC_Dialog_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UAnimBP_NPC_Dialog_C, AnimGraphNode_SequencePlayer_1) == 0x000380, "Member 'UAnimBP_NPC_Dialog_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UAnimBP_NPC_Dialog_C, AnimGraphNode_StateResult_1) == 0x0003C8, "Member 'UAnimBP_NPC_Dialog_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UAnimBP_NPC_Dialog_C, AnimGraphNode_SequencePlayer) == 0x0003E8, "Member 'UAnimBP_NPC_Dialog_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UAnimBP_NPC_Dialog_C, AnimGraphNode_StateResult) == 0x000430, "Member 'UAnimBP_NPC_Dialog_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UAnimBP_NPC_Dialog_C, AnimGraphNode_StateMachine) == 0x000450, "Member 'UAnimBP_NPC_Dialog_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UAnimBP_NPC_Dialog_C, StartAnim) == 0x000518, "Member 'UAnimBP_NPC_Dialog_C::StartAnim' has a wrong offset!");
static_assert(offsetof(UAnimBP_NPC_Dialog_C, LoopAnim) == 0x000520, "Member 'UAnimBP_NPC_Dialog_C::LoopAnim' has a wrong offset!");
static_assert(offsetof(UAnimBP_NPC_Dialog_C, bShouldSkipToLoop) == 0x000528, "Member 'UAnimBP_NPC_Dialog_C::bShouldSkipToLoop' has a wrong offset!");

}

