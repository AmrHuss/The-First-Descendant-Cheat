#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AnimToTexture

#include "Basic.hpp"

#include "AnimToTexture_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function AnimToTexture.AnimToTextureDataAsset.BP_GetBonePositionTexture
// 0x0008 (0x0008 - 0x0000)
struct AnimToTextureDataAsset_BP_GetBonePositionTexture final
{
public:
	class UTexture2D*                             ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AnimToTextureDataAsset_BP_GetBonePositionTexture) == 0x000008, "Wrong alignment on AnimToTextureDataAsset_BP_GetBonePositionTexture");
static_assert(sizeof(AnimToTextureDataAsset_BP_GetBonePositionTexture) == 0x000008, "Wrong size on AnimToTextureDataAsset_BP_GetBonePositionTexture");
static_assert(offsetof(AnimToTextureDataAsset_BP_GetBonePositionTexture, ReturnValue) == 0x000000, "Member 'AnimToTextureDataAsset_BP_GetBonePositionTexture::ReturnValue' has a wrong offset!");

// Function AnimToTexture.AnimToTextureDataAsset.BP_GetBoneRotationTexture
// 0x0008 (0x0008 - 0x0000)
struct AnimToTextureDataAsset_BP_GetBoneRotationTexture final
{
public:
	class UTexture2D*                             ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AnimToTextureDataAsset_BP_GetBoneRotationTexture) == 0x000008, "Wrong alignment on AnimToTextureDataAsset_BP_GetBoneRotationTexture");
static_assert(sizeof(AnimToTextureDataAsset_BP_GetBoneRotationTexture) == 0x000008, "Wrong size on AnimToTextureDataAsset_BP_GetBoneRotationTexture");
static_assert(offsetof(AnimToTextureDataAsset_BP_GetBoneRotationTexture, ReturnValue) == 0x000000, "Member 'AnimToTextureDataAsset_BP_GetBoneRotationTexture::ReturnValue' has a wrong offset!");

// Function AnimToTexture.AnimToTextureDataAsset.BP_GetBoneWeightTexture
// 0x0008 (0x0008 - 0x0000)
struct AnimToTextureDataAsset_BP_GetBoneWeightTexture final
{
public:
	class UTexture2D*                             ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AnimToTextureDataAsset_BP_GetBoneWeightTexture) == 0x000008, "Wrong alignment on AnimToTextureDataAsset_BP_GetBoneWeightTexture");
static_assert(sizeof(AnimToTextureDataAsset_BP_GetBoneWeightTexture) == 0x000008, "Wrong size on AnimToTextureDataAsset_BP_GetBoneWeightTexture");
static_assert(offsetof(AnimToTextureDataAsset_BP_GetBoneWeightTexture, ReturnValue) == 0x000000, "Member 'AnimToTextureDataAsset_BP_GetBoneWeightTexture::ReturnValue' has a wrong offset!");

// Function AnimToTexture.AnimToTextureDataAsset.BP_GetSkeletalMesh
// 0x0008 (0x0008 - 0x0000)
struct AnimToTextureDataAsset_BP_GetSkeletalMesh final
{
public:
	class USkeletalMesh*                          ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AnimToTextureDataAsset_BP_GetSkeletalMesh) == 0x000008, "Wrong alignment on AnimToTextureDataAsset_BP_GetSkeletalMesh");
static_assert(sizeof(AnimToTextureDataAsset_BP_GetSkeletalMesh) == 0x000008, "Wrong size on AnimToTextureDataAsset_BP_GetSkeletalMesh");
static_assert(offsetof(AnimToTextureDataAsset_BP_GetSkeletalMesh, ReturnValue) == 0x000000, "Member 'AnimToTextureDataAsset_BP_GetSkeletalMesh::ReturnValue' has a wrong offset!");

// Function AnimToTexture.AnimToTextureDataAsset.BP_GetStaticMesh
// 0x0008 (0x0008 - 0x0000)
struct AnimToTextureDataAsset_BP_GetStaticMesh final
{
public:
	class UStaticMesh*                            ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(AnimToTextureDataAsset_BP_GetStaticMesh) == 0x000008, "Wrong alignment on AnimToTextureDataAsset_BP_GetStaticMesh");
static_assert(sizeof(AnimToTextureDataAsset_BP_GetStaticMesh) == 0x000008, "Wrong size on AnimToTextureDataAsset_BP_GetStaticMesh");
static_assert(offsetof(AnimToTextureDataAsset_BP_GetStaticMesh, ReturnValue) == 0x000000, "Member 'AnimToTextureDataAsset_BP_GetStaticMesh::ReturnValue' has a wrong offset!");

// Function AnimToTexture.AnimToTextureDataAsset.GetIndexFromAnimSequence
// 0x0010 (0x0010 - 0x0000)
struct AnimToTextureDataAsset_GetIndexFromAnimSequence final
{
public:
	const class UAnimSequence*                    Sequence;                                          // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(AnimToTextureDataAsset_GetIndexFromAnimSequence) == 0x000008, "Wrong alignment on AnimToTextureDataAsset_GetIndexFromAnimSequence");
static_assert(sizeof(AnimToTextureDataAsset_GetIndexFromAnimSequence) == 0x000010, "Wrong size on AnimToTextureDataAsset_GetIndexFromAnimSequence");
static_assert(offsetof(AnimToTextureDataAsset_GetIndexFromAnimSequence, Sequence) == 0x000000, "Member 'AnimToTextureDataAsset_GetIndexFromAnimSequence::Sequence' has a wrong offset!");
static_assert(offsetof(AnimToTextureDataAsset_GetIndexFromAnimSequence, ReturnValue) == 0x000008, "Member 'AnimToTextureDataAsset_GetIndexFromAnimSequence::ReturnValue' has a wrong offset!");

// Function AnimToTexture.AnimToTextureInstancePlaybackLibrary.AllocateInstanceData
// 0x0028 (0x0028 - 0x0000)
struct AnimToTextureInstancePlaybackLibrary_AllocateInstanceData final
{
public:
	struct FAnimToTextureInstanceData             InstanceData;                                      // 0x0000(0x0020)(Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	int32                                         Count;                                             // 0x0020(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(AnimToTextureInstancePlaybackLibrary_AllocateInstanceData) == 0x000008, "Wrong alignment on AnimToTextureInstancePlaybackLibrary_AllocateInstanceData");
static_assert(sizeof(AnimToTextureInstancePlaybackLibrary_AllocateInstanceData) == 0x000028, "Wrong size on AnimToTextureInstancePlaybackLibrary_AllocateInstanceData");
static_assert(offsetof(AnimToTextureInstancePlaybackLibrary_AllocateInstanceData, InstanceData) == 0x000000, "Member 'AnimToTextureInstancePlaybackLibrary_AllocateInstanceData::InstanceData' has a wrong offset!");
static_assert(offsetof(AnimToTextureInstancePlaybackLibrary_AllocateInstanceData, Count) == 0x000020, "Member 'AnimToTextureInstancePlaybackLibrary_AllocateInstanceData::Count' has a wrong offset!");

// Function AnimToTexture.AnimToTextureInstancePlaybackLibrary.AnimStateFromDataAsset
// 0x0028 (0x0028 - 0x0000)
struct AnimToTextureInstancePlaybackLibrary_AnimStateFromDataAsset final
{
public:
	const class UAnimToTextureDataAsset*          DataAsset;                                         // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         StateIndex;                                        // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAnimToTextureAnimState                AnimState;                                         // 0x000C(0x0014)(Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(AnimToTextureInstancePlaybackLibrary_AnimStateFromDataAsset) == 0x000008, "Wrong alignment on AnimToTextureInstancePlaybackLibrary_AnimStateFromDataAsset");
static_assert(sizeof(AnimToTextureInstancePlaybackLibrary_AnimStateFromDataAsset) == 0x000028, "Wrong size on AnimToTextureInstancePlaybackLibrary_AnimStateFromDataAsset");
static_assert(offsetof(AnimToTextureInstancePlaybackLibrary_AnimStateFromDataAsset, DataAsset) == 0x000000, "Member 'AnimToTextureInstancePlaybackLibrary_AnimStateFromDataAsset::DataAsset' has a wrong offset!");
static_assert(offsetof(AnimToTextureInstancePlaybackLibrary_AnimStateFromDataAsset, StateIndex) == 0x000008, "Member 'AnimToTextureInstancePlaybackLibrary_AnimStateFromDataAsset::StateIndex' has a wrong offset!");
static_assert(offsetof(AnimToTextureInstancePlaybackLibrary_AnimStateFromDataAsset, AnimState) == 0x00000C, "Member 'AnimToTextureInstancePlaybackLibrary_AnimStateFromDataAsset::AnimState' has a wrong offset!");
static_assert(offsetof(AnimToTextureInstancePlaybackLibrary_AnimStateFromDataAsset, ReturnValue) == 0x000020, "Member 'AnimToTextureInstancePlaybackLibrary_AnimStateFromDataAsset::ReturnValue' has a wrong offset!");

// Function AnimToTexture.AnimToTextureInstancePlaybackLibrary.BatchUpdateInstancedMeshComponent
// 0x0028 (0x0028 - 0x0000)
struct AnimToTextureInstancePlaybackLibrary_BatchUpdateInstancedMeshComponent final
{
public:
	class UInstancedStaticMeshComponent*          InstancedMeshComponent;                            // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAnimToTextureInstanceData             InstanceData;                                      // 0x0008(0x0020)(Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(AnimToTextureInstancePlaybackLibrary_BatchUpdateInstancedMeshComponent) == 0x000008, "Wrong alignment on AnimToTextureInstancePlaybackLibrary_BatchUpdateInstancedMeshComponent");
static_assert(sizeof(AnimToTextureInstancePlaybackLibrary_BatchUpdateInstancedMeshComponent) == 0x000028, "Wrong size on AnimToTextureInstancePlaybackLibrary_BatchUpdateInstancedMeshComponent");
static_assert(offsetof(AnimToTextureInstancePlaybackLibrary_BatchUpdateInstancedMeshComponent, InstancedMeshComponent) == 0x000000, "Member 'AnimToTextureInstancePlaybackLibrary_BatchUpdateInstancedMeshComponent::InstancedMeshComponent' has a wrong offset!");
static_assert(offsetof(AnimToTextureInstancePlaybackLibrary_BatchUpdateInstancedMeshComponent, InstanceData) == 0x000008, "Member 'AnimToTextureInstancePlaybackLibrary_BatchUpdateInstancedMeshComponent::InstanceData' has a wrong offset!");

// Function AnimToTexture.AnimToTextureInstancePlaybackLibrary.GetInstancePlaybackData
// 0x0040 (0x0040 - 0x0000)
struct AnimToTextureInstancePlaybackLibrary_GetInstancePlaybackData final
{
public:
	struct FAnimToTextureInstanceData             InstanceData;                                      // 0x0000(0x0020)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	int32                                         InstanceIndex;                                     // 0x0020(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAnimToTextureInstancePlaybackData     InstancePlaybackData;                              // 0x0024(0x0014)(Parm, OutParm, NoDestructor, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0038(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(AnimToTextureInstancePlaybackLibrary_GetInstancePlaybackData) == 0x000008, "Wrong alignment on AnimToTextureInstancePlaybackLibrary_GetInstancePlaybackData");
static_assert(sizeof(AnimToTextureInstancePlaybackLibrary_GetInstancePlaybackData) == 0x000040, "Wrong size on AnimToTextureInstancePlaybackLibrary_GetInstancePlaybackData");
static_assert(offsetof(AnimToTextureInstancePlaybackLibrary_GetInstancePlaybackData, InstanceData) == 0x000000, "Member 'AnimToTextureInstancePlaybackLibrary_GetInstancePlaybackData::InstanceData' has a wrong offset!");
static_assert(offsetof(AnimToTextureInstancePlaybackLibrary_GetInstancePlaybackData, InstanceIndex) == 0x000020, "Member 'AnimToTextureInstancePlaybackLibrary_GetInstancePlaybackData::InstanceIndex' has a wrong offset!");
static_assert(offsetof(AnimToTextureInstancePlaybackLibrary_GetInstancePlaybackData, InstancePlaybackData) == 0x000024, "Member 'AnimToTextureInstancePlaybackLibrary_GetInstancePlaybackData::InstancePlaybackData' has a wrong offset!");
static_assert(offsetof(AnimToTextureInstancePlaybackLibrary_GetInstancePlaybackData, ReturnValue) == 0x000038, "Member 'AnimToTextureInstancePlaybackLibrary_GetInstancePlaybackData::ReturnValue' has a wrong offset!");

// Function AnimToTexture.AnimToTextureInstancePlaybackLibrary.GetInstanceTransform
// 0x0070 (0x0070 - 0x0000)
struct AnimToTextureInstancePlaybackLibrary_GetInstanceTransform final
{
public:
	struct FAnimToTextureInstanceData             InstanceData;                                      // 0x0000(0x0020)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	int32                                         InstanceIndex;                                     // 0x0020(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_24[0xC];                                       // 0x0024(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             InstanceTransform;                                 // 0x0030(0x0030)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0060(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_61[0xF];                                       // 0x0061(0x000F)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(AnimToTextureInstancePlaybackLibrary_GetInstanceTransform) == 0x000010, "Wrong alignment on AnimToTextureInstancePlaybackLibrary_GetInstanceTransform");
static_assert(sizeof(AnimToTextureInstancePlaybackLibrary_GetInstanceTransform) == 0x000070, "Wrong size on AnimToTextureInstancePlaybackLibrary_GetInstanceTransform");
static_assert(offsetof(AnimToTextureInstancePlaybackLibrary_GetInstanceTransform, InstanceData) == 0x000000, "Member 'AnimToTextureInstancePlaybackLibrary_GetInstanceTransform::InstanceData' has a wrong offset!");
static_assert(offsetof(AnimToTextureInstancePlaybackLibrary_GetInstanceTransform, InstanceIndex) == 0x000020, "Member 'AnimToTextureInstancePlaybackLibrary_GetInstanceTransform::InstanceIndex' has a wrong offset!");
static_assert(offsetof(AnimToTextureInstancePlaybackLibrary_GetInstanceTransform, InstanceTransform) == 0x000030, "Member 'AnimToTextureInstancePlaybackLibrary_GetInstanceTransform::InstanceTransform' has a wrong offset!");
static_assert(offsetof(AnimToTextureInstancePlaybackLibrary_GetInstanceTransform, ReturnValue) == 0x000060, "Member 'AnimToTextureInstancePlaybackLibrary_GetInstanceTransform::ReturnValue' has a wrong offset!");

// Function AnimToTexture.AnimToTextureInstancePlaybackLibrary.SetupInstancedMeshComponent
// 0x0030 (0x0030 - 0x0000)
struct AnimToTextureInstancePlaybackLibrary_SetupInstancedMeshComponent final
{
public:
	class UInstancedStaticMeshComponent*          InstancedMeshComponent;                            // 0x0000(0x0008)(Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAnimToTextureInstanceData             InstanceData;                                      // 0x0008(0x0020)(Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	int32                                         NumInstances;                                      // 0x0028(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(AnimToTextureInstancePlaybackLibrary_SetupInstancedMeshComponent) == 0x000008, "Wrong alignment on AnimToTextureInstancePlaybackLibrary_SetupInstancedMeshComponent");
static_assert(sizeof(AnimToTextureInstancePlaybackLibrary_SetupInstancedMeshComponent) == 0x000030, "Wrong size on AnimToTextureInstancePlaybackLibrary_SetupInstancedMeshComponent");
static_assert(offsetof(AnimToTextureInstancePlaybackLibrary_SetupInstancedMeshComponent, InstancedMeshComponent) == 0x000000, "Member 'AnimToTextureInstancePlaybackLibrary_SetupInstancedMeshComponent::InstancedMeshComponent' has a wrong offset!");
static_assert(offsetof(AnimToTextureInstancePlaybackLibrary_SetupInstancedMeshComponent, InstanceData) == 0x000008, "Member 'AnimToTextureInstancePlaybackLibrary_SetupInstancedMeshComponent::InstanceData' has a wrong offset!");
static_assert(offsetof(AnimToTextureInstancePlaybackLibrary_SetupInstancedMeshComponent, NumInstances) == 0x000028, "Member 'AnimToTextureInstancePlaybackLibrary_SetupInstancedMeshComponent::NumInstances' has a wrong offset!");

// Function AnimToTexture.AnimToTextureInstancePlaybackLibrary.UpdateInstanceData
// 0x0080 (0x0080 - 0x0000)
struct AnimToTextureInstancePlaybackLibrary_UpdateInstanceData final
{
public:
	struct FAnimToTextureInstanceData             InstanceData;                                      // 0x0000(0x0020)(Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	int32                                         InstanceIndex;                                     // 0x0020(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAnimToTextureInstancePlaybackData     PlaybackData;                                      // 0x0024(0x0014)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
	uint8                                         Pad_38[0x8];                                       // 0x0038(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Transform;                                         // 0x0040(0x0030)(ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0070(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_71[0xF];                                       // 0x0071(0x000F)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(AnimToTextureInstancePlaybackLibrary_UpdateInstanceData) == 0x000010, "Wrong alignment on AnimToTextureInstancePlaybackLibrary_UpdateInstanceData");
static_assert(sizeof(AnimToTextureInstancePlaybackLibrary_UpdateInstanceData) == 0x000080, "Wrong size on AnimToTextureInstancePlaybackLibrary_UpdateInstanceData");
static_assert(offsetof(AnimToTextureInstancePlaybackLibrary_UpdateInstanceData, InstanceData) == 0x000000, "Member 'AnimToTextureInstancePlaybackLibrary_UpdateInstanceData::InstanceData' has a wrong offset!");
static_assert(offsetof(AnimToTextureInstancePlaybackLibrary_UpdateInstanceData, InstanceIndex) == 0x000020, "Member 'AnimToTextureInstancePlaybackLibrary_UpdateInstanceData::InstanceIndex' has a wrong offset!");
static_assert(offsetof(AnimToTextureInstancePlaybackLibrary_UpdateInstanceData, PlaybackData) == 0x000024, "Member 'AnimToTextureInstancePlaybackLibrary_UpdateInstanceData::PlaybackData' has a wrong offset!");
static_assert(offsetof(AnimToTextureInstancePlaybackLibrary_UpdateInstanceData, Transform) == 0x000040, "Member 'AnimToTextureInstancePlaybackLibrary_UpdateInstanceData::Transform' has a wrong offset!");
static_assert(offsetof(AnimToTextureInstancePlaybackLibrary_UpdateInstanceData, ReturnValue) == 0x000070, "Member 'AnimToTextureInstancePlaybackLibrary_UpdateInstanceData::ReturnValue' has a wrong offset!");

}

