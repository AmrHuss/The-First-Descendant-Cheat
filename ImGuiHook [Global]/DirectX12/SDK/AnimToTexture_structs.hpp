#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AnimToTexture

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK
{

// Enum AnimToTexture.EAnimToTextureMode
// NumValues: 0x0003
enum class EAnimToTextureMode : uint8
{
	Vertex                                   = 0,
	Bone                                     = 1,
	EAnimToTextureMode_MAX                   = 2,
};

// Enum AnimToTexture.EAnimToTexturePrecision
// NumValues: 0x0003
enum class EAnimToTexturePrecision : uint8
{
	EightBits                                = 0,
	SixteenBits                              = 1,
	EAnimToTexturePrecision_MAX              = 2,
};

// Enum AnimToTexture.EAnimToTextureNumBoneInfluences
// NumValues: 0x0004
enum class EAnimToTextureNumBoneInfluences : uint8
{
	One                                      = 0,
	Two                                      = 1,
	Four                                     = 2,
	EAnimToTextureNumBoneInfluences_MAX      = 3,
};

// ScriptStruct AnimToTexture.AnimSequenceInfo
// 0x0020 (0x0020 - 0x0000)
struct FAnimSequenceInfo final
{
public:
	bool                                          bEnabled;                                          // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequence*                          AnimSequence;                                      // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bLooping;                                          // 0x0010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bUseCustomRange;                                   // 0x0011(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_12[0x2];                                       // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         StartFrame;                                        // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         EndFrame;                                          // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FAnimSequenceInfo) == 0x000008, "Wrong alignment on FAnimSequenceInfo");
static_assert(sizeof(FAnimSequenceInfo) == 0x000020, "Wrong size on FAnimSequenceInfo");
static_assert(offsetof(FAnimSequenceInfo, bEnabled) == 0x000000, "Member 'FAnimSequenceInfo::bEnabled' has a wrong offset!");
static_assert(offsetof(FAnimSequenceInfo, AnimSequence) == 0x000008, "Member 'FAnimSequenceInfo::AnimSequence' has a wrong offset!");
static_assert(offsetof(FAnimSequenceInfo, bLooping) == 0x000010, "Member 'FAnimSequenceInfo::bLooping' has a wrong offset!");
static_assert(offsetof(FAnimSequenceInfo, bUseCustomRange) == 0x000011, "Member 'FAnimSequenceInfo::bUseCustomRange' has a wrong offset!");
static_assert(offsetof(FAnimSequenceInfo, StartFrame) == 0x000014, "Member 'FAnimSequenceInfo::StartFrame' has a wrong offset!");
static_assert(offsetof(FAnimSequenceInfo, EndFrame) == 0x000018, "Member 'FAnimSequenceInfo::EndFrame' has a wrong offset!");

// ScriptStruct AnimToTexture.AnimInfo
// 0x000C (0x000C - 0x0000)
struct FAnimInfo final
{
public:
	int32                                         NumFrames;                                         // 0x0000(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         AnimStart;                                         // 0x0004(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bLooping;                                          // 0x0008(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FAnimInfo) == 0x000004, "Wrong alignment on FAnimInfo");
static_assert(sizeof(FAnimInfo) == 0x00000C, "Wrong size on FAnimInfo");
static_assert(offsetof(FAnimInfo, NumFrames) == 0x000000, "Member 'FAnimInfo::NumFrames' has a wrong offset!");
static_assert(offsetof(FAnimInfo, AnimStart) == 0x000004, "Member 'FAnimInfo::AnimStart' has a wrong offset!");
static_assert(offsetof(FAnimInfo, bLooping) == 0x000008, "Member 'FAnimInfo::bLooping' has a wrong offset!");

// ScriptStruct AnimToTexture.AnimToTextureAnimState
// 0x0014 (0x0014 - 0x0000)
struct FAnimToTextureAnimState final
{
public:
	float                                         StartFrame;                                        // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         NumFrames;                                         // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         PlayRate;                                          // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         bLooping;                                          // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         GlobalStartTime;                                   // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FAnimToTextureAnimState) == 0x000004, "Wrong alignment on FAnimToTextureAnimState");
static_assert(sizeof(FAnimToTextureAnimState) == 0x000014, "Wrong size on FAnimToTextureAnimState");
static_assert(offsetof(FAnimToTextureAnimState, StartFrame) == 0x000000, "Member 'FAnimToTextureAnimState::StartFrame' has a wrong offset!");
static_assert(offsetof(FAnimToTextureAnimState, NumFrames) == 0x000004, "Member 'FAnimToTextureAnimState::NumFrames' has a wrong offset!");
static_assert(offsetof(FAnimToTextureAnimState, PlayRate) == 0x000008, "Member 'FAnimToTextureAnimState::PlayRate' has a wrong offset!");
static_assert(offsetof(FAnimToTextureAnimState, bLooping) == 0x00000C, "Member 'FAnimToTextureAnimState::bLooping' has a wrong offset!");
static_assert(offsetof(FAnimToTextureAnimState, GlobalStartTime) == 0x000010, "Member 'FAnimToTextureAnimState::GlobalStartTime' has a wrong offset!");

// ScriptStruct AnimToTexture.AnimToTextureInstancePlaybackData
// 0x0014 (0x0014 - 0x0000)
struct FAnimToTextureInstancePlaybackData final
{
public:
	struct FAnimToTextureAnimState                CurrentState;                                      // 0x0000(0x0014)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FAnimToTextureInstancePlaybackData) == 0x000004, "Wrong alignment on FAnimToTextureInstancePlaybackData");
static_assert(sizeof(FAnimToTextureInstancePlaybackData) == 0x000014, "Wrong size on FAnimToTextureInstancePlaybackData");
static_assert(offsetof(FAnimToTextureInstancePlaybackData, CurrentState) == 0x000000, "Member 'FAnimToTextureInstancePlaybackData::CurrentState' has a wrong offset!");

// ScriptStruct AnimToTexture.AnimToTextureAnimationSyncData
// 0x0004 (0x0004 - 0x0000)
struct alignas(0x04) FAnimToTextureAnimationSyncData final
{
public:
	uint8                                         Pad_0[0x4];                                        // 0x0000(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FAnimToTextureAnimationSyncData) == 0x000004, "Wrong alignment on FAnimToTextureAnimationSyncData");
static_assert(sizeof(FAnimToTextureAnimationSyncData) == 0x000004, "Wrong size on FAnimToTextureAnimationSyncData");

// ScriptStruct AnimToTexture.AnimToTextureInstanceData
// 0x0020 (0x0020 - 0x0000)
struct FAnimToTextureInstanceData final
{
public:
	TArray<struct FAnimToTextureInstancePlaybackData> PlaybackData;                                      // 0x0000(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	TArray<struct FInstancedStaticMeshInstanceData> StaticMeshInstanceData;                            // 0x0010(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(FAnimToTextureInstanceData) == 0x000008, "Wrong alignment on FAnimToTextureInstanceData");
static_assert(sizeof(FAnimToTextureInstanceData) == 0x000020, "Wrong size on FAnimToTextureInstanceData");
static_assert(offsetof(FAnimToTextureInstanceData, PlaybackData) == 0x000000, "Member 'FAnimToTextureInstanceData::PlaybackData' has a wrong offset!");
static_assert(offsetof(FAnimToTextureInstanceData, StaticMeshInstanceData) == 0x000010, "Member 'FAnimToTextureInstanceData::StaticMeshInstanceData' has a wrong offset!");

}

