#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_EnvAudio

#include "Basic.hpp"

#include "BPI_EnvAudio_classes.hpp"
#include "BPI_EnvAudio_parameters.hpp"


namespace SDK
{

// Function BPI_EnvAudio.BPI_EnvAudio_C.BP_EnvZoneActiveByPlayer
// (Public, BlueprintCallable, BlueprintEvent)

void IBPI_EnvAudio_C::BP_EnvZoneActiveByPlayer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_EnvAudio_C", "BP_EnvZoneActiveByPlayer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPI_EnvAudio.BPI_EnvAudio_C.BP_EnvZoneDiscard
// (Public, BlueprintCallable, BlueprintEvent)

void IBPI_EnvAudio_C::BP_EnvZoneDiscard()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_EnvAudio_C", "BP_EnvZoneDiscard");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPI_EnvAudio.BPI_EnvAudio_C.Bp_EnvZoneEnter
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_AudioZoneBox_C*               OverlapedZone                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void IBPI_EnvAudio_C::Bp_EnvZoneEnter(class ABP_AudioZoneBox_C* OverlapedZone)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_EnvAudio_C", "Bp_EnvZoneEnter");

	Params::BPI_EnvAudio_C_Bp_EnvZoneEnter Parms{};

	Parms.OverlapedZone = OverlapedZone;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPI_EnvAudio.BPI_EnvAudio_C.BP_EnvZoneInitActive
// (Public, BlueprintCallable, BlueprintEvent)

void IBPI_EnvAudio_C::BP_EnvZoneInitActive()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_EnvAudio_C", "BP_EnvZoneInitActive");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPI_EnvAudio.BPI_EnvAudio_C.BP_EnvZoneLeave
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_AudioZoneBox_C*               LeaveZone                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void IBPI_EnvAudio_C::BP_EnvZoneLeave(class ABP_AudioZoneBox_C* LeaveZone)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPI_EnvAudio_C", "BP_EnvZoneLeave");

	Params::BPI_EnvAudio_C_BP_EnvZoneLeave Parms{};

	Parms.LeaveZone = LeaveZone;

	UObject::ProcessEvent(Func, &Parms);
}

}

