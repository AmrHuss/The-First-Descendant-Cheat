#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPI_EnvAudio

#include "Basic.hpp"


namespace SDK::Params
{

// Function BPI_EnvAudio.BPI_EnvAudio_C.Bp_EnvZoneEnter
// 0x0008 (0x0008 - 0x0000)
struct BPI_EnvAudio_C_Bp_EnvZoneEnter final
{
public:
	class ABP_AudioZoneBox_C*                     OverlapedZone;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_EnvAudio_C_Bp_EnvZoneEnter) == 0x000008, "Wrong alignment on BPI_EnvAudio_C_Bp_EnvZoneEnter");
static_assert(sizeof(BPI_EnvAudio_C_Bp_EnvZoneEnter) == 0x000008, "Wrong size on BPI_EnvAudio_C_Bp_EnvZoneEnter");
static_assert(offsetof(BPI_EnvAudio_C_Bp_EnvZoneEnter, OverlapedZone) == 0x000000, "Member 'BPI_EnvAudio_C_Bp_EnvZoneEnter::OverlapedZone' has a wrong offset!");

// Function BPI_EnvAudio.BPI_EnvAudio_C.BP_EnvZoneLeave
// 0x0008 (0x0008 - 0x0000)
struct BPI_EnvAudio_C_BP_EnvZoneLeave final
{
public:
	class ABP_AudioZoneBox_C*                     LeaveZone;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPI_EnvAudio_C_BP_EnvZoneLeave) == 0x000008, "Wrong alignment on BPI_EnvAudio_C_BP_EnvZoneLeave");
static_assert(sizeof(BPI_EnvAudio_C_BP_EnvZoneLeave) == 0x000008, "Wrong size on BPI_EnvAudio_C_BP_EnvZoneLeave");
static_assert(offsetof(BPI_EnvAudio_C_BP_EnvZoneLeave, LeaveZone) == 0x000000, "Member 'BPI_EnvAudio_C_BP_EnvZoneLeave::LeaveZone' has a wrong offset!");

}

