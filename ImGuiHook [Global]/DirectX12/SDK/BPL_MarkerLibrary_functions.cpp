#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPL_MarkerLibrary

#include "Basic.hpp"

#include "BPL_MarkerLibrary_classes.hpp"
#include "BPL_MarkerLibrary_parameters.hpp"


namespace SDK
{

// Function BPL_MarkerLibrary.BPL_MarkerLibrary_C.GetDirectionAngleFromViewCenter
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FGeometry                        Geometry                                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor)
// class UObject*                          __WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// double                                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

double UBPL_MarkerLibrary_C::GetDirectionAngleFromViewCenter(const struct FGeometry& Geometry, class UObject* __WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BPL_MarkerLibrary_C", "GetDirectionAngleFromViewCenter");

	Params::BPL_MarkerLibrary_C_GetDirectionAngleFromViewCenter Parms{};

	Parms.Geometry = std::move(Geometry);
	Parms.__WorldContext = __WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

