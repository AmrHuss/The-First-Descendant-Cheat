#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPL_Quest

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "M1Data_structs.hpp"


namespace SDK::Params
{

// Function BPL_Quest.BPL_Quest_C.GetQuestTypeDecoIcon
// 0x0020 (0x0020 - 0x0000)
struct BPL_Quest_C_GetQuestTypeDecoIcon final
{
public:
	EM1QuestType                                  InQuestType;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             IconTexture;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPL_Quest_C_GetQuestTypeDecoIcon) == 0x000008, "Wrong alignment on BPL_Quest_C_GetQuestTypeDecoIcon");
static_assert(sizeof(BPL_Quest_C_GetQuestTypeDecoIcon) == 0x000020, "Wrong size on BPL_Quest_C_GetQuestTypeDecoIcon");
static_assert(offsetof(BPL_Quest_C_GetQuestTypeDecoIcon, InQuestType) == 0x000000, "Member 'BPL_Quest_C_GetQuestTypeDecoIcon::InQuestType' has a wrong offset!");
static_assert(offsetof(BPL_Quest_C_GetQuestTypeDecoIcon, __WorldContext) == 0x000008, "Member 'BPL_Quest_C_GetQuestTypeDecoIcon::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_Quest_C_GetQuestTypeDecoIcon, IconTexture) == 0x000010, "Member 'BPL_Quest_C_GetQuestTypeDecoIcon::IconTexture' has a wrong offset!");
static_assert(offsetof(BPL_Quest_C_GetQuestTypeDecoIcon, K2Node_SwitchEnum_CmpSuccess) == 0x000018, "Member 'BPL_Quest_C_GetQuestTypeDecoIcon::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BPL_Quest.BPL_Quest_C.GetQuestTypeListlcon
// 0x0020 (0x0020 - 0x0000)
struct BPL_Quest_C_GetQuestTypeListlcon final
{
public:
	EM1QuestType                                  InQuestType;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             IconTexture;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPL_Quest_C_GetQuestTypeListlcon) == 0x000008, "Wrong alignment on BPL_Quest_C_GetQuestTypeListlcon");
static_assert(sizeof(BPL_Quest_C_GetQuestTypeListlcon) == 0x000020, "Wrong size on BPL_Quest_C_GetQuestTypeListlcon");
static_assert(offsetof(BPL_Quest_C_GetQuestTypeListlcon, InQuestType) == 0x000000, "Member 'BPL_Quest_C_GetQuestTypeListlcon::InQuestType' has a wrong offset!");
static_assert(offsetof(BPL_Quest_C_GetQuestTypeListlcon, __WorldContext) == 0x000008, "Member 'BPL_Quest_C_GetQuestTypeListlcon::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_Quest_C_GetQuestTypeListlcon, IconTexture) == 0x000010, "Member 'BPL_Quest_C_GetQuestTypeListlcon::IconTexture' has a wrong offset!");
static_assert(offsetof(BPL_Quest_C_GetQuestTypeListlcon, K2Node_SwitchEnum_CmpSuccess) == 0x000018, "Member 'BPL_Quest_C_GetQuestTypeListlcon::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BPL_Quest.BPL_Quest_C.GetQuestTypeSimpleText
// 0x0028 (0x0028 - 0x0000)
struct BPL_Quest_C_GetQuestTypeSimpleText final
{
public:
	EM1QuestType                                  InQuestType;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 StringKey;                                         // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPL_Quest_C_GetQuestTypeSimpleText) == 0x000008, "Wrong alignment on BPL_Quest_C_GetQuestTypeSimpleText");
static_assert(sizeof(BPL_Quest_C_GetQuestTypeSimpleText) == 0x000028, "Wrong size on BPL_Quest_C_GetQuestTypeSimpleText");
static_assert(offsetof(BPL_Quest_C_GetQuestTypeSimpleText, InQuestType) == 0x000000, "Member 'BPL_Quest_C_GetQuestTypeSimpleText::InQuestType' has a wrong offset!");
static_assert(offsetof(BPL_Quest_C_GetQuestTypeSimpleText, __WorldContext) == 0x000008, "Member 'BPL_Quest_C_GetQuestTypeSimpleText::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_Quest_C_GetQuestTypeSimpleText, StringKey) == 0x000010, "Member 'BPL_Quest_C_GetQuestTypeSimpleText::StringKey' has a wrong offset!");
static_assert(offsetof(BPL_Quest_C_GetQuestTypeSimpleText, K2Node_SwitchEnum_CmpSuccess) == 0x000020, "Member 'BPL_Quest_C_GetQuestTypeSimpleText::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BPL_Quest.BPL_Quest_C.GetQuestTypeSimpleTextBg
// 0x0020 (0x0020 - 0x0000)
struct BPL_Quest_C_GetQuestTypeSimpleTextBg final
{
public:
	EM1QuestType                                  InQuestType;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             IconTexture;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPL_Quest_C_GetQuestTypeSimpleTextBg) == 0x000008, "Wrong alignment on BPL_Quest_C_GetQuestTypeSimpleTextBg");
static_assert(sizeof(BPL_Quest_C_GetQuestTypeSimpleTextBg) == 0x000020, "Wrong size on BPL_Quest_C_GetQuestTypeSimpleTextBg");
static_assert(offsetof(BPL_Quest_C_GetQuestTypeSimpleTextBg, InQuestType) == 0x000000, "Member 'BPL_Quest_C_GetQuestTypeSimpleTextBg::InQuestType' has a wrong offset!");
static_assert(offsetof(BPL_Quest_C_GetQuestTypeSimpleTextBg, __WorldContext) == 0x000008, "Member 'BPL_Quest_C_GetQuestTypeSimpleTextBg::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_Quest_C_GetQuestTypeSimpleTextBg, IconTexture) == 0x000010, "Member 'BPL_Quest_C_GetQuestTypeSimpleTextBg::IconTexture' has a wrong offset!");
static_assert(offsetof(BPL_Quest_C_GetQuestTypeSimpleTextBg, K2Node_SwitchEnum_CmpSuccess) == 0x000018, "Member 'BPL_Quest_C_GetQuestTypeSimpleTextBg::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BPL_Quest.BPL_Quest_C.GetQuestTypeTabIcon
// 0x0020 (0x0020 - 0x0000)
struct BPL_Quest_C_GetQuestTypeTabIcon final
{
public:
	EM1QuestType                                  InQuestType;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             IconTexture;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPL_Quest_C_GetQuestTypeTabIcon) == 0x000008, "Wrong alignment on BPL_Quest_C_GetQuestTypeTabIcon");
static_assert(sizeof(BPL_Quest_C_GetQuestTypeTabIcon) == 0x000020, "Wrong size on BPL_Quest_C_GetQuestTypeTabIcon");
static_assert(offsetof(BPL_Quest_C_GetQuestTypeTabIcon, InQuestType) == 0x000000, "Member 'BPL_Quest_C_GetQuestTypeTabIcon::InQuestType' has a wrong offset!");
static_assert(offsetof(BPL_Quest_C_GetQuestTypeTabIcon, __WorldContext) == 0x000008, "Member 'BPL_Quest_C_GetQuestTypeTabIcon::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_Quest_C_GetQuestTypeTabIcon, IconTexture) == 0x000010, "Member 'BPL_Quest_C_GetQuestTypeTabIcon::IconTexture' has a wrong offset!");
static_assert(offsetof(BPL_Quest_C_GetQuestTypeTabIcon, K2Node_SwitchEnum_CmpSuccess) == 0x000018, "Member 'BPL_Quest_C_GetQuestTypeTabIcon::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BPL_Quest.BPL_Quest_C.GetQuestTypeText
// 0x0028 (0x0028 - 0x0000)
struct BPL_Quest_C_GetQuestTypeText final
{
public:
	EM1QuestType                                  InQuestType;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 StringKey;                                         // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPL_Quest_C_GetQuestTypeText) == 0x000008, "Wrong alignment on BPL_Quest_C_GetQuestTypeText");
static_assert(sizeof(BPL_Quest_C_GetQuestTypeText) == 0x000028, "Wrong size on BPL_Quest_C_GetQuestTypeText");
static_assert(offsetof(BPL_Quest_C_GetQuestTypeText, InQuestType) == 0x000000, "Member 'BPL_Quest_C_GetQuestTypeText::InQuestType' has a wrong offset!");
static_assert(offsetof(BPL_Quest_C_GetQuestTypeText, __WorldContext) == 0x000008, "Member 'BPL_Quest_C_GetQuestTypeText::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_Quest_C_GetQuestTypeText, StringKey) == 0x000010, "Member 'BPL_Quest_C_GetQuestTypeText::StringKey' has a wrong offset!");
static_assert(offsetof(BPL_Quest_C_GetQuestTypeText, K2Node_SwitchEnum_CmpSuccess) == 0x000020, "Member 'BPL_Quest_C_GetQuestTypeText::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BPL_Quest.BPL_Quest_C.Set Quest Type Bg Color
// 0x0110 (0x0110 - 0x0000)
struct BPL_Quest_C_Set_Quest_Type_Bg_Color final
{
public:
	EM1QuestType                                  InQuestType;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UImage*                                 InImage;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           TypeColor;                                         // 0x0018(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EM1QuestType                                  Temp_byte_Variable;                                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable;                              // 0x002C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x003C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_2;                            // 0x004C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_3;                            // 0x005C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_4;                            // 0x006C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_5;                            // 0x007C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_6;                            // 0x008C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_7;                            // 0x009C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_8;                            // 0x00AC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_9;                            // 0x00BC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_10;                           // 0x00CC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_11;                           // 0x00DC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_12;                           // 0x00EC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default;                             // 0x00FC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPL_Quest_C_Set_Quest_Type_Bg_Color) == 0x000008, "Wrong alignment on BPL_Quest_C_Set_Quest_Type_Bg_Color");
static_assert(sizeof(BPL_Quest_C_Set_Quest_Type_Bg_Color) == 0x000110, "Wrong size on BPL_Quest_C_Set_Quest_Type_Bg_Color");
static_assert(offsetof(BPL_Quest_C_Set_Quest_Type_Bg_Color, InQuestType) == 0x000000, "Member 'BPL_Quest_C_Set_Quest_Type_Bg_Color::InQuestType' has a wrong offset!");
static_assert(offsetof(BPL_Quest_C_Set_Quest_Type_Bg_Color, InImage) == 0x000008, "Member 'BPL_Quest_C_Set_Quest_Type_Bg_Color::InImage' has a wrong offset!");
static_assert(offsetof(BPL_Quest_C_Set_Quest_Type_Bg_Color, __WorldContext) == 0x000010, "Member 'BPL_Quest_C_Set_Quest_Type_Bg_Color::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_Quest_C_Set_Quest_Type_Bg_Color, TypeColor) == 0x000018, "Member 'BPL_Quest_C_Set_Quest_Type_Bg_Color::TypeColor' has a wrong offset!");
static_assert(offsetof(BPL_Quest_C_Set_Quest_Type_Bg_Color, Temp_byte_Variable) == 0x000028, "Member 'BPL_Quest_C_Set_Quest_Type_Bg_Color::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BPL_Quest_C_Set_Quest_Type_Bg_Color, Temp_struct_Variable) == 0x00002C, "Member 'BPL_Quest_C_Set_Quest_Type_Bg_Color::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BPL_Quest_C_Set_Quest_Type_Bg_Color, Temp_struct_Variable_1) == 0x00003C, "Member 'BPL_Quest_C_Set_Quest_Type_Bg_Color::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(BPL_Quest_C_Set_Quest_Type_Bg_Color, Temp_struct_Variable_2) == 0x00004C, "Member 'BPL_Quest_C_Set_Quest_Type_Bg_Color::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(BPL_Quest_C_Set_Quest_Type_Bg_Color, Temp_struct_Variable_3) == 0x00005C, "Member 'BPL_Quest_C_Set_Quest_Type_Bg_Color::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(BPL_Quest_C_Set_Quest_Type_Bg_Color, Temp_struct_Variable_4) == 0x00006C, "Member 'BPL_Quest_C_Set_Quest_Type_Bg_Color::Temp_struct_Variable_4' has a wrong offset!");
static_assert(offsetof(BPL_Quest_C_Set_Quest_Type_Bg_Color, Temp_struct_Variable_5) == 0x00007C, "Member 'BPL_Quest_C_Set_Quest_Type_Bg_Color::Temp_struct_Variable_5' has a wrong offset!");
static_assert(offsetof(BPL_Quest_C_Set_Quest_Type_Bg_Color, Temp_struct_Variable_6) == 0x00008C, "Member 'BPL_Quest_C_Set_Quest_Type_Bg_Color::Temp_struct_Variable_6' has a wrong offset!");
static_assert(offsetof(BPL_Quest_C_Set_Quest_Type_Bg_Color, Temp_struct_Variable_7) == 0x00009C, "Member 'BPL_Quest_C_Set_Quest_Type_Bg_Color::Temp_struct_Variable_7' has a wrong offset!");
static_assert(offsetof(BPL_Quest_C_Set_Quest_Type_Bg_Color, Temp_struct_Variable_8) == 0x0000AC, "Member 'BPL_Quest_C_Set_Quest_Type_Bg_Color::Temp_struct_Variable_8' has a wrong offset!");
static_assert(offsetof(BPL_Quest_C_Set_Quest_Type_Bg_Color, Temp_struct_Variable_9) == 0x0000BC, "Member 'BPL_Quest_C_Set_Quest_Type_Bg_Color::Temp_struct_Variable_9' has a wrong offset!");
static_assert(offsetof(BPL_Quest_C_Set_Quest_Type_Bg_Color, Temp_struct_Variable_10) == 0x0000CC, "Member 'BPL_Quest_C_Set_Quest_Type_Bg_Color::Temp_struct_Variable_10' has a wrong offset!");
static_assert(offsetof(BPL_Quest_C_Set_Quest_Type_Bg_Color, Temp_struct_Variable_11) == 0x0000DC, "Member 'BPL_Quest_C_Set_Quest_Type_Bg_Color::Temp_struct_Variable_11' has a wrong offset!");
static_assert(offsetof(BPL_Quest_C_Set_Quest_Type_Bg_Color, Temp_struct_Variable_12) == 0x0000EC, "Member 'BPL_Quest_C_Set_Quest_Type_Bg_Color::Temp_struct_Variable_12' has a wrong offset!");
static_assert(offsetof(BPL_Quest_C_Set_Quest_Type_Bg_Color, K2Node_Select_Default) == 0x0000FC, "Member 'BPL_Quest_C_Set_Quest_Type_Bg_Color::K2Node_Select_Default' has a wrong offset!");

}

