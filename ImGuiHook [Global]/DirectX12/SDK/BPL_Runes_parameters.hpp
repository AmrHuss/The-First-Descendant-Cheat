#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPL_Runes

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "M1Data_structs.hpp"
#include "UMG_structs.hpp"
#include "M1_structs.hpp"


namespace SDK::Params
{

// Function BPL_Runes.BPL_Runes_C.Get Rune Board Slot Socket Icon in SocketMode
// 0x0060 (0x0060 - 0x0000)
struct BPL_Runes_C_Get_Rune_Board_Slot_Socket_Icon_in_SocketMode final
{
public:
	EM1RuneSocketType                             InType;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)
	EM1RuneSocketType                             Temp_byte_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             Temp_object_Variable;                              // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_1;                            // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_2;                            // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_3;                            // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_4;                            // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_5;                            // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_6;                            // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_Select_Default;                             // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPL_Runes_C_Get_Rune_Board_Slot_Socket_Icon_in_SocketMode) == 0x000008, "Wrong alignment on BPL_Runes_C_Get_Rune_Board_Slot_Socket_Icon_in_SocketMode");
static_assert(sizeof(BPL_Runes_C_Get_Rune_Board_Slot_Socket_Icon_in_SocketMode) == 0x000060, "Wrong size on BPL_Runes_C_Get_Rune_Board_Slot_Socket_Icon_in_SocketMode");
static_assert(offsetof(BPL_Runes_C_Get_Rune_Board_Slot_Socket_Icon_in_SocketMode, InType) == 0x000000, "Member 'BPL_Runes_C_Get_Rune_Board_Slot_Socket_Icon_in_SocketMode::InType' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_Get_Rune_Board_Slot_Socket_Icon_in_SocketMode, __WorldContext) == 0x000008, "Member 'BPL_Runes_C_Get_Rune_Board_Slot_Socket_Icon_in_SocketMode::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_Get_Rune_Board_Slot_Socket_Icon_in_SocketMode, ReturnValue) == 0x000010, "Member 'BPL_Runes_C_Get_Rune_Board_Slot_Socket_Icon_in_SocketMode::ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_Get_Rune_Board_Slot_Socket_Icon_in_SocketMode, Temp_byte_Variable) == 0x000018, "Member 'BPL_Runes_C_Get_Rune_Board_Slot_Socket_Icon_in_SocketMode::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_Get_Rune_Board_Slot_Socket_Icon_in_SocketMode, Temp_object_Variable) == 0x000020, "Member 'BPL_Runes_C_Get_Rune_Board_Slot_Socket_Icon_in_SocketMode::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_Get_Rune_Board_Slot_Socket_Icon_in_SocketMode, Temp_object_Variable_1) == 0x000028, "Member 'BPL_Runes_C_Get_Rune_Board_Slot_Socket_Icon_in_SocketMode::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_Get_Rune_Board_Slot_Socket_Icon_in_SocketMode, Temp_object_Variable_2) == 0x000030, "Member 'BPL_Runes_C_Get_Rune_Board_Slot_Socket_Icon_in_SocketMode::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_Get_Rune_Board_Slot_Socket_Icon_in_SocketMode, Temp_object_Variable_3) == 0x000038, "Member 'BPL_Runes_C_Get_Rune_Board_Slot_Socket_Icon_in_SocketMode::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_Get_Rune_Board_Slot_Socket_Icon_in_SocketMode, Temp_object_Variable_4) == 0x000040, "Member 'BPL_Runes_C_Get_Rune_Board_Slot_Socket_Icon_in_SocketMode::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_Get_Rune_Board_Slot_Socket_Icon_in_SocketMode, Temp_object_Variable_5) == 0x000048, "Member 'BPL_Runes_C_Get_Rune_Board_Slot_Socket_Icon_in_SocketMode::Temp_object_Variable_5' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_Get_Rune_Board_Slot_Socket_Icon_in_SocketMode, Temp_object_Variable_6) == 0x000050, "Member 'BPL_Runes_C_Get_Rune_Board_Slot_Socket_Icon_in_SocketMode::Temp_object_Variable_6' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_Get_Rune_Board_Slot_Socket_Icon_in_SocketMode, K2Node_Select_Default) == 0x000058, "Member 'BPL_Runes_C_Get_Rune_Board_Slot_Socket_Icon_in_SocketMode::K2Node_Select_Default' has a wrong offset!");

// Function BPL_Runes.BPL_Runes_C.Get Rune Board Slot Soket Icon in Empty Bg
// 0x0060 (0x0060 - 0x0000)
struct BPL_Runes_C_Get_Rune_Board_Slot_Soket_Icon_in_Empty_Bg final
{
public:
	EM1RuneSocketType                             InType;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)
	EM1RuneSocketType                             Temp_byte_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             Temp_object_Variable;                              // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_1;                            // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_2;                            // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_3;                            // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_4;                            // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_5;                            // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_6;                            // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_Select_Default;                             // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPL_Runes_C_Get_Rune_Board_Slot_Soket_Icon_in_Empty_Bg) == 0x000008, "Wrong alignment on BPL_Runes_C_Get_Rune_Board_Slot_Soket_Icon_in_Empty_Bg");
static_assert(sizeof(BPL_Runes_C_Get_Rune_Board_Slot_Soket_Icon_in_Empty_Bg) == 0x000060, "Wrong size on BPL_Runes_C_Get_Rune_Board_Slot_Soket_Icon_in_Empty_Bg");
static_assert(offsetof(BPL_Runes_C_Get_Rune_Board_Slot_Soket_Icon_in_Empty_Bg, InType) == 0x000000, "Member 'BPL_Runes_C_Get_Rune_Board_Slot_Soket_Icon_in_Empty_Bg::InType' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_Get_Rune_Board_Slot_Soket_Icon_in_Empty_Bg, __WorldContext) == 0x000008, "Member 'BPL_Runes_C_Get_Rune_Board_Slot_Soket_Icon_in_Empty_Bg::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_Get_Rune_Board_Slot_Soket_Icon_in_Empty_Bg, ReturnValue) == 0x000010, "Member 'BPL_Runes_C_Get_Rune_Board_Slot_Soket_Icon_in_Empty_Bg::ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_Get_Rune_Board_Slot_Soket_Icon_in_Empty_Bg, Temp_byte_Variable) == 0x000018, "Member 'BPL_Runes_C_Get_Rune_Board_Slot_Soket_Icon_in_Empty_Bg::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_Get_Rune_Board_Slot_Soket_Icon_in_Empty_Bg, Temp_object_Variable) == 0x000020, "Member 'BPL_Runes_C_Get_Rune_Board_Slot_Soket_Icon_in_Empty_Bg::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_Get_Rune_Board_Slot_Soket_Icon_in_Empty_Bg, Temp_object_Variable_1) == 0x000028, "Member 'BPL_Runes_C_Get_Rune_Board_Slot_Soket_Icon_in_Empty_Bg::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_Get_Rune_Board_Slot_Soket_Icon_in_Empty_Bg, Temp_object_Variable_2) == 0x000030, "Member 'BPL_Runes_C_Get_Rune_Board_Slot_Soket_Icon_in_Empty_Bg::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_Get_Rune_Board_Slot_Soket_Icon_in_Empty_Bg, Temp_object_Variable_3) == 0x000038, "Member 'BPL_Runes_C_Get_Rune_Board_Slot_Soket_Icon_in_Empty_Bg::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_Get_Rune_Board_Slot_Soket_Icon_in_Empty_Bg, Temp_object_Variable_4) == 0x000040, "Member 'BPL_Runes_C_Get_Rune_Board_Slot_Soket_Icon_in_Empty_Bg::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_Get_Rune_Board_Slot_Soket_Icon_in_Empty_Bg, Temp_object_Variable_5) == 0x000048, "Member 'BPL_Runes_C_Get_Rune_Board_Slot_Soket_Icon_in_Empty_Bg::Temp_object_Variable_5' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_Get_Rune_Board_Slot_Soket_Icon_in_Empty_Bg, Temp_object_Variable_6) == 0x000050, "Member 'BPL_Runes_C_Get_Rune_Board_Slot_Soket_Icon_in_Empty_Bg::Temp_object_Variable_6' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_Get_Rune_Board_Slot_Soket_Icon_in_Empty_Bg, K2Node_Select_Default) == 0x000058, "Member 'BPL_Runes_C_Get_Rune_Board_Slot_Soket_Icon_in_Empty_Bg::K2Node_Select_Default' has a wrong offset!");

// Function BPL_Runes.BPL_Runes_C.Get Rune Class Color Type
// 0x00B0 (0x00B0 - 0x0000)
struct BPL_Runes_C_Get_Rune_Class_Color_Type final
{
public:
	class UImage*                                 SetImage;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	EM1RuneClassType                              InRuneClassType;                                   // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EM1RuneClassType                              Temp_byte_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable;                              // 0x001C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x002C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_2;                            // 0x003C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_3;                            // 0x004C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_4;                            // 0x005C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_5;                            // 0x006C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_6;                            // 0x007C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_7;                            // 0x008C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default;                             // 0x009C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPL_Runes_C_Get_Rune_Class_Color_Type) == 0x000008, "Wrong alignment on BPL_Runes_C_Get_Rune_Class_Color_Type");
static_assert(sizeof(BPL_Runes_C_Get_Rune_Class_Color_Type) == 0x0000B0, "Wrong size on BPL_Runes_C_Get_Rune_Class_Color_Type");
static_assert(offsetof(BPL_Runes_C_Get_Rune_Class_Color_Type, SetImage) == 0x000000, "Member 'BPL_Runes_C_Get_Rune_Class_Color_Type::SetImage' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_Get_Rune_Class_Color_Type, InRuneClassType) == 0x000008, "Member 'BPL_Runes_C_Get_Rune_Class_Color_Type::InRuneClassType' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_Get_Rune_Class_Color_Type, __WorldContext) == 0x000010, "Member 'BPL_Runes_C_Get_Rune_Class_Color_Type::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_Get_Rune_Class_Color_Type, Temp_byte_Variable) == 0x000018, "Member 'BPL_Runes_C_Get_Rune_Class_Color_Type::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_Get_Rune_Class_Color_Type, Temp_struct_Variable) == 0x00001C, "Member 'BPL_Runes_C_Get_Rune_Class_Color_Type::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_Get_Rune_Class_Color_Type, Temp_struct_Variable_1) == 0x00002C, "Member 'BPL_Runes_C_Get_Rune_Class_Color_Type::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_Get_Rune_Class_Color_Type, Temp_struct_Variable_2) == 0x00003C, "Member 'BPL_Runes_C_Get_Rune_Class_Color_Type::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_Get_Rune_Class_Color_Type, Temp_struct_Variable_3) == 0x00004C, "Member 'BPL_Runes_C_Get_Rune_Class_Color_Type::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_Get_Rune_Class_Color_Type, Temp_struct_Variable_4) == 0x00005C, "Member 'BPL_Runes_C_Get_Rune_Class_Color_Type::Temp_struct_Variable_4' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_Get_Rune_Class_Color_Type, Temp_struct_Variable_5) == 0x00006C, "Member 'BPL_Runes_C_Get_Rune_Class_Color_Type::Temp_struct_Variable_5' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_Get_Rune_Class_Color_Type, Temp_struct_Variable_6) == 0x00007C, "Member 'BPL_Runes_C_Get_Rune_Class_Color_Type::Temp_struct_Variable_6' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_Get_Rune_Class_Color_Type, Temp_struct_Variable_7) == 0x00008C, "Member 'BPL_Runes_C_Get_Rune_Class_Color_Type::Temp_struct_Variable_7' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_Get_Rune_Class_Color_Type, K2Node_Select_Default) == 0x00009C, "Member 'BPL_Runes_C_Get_Rune_Class_Color_Type::K2Node_Select_Default' has a wrong offset!");

// Function BPL_Runes.BPL_Runes_C.Get Rune Class Type Mini Image
// 0x0068 (0x0068 - 0x0000)
struct BPL_Runes_C_Get_Rune_Class_Type_Mini_Image final
{
public:
	EM1RuneClassType                              InRuneClassType;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)
	EM1RuneClassType                              Temp_byte_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             Temp_object_Variable;                              // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_1;                            // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_2;                            // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_3;                            // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_4;                            // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_5;                            // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_6;                            // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_7;                            // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_Select_Default;                             // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPL_Runes_C_Get_Rune_Class_Type_Mini_Image) == 0x000008, "Wrong alignment on BPL_Runes_C_Get_Rune_Class_Type_Mini_Image");
static_assert(sizeof(BPL_Runes_C_Get_Rune_Class_Type_Mini_Image) == 0x000068, "Wrong size on BPL_Runes_C_Get_Rune_Class_Type_Mini_Image");
static_assert(offsetof(BPL_Runes_C_Get_Rune_Class_Type_Mini_Image, InRuneClassType) == 0x000000, "Member 'BPL_Runes_C_Get_Rune_Class_Type_Mini_Image::InRuneClassType' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_Get_Rune_Class_Type_Mini_Image, __WorldContext) == 0x000008, "Member 'BPL_Runes_C_Get_Rune_Class_Type_Mini_Image::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_Get_Rune_Class_Type_Mini_Image, ReturnValue) == 0x000010, "Member 'BPL_Runes_C_Get_Rune_Class_Type_Mini_Image::ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_Get_Rune_Class_Type_Mini_Image, Temp_byte_Variable) == 0x000018, "Member 'BPL_Runes_C_Get_Rune_Class_Type_Mini_Image::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_Get_Rune_Class_Type_Mini_Image, Temp_object_Variable) == 0x000020, "Member 'BPL_Runes_C_Get_Rune_Class_Type_Mini_Image::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_Get_Rune_Class_Type_Mini_Image, Temp_object_Variable_1) == 0x000028, "Member 'BPL_Runes_C_Get_Rune_Class_Type_Mini_Image::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_Get_Rune_Class_Type_Mini_Image, Temp_object_Variable_2) == 0x000030, "Member 'BPL_Runes_C_Get_Rune_Class_Type_Mini_Image::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_Get_Rune_Class_Type_Mini_Image, Temp_object_Variable_3) == 0x000038, "Member 'BPL_Runes_C_Get_Rune_Class_Type_Mini_Image::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_Get_Rune_Class_Type_Mini_Image, Temp_object_Variable_4) == 0x000040, "Member 'BPL_Runes_C_Get_Rune_Class_Type_Mini_Image::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_Get_Rune_Class_Type_Mini_Image, Temp_object_Variable_5) == 0x000048, "Member 'BPL_Runes_C_Get_Rune_Class_Type_Mini_Image::Temp_object_Variable_5' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_Get_Rune_Class_Type_Mini_Image, Temp_object_Variable_6) == 0x000050, "Member 'BPL_Runes_C_Get_Rune_Class_Type_Mini_Image::Temp_object_Variable_6' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_Get_Rune_Class_Type_Mini_Image, Temp_object_Variable_7) == 0x000058, "Member 'BPL_Runes_C_Get_Rune_Class_Type_Mini_Image::Temp_object_Variable_7' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_Get_Rune_Class_Type_Mini_Image, K2Node_Select_Default) == 0x000060, "Member 'BPL_Runes_C_Get_Rune_Class_Type_Mini_Image::K2Node_Select_Default' has a wrong offset!");

// Function BPL_Runes.BPL_Runes_C.Get Rune Class Type Mini Image_Color
// 0x0068 (0x0068 - 0x0000)
struct BPL_Runes_C_Get_Rune_Class_Type_Mini_Image_Color final
{
public:
	EM1RuneClassType                              InRuneClassType;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)
	EM1RuneClassType                              Temp_byte_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             Temp_object_Variable;                              // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_1;                            // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_2;                            // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_3;                            // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_4;                            // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_5;                            // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_6;                            // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_7;                            // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_Select_Default;                             // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPL_Runes_C_Get_Rune_Class_Type_Mini_Image_Color) == 0x000008, "Wrong alignment on BPL_Runes_C_Get_Rune_Class_Type_Mini_Image_Color");
static_assert(sizeof(BPL_Runes_C_Get_Rune_Class_Type_Mini_Image_Color) == 0x000068, "Wrong size on BPL_Runes_C_Get_Rune_Class_Type_Mini_Image_Color");
static_assert(offsetof(BPL_Runes_C_Get_Rune_Class_Type_Mini_Image_Color, InRuneClassType) == 0x000000, "Member 'BPL_Runes_C_Get_Rune_Class_Type_Mini_Image_Color::InRuneClassType' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_Get_Rune_Class_Type_Mini_Image_Color, __WorldContext) == 0x000008, "Member 'BPL_Runes_C_Get_Rune_Class_Type_Mini_Image_Color::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_Get_Rune_Class_Type_Mini_Image_Color, ReturnValue) == 0x000010, "Member 'BPL_Runes_C_Get_Rune_Class_Type_Mini_Image_Color::ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_Get_Rune_Class_Type_Mini_Image_Color, Temp_byte_Variable) == 0x000018, "Member 'BPL_Runes_C_Get_Rune_Class_Type_Mini_Image_Color::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_Get_Rune_Class_Type_Mini_Image_Color, Temp_object_Variable) == 0x000020, "Member 'BPL_Runes_C_Get_Rune_Class_Type_Mini_Image_Color::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_Get_Rune_Class_Type_Mini_Image_Color, Temp_object_Variable_1) == 0x000028, "Member 'BPL_Runes_C_Get_Rune_Class_Type_Mini_Image_Color::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_Get_Rune_Class_Type_Mini_Image_Color, Temp_object_Variable_2) == 0x000030, "Member 'BPL_Runes_C_Get_Rune_Class_Type_Mini_Image_Color::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_Get_Rune_Class_Type_Mini_Image_Color, Temp_object_Variable_3) == 0x000038, "Member 'BPL_Runes_C_Get_Rune_Class_Type_Mini_Image_Color::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_Get_Rune_Class_Type_Mini_Image_Color, Temp_object_Variable_4) == 0x000040, "Member 'BPL_Runes_C_Get_Rune_Class_Type_Mini_Image_Color::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_Get_Rune_Class_Type_Mini_Image_Color, Temp_object_Variable_5) == 0x000048, "Member 'BPL_Runes_C_Get_Rune_Class_Type_Mini_Image_Color::Temp_object_Variable_5' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_Get_Rune_Class_Type_Mini_Image_Color, Temp_object_Variable_6) == 0x000050, "Member 'BPL_Runes_C_Get_Rune_Class_Type_Mini_Image_Color::Temp_object_Variable_6' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_Get_Rune_Class_Type_Mini_Image_Color, Temp_object_Variable_7) == 0x000058, "Member 'BPL_Runes_C_Get_Rune_Class_Type_Mini_Image_Color::Temp_object_Variable_7' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_Get_Rune_Class_Type_Mini_Image_Color, K2Node_Select_Default) == 0x000060, "Member 'BPL_Runes_C_Get_Rune_Class_Type_Mini_Image_Color::K2Node_Select_Default' has a wrong offset!");

// Function BPL_Runes.BPL_Runes_C.Get Rune Socket Image
// 0x0068 (0x0068 - 0x0000)
struct BPL_Runes_C_Get_Rune_Socket_Image final
{
public:
	EM1RuneSocketType                             InType;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             SlotTexture;                                       // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EM1RuneSocketType                             Temp_byte_Variable;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             Temp_object_Variable;                              // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_1;                            // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_2;                            // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_3;                            // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_4;                            // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_5;                            // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_6;                            // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_Select_Default;                             // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPL_Runes_C_Get_Rune_Socket_Image) == 0x000008, "Wrong alignment on BPL_Runes_C_Get_Rune_Socket_Image");
static_assert(sizeof(BPL_Runes_C_Get_Rune_Socket_Image) == 0x000068, "Wrong size on BPL_Runes_C_Get_Rune_Socket_Image");
static_assert(offsetof(BPL_Runes_C_Get_Rune_Socket_Image, InType) == 0x000000, "Member 'BPL_Runes_C_Get_Rune_Socket_Image::InType' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_Get_Rune_Socket_Image, __WorldContext) == 0x000008, "Member 'BPL_Runes_C_Get_Rune_Socket_Image::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_Get_Rune_Socket_Image, ReturnValue) == 0x000010, "Member 'BPL_Runes_C_Get_Rune_Socket_Image::ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_Get_Rune_Socket_Image, SlotTexture) == 0x000018, "Member 'BPL_Runes_C_Get_Rune_Socket_Image::SlotTexture' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_Get_Rune_Socket_Image, Temp_byte_Variable) == 0x000020, "Member 'BPL_Runes_C_Get_Rune_Socket_Image::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_Get_Rune_Socket_Image, Temp_object_Variable) == 0x000028, "Member 'BPL_Runes_C_Get_Rune_Socket_Image::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_Get_Rune_Socket_Image, Temp_object_Variable_1) == 0x000030, "Member 'BPL_Runes_C_Get_Rune_Socket_Image::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_Get_Rune_Socket_Image, Temp_object_Variable_2) == 0x000038, "Member 'BPL_Runes_C_Get_Rune_Socket_Image::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_Get_Rune_Socket_Image, Temp_object_Variable_3) == 0x000040, "Member 'BPL_Runes_C_Get_Rune_Socket_Image::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_Get_Rune_Socket_Image, Temp_object_Variable_4) == 0x000048, "Member 'BPL_Runes_C_Get_Rune_Socket_Image::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_Get_Rune_Socket_Image, Temp_object_Variable_5) == 0x000050, "Member 'BPL_Runes_C_Get_Rune_Socket_Image::Temp_object_Variable_5' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_Get_Rune_Socket_Image, Temp_object_Variable_6) == 0x000058, "Member 'BPL_Runes_C_Get_Rune_Socket_Image::Temp_object_Variable_6' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_Get_Rune_Socket_Image, K2Node_Select_Default) == 0x000060, "Member 'BPL_Runes_C_Get_Rune_Socket_Image::K2Node_Select_Default' has a wrong offset!");

// Function BPL_Runes.BPL_Runes_C.Get Rune Socket Type Mini Image
// 0x0060 (0x0060 - 0x0000)
struct BPL_Runes_C_Get_Rune_Socket_Type_Mini_Image final
{
public:
	EM1RuneSocketType                             InRuneSocketType;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)
	EM1RuneSocketType                             Temp_byte_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             Temp_object_Variable;                              // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_1;                            // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_2;                            // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_3;                            // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_4;                            // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_5;                            // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_6;                            // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_Select_Default;                             // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPL_Runes_C_Get_Rune_Socket_Type_Mini_Image) == 0x000008, "Wrong alignment on BPL_Runes_C_Get_Rune_Socket_Type_Mini_Image");
static_assert(sizeof(BPL_Runes_C_Get_Rune_Socket_Type_Mini_Image) == 0x000060, "Wrong size on BPL_Runes_C_Get_Rune_Socket_Type_Mini_Image");
static_assert(offsetof(BPL_Runes_C_Get_Rune_Socket_Type_Mini_Image, InRuneSocketType) == 0x000000, "Member 'BPL_Runes_C_Get_Rune_Socket_Type_Mini_Image::InRuneSocketType' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_Get_Rune_Socket_Type_Mini_Image, __WorldContext) == 0x000008, "Member 'BPL_Runes_C_Get_Rune_Socket_Type_Mini_Image::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_Get_Rune_Socket_Type_Mini_Image, ReturnValue) == 0x000010, "Member 'BPL_Runes_C_Get_Rune_Socket_Type_Mini_Image::ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_Get_Rune_Socket_Type_Mini_Image, Temp_byte_Variable) == 0x000018, "Member 'BPL_Runes_C_Get_Rune_Socket_Type_Mini_Image::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_Get_Rune_Socket_Type_Mini_Image, Temp_object_Variable) == 0x000020, "Member 'BPL_Runes_C_Get_Rune_Socket_Type_Mini_Image::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_Get_Rune_Socket_Type_Mini_Image, Temp_object_Variable_1) == 0x000028, "Member 'BPL_Runes_C_Get_Rune_Socket_Type_Mini_Image::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_Get_Rune_Socket_Type_Mini_Image, Temp_object_Variable_2) == 0x000030, "Member 'BPL_Runes_C_Get_Rune_Socket_Type_Mini_Image::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_Get_Rune_Socket_Type_Mini_Image, Temp_object_Variable_3) == 0x000038, "Member 'BPL_Runes_C_Get_Rune_Socket_Type_Mini_Image::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_Get_Rune_Socket_Type_Mini_Image, Temp_object_Variable_4) == 0x000040, "Member 'BPL_Runes_C_Get_Rune_Socket_Type_Mini_Image::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_Get_Rune_Socket_Type_Mini_Image, Temp_object_Variable_5) == 0x000048, "Member 'BPL_Runes_C_Get_Rune_Socket_Type_Mini_Image::Temp_object_Variable_5' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_Get_Rune_Socket_Type_Mini_Image, Temp_object_Variable_6) == 0x000050, "Member 'BPL_Runes_C_Get_Rune_Socket_Type_Mini_Image::Temp_object_Variable_6' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_Get_Rune_Socket_Type_Mini_Image, K2Node_Select_Default) == 0x000058, "Member 'BPL_Runes_C_Get_Rune_Socket_Type_Mini_Image::K2Node_Select_Default' has a wrong offset!");

// Function BPL_Runes.BPL_Runes_C.Get Tab Text By Supported Types By Rune Class
// 0x0090 (0x0090 - 0x0000)
struct BPL_Runes_C_Get_Tab_Text_By_Supported_Types_By_Rune_Class final
{
public:
	EM1RuneClassType                              InRuneClassType;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EM1UITextType                                 InType;                                            // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   ReturnValue;                                       // 0x0010(0x0018)(Parm, OutParm, ReturnParm)
	EM1RuneClassType                              Temp_byte_Variable;                                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable;                                // 0x002C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_1;                              // 0x0034(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_2;                              // 0x003C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_3;                              // 0x0044(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_4;                              // 0x004C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_5;                              // 0x0054(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_6;                              // 0x005C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_7;                              // 0x0064(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Select_Default;                             // 0x006C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetLocalizedText_ReturnValue;             // 0x0078(0x0018)()
};
static_assert(alignof(BPL_Runes_C_Get_Tab_Text_By_Supported_Types_By_Rune_Class) == 0x000008, "Wrong alignment on BPL_Runes_C_Get_Tab_Text_By_Supported_Types_By_Rune_Class");
static_assert(sizeof(BPL_Runes_C_Get_Tab_Text_By_Supported_Types_By_Rune_Class) == 0x000090, "Wrong size on BPL_Runes_C_Get_Tab_Text_By_Supported_Types_By_Rune_Class");
static_assert(offsetof(BPL_Runes_C_Get_Tab_Text_By_Supported_Types_By_Rune_Class, InRuneClassType) == 0x000000, "Member 'BPL_Runes_C_Get_Tab_Text_By_Supported_Types_By_Rune_Class::InRuneClassType' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_Get_Tab_Text_By_Supported_Types_By_Rune_Class, InType) == 0x000001, "Member 'BPL_Runes_C_Get_Tab_Text_By_Supported_Types_By_Rune_Class::InType' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_Get_Tab_Text_By_Supported_Types_By_Rune_Class, __WorldContext) == 0x000008, "Member 'BPL_Runes_C_Get_Tab_Text_By_Supported_Types_By_Rune_Class::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_Get_Tab_Text_By_Supported_Types_By_Rune_Class, ReturnValue) == 0x000010, "Member 'BPL_Runes_C_Get_Tab_Text_By_Supported_Types_By_Rune_Class::ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_Get_Tab_Text_By_Supported_Types_By_Rune_Class, Temp_byte_Variable) == 0x000028, "Member 'BPL_Runes_C_Get_Tab_Text_By_Supported_Types_By_Rune_Class::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_Get_Tab_Text_By_Supported_Types_By_Rune_Class, Temp_name_Variable) == 0x00002C, "Member 'BPL_Runes_C_Get_Tab_Text_By_Supported_Types_By_Rune_Class::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_Get_Tab_Text_By_Supported_Types_By_Rune_Class, Temp_name_Variable_1) == 0x000034, "Member 'BPL_Runes_C_Get_Tab_Text_By_Supported_Types_By_Rune_Class::Temp_name_Variable_1' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_Get_Tab_Text_By_Supported_Types_By_Rune_Class, Temp_name_Variable_2) == 0x00003C, "Member 'BPL_Runes_C_Get_Tab_Text_By_Supported_Types_By_Rune_Class::Temp_name_Variable_2' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_Get_Tab_Text_By_Supported_Types_By_Rune_Class, Temp_name_Variable_3) == 0x000044, "Member 'BPL_Runes_C_Get_Tab_Text_By_Supported_Types_By_Rune_Class::Temp_name_Variable_3' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_Get_Tab_Text_By_Supported_Types_By_Rune_Class, Temp_name_Variable_4) == 0x00004C, "Member 'BPL_Runes_C_Get_Tab_Text_By_Supported_Types_By_Rune_Class::Temp_name_Variable_4' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_Get_Tab_Text_By_Supported_Types_By_Rune_Class, Temp_name_Variable_5) == 0x000054, "Member 'BPL_Runes_C_Get_Tab_Text_By_Supported_Types_By_Rune_Class::Temp_name_Variable_5' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_Get_Tab_Text_By_Supported_Types_By_Rune_Class, Temp_name_Variable_6) == 0x00005C, "Member 'BPL_Runes_C_Get_Tab_Text_By_Supported_Types_By_Rune_Class::Temp_name_Variable_6' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_Get_Tab_Text_By_Supported_Types_By_Rune_Class, Temp_name_Variable_7) == 0x000064, "Member 'BPL_Runes_C_Get_Tab_Text_By_Supported_Types_By_Rune_Class::Temp_name_Variable_7' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_Get_Tab_Text_By_Supported_Types_By_Rune_Class, K2Node_Select_Default) == 0x00006C, "Member 'BPL_Runes_C_Get_Tab_Text_By_Supported_Types_By_Rune_Class::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_Get_Tab_Text_By_Supported_Types_By_Rune_Class, CallFunc_GetLocalizedText_ReturnValue) == 0x000078, "Member 'BPL_Runes_C_Get_Tab_Text_By_Supported_Types_By_Rune_Class::CallFunc_GetLocalizedText_ReturnValue' has a wrong offset!");

// Function BPL_Runes.BPL_Runes_C.Get Text by Rune Class Type Capacity
// 0x0090 (0x0090 - 0x0000)
struct BPL_Runes_C_Get_Text_by_Rune_Class_Type_Capacity final
{
public:
	EM1RuneClassType                              InRuneClassType;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   ReturnValue;                                       // 0x0010(0x0018)(Parm, OutParm, ReturnParm)
	EM1RuneClassType                              Temp_byte_Variable;                                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable;                                // 0x002C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_1;                              // 0x0034(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_2;                              // 0x003C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_3;                              // 0x0044(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_4;                              // 0x004C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_5;                              // 0x0054(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_6;                              // 0x005C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_7;                              // 0x0064(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Select_Default;                             // 0x006C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetLocalizedText_ReturnValue;             // 0x0078(0x0018)()
};
static_assert(alignof(BPL_Runes_C_Get_Text_by_Rune_Class_Type_Capacity) == 0x000008, "Wrong alignment on BPL_Runes_C_Get_Text_by_Rune_Class_Type_Capacity");
static_assert(sizeof(BPL_Runes_C_Get_Text_by_Rune_Class_Type_Capacity) == 0x000090, "Wrong size on BPL_Runes_C_Get_Text_by_Rune_Class_Type_Capacity");
static_assert(offsetof(BPL_Runes_C_Get_Text_by_Rune_Class_Type_Capacity, InRuneClassType) == 0x000000, "Member 'BPL_Runes_C_Get_Text_by_Rune_Class_Type_Capacity::InRuneClassType' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_Get_Text_by_Rune_Class_Type_Capacity, __WorldContext) == 0x000008, "Member 'BPL_Runes_C_Get_Text_by_Rune_Class_Type_Capacity::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_Get_Text_by_Rune_Class_Type_Capacity, ReturnValue) == 0x000010, "Member 'BPL_Runes_C_Get_Text_by_Rune_Class_Type_Capacity::ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_Get_Text_by_Rune_Class_Type_Capacity, Temp_byte_Variable) == 0x000028, "Member 'BPL_Runes_C_Get_Text_by_Rune_Class_Type_Capacity::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_Get_Text_by_Rune_Class_Type_Capacity, Temp_name_Variable) == 0x00002C, "Member 'BPL_Runes_C_Get_Text_by_Rune_Class_Type_Capacity::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_Get_Text_by_Rune_Class_Type_Capacity, Temp_name_Variable_1) == 0x000034, "Member 'BPL_Runes_C_Get_Text_by_Rune_Class_Type_Capacity::Temp_name_Variable_1' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_Get_Text_by_Rune_Class_Type_Capacity, Temp_name_Variable_2) == 0x00003C, "Member 'BPL_Runes_C_Get_Text_by_Rune_Class_Type_Capacity::Temp_name_Variable_2' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_Get_Text_by_Rune_Class_Type_Capacity, Temp_name_Variable_3) == 0x000044, "Member 'BPL_Runes_C_Get_Text_by_Rune_Class_Type_Capacity::Temp_name_Variable_3' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_Get_Text_by_Rune_Class_Type_Capacity, Temp_name_Variable_4) == 0x00004C, "Member 'BPL_Runes_C_Get_Text_by_Rune_Class_Type_Capacity::Temp_name_Variable_4' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_Get_Text_by_Rune_Class_Type_Capacity, Temp_name_Variable_5) == 0x000054, "Member 'BPL_Runes_C_Get_Text_by_Rune_Class_Type_Capacity::Temp_name_Variable_5' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_Get_Text_by_Rune_Class_Type_Capacity, Temp_name_Variable_6) == 0x00005C, "Member 'BPL_Runes_C_Get_Text_by_Rune_Class_Type_Capacity::Temp_name_Variable_6' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_Get_Text_by_Rune_Class_Type_Capacity, Temp_name_Variable_7) == 0x000064, "Member 'BPL_Runes_C_Get_Text_by_Rune_Class_Type_Capacity::Temp_name_Variable_7' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_Get_Text_by_Rune_Class_Type_Capacity, K2Node_Select_Default) == 0x00006C, "Member 'BPL_Runes_C_Get_Text_by_Rune_Class_Type_Capacity::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_Get_Text_by_Rune_Class_Type_Capacity, CallFunc_GetLocalizedText_ReturnValue) == 0x000078, "Member 'BPL_Runes_C_Get_Text_by_Rune_Class_Type_Capacity::CallFunc_GetLocalizedText_ReturnValue' has a wrong offset!");

// Function BPL_Runes.BPL_Runes_C.Get Text By Supported Types By Rune Class
// 0x00C8 (0x00C8 - 0x0000)
struct BPL_Runes_C_Get_Text_By_Supported_Types_By_Rune_Class final
{
public:
	EM1RuneClassType                              InRuneClassType;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EM1UITextType                                 InType;                                            // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   ReturnValue;                                       // 0x0010(0x0018)(Parm, OutParm, ReturnParm)
	EM1RuneClassType                              Temp_byte_Variable;                                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable;                                // 0x002C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_1;                              // 0x0034(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_2;                              // 0x003C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_3;                              // 0x0044(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_4;                              // 0x004C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_5;                              // 0x0054(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_6;                              // 0x005C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EM1UITextType                                 Temp_byte_Variable_1;                              // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_65[0x3];                                       // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable_7;                              // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_8;                              // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_9;                              // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetSelectedCharacterName_OutName;         // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSelectedCharacterName_OutLevel;        // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0094(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Select_Default;                             // 0x009C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Select_Default_1;                           // 0x00A4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetLocalizedText_ReturnValue;             // 0x00B0(0x0018)()
};
static_assert(alignof(BPL_Runes_C_Get_Text_By_Supported_Types_By_Rune_Class) == 0x000008, "Wrong alignment on BPL_Runes_C_Get_Text_By_Supported_Types_By_Rune_Class");
static_assert(sizeof(BPL_Runes_C_Get_Text_By_Supported_Types_By_Rune_Class) == 0x0000C8, "Wrong size on BPL_Runes_C_Get_Text_By_Supported_Types_By_Rune_Class");
static_assert(offsetof(BPL_Runes_C_Get_Text_By_Supported_Types_By_Rune_Class, InRuneClassType) == 0x000000, "Member 'BPL_Runes_C_Get_Text_By_Supported_Types_By_Rune_Class::InRuneClassType' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_Get_Text_By_Supported_Types_By_Rune_Class, InType) == 0x000001, "Member 'BPL_Runes_C_Get_Text_By_Supported_Types_By_Rune_Class::InType' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_Get_Text_By_Supported_Types_By_Rune_Class, __WorldContext) == 0x000008, "Member 'BPL_Runes_C_Get_Text_By_Supported_Types_By_Rune_Class::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_Get_Text_By_Supported_Types_By_Rune_Class, ReturnValue) == 0x000010, "Member 'BPL_Runes_C_Get_Text_By_Supported_Types_By_Rune_Class::ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_Get_Text_By_Supported_Types_By_Rune_Class, Temp_byte_Variable) == 0x000028, "Member 'BPL_Runes_C_Get_Text_By_Supported_Types_By_Rune_Class::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_Get_Text_By_Supported_Types_By_Rune_Class, Temp_name_Variable) == 0x00002C, "Member 'BPL_Runes_C_Get_Text_By_Supported_Types_By_Rune_Class::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_Get_Text_By_Supported_Types_By_Rune_Class, Temp_name_Variable_1) == 0x000034, "Member 'BPL_Runes_C_Get_Text_By_Supported_Types_By_Rune_Class::Temp_name_Variable_1' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_Get_Text_By_Supported_Types_By_Rune_Class, Temp_name_Variable_2) == 0x00003C, "Member 'BPL_Runes_C_Get_Text_By_Supported_Types_By_Rune_Class::Temp_name_Variable_2' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_Get_Text_By_Supported_Types_By_Rune_Class, Temp_name_Variable_3) == 0x000044, "Member 'BPL_Runes_C_Get_Text_By_Supported_Types_By_Rune_Class::Temp_name_Variable_3' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_Get_Text_By_Supported_Types_By_Rune_Class, Temp_name_Variable_4) == 0x00004C, "Member 'BPL_Runes_C_Get_Text_By_Supported_Types_By_Rune_Class::Temp_name_Variable_4' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_Get_Text_By_Supported_Types_By_Rune_Class, Temp_name_Variable_5) == 0x000054, "Member 'BPL_Runes_C_Get_Text_By_Supported_Types_By_Rune_Class::Temp_name_Variable_5' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_Get_Text_By_Supported_Types_By_Rune_Class, Temp_name_Variable_6) == 0x00005C, "Member 'BPL_Runes_C_Get_Text_By_Supported_Types_By_Rune_Class::Temp_name_Variable_6' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_Get_Text_By_Supported_Types_By_Rune_Class, Temp_byte_Variable_1) == 0x000064, "Member 'BPL_Runes_C_Get_Text_By_Supported_Types_By_Rune_Class::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_Get_Text_By_Supported_Types_By_Rune_Class, Temp_name_Variable_7) == 0x000068, "Member 'BPL_Runes_C_Get_Text_By_Supported_Types_By_Rune_Class::Temp_name_Variable_7' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_Get_Text_By_Supported_Types_By_Rune_Class, Temp_name_Variable_8) == 0x000070, "Member 'BPL_Runes_C_Get_Text_By_Supported_Types_By_Rune_Class::Temp_name_Variable_8' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_Get_Text_By_Supported_Types_By_Rune_Class, Temp_name_Variable_9) == 0x000078, "Member 'BPL_Runes_C_Get_Text_By_Supported_Types_By_Rune_Class::Temp_name_Variable_9' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_Get_Text_By_Supported_Types_By_Rune_Class, CallFunc_GetSelectedCharacterName_OutName) == 0x000080, "Member 'BPL_Runes_C_Get_Text_By_Supported_Types_By_Rune_Class::CallFunc_GetSelectedCharacterName_OutName' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_Get_Text_By_Supported_Types_By_Rune_Class, CallFunc_GetSelectedCharacterName_OutLevel) == 0x000090, "Member 'BPL_Runes_C_Get_Text_By_Supported_Types_By_Rune_Class::CallFunc_GetSelectedCharacterName_OutLevel' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_Get_Text_By_Supported_Types_By_Rune_Class, CallFunc_Conv_StringToName_ReturnValue) == 0x000094, "Member 'BPL_Runes_C_Get_Text_By_Supported_Types_By_Rune_Class::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_Get_Text_By_Supported_Types_By_Rune_Class, K2Node_Select_Default) == 0x00009C, "Member 'BPL_Runes_C_Get_Text_By_Supported_Types_By_Rune_Class::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_Get_Text_By_Supported_Types_By_Rune_Class, K2Node_Select_Default_1) == 0x0000A4, "Member 'BPL_Runes_C_Get_Text_By_Supported_Types_By_Rune_Class::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_Get_Text_By_Supported_Types_By_Rune_Class, CallFunc_GetLocalizedText_ReturnValue) == 0x0000B0, "Member 'BPL_Runes_C_Get_Text_By_Supported_Types_By_Rune_Class::CallFunc_GetLocalizedText_ReturnValue' has a wrong offset!");

// Function BPL_Runes.BPL_Runes_C.Get Tooltip Text by Rune Class
// 0x0090 (0x0090 - 0x0000)
struct BPL_Runes_C_Get_Tooltip_Text_by_Rune_Class final
{
public:
	EM1RuneClassType                              InRuneClassType;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EM1UITextType                                 InType;                                            // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   ReturnValue;                                       // 0x0010(0x0018)(Parm, OutParm, ReturnParm)
	EM1RuneClassType                              Temp_byte_Variable;                                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable;                                // 0x002C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_1;                              // 0x0034(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_2;                              // 0x003C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_3;                              // 0x0044(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_4;                              // 0x004C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_5;                              // 0x0054(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_6;                              // 0x005C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_7;                              // 0x0064(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Select_Default;                             // 0x006C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetLocalizedText_ReturnValue;             // 0x0078(0x0018)()
};
static_assert(alignof(BPL_Runes_C_Get_Tooltip_Text_by_Rune_Class) == 0x000008, "Wrong alignment on BPL_Runes_C_Get_Tooltip_Text_by_Rune_Class");
static_assert(sizeof(BPL_Runes_C_Get_Tooltip_Text_by_Rune_Class) == 0x000090, "Wrong size on BPL_Runes_C_Get_Tooltip_Text_by_Rune_Class");
static_assert(offsetof(BPL_Runes_C_Get_Tooltip_Text_by_Rune_Class, InRuneClassType) == 0x000000, "Member 'BPL_Runes_C_Get_Tooltip_Text_by_Rune_Class::InRuneClassType' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_Get_Tooltip_Text_by_Rune_Class, InType) == 0x000001, "Member 'BPL_Runes_C_Get_Tooltip_Text_by_Rune_Class::InType' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_Get_Tooltip_Text_by_Rune_Class, __WorldContext) == 0x000008, "Member 'BPL_Runes_C_Get_Tooltip_Text_by_Rune_Class::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_Get_Tooltip_Text_by_Rune_Class, ReturnValue) == 0x000010, "Member 'BPL_Runes_C_Get_Tooltip_Text_by_Rune_Class::ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_Get_Tooltip_Text_by_Rune_Class, Temp_byte_Variable) == 0x000028, "Member 'BPL_Runes_C_Get_Tooltip_Text_by_Rune_Class::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_Get_Tooltip_Text_by_Rune_Class, Temp_name_Variable) == 0x00002C, "Member 'BPL_Runes_C_Get_Tooltip_Text_by_Rune_Class::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_Get_Tooltip_Text_by_Rune_Class, Temp_name_Variable_1) == 0x000034, "Member 'BPL_Runes_C_Get_Tooltip_Text_by_Rune_Class::Temp_name_Variable_1' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_Get_Tooltip_Text_by_Rune_Class, Temp_name_Variable_2) == 0x00003C, "Member 'BPL_Runes_C_Get_Tooltip_Text_by_Rune_Class::Temp_name_Variable_2' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_Get_Tooltip_Text_by_Rune_Class, Temp_name_Variable_3) == 0x000044, "Member 'BPL_Runes_C_Get_Tooltip_Text_by_Rune_Class::Temp_name_Variable_3' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_Get_Tooltip_Text_by_Rune_Class, Temp_name_Variable_4) == 0x00004C, "Member 'BPL_Runes_C_Get_Tooltip_Text_by_Rune_Class::Temp_name_Variable_4' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_Get_Tooltip_Text_by_Rune_Class, Temp_name_Variable_5) == 0x000054, "Member 'BPL_Runes_C_Get_Tooltip_Text_by_Rune_Class::Temp_name_Variable_5' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_Get_Tooltip_Text_by_Rune_Class, Temp_name_Variable_6) == 0x00005C, "Member 'BPL_Runes_C_Get_Tooltip_Text_by_Rune_Class::Temp_name_Variable_6' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_Get_Tooltip_Text_by_Rune_Class, Temp_name_Variable_7) == 0x000064, "Member 'BPL_Runes_C_Get_Tooltip_Text_by_Rune_Class::Temp_name_Variable_7' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_Get_Tooltip_Text_by_Rune_Class, K2Node_Select_Default) == 0x00006C, "Member 'BPL_Runes_C_Get_Tooltip_Text_by_Rune_Class::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_Get_Tooltip_Text_by_Rune_Class, CallFunc_GetLocalizedText_ReturnValue) == 0x000078, "Member 'BPL_Runes_C_Get_Tooltip_Text_by_Rune_Class::CallFunc_GetLocalizedText_ReturnValue' has a wrong offset!");

// Function BPL_Runes.BPL_Runes_C.GetIconImageByItemClassType
// 0x00C0 (0x00C0 - 0x0000)
struct BPL_Runes_C_GetIconImageByItemClassType final
{
public:
	EM1EquipItemClassType                         ItemClassType;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Image;                                             // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EM1EquipItemClassType                         Temp_byte_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             Temp_object_Variable;                              // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_1;                            // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_2;                            // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_3;                            // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_4;                            // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_5;                            // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_6;                            // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_7;                            // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_8;                            // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_9;                            // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_10;                           // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_11;                           // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_12;                           // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_13;                           // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_14;                           // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_15;                           // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_16;                           // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_17;                           // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_18;                           // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_Select_Default;                             // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPL_Runes_C_GetIconImageByItemClassType) == 0x000008, "Wrong alignment on BPL_Runes_C_GetIconImageByItemClassType");
static_assert(sizeof(BPL_Runes_C_GetIconImageByItemClassType) == 0x0000C0, "Wrong size on BPL_Runes_C_GetIconImageByItemClassType");
static_assert(offsetof(BPL_Runes_C_GetIconImageByItemClassType, ItemClassType) == 0x000000, "Member 'BPL_Runes_C_GetIconImageByItemClassType::ItemClassType' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_GetIconImageByItemClassType, __WorldContext) == 0x000008, "Member 'BPL_Runes_C_GetIconImageByItemClassType::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_GetIconImageByItemClassType, Image) == 0x000010, "Member 'BPL_Runes_C_GetIconImageByItemClassType::Image' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_GetIconImageByItemClassType, Temp_byte_Variable) == 0x000018, "Member 'BPL_Runes_C_GetIconImageByItemClassType::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_GetIconImageByItemClassType, Temp_object_Variable) == 0x000020, "Member 'BPL_Runes_C_GetIconImageByItemClassType::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_GetIconImageByItemClassType, Temp_object_Variable_1) == 0x000028, "Member 'BPL_Runes_C_GetIconImageByItemClassType::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_GetIconImageByItemClassType, Temp_object_Variable_2) == 0x000030, "Member 'BPL_Runes_C_GetIconImageByItemClassType::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_GetIconImageByItemClassType, Temp_object_Variable_3) == 0x000038, "Member 'BPL_Runes_C_GetIconImageByItemClassType::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_GetIconImageByItemClassType, Temp_object_Variable_4) == 0x000040, "Member 'BPL_Runes_C_GetIconImageByItemClassType::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_GetIconImageByItemClassType, Temp_object_Variable_5) == 0x000048, "Member 'BPL_Runes_C_GetIconImageByItemClassType::Temp_object_Variable_5' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_GetIconImageByItemClassType, Temp_object_Variable_6) == 0x000050, "Member 'BPL_Runes_C_GetIconImageByItemClassType::Temp_object_Variable_6' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_GetIconImageByItemClassType, Temp_object_Variable_7) == 0x000058, "Member 'BPL_Runes_C_GetIconImageByItemClassType::Temp_object_Variable_7' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_GetIconImageByItemClassType, Temp_object_Variable_8) == 0x000060, "Member 'BPL_Runes_C_GetIconImageByItemClassType::Temp_object_Variable_8' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_GetIconImageByItemClassType, Temp_object_Variable_9) == 0x000068, "Member 'BPL_Runes_C_GetIconImageByItemClassType::Temp_object_Variable_9' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_GetIconImageByItemClassType, Temp_object_Variable_10) == 0x000070, "Member 'BPL_Runes_C_GetIconImageByItemClassType::Temp_object_Variable_10' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_GetIconImageByItemClassType, Temp_object_Variable_11) == 0x000078, "Member 'BPL_Runes_C_GetIconImageByItemClassType::Temp_object_Variable_11' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_GetIconImageByItemClassType, Temp_object_Variable_12) == 0x000080, "Member 'BPL_Runes_C_GetIconImageByItemClassType::Temp_object_Variable_12' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_GetIconImageByItemClassType, Temp_object_Variable_13) == 0x000088, "Member 'BPL_Runes_C_GetIconImageByItemClassType::Temp_object_Variable_13' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_GetIconImageByItemClassType, Temp_object_Variable_14) == 0x000090, "Member 'BPL_Runes_C_GetIconImageByItemClassType::Temp_object_Variable_14' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_GetIconImageByItemClassType, Temp_object_Variable_15) == 0x000098, "Member 'BPL_Runes_C_GetIconImageByItemClassType::Temp_object_Variable_15' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_GetIconImageByItemClassType, Temp_object_Variable_16) == 0x0000A0, "Member 'BPL_Runes_C_GetIconImageByItemClassType::Temp_object_Variable_16' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_GetIconImageByItemClassType, Temp_object_Variable_17) == 0x0000A8, "Member 'BPL_Runes_C_GetIconImageByItemClassType::Temp_object_Variable_17' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_GetIconImageByItemClassType, Temp_object_Variable_18) == 0x0000B0, "Member 'BPL_Runes_C_GetIconImageByItemClassType::Temp_object_Variable_18' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_GetIconImageByItemClassType, K2Node_Select_Default) == 0x0000B8, "Member 'BPL_Runes_C_GetIconImageByItemClassType::K2Node_Select_Default' has a wrong offset!");

// Function BPL_Runes.BPL_Runes_C.GetRuneClassTypeBackImage
// 0x0068 (0x0068 - 0x0000)
struct BPL_Runes_C_GetRuneClassTypeBackImage final
{
public:
	EM1RuneClassType                              InRuneClassType;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)
	EM1RuneClassType                              Temp_byte_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             Temp_object_Variable;                              // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_1;                            // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_2;                            // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_3;                            // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_4;                            // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_5;                            // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_6;                            // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_7;                            // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_Select_Default;                             // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPL_Runes_C_GetRuneClassTypeBackImage) == 0x000008, "Wrong alignment on BPL_Runes_C_GetRuneClassTypeBackImage");
static_assert(sizeof(BPL_Runes_C_GetRuneClassTypeBackImage) == 0x000068, "Wrong size on BPL_Runes_C_GetRuneClassTypeBackImage");
static_assert(offsetof(BPL_Runes_C_GetRuneClassTypeBackImage, InRuneClassType) == 0x000000, "Member 'BPL_Runes_C_GetRuneClassTypeBackImage::InRuneClassType' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_GetRuneClassTypeBackImage, __WorldContext) == 0x000008, "Member 'BPL_Runes_C_GetRuneClassTypeBackImage::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_GetRuneClassTypeBackImage, ReturnValue) == 0x000010, "Member 'BPL_Runes_C_GetRuneClassTypeBackImage::ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_GetRuneClassTypeBackImage, Temp_byte_Variable) == 0x000018, "Member 'BPL_Runes_C_GetRuneClassTypeBackImage::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_GetRuneClassTypeBackImage, Temp_object_Variable) == 0x000020, "Member 'BPL_Runes_C_GetRuneClassTypeBackImage::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_GetRuneClassTypeBackImage, Temp_object_Variable_1) == 0x000028, "Member 'BPL_Runes_C_GetRuneClassTypeBackImage::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_GetRuneClassTypeBackImage, Temp_object_Variable_2) == 0x000030, "Member 'BPL_Runes_C_GetRuneClassTypeBackImage::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_GetRuneClassTypeBackImage, Temp_object_Variable_3) == 0x000038, "Member 'BPL_Runes_C_GetRuneClassTypeBackImage::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_GetRuneClassTypeBackImage, Temp_object_Variable_4) == 0x000040, "Member 'BPL_Runes_C_GetRuneClassTypeBackImage::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_GetRuneClassTypeBackImage, Temp_object_Variable_5) == 0x000048, "Member 'BPL_Runes_C_GetRuneClassTypeBackImage::Temp_object_Variable_5' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_GetRuneClassTypeBackImage, Temp_object_Variable_6) == 0x000050, "Member 'BPL_Runes_C_GetRuneClassTypeBackImage::Temp_object_Variable_6' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_GetRuneClassTypeBackImage, Temp_object_Variable_7) == 0x000058, "Member 'BPL_Runes_C_GetRuneClassTypeBackImage::Temp_object_Variable_7' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_GetRuneClassTypeBackImage, K2Node_Select_Default) == 0x000060, "Member 'BPL_Runes_C_GetRuneClassTypeBackImage::K2Node_Select_Default' has a wrong offset!");

// Function BPL_Runes.BPL_Runes_C.GetTextByItemClassType
// 0x00E8 (0x00E8 - 0x0000)
struct BPL_Runes_C_GetTextByItemClassType final
{
public:
	EM1EquipItemClassType                         ItemClassType;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   Text;                                              // 0x0010(0x0018)(Parm, OutParm)
	EM1EquipItemClassType                         Temp_byte_Variable;                                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable;                                // 0x002C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_1;                              // 0x0034(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_2;                              // 0x003C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_3;                              // 0x0044(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_4;                              // 0x004C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_5;                              // 0x0054(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_6;                              // 0x005C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_7;                              // 0x0064(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_8;                              // 0x006C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_9;                              // 0x0074(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_10;                             // 0x007C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_11;                             // 0x0084(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_12;                             // 0x008C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_13;                             // 0x0094(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_14;                             // 0x009C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_15;                             // 0x00A4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_16;                             // 0x00AC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_17;                             // 0x00B4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_18;                             // 0x00BC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Select_Default;                             // 0x00C4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CC[0x4];                                       // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetLocalizedText_ReturnValue;             // 0x00D0(0x0018)()
};
static_assert(alignof(BPL_Runes_C_GetTextByItemClassType) == 0x000008, "Wrong alignment on BPL_Runes_C_GetTextByItemClassType");
static_assert(sizeof(BPL_Runes_C_GetTextByItemClassType) == 0x0000E8, "Wrong size on BPL_Runes_C_GetTextByItemClassType");
static_assert(offsetof(BPL_Runes_C_GetTextByItemClassType, ItemClassType) == 0x000000, "Member 'BPL_Runes_C_GetTextByItemClassType::ItemClassType' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_GetTextByItemClassType, __WorldContext) == 0x000008, "Member 'BPL_Runes_C_GetTextByItemClassType::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_GetTextByItemClassType, Text) == 0x000010, "Member 'BPL_Runes_C_GetTextByItemClassType::Text' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_GetTextByItemClassType, Temp_byte_Variable) == 0x000028, "Member 'BPL_Runes_C_GetTextByItemClassType::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_GetTextByItemClassType, Temp_name_Variable) == 0x00002C, "Member 'BPL_Runes_C_GetTextByItemClassType::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_GetTextByItemClassType, Temp_name_Variable_1) == 0x000034, "Member 'BPL_Runes_C_GetTextByItemClassType::Temp_name_Variable_1' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_GetTextByItemClassType, Temp_name_Variable_2) == 0x00003C, "Member 'BPL_Runes_C_GetTextByItemClassType::Temp_name_Variable_2' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_GetTextByItemClassType, Temp_name_Variable_3) == 0x000044, "Member 'BPL_Runes_C_GetTextByItemClassType::Temp_name_Variable_3' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_GetTextByItemClassType, Temp_name_Variable_4) == 0x00004C, "Member 'BPL_Runes_C_GetTextByItemClassType::Temp_name_Variable_4' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_GetTextByItemClassType, Temp_name_Variable_5) == 0x000054, "Member 'BPL_Runes_C_GetTextByItemClassType::Temp_name_Variable_5' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_GetTextByItemClassType, Temp_name_Variable_6) == 0x00005C, "Member 'BPL_Runes_C_GetTextByItemClassType::Temp_name_Variable_6' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_GetTextByItemClassType, Temp_name_Variable_7) == 0x000064, "Member 'BPL_Runes_C_GetTextByItemClassType::Temp_name_Variable_7' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_GetTextByItemClassType, Temp_name_Variable_8) == 0x00006C, "Member 'BPL_Runes_C_GetTextByItemClassType::Temp_name_Variable_8' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_GetTextByItemClassType, Temp_name_Variable_9) == 0x000074, "Member 'BPL_Runes_C_GetTextByItemClassType::Temp_name_Variable_9' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_GetTextByItemClassType, Temp_name_Variable_10) == 0x00007C, "Member 'BPL_Runes_C_GetTextByItemClassType::Temp_name_Variable_10' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_GetTextByItemClassType, Temp_name_Variable_11) == 0x000084, "Member 'BPL_Runes_C_GetTextByItemClassType::Temp_name_Variable_11' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_GetTextByItemClassType, Temp_name_Variable_12) == 0x00008C, "Member 'BPL_Runes_C_GetTextByItemClassType::Temp_name_Variable_12' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_GetTextByItemClassType, Temp_name_Variable_13) == 0x000094, "Member 'BPL_Runes_C_GetTextByItemClassType::Temp_name_Variable_13' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_GetTextByItemClassType, Temp_name_Variable_14) == 0x00009C, "Member 'BPL_Runes_C_GetTextByItemClassType::Temp_name_Variable_14' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_GetTextByItemClassType, Temp_name_Variable_15) == 0x0000A4, "Member 'BPL_Runes_C_GetTextByItemClassType::Temp_name_Variable_15' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_GetTextByItemClassType, Temp_name_Variable_16) == 0x0000AC, "Member 'BPL_Runes_C_GetTextByItemClassType::Temp_name_Variable_16' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_GetTextByItemClassType, Temp_name_Variable_17) == 0x0000B4, "Member 'BPL_Runes_C_GetTextByItemClassType::Temp_name_Variable_17' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_GetTextByItemClassType, Temp_name_Variable_18) == 0x0000BC, "Member 'BPL_Runes_C_GetTextByItemClassType::Temp_name_Variable_18' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_GetTextByItemClassType, K2Node_Select_Default) == 0x0000C4, "Member 'BPL_Runes_C_GetTextByItemClassType::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_GetTextByItemClassType, CallFunc_GetLocalizedText_ReturnValue) == 0x0000D0, "Member 'BPL_Runes_C_GetTextByItemClassType::CallFunc_GetLocalizedText_ReturnValue' has a wrong offset!");

// Function BPL_Runes.BPL_Runes_C.GetTextByRuneClassType
// 0x00B8 (0x00B8 - 0x0000)
struct BPL_Runes_C_GetTextByRuneClassType final
{
public:
	EM1RuneClassType                              InClassType;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 ReturnUIKey;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	EM1RuneClassType                              Temp_byte_Variable;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable;                              // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_1;                            // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_2;                            // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_3;                            // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_4;                            // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_5;                            // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_6;                            // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_7;                            // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_Select_Default;                             // 0x00A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BPL_Runes_C_GetTextByRuneClassType) == 0x000008, "Wrong alignment on BPL_Runes_C_GetTextByRuneClassType");
static_assert(sizeof(BPL_Runes_C_GetTextByRuneClassType) == 0x0000B8, "Wrong size on BPL_Runes_C_GetTextByRuneClassType");
static_assert(offsetof(BPL_Runes_C_GetTextByRuneClassType, InClassType) == 0x000000, "Member 'BPL_Runes_C_GetTextByRuneClassType::InClassType' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_GetTextByRuneClassType, __WorldContext) == 0x000008, "Member 'BPL_Runes_C_GetTextByRuneClassType::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_GetTextByRuneClassType, ReturnUIKey) == 0x000010, "Member 'BPL_Runes_C_GetTextByRuneClassType::ReturnUIKey' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_GetTextByRuneClassType, Temp_byte_Variable) == 0x000020, "Member 'BPL_Runes_C_GetTextByRuneClassType::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_GetTextByRuneClassType, Temp_string_Variable) == 0x000028, "Member 'BPL_Runes_C_GetTextByRuneClassType::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_GetTextByRuneClassType, Temp_string_Variable_1) == 0x000038, "Member 'BPL_Runes_C_GetTextByRuneClassType::Temp_string_Variable_1' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_GetTextByRuneClassType, Temp_string_Variable_2) == 0x000048, "Member 'BPL_Runes_C_GetTextByRuneClassType::Temp_string_Variable_2' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_GetTextByRuneClassType, Temp_string_Variable_3) == 0x000058, "Member 'BPL_Runes_C_GetTextByRuneClassType::Temp_string_Variable_3' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_GetTextByRuneClassType, Temp_string_Variable_4) == 0x000068, "Member 'BPL_Runes_C_GetTextByRuneClassType::Temp_string_Variable_4' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_GetTextByRuneClassType, Temp_string_Variable_5) == 0x000078, "Member 'BPL_Runes_C_GetTextByRuneClassType::Temp_string_Variable_5' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_GetTextByRuneClassType, Temp_string_Variable_6) == 0x000088, "Member 'BPL_Runes_C_GetTextByRuneClassType::Temp_string_Variable_6' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_GetTextByRuneClassType, Temp_string_Variable_7) == 0x000098, "Member 'BPL_Runes_C_GetTextByRuneClassType::Temp_string_Variable_7' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_GetTextByRuneClassType, K2Node_Select_Default) == 0x0000A8, "Member 'BPL_Runes_C_GetTextByRuneClassType::K2Node_Select_Default' has a wrong offset!");

// Function BPL_Runes.BPL_Runes_C.GetTextByRuneSocketType
// 0x0090 (0x0090 - 0x0000)
struct BPL_Runes_C_GetTextByRuneSocketType final
{
public:
	EM1RuneClassType                              InClassType;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   NewParam;                                          // 0x0010(0x0018)(Parm, OutParm)
	EM1RuneClassType                              Temp_byte_Variable;                                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable;                                // 0x002C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_1;                              // 0x0034(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_2;                              // 0x003C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_3;                              // 0x0044(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_4;                              // 0x004C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_5;                              // 0x0054(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_6;                              // 0x005C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_7;                              // 0x0064(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Select_Default;                             // 0x006C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetLocalizedText_ReturnValue;             // 0x0078(0x0018)()
};
static_assert(alignof(BPL_Runes_C_GetTextByRuneSocketType) == 0x000008, "Wrong alignment on BPL_Runes_C_GetTextByRuneSocketType");
static_assert(sizeof(BPL_Runes_C_GetTextByRuneSocketType) == 0x000090, "Wrong size on BPL_Runes_C_GetTextByRuneSocketType");
static_assert(offsetof(BPL_Runes_C_GetTextByRuneSocketType, InClassType) == 0x000000, "Member 'BPL_Runes_C_GetTextByRuneSocketType::InClassType' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_GetTextByRuneSocketType, __WorldContext) == 0x000008, "Member 'BPL_Runes_C_GetTextByRuneSocketType::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_GetTextByRuneSocketType, NewParam) == 0x000010, "Member 'BPL_Runes_C_GetTextByRuneSocketType::NewParam' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_GetTextByRuneSocketType, Temp_byte_Variable) == 0x000028, "Member 'BPL_Runes_C_GetTextByRuneSocketType::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_GetTextByRuneSocketType, Temp_name_Variable) == 0x00002C, "Member 'BPL_Runes_C_GetTextByRuneSocketType::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_GetTextByRuneSocketType, Temp_name_Variable_1) == 0x000034, "Member 'BPL_Runes_C_GetTextByRuneSocketType::Temp_name_Variable_1' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_GetTextByRuneSocketType, Temp_name_Variable_2) == 0x00003C, "Member 'BPL_Runes_C_GetTextByRuneSocketType::Temp_name_Variable_2' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_GetTextByRuneSocketType, Temp_name_Variable_3) == 0x000044, "Member 'BPL_Runes_C_GetTextByRuneSocketType::Temp_name_Variable_3' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_GetTextByRuneSocketType, Temp_name_Variable_4) == 0x00004C, "Member 'BPL_Runes_C_GetTextByRuneSocketType::Temp_name_Variable_4' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_GetTextByRuneSocketType, Temp_name_Variable_5) == 0x000054, "Member 'BPL_Runes_C_GetTextByRuneSocketType::Temp_name_Variable_5' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_GetTextByRuneSocketType, Temp_name_Variable_6) == 0x00005C, "Member 'BPL_Runes_C_GetTextByRuneSocketType::Temp_name_Variable_6' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_GetTextByRuneSocketType, Temp_name_Variable_7) == 0x000064, "Member 'BPL_Runes_C_GetTextByRuneSocketType::Temp_name_Variable_7' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_GetTextByRuneSocketType, K2Node_Select_Default) == 0x00006C, "Member 'BPL_Runes_C_GetTextByRuneSocketType::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_GetTextByRuneSocketType, CallFunc_GetLocalizedText_ReturnValue) == 0x000078, "Member 'BPL_Runes_C_GetTextByRuneSocketType::CallFunc_GetLocalizedText_ReturnValue' has a wrong offset!");

// Function BPL_Runes.BPL_Runes_C.GetTextBySocketType
// 0x0088 (0x0088 - 0x0000)
struct BPL_Runes_C_GetTextBySocketType final
{
public:
	EM1RuneSocketType                             InSocketColor;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   ReturnValue;                                       // 0x0010(0x0018)(Parm, OutParm, ReturnParm)
	EM1RuneSocketType                             Temp_byte_Variable;                                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable;                                // 0x002C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_1;                              // 0x0034(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_2;                              // 0x003C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_3;                              // 0x0044(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_4;                              // 0x004C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_5;                              // 0x0054(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_6;                              // 0x005C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Select_Default;                             // 0x0064(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetLocalizedText_ReturnValue;             // 0x0070(0x0018)()
};
static_assert(alignof(BPL_Runes_C_GetTextBySocketType) == 0x000008, "Wrong alignment on BPL_Runes_C_GetTextBySocketType");
static_assert(sizeof(BPL_Runes_C_GetTextBySocketType) == 0x000088, "Wrong size on BPL_Runes_C_GetTextBySocketType");
static_assert(offsetof(BPL_Runes_C_GetTextBySocketType, InSocketColor) == 0x000000, "Member 'BPL_Runes_C_GetTextBySocketType::InSocketColor' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_GetTextBySocketType, __WorldContext) == 0x000008, "Member 'BPL_Runes_C_GetTextBySocketType::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_GetTextBySocketType, ReturnValue) == 0x000010, "Member 'BPL_Runes_C_GetTextBySocketType::ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_GetTextBySocketType, Temp_byte_Variable) == 0x000028, "Member 'BPL_Runes_C_GetTextBySocketType::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_GetTextBySocketType, Temp_name_Variable) == 0x00002C, "Member 'BPL_Runes_C_GetTextBySocketType::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_GetTextBySocketType, Temp_name_Variable_1) == 0x000034, "Member 'BPL_Runes_C_GetTextBySocketType::Temp_name_Variable_1' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_GetTextBySocketType, Temp_name_Variable_2) == 0x00003C, "Member 'BPL_Runes_C_GetTextBySocketType::Temp_name_Variable_2' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_GetTextBySocketType, Temp_name_Variable_3) == 0x000044, "Member 'BPL_Runes_C_GetTextBySocketType::Temp_name_Variable_3' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_GetTextBySocketType, Temp_name_Variable_4) == 0x00004C, "Member 'BPL_Runes_C_GetTextBySocketType::Temp_name_Variable_4' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_GetTextBySocketType, Temp_name_Variable_5) == 0x000054, "Member 'BPL_Runes_C_GetTextBySocketType::Temp_name_Variable_5' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_GetTextBySocketType, Temp_name_Variable_6) == 0x00005C, "Member 'BPL_Runes_C_GetTextBySocketType::Temp_name_Variable_6' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_GetTextBySocketType, K2Node_Select_Default) == 0x000064, "Member 'BPL_Runes_C_GetTextBySocketType::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_GetTextBySocketType, CallFunc_GetLocalizedText_ReturnValue) == 0x000070, "Member 'BPL_Runes_C_GetTextBySocketType::CallFunc_GetLocalizedText_ReturnValue' has a wrong offset!");

// Function BPL_Runes.BPL_Runes_C.ShowChildrenOfParent
// 0x0038 (0x0038 - 0x0000)
struct BPL_Runes_C_ShowChildrenOfParent final
{
public:
	class UPanelWidget*                           InParent;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         InCountToShow;                                     // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetChildrenCount_ReturnValue;             // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_GetChildAt_ReturnValue;                   // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E[0x2];                                       // 0x002E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0036(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0037(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPL_Runes_C_ShowChildrenOfParent) == 0x000008, "Wrong alignment on BPL_Runes_C_ShowChildrenOfParent");
static_assert(sizeof(BPL_Runes_C_ShowChildrenOfParent) == 0x000038, "Wrong size on BPL_Runes_C_ShowChildrenOfParent");
static_assert(offsetof(BPL_Runes_C_ShowChildrenOfParent, InParent) == 0x000000, "Member 'BPL_Runes_C_ShowChildrenOfParent::InParent' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_ShowChildrenOfParent, InCountToShow) == 0x000008, "Member 'BPL_Runes_C_ShowChildrenOfParent::InCountToShow' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_ShowChildrenOfParent, __WorldContext) == 0x000010, "Member 'BPL_Runes_C_ShowChildrenOfParent::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_ShowChildrenOfParent, Temp_int_Variable) == 0x000018, "Member 'BPL_Runes_C_ShowChildrenOfParent::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_ShowChildrenOfParent, CallFunc_GetChildrenCount_ReturnValue) == 0x00001C, "Member 'BPL_Runes_C_ShowChildrenOfParent::CallFunc_GetChildrenCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_ShowChildrenOfParent, CallFunc_GetChildAt_ReturnValue) == 0x000020, "Member 'BPL_Runes_C_ShowChildrenOfParent::CallFunc_GetChildAt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_ShowChildrenOfParent, CallFunc_Subtract_IntInt_ReturnValue) == 0x000028, "Member 'BPL_Runes_C_ShowChildrenOfParent::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_ShowChildrenOfParent, CallFunc_Less_IntInt_ReturnValue) == 0x00002C, "Member 'BPL_Runes_C_ShowChildrenOfParent::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_ShowChildrenOfParent, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00002D, "Member 'BPL_Runes_C_ShowChildrenOfParent::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_ShowChildrenOfParent, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'BPL_Runes_C_ShowChildrenOfParent::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_ShowChildrenOfParent, Temp_byte_Variable) == 0x000034, "Member 'BPL_Runes_C_ShowChildrenOfParent::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_ShowChildrenOfParent, Temp_byte_Variable_1) == 0x000035, "Member 'BPL_Runes_C_ShowChildrenOfParent::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_ShowChildrenOfParent, Temp_bool_Variable) == 0x000036, "Member 'BPL_Runes_C_ShowChildrenOfParent::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_ShowChildrenOfParent, K2Node_Select_Default) == 0x000037, "Member 'BPL_Runes_C_ShowChildrenOfParent::K2Node_Select_Default' has a wrong offset!");

// Function BPL_Runes.BPL_Runes_C.SetEnchantLevelIcon
// 0x0028 (0x0028 - 0x0000)
struct BPL_Runes_C_SetEnchantLevelIcon final
{
public:
	class UUI_RuneEnchant_Icon_C*                 InEnchantLevelIcon;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         InLevel;                                           // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                __WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Clamp_ReturnValue;                        // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPL_Runes_C_SetEnchantLevelIcon) == 0x000008, "Wrong alignment on BPL_Runes_C_SetEnchantLevelIcon");
static_assert(sizeof(BPL_Runes_C_SetEnchantLevelIcon) == 0x000028, "Wrong size on BPL_Runes_C_SetEnchantLevelIcon");
static_assert(offsetof(BPL_Runes_C_SetEnchantLevelIcon, InEnchantLevelIcon) == 0x000000, "Member 'BPL_Runes_C_SetEnchantLevelIcon::InEnchantLevelIcon' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_SetEnchantLevelIcon, InLevel) == 0x000008, "Member 'BPL_Runes_C_SetEnchantLevelIcon::InLevel' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_SetEnchantLevelIcon, __WorldContext) == 0x000010, "Member 'BPL_Runes_C_SetEnchantLevelIcon::__WorldContext' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_SetEnchantLevelIcon, CallFunc_Subtract_IntInt_ReturnValue) == 0x000018, "Member 'BPL_Runes_C_SetEnchantLevelIcon::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_SetEnchantLevelIcon, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00001C, "Member 'BPL_Runes_C_SetEnchantLevelIcon::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPL_Runes_C_SetEnchantLevelIcon, CallFunc_Clamp_ReturnValue) == 0x000020, "Member 'BPL_Runes_C_SetEnchantLevelIcon::CallFunc_Clamp_ReturnValue' has a wrong offset!");

}

