#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPL_UILibrary

#include "Basic.hpp"

#include "Engine_classes.hpp"
#include "M1Data_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BPL_UILibrary.BPL_UILibrary_C
// 0x0000 (0x0028 - 0x0028)
class UBPL_UILibrary_C final : public UBlueprintFunctionLibrary
{
public:
	static void Get_UI_ArcheType_Icon(EM1SkillArcheType InArcheType, class UObject* __WorldContext, class UTexture2D** ArcheTypeIcon);
	static void Get_UI_CurrencyType_Icon(EM1CurrencyType InCurrencyType, class UObject* __WorldContext, TSoftObjectPtr<class UTexture2D>* ElementalTypeIcon);
	static void Get_UI_ElemntalType_Color(EM1ElementalDamageChannel InElementalDamageType, class UObject* __WorldContext, struct FLinearColor* ElementalTypeColor);
	static void Get_UI_ElemntalType_Icon(EM1ElementalDamageChannel InElementalDamageType, class UObject* __WorldContext, class UTexture2D** ElementalTypeIcon);
	static void Get_UI_ElemntalType_Text(EM1ElementalDamageChannel InElementalDamageType, class UObject* __WorldContext, class FString* ElementalTypeText);
	static void Get_UI_ItemOptionTierColor(EM1ItemOptionTierType OptionTierType, class UObject* __WorldContext, struct FLinearColor* TierColor);
	static void Get_UI_ItemOptionTierColor_DeepColors(EM1ItemOptionTierType OptionTierType, class UObject* __WorldContext, struct FLinearColor* TierColor);
	static void Get_UI_RoundsType_Icon(EM1RoundsType InRoundsType, class UObject* __WorldContext, class UTexture2D** ElementalTypeIcon);
	static void Get_UI_RoundsType_Icon2(EM1RoundsType InRoundsType, class UObject* __WorldContext, class UTexture2D** ElementalTypeIcon);
	static void Get_UI_RoundsType_Text(EM1RoundsType InRoundsType, class UObject* __WorldContext, class FString* ElementalTypeText);
	static void Get_UI_TierColor_Base(EM1ItemTierType InItemTierType, class UObject* __WorldContext, struct FLinearColor* TierColor);
	static void Get_UI_TierColor_Line(EM1ItemTierType InItemTierType, class UObject* __WorldContext, struct FLinearColor* TierColor_Line);
	static void Get_UI_WeaponClass_Icon(EM1EquipItemClassType InEquipItemClass, class UObject* __WorldContext, TSoftObjectPtr<class UTexture2D>* ElementalTypeIcon);
	static void Set_UI_Rounds_Color(class UImage* InImage, EM1RoundsType InRoundType, class UObject* __WorldContext);
	static void SetUICurrencyIcon(class UImage* Image, EM1CurrencyType CurrencyType, class UObject* __WorldContext);
	static void SetUIKeyColor(class UM1TextBlock* InText, class UImage* InImage, class UBorder* InBorder, class UObject* __WorldContext);
	static void SetUIKeyColor_Material(class UM1TextBlock* InText, class UImage* InImage, class UBorder* InBorder, class UObject* __WorldContext);
	static void SetUIMaxCharacterColor_Text(class UM1TextBlock* InText, class UImage* InImage, class UBorder* InBorder, class UObject* __WorldContext);
	static void SetUIMaxMasteryColor_Text(class UM1TextBlock* InText, class UImage* InImage, class UBorder* InBorder, class UObject* __WorldContext);
	static void SetUIWarringColor_Text(class UM1TextBlock* InText, class UImage* InImage, class UBorder* InBorder, class UObject* __WorldContext);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BPL_UILibrary_C">();
	}
	static class UBPL_UILibrary_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBPL_UILibrary_C>();
	}
};
static_assert(alignof(UBPL_UILibrary_C) == 0x000008, "Wrong alignment on UBPL_UILibrary_C");
static_assert(sizeof(UBPL_UILibrary_C) == 0x000028, "Wrong size on UBPL_UILibrary_C");

}

