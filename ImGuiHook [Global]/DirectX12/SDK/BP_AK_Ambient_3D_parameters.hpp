#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AK_Ambient_3D

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "AkAudio_structs.hpp"
#include "AmbientObjectType_structs.hpp"


namespace SDK::Params
{

// Function BP_AK_Ambient_3D.BP_AK_Ambient_3D_C.Auto_AddSpotPoint
// 0x00F0 (0x00F0 - 0x0000)
struct BP_AK_Ambient_3D_C_Auto_AddSpotPoint final
{
public:
	struct FVector                                NewLoc;                                            // 0x0000(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_18[0x8];                                       // 0x0018(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_Conv_VectorToTransform_ReturnValue;       // 0x0020(0x0030)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_Conv_VectorToTransform_ReturnValue_1;     // 0x0050(0x0030)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_InvertTransform_ReturnValue;              // 0x0080(0x0030)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_ComposeTransforms_ReturnValue;            // 0x00B0(0x0030)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AK_Ambient_3D_C_Auto_AddSpotPoint) == 0x000010, "Wrong alignment on BP_AK_Ambient_3D_C_Auto_AddSpotPoint");
static_assert(sizeof(BP_AK_Ambient_3D_C_Auto_AddSpotPoint) == 0x0000F0, "Wrong size on BP_AK_Ambient_3D_C_Auto_AddSpotPoint");
static_assert(offsetof(BP_AK_Ambient_3D_C_Auto_AddSpotPoint, NewLoc) == 0x000000, "Member 'BP_AK_Ambient_3D_C_Auto_AddSpotPoint::NewLoc' has a wrong offset!");
static_assert(offsetof(BP_AK_Ambient_3D_C_Auto_AddSpotPoint, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00000C, "Member 'BP_AK_Ambient_3D_C_Auto_AddSpotPoint::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AK_Ambient_3D_C_Auto_AddSpotPoint, CallFunc_Conv_VectorToTransform_ReturnValue) == 0x000020, "Member 'BP_AK_Ambient_3D_C_Auto_AddSpotPoint::CallFunc_Conv_VectorToTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AK_Ambient_3D_C_Auto_AddSpotPoint, CallFunc_Conv_VectorToTransform_ReturnValue_1) == 0x000050, "Member 'BP_AK_Ambient_3D_C_Auto_AddSpotPoint::CallFunc_Conv_VectorToTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AK_Ambient_3D_C_Auto_AddSpotPoint, CallFunc_InvertTransform_ReturnValue) == 0x000080, "Member 'BP_AK_Ambient_3D_C_Auto_AddSpotPoint::CallFunc_InvertTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AK_Ambient_3D_C_Auto_AddSpotPoint, CallFunc_ComposeTransforms_ReturnValue) == 0x0000B0, "Member 'BP_AK_Ambient_3D_C_Auto_AddSpotPoint::CallFunc_ComposeTransforms_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AK_Ambient_3D_C_Auto_AddSpotPoint, CallFunc_Array_AddUnique_ReturnValue) == 0x0000E0, "Member 'BP_AK_Ambient_3D_C_Auto_AddSpotPoint::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");

// Function BP_AK_Ambient_3D.BP_AK_Ambient_3D_C.Construct
// 0x0110 (0x0110 - 0x0000)
struct BP_AK_Ambient_3D_C_Construct final
{
public:
	struct FTransform                             Temp_struct_Variable;                              // 0x0000(0x0030)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USplineComponent*                       CallFunc_AddComponent_ReturnValue;                 // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0060(0x0030)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UArrowComponent*                        CallFunc_AddComponent_ReturnValue_1;               // 0x0098(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A8[0x8];                                       // 0x00A8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_Array_Get_Item;                           // 0x00B0(0x0030)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UArrowComponent*                        CallFunc_AddComponent_ReturnValue_2;               // 0x00E8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F5[0x3];                                       // 0x00F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetArrowLength_NewLength_ImplicitCast;    // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetArrowLength_NewLength_ImplicitCast_1;  // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AK_Ambient_3D_C_Construct) == 0x000010, "Wrong alignment on BP_AK_Ambient_3D_C_Construct");
static_assert(sizeof(BP_AK_Ambient_3D_C_Construct) == 0x000110, "Wrong size on BP_AK_Ambient_3D_C_Construct");
static_assert(offsetof(BP_AK_Ambient_3D_C_Construct, Temp_struct_Variable) == 0x000000, "Member 'BP_AK_Ambient_3D_C_Construct::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_AK_Ambient_3D_C_Construct, Temp_int_Array_Index_Variable) == 0x000030, "Member 'BP_AK_Ambient_3D_C_Construct::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AK_Ambient_3D_C_Construct, CallFunc_AddComponent_ReturnValue) == 0x000038, "Member 'BP_AK_Ambient_3D_C_Construct::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AK_Ambient_3D_C_Construct, Temp_int_Loop_Counter_Variable) == 0x000040, "Member 'BP_AK_Ambient_3D_C_Construct::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AK_Ambient_3D_C_Construct, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000048, "Member 'BP_AK_Ambient_3D_C_Construct::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AK_Ambient_3D_C_Construct, CallFunc_Add_IntInt_ReturnValue) == 0x000050, "Member 'BP_AK_Ambient_3D_C_Construct::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AK_Ambient_3D_C_Construct, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000058, "Member 'BP_AK_Ambient_3D_C_Construct::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AK_Ambient_3D_C_Construct, CallFunc_MakeTransform_ReturnValue) == 0x000060, "Member 'BP_AK_Ambient_3D_C_Construct::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AK_Ambient_3D_C_Construct, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000090, "Member 'BP_AK_Ambient_3D_C_Construct::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AK_Ambient_3D_C_Construct, CallFunc_AddComponent_ReturnValue_1) == 0x000098, "Member 'BP_AK_Ambient_3D_C_Construct::CallFunc_AddComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AK_Ambient_3D_C_Construct, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x0000A0, "Member 'BP_AK_Ambient_3D_C_Construct::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AK_Ambient_3D_C_Construct, CallFunc_Array_Get_Item) == 0x0000B0, "Member 'BP_AK_Ambient_3D_C_Construct::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AK_Ambient_3D_C_Construct, K2Node_SwitchEnum_CmpSuccess) == 0x0000E0, "Member 'BP_AK_Ambient_3D_C_Construct::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_AK_Ambient_3D_C_Construct, CallFunc_AddComponent_ReturnValue_2) == 0x0000E8, "Member 'BP_AK_Ambient_3D_C_Construct::CallFunc_AddComponent_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_AK_Ambient_3D_C_Construct, CallFunc_Array_Length_ReturnValue) == 0x0000F0, "Member 'BP_AK_Ambient_3D_C_Construct::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AK_Ambient_3D_C_Construct, CallFunc_Less_IntInt_ReturnValue) == 0x0000F4, "Member 'BP_AK_Ambient_3D_C_Construct::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AK_Ambient_3D_C_Construct, CallFunc_Array_Add_ReturnValue) == 0x0000F8, "Member 'BP_AK_Ambient_3D_C_Construct::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AK_Ambient_3D_C_Construct, CallFunc_SetArrowLength_NewLength_ImplicitCast) == 0x0000FC, "Member 'BP_AK_Ambient_3D_C_Construct::CallFunc_SetArrowLength_NewLength_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_AK_Ambient_3D_C_Construct, CallFunc_SetArrowLength_NewLength_ImplicitCast_1) == 0x000100, "Member 'BP_AK_Ambient_3D_C_Construct::CallFunc_SetArrowLength_NewLength_ImplicitCast_1' has a wrong offset!");

// Function BP_AK_Ambient_3D.BP_AK_Ambient_3D_C.Debug_Listening_Area
// 0x00C0 (0x00C0 - 0x0000)
struct BP_AK_Ambient_3D_C_Debug_Listening_Area final
{
public:
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0000(0x0030)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_Array_Get_Item;                           // 0x0050(0x0030)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_ComposeTransforms_ReturnValue;            // 0x0080(0x0030)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ARadiusVisualizeBall_C*                 CallFunc_FinishSpawningActor_ReturnValue;          // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AK_Ambient_3D_C_Debug_Listening_Area) == 0x000010, "Wrong alignment on BP_AK_Ambient_3D_C_Debug_Listening_Area");
static_assert(sizeof(BP_AK_Ambient_3D_C_Debug_Listening_Area) == 0x0000C0, "Wrong size on BP_AK_Ambient_3D_C_Debug_Listening_Area");
static_assert(offsetof(BP_AK_Ambient_3D_C_Debug_Listening_Area, CallFunc_GetTransform_ReturnValue) == 0x000000, "Member 'BP_AK_Ambient_3D_C_Debug_Listening_Area::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AK_Ambient_3D_C_Debug_Listening_Area, Temp_int_Loop_Counter_Variable) == 0x000030, "Member 'BP_AK_Ambient_3D_C_Debug_Listening_Area::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AK_Ambient_3D_C_Debug_Listening_Area, CallFunc_Add_IntInt_ReturnValue) == 0x000034, "Member 'BP_AK_Ambient_3D_C_Debug_Listening_Area::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AK_Ambient_3D_C_Debug_Listening_Area, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'BP_AK_Ambient_3D_C_Debug_Listening_Area::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AK_Ambient_3D_C_Debug_Listening_Area, CallFunc_Less_IntInt_ReturnValue) == 0x00003C, "Member 'BP_AK_Ambient_3D_C_Debug_Listening_Area::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AK_Ambient_3D_C_Debug_Listening_Area, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000040, "Member 'BP_AK_Ambient_3D_C_Debug_Listening_Area::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AK_Ambient_3D_C_Debug_Listening_Area, Temp_int_Array_Index_Variable) == 0x000048, "Member 'BP_AK_Ambient_3D_C_Debug_Listening_Area::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AK_Ambient_3D_C_Debug_Listening_Area, CallFunc_Array_Get_Item) == 0x000050, "Member 'BP_AK_Ambient_3D_C_Debug_Listening_Area::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AK_Ambient_3D_C_Debug_Listening_Area, CallFunc_ComposeTransforms_ReturnValue) == 0x000080, "Member 'BP_AK_Ambient_3D_C_Debug_Listening_Area::CallFunc_ComposeTransforms_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AK_Ambient_3D_C_Debug_Listening_Area, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x0000B0, "Member 'BP_AK_Ambient_3D_C_Debug_Listening_Area::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AK_Ambient_3D_C_Debug_Listening_Area, CallFunc_FinishSpawningActor_ReturnValue) == 0x0000B8, "Member 'BP_AK_Ambient_3D_C_Debug_Listening_Area::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");

// Function BP_AK_Ambient_3D.BP_AK_Ambient_3D_C.ExecuteUbergraph_BP_AK_Ambient_3D
// 0x0018 (0x0018 - 0x0000)
struct BP_AK_Ambient_3D_C_ExecuteUbergraph_BP_AK_Ambient_3D final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetAttenuationScalingFactor_Value_ImplicitCast; // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AK_Ambient_3D_C_ExecuteUbergraph_BP_AK_Ambient_3D) == 0x000008, "Wrong alignment on BP_AK_Ambient_3D_C_ExecuteUbergraph_BP_AK_Ambient_3D");
static_assert(sizeof(BP_AK_Ambient_3D_C_ExecuteUbergraph_BP_AK_Ambient_3D) == 0x000018, "Wrong size on BP_AK_Ambient_3D_C_ExecuteUbergraph_BP_AK_Ambient_3D");
static_assert(offsetof(BP_AK_Ambient_3D_C_ExecuteUbergraph_BP_AK_Ambient_3D, EntryPoint) == 0x000000, "Member 'BP_AK_Ambient_3D_C_ExecuteUbergraph_BP_AK_Ambient_3D::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_AK_Ambient_3D_C_ExecuteUbergraph_BP_AK_Ambient_3D, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000008, "Member 'BP_AK_Ambient_3D_C_ExecuteUbergraph_BP_AK_Ambient_3D::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AK_Ambient_3D_C_ExecuteUbergraph_BP_AK_Ambient_3D, CallFunc_SetAttenuationScalingFactor_Value_ImplicitCast) == 0x000010, "Member 'BP_AK_Ambient_3D_C_ExecuteUbergraph_BP_AK_Ambient_3D::CallFunc_SetAttenuationScalingFactor_Value_ImplicitCast' has a wrong offset!");

// Function BP_AK_Ambient_3D.BP_AK_Ambient_3D_C.GenerateSplineMeter
// 0x00C0 (0x00C0 - 0x0000)
struct BP_AK_Ambient_3D_C_GenerateSplineMeter final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue; // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetSplineLength_ReturnValue;              // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58[0x8];                                       // 0x0058(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_Conv_VectorToTransform_ReturnValue;       // 0x0060(0x0030)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UArrowComponent*                        CallFunc_AddComponent_ReturnValue;                 // 0x0098(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue_1;                     // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A5[0x3];                                       // 0x00A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetArrowLength_NewLength_ImplicitCast;    // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetLocationAtDistanceAlongSpline_Distance_ImplicitCast; // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_A_ImplicitCast;       // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AK_Ambient_3D_C_GenerateSplineMeter) == 0x000010, "Wrong alignment on BP_AK_Ambient_3D_C_GenerateSplineMeter");
static_assert(sizeof(BP_AK_Ambient_3D_C_GenerateSplineMeter) == 0x0000C0, "Wrong size on BP_AK_Ambient_3D_C_GenerateSplineMeter");
static_assert(offsetof(BP_AK_Ambient_3D_C_GenerateSplineMeter, Temp_int_Variable) == 0x000000, "Member 'BP_AK_Ambient_3D_C_GenerateSplineMeter::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_AK_Ambient_3D_C_GenerateSplineMeter, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000008, "Member 'BP_AK_Ambient_3D_C_GenerateSplineMeter::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AK_Ambient_3D_C_GenerateSplineMeter, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000010, "Member 'BP_AK_Ambient_3D_C_GenerateSplineMeter::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AK_Ambient_3D_C_GenerateSplineMeter, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'BP_AK_Ambient_3D_C_GenerateSplineMeter::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AK_Ambient_3D_C_GenerateSplineMeter, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000020, "Member 'BP_AK_Ambient_3D_C_GenerateSplineMeter::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AK_Ambient_3D_C_GenerateSplineMeter, CallFunc_FTrunc_ReturnValue) == 0x000028, "Member 'BP_AK_Ambient_3D_C_GenerateSplineMeter::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AK_Ambient_3D_C_GenerateSplineMeter, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000030, "Member 'BP_AK_Ambient_3D_C_GenerateSplineMeter::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_AK_Ambient_3D_C_GenerateSplineMeter, CallFunc_Multiply_IntInt_ReturnValue) == 0x000038, "Member 'BP_AK_Ambient_3D_C_GenerateSplineMeter::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AK_Ambient_3D_C_GenerateSplineMeter, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000040, "Member 'BP_AK_Ambient_3D_C_GenerateSplineMeter::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AK_Ambient_3D_C_GenerateSplineMeter, CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue) == 0x000048, "Member 'BP_AK_Ambient_3D_C_GenerateSplineMeter::CallFunc_GetLocationAtDistanceAlongSpline_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AK_Ambient_3D_C_GenerateSplineMeter, CallFunc_GetSplineLength_ReturnValue) == 0x000054, "Member 'BP_AK_Ambient_3D_C_GenerateSplineMeter::CallFunc_GetSplineLength_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AK_Ambient_3D_C_GenerateSplineMeter, CallFunc_Conv_VectorToTransform_ReturnValue) == 0x000060, "Member 'BP_AK_Ambient_3D_C_GenerateSplineMeter::CallFunc_Conv_VectorToTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AK_Ambient_3D_C_GenerateSplineMeter, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000090, "Member 'BP_AK_Ambient_3D_C_GenerateSplineMeter::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AK_Ambient_3D_C_GenerateSplineMeter, CallFunc_AddComponent_ReturnValue) == 0x000098, "Member 'BP_AK_Ambient_3D_C_GenerateSplineMeter::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AK_Ambient_3D_C_GenerateSplineMeter, CallFunc_FTrunc_ReturnValue_1) == 0x0000A0, "Member 'BP_AK_Ambient_3D_C_GenerateSplineMeter::CallFunc_FTrunc_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AK_Ambient_3D_C_GenerateSplineMeter, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0000A4, "Member 'BP_AK_Ambient_3D_C_GenerateSplineMeter::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AK_Ambient_3D_C_GenerateSplineMeter, CallFunc_Array_Add_ReturnValue) == 0x0000A8, "Member 'BP_AK_Ambient_3D_C_GenerateSplineMeter::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AK_Ambient_3D_C_GenerateSplineMeter, CallFunc_Array_Add_ReturnValue_1) == 0x0000AC, "Member 'BP_AK_Ambient_3D_C_GenerateSplineMeter::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AK_Ambient_3D_C_GenerateSplineMeter, CallFunc_SetArrowLength_NewLength_ImplicitCast) == 0x0000B0, "Member 'BP_AK_Ambient_3D_C_GenerateSplineMeter::CallFunc_SetArrowLength_NewLength_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_AK_Ambient_3D_C_GenerateSplineMeter, CallFunc_GetLocationAtDistanceAlongSpline_Distance_ImplicitCast) == 0x0000B4, "Member 'BP_AK_Ambient_3D_C_GenerateSplineMeter::CallFunc_GetLocationAtDistanceAlongSpline_Distance_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_AK_Ambient_3D_C_GenerateSplineMeter, CallFunc_Divide_DoubleDouble_A_ImplicitCast) == 0x0000B8, "Member 'BP_AK_Ambient_3D_C_GenerateSplineMeter::CallFunc_Divide_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function BP_AK_Ambient_3D.BP_AK_Ambient_3D_C.GenerateSplinePoint
// 0x0090 (0x0090 - 0x0000)
struct BP_AK_Ambient_3D_C_GenerateSplinePoint final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UArrowComponent*                  Temp_object_Variable;                              // 0x0010(0x0008)(ConstParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAtSplinePoint_ReturnValue;     // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumberOfSplinePoints_ReturnValue;      // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0xC];                                       // 0x0034(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_Conv_VectorToTransform_ReturnValue;       // 0x0040(0x0030)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UArrowComponent*                        CallFunc_AddComponent_ReturnValue;                 // 0x0078(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetArrowLength_NewLength_ImplicitCast;    // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AK_Ambient_3D_C_GenerateSplinePoint) == 0x000010, "Wrong alignment on BP_AK_Ambient_3D_C_GenerateSplinePoint");
static_assert(sizeof(BP_AK_Ambient_3D_C_GenerateSplinePoint) == 0x000090, "Wrong size on BP_AK_Ambient_3D_C_GenerateSplinePoint");
static_assert(offsetof(BP_AK_Ambient_3D_C_GenerateSplinePoint, Temp_int_Variable) == 0x000000, "Member 'BP_AK_Ambient_3D_C_GenerateSplinePoint::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_AK_Ambient_3D_C_GenerateSplinePoint, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'BP_AK_Ambient_3D_C_GenerateSplinePoint::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AK_Ambient_3D_C_GenerateSplinePoint, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000008, "Member 'BP_AK_Ambient_3D_C_GenerateSplinePoint::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AK_Ambient_3D_C_GenerateSplinePoint, Temp_object_Variable) == 0x000010, "Member 'BP_AK_Ambient_3D_C_GenerateSplinePoint::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_AK_Ambient_3D_C_GenerateSplinePoint, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000018, "Member 'BP_AK_Ambient_3D_C_GenerateSplinePoint::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AK_Ambient_3D_C_GenerateSplinePoint, CallFunc_Array_Add_ReturnValue) == 0x000020, "Member 'BP_AK_Ambient_3D_C_GenerateSplinePoint::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AK_Ambient_3D_C_GenerateSplinePoint, CallFunc_GetLocationAtSplinePoint_ReturnValue) == 0x000024, "Member 'BP_AK_Ambient_3D_C_GenerateSplinePoint::CallFunc_GetLocationAtSplinePoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AK_Ambient_3D_C_GenerateSplinePoint, CallFunc_GetNumberOfSplinePoints_ReturnValue) == 0x000030, "Member 'BP_AK_Ambient_3D_C_GenerateSplinePoint::CallFunc_GetNumberOfSplinePoints_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AK_Ambient_3D_C_GenerateSplinePoint, CallFunc_Conv_VectorToTransform_ReturnValue) == 0x000040, "Member 'BP_AK_Ambient_3D_C_GenerateSplinePoint::CallFunc_Conv_VectorToTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AK_Ambient_3D_C_GenerateSplinePoint, CallFunc_Subtract_IntInt_ReturnValue) == 0x000070, "Member 'BP_AK_Ambient_3D_C_GenerateSplinePoint::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AK_Ambient_3D_C_GenerateSplinePoint, CallFunc_AddComponent_ReturnValue) == 0x000078, "Member 'BP_AK_Ambient_3D_C_GenerateSplinePoint::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AK_Ambient_3D_C_GenerateSplinePoint, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000080, "Member 'BP_AK_Ambient_3D_C_GenerateSplinePoint::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AK_Ambient_3D_C_GenerateSplinePoint, CallFunc_Array_Add_ReturnValue_1) == 0x000084, "Member 'BP_AK_Ambient_3D_C_GenerateSplinePoint::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AK_Ambient_3D_C_GenerateSplinePoint, CallFunc_SetArrowLength_NewLength_ImplicitCast) == 0x000088, "Member 'BP_AK_Ambient_3D_C_GenerateSplinePoint::CallFunc_SetArrowLength_NewLength_ImplicitCast' has a wrong offset!");

// Function BP_AK_Ambient_3D.BP_AK_Ambient_3D_C.SetPlayMethod
// 0x0060 (0x0060 - 0x0000)
struct BP_AK_Ambient_3D_C_SetPlayMethod final
{
public:
	EAkMultiPositionType                          Temp_byte_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAkMultiPositionType                          Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAkMultiPositionType                          Temp_byte_Variable_2;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAkMultiPositionType                          K2Node_Select_Default;                             // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAmbientObjectType                            Temp_byte_Variable_3;                              // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UArrowComponent*                        CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0020(0x0030)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAkMultiPositionType                          K2Node_Select_Default_1;                           // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x005D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AK_Ambient_3D_C_SetPlayMethod) == 0x000010, "Wrong alignment on BP_AK_Ambient_3D_C_SetPlayMethod");
static_assert(sizeof(BP_AK_Ambient_3D_C_SetPlayMethod) == 0x000060, "Wrong size on BP_AK_Ambient_3D_C_SetPlayMethod");
static_assert(offsetof(BP_AK_Ambient_3D_C_SetPlayMethod, Temp_byte_Variable) == 0x000000, "Member 'BP_AK_Ambient_3D_C_SetPlayMethod::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_AK_Ambient_3D_C_SetPlayMethod, Temp_bool_Variable) == 0x000001, "Member 'BP_AK_Ambient_3D_C_SetPlayMethod::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_AK_Ambient_3D_C_SetPlayMethod, Temp_byte_Variable_1) == 0x000002, "Member 'BP_AK_Ambient_3D_C_SetPlayMethod::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_AK_Ambient_3D_C_SetPlayMethod, Temp_byte_Variable_2) == 0x000003, "Member 'BP_AK_Ambient_3D_C_SetPlayMethod::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_AK_Ambient_3D_C_SetPlayMethod, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_AK_Ambient_3D_C_SetPlayMethod::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AK_Ambient_3D_C_SetPlayMethod, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_AK_Ambient_3D_C_SetPlayMethod::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AK_Ambient_3D_C_SetPlayMethod, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_AK_Ambient_3D_C_SetPlayMethod::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AK_Ambient_3D_C_SetPlayMethod, K2Node_Select_Default) == 0x000010, "Member 'BP_AK_Ambient_3D_C_SetPlayMethod::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_AK_Ambient_3D_C_SetPlayMethod, Temp_byte_Variable_3) == 0x000011, "Member 'BP_AK_Ambient_3D_C_SetPlayMethod::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_AK_Ambient_3D_C_SetPlayMethod, CallFunc_Array_Get_Item) == 0x000018, "Member 'BP_AK_Ambient_3D_C_SetPlayMethod::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AK_Ambient_3D_C_SetPlayMethod, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000020, "Member 'BP_AK_Ambient_3D_C_SetPlayMethod::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AK_Ambient_3D_C_SetPlayMethod, K2Node_Select_Default_1) == 0x000050, "Member 'BP_AK_Ambient_3D_C_SetPlayMethod::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_AK_Ambient_3D_C_SetPlayMethod, CallFunc_Array_AddUnique_ReturnValue) == 0x000054, "Member 'BP_AK_Ambient_3D_C_SetPlayMethod::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AK_Ambient_3D_C_SetPlayMethod, CallFunc_Array_Length_ReturnValue) == 0x000058, "Member 'BP_AK_Ambient_3D_C_SetPlayMethod::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AK_Ambient_3D_C_SetPlayMethod, CallFunc_Less_IntInt_ReturnValue) == 0x00005C, "Member 'BP_AK_Ambient_3D_C_SetPlayMethod::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AK_Ambient_3D_C_SetPlayMethod, K2Node_SwitchEnum_CmpSuccess) == 0x00005D, "Member 'BP_AK_Ambient_3D_C_SetPlayMethod::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

}

