#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AK_Env_SplineActor

#include "Basic.hpp"

#include "AkAudio_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_AK_Env_SplineActor.BP_AK_Env_SplineActor_C.ExecuteUbergraph_BP_AK_Env_SplineActor
// 0x03A8 (0x03A8 - 0x0000)
struct BP_AK_Env_SplineActor_C_ExecuteUbergraph_BP_AK_Env_SplineActor final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable;                              // 0x0008(0x0010)(ConstParm, ReferenceParm)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable;                            // 0x001C(0x0010)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostAkEvent_ReturnValue;                  // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_BoolToText_ReturnValue;              // 0x0030(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0048(0x0050)(HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocalPlayerController_ReturnValue;      // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetControlledPawnLocation_ControlledPawnReference; // 0x00C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetControlledPawnLocation_ControlledPawnLocation; // 0x00C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_FindLocationClosestToWorldLocation_ReturnValue; // 0x00D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E2[0x6];                                       // 0x00E2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X;                            // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_101[0x7];                                      // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetControlledPawnLocation_ControlledPawnReference_1; // 0x0108(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetControlledPawnLocation_ControlledPawnLocation_1; // 0x0110(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11C[0x4];                                      // 0x011C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X_1;                          // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetControlledPawnLocation_ControlledPawnReference_2; // 0x0138(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetControlledPawnLocation_ControlledPawnLocation_2; // 0x0140(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x014C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0158(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0164(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0170(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetPlayerControllerCameraRotation_PlayerControllerCameraRotation; // 0x017C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_GetPlayerControllerCameraRotation_PlayerControllerCameraRotation_1; // 0x0188(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetWorldLocationAndRotation_SweepHitResult; // 0x0194(0x009C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_Conv_RotatorToVector_ReturnValue;         // 0x0230(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIsInsideSpline_IsInsideSpline_;        // 0x023C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIsInsideSpline_IsInsideSplineChanged_; // 0x023D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIsInsideSpline_isDownside_;            // 0x023E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_23F[0x1];                                      // 0x023F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetDistanceToPlayerFromClosestSplinePoint_DistanceToPlayerFromClosestSplinePoint; // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetDistanceToPlayerFromClosestSplinePoint_DistanceToPlayerFromClosestSplinePoint_1; // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0259(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25A[0x6];                                      // 0x025A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_DoubleToText_ReturnValue;            // 0x0260(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0278(0x0050)(HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_BoolToText_ReturnValue_1;            // 0x02C8(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x02E0(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0330(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0340(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0358(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_1;        // 0x0368(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0370(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0380(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_381[0x7];                                      // 0x0381(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0388(0x0008)(NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_2;        // 0x0390(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0398(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_399[0x3];                                      // 0x0399(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_K2_SetTimerDelegate_Time_ImplicitCast;    // 0x039C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetRTPCValue_Value_ImplicitCast;          // 0x03A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetAttenuationScalingFactor_Value_ImplicitCast; // 0x03A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AK_Env_SplineActor_C_ExecuteUbergraph_BP_AK_Env_SplineActor) == 0x000008, "Wrong alignment on BP_AK_Env_SplineActor_C_ExecuteUbergraph_BP_AK_Env_SplineActor");
static_assert(sizeof(BP_AK_Env_SplineActor_C_ExecuteUbergraph_BP_AK_Env_SplineActor) == 0x0003A8, "Wrong size on BP_AK_Env_SplineActor_C_ExecuteUbergraph_BP_AK_Env_SplineActor");
static_assert(offsetof(BP_AK_Env_SplineActor_C_ExecuteUbergraph_BP_AK_Env_SplineActor, EntryPoint) == 0x000000, "Member 'BP_AK_Env_SplineActor_C_ExecuteUbergraph_BP_AK_Env_SplineActor::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_AK_Env_SplineActor_C_ExecuteUbergraph_BP_AK_Env_SplineActor, Temp_struct_Variable) == 0x000008, "Member 'BP_AK_Env_SplineActor_C_ExecuteUbergraph_BP_AK_Env_SplineActor::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_AK_Env_SplineActor_C_ExecuteUbergraph_BP_AK_Env_SplineActor, K2Node_Event_DeltaSeconds) == 0x000018, "Member 'BP_AK_Env_SplineActor_C_ExecuteUbergraph_BP_AK_Env_SplineActor::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_AK_Env_SplineActor_C_ExecuteUbergraph_BP_AK_Env_SplineActor, Temp_delegate_Variable) == 0x00001C, "Member 'BP_AK_Env_SplineActor_C_ExecuteUbergraph_BP_AK_Env_SplineActor::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(BP_AK_Env_SplineActor_C_ExecuteUbergraph_BP_AK_Env_SplineActor, CallFunc_PostAkEvent_ReturnValue) == 0x00002C, "Member 'BP_AK_Env_SplineActor_C_ExecuteUbergraph_BP_AK_Env_SplineActor::CallFunc_PostAkEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AK_Env_SplineActor_C_ExecuteUbergraph_BP_AK_Env_SplineActor, CallFunc_Conv_BoolToText_ReturnValue) == 0x000030, "Member 'BP_AK_Env_SplineActor_C_ExecuteUbergraph_BP_AK_Env_SplineActor::CallFunc_Conv_BoolToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AK_Env_SplineActor_C_ExecuteUbergraph_BP_AK_Env_SplineActor, K2Node_MakeStruct_FormatArgumentData) == 0x000048, "Member 'BP_AK_Env_SplineActor_C_ExecuteUbergraph_BP_AK_Env_SplineActor::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(BP_AK_Env_SplineActor_C_ExecuteUbergraph_BP_AK_Env_SplineActor, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000098, "Member 'BP_AK_Env_SplineActor_C_ExecuteUbergraph_BP_AK_Env_SplineActor::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AK_Env_SplineActor_C_ExecuteUbergraph_BP_AK_Env_SplineActor, CallFunc_GetPlayerController_ReturnValue) == 0x0000A0, "Member 'BP_AK_Env_SplineActor_C_ExecuteUbergraph_BP_AK_Env_SplineActor::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AK_Env_SplineActor_C_ExecuteUbergraph_BP_AK_Env_SplineActor, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x0000A8, "Member 'BP_AK_Env_SplineActor_C_ExecuteUbergraph_BP_AK_Env_SplineActor::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AK_Env_SplineActor_C_ExecuteUbergraph_BP_AK_Env_SplineActor, CallFunc_IsLocalPlayerController_ReturnValue) == 0x0000B0, "Member 'BP_AK_Env_SplineActor_C_ExecuteUbergraph_BP_AK_Env_SplineActor::CallFunc_IsLocalPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AK_Env_SplineActor_C_ExecuteUbergraph_BP_AK_Env_SplineActor, CallFunc_Add_DoubleDouble_ReturnValue) == 0x0000B8, "Member 'BP_AK_Env_SplineActor_C_ExecuteUbergraph_BP_AK_Env_SplineActor::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AK_Env_SplineActor_C_ExecuteUbergraph_BP_AK_Env_SplineActor, CallFunc_GetControlledPawnLocation_ControlledPawnReference) == 0x0000C0, "Member 'BP_AK_Env_SplineActor_C_ExecuteUbergraph_BP_AK_Env_SplineActor::CallFunc_GetControlledPawnLocation_ControlledPawnReference' has a wrong offset!");
static_assert(offsetof(BP_AK_Env_SplineActor_C_ExecuteUbergraph_BP_AK_Env_SplineActor, CallFunc_GetControlledPawnLocation_ControlledPawnLocation) == 0x0000C8, "Member 'BP_AK_Env_SplineActor_C_ExecuteUbergraph_BP_AK_Env_SplineActor::CallFunc_GetControlledPawnLocation_ControlledPawnLocation' has a wrong offset!");
static_assert(offsetof(BP_AK_Env_SplineActor_C_ExecuteUbergraph_BP_AK_Env_SplineActor, CallFunc_FindLocationClosestToWorldLocation_ReturnValue) == 0x0000D4, "Member 'BP_AK_Env_SplineActor_C_ExecuteUbergraph_BP_AK_Env_SplineActor::CallFunc_FindLocationClosestToWorldLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AK_Env_SplineActor_C_ExecuteUbergraph_BP_AK_Env_SplineActor, CallFunc_IsValid_ReturnValue) == 0x0000E0, "Member 'BP_AK_Env_SplineActor_C_ExecuteUbergraph_BP_AK_Env_SplineActor::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AK_Env_SplineActor_C_ExecuteUbergraph_BP_AK_Env_SplineActor, CallFunc_IsLocallyControlled_ReturnValue) == 0x0000E1, "Member 'BP_AK_Env_SplineActor_C_ExecuteUbergraph_BP_AK_Env_SplineActor::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AK_Env_SplineActor_C_ExecuteUbergraph_BP_AK_Env_SplineActor, CallFunc_BreakVector_X) == 0x0000E8, "Member 'BP_AK_Env_SplineActor_C_ExecuteUbergraph_BP_AK_Env_SplineActor::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_AK_Env_SplineActor_C_ExecuteUbergraph_BP_AK_Env_SplineActor, CallFunc_BreakVector_Y) == 0x0000F0, "Member 'BP_AK_Env_SplineActor_C_ExecuteUbergraph_BP_AK_Env_SplineActor::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_AK_Env_SplineActor_C_ExecuteUbergraph_BP_AK_Env_SplineActor, CallFunc_BreakVector_Z) == 0x0000F8, "Member 'BP_AK_Env_SplineActor_C_ExecuteUbergraph_BP_AK_Env_SplineActor::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_AK_Env_SplineActor_C_ExecuteUbergraph_BP_AK_Env_SplineActor, CallFunc_BooleanAND_ReturnValue) == 0x000100, "Member 'BP_AK_Env_SplineActor_C_ExecuteUbergraph_BP_AK_Env_SplineActor::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AK_Env_SplineActor_C_ExecuteUbergraph_BP_AK_Env_SplineActor, CallFunc_GetControlledPawnLocation_ControlledPawnReference_1) == 0x000108, "Member 'BP_AK_Env_SplineActor_C_ExecuteUbergraph_BP_AK_Env_SplineActor::CallFunc_GetControlledPawnLocation_ControlledPawnReference_1' has a wrong offset!");
static_assert(offsetof(BP_AK_Env_SplineActor_C_ExecuteUbergraph_BP_AK_Env_SplineActor, CallFunc_GetControlledPawnLocation_ControlledPawnLocation_1) == 0x000110, "Member 'BP_AK_Env_SplineActor_C_ExecuteUbergraph_BP_AK_Env_SplineActor::CallFunc_GetControlledPawnLocation_ControlledPawnLocation_1' has a wrong offset!");
static_assert(offsetof(BP_AK_Env_SplineActor_C_ExecuteUbergraph_BP_AK_Env_SplineActor, CallFunc_BreakVector_X_1) == 0x000120, "Member 'BP_AK_Env_SplineActor_C_ExecuteUbergraph_BP_AK_Env_SplineActor::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_AK_Env_SplineActor_C_ExecuteUbergraph_BP_AK_Env_SplineActor, CallFunc_BreakVector_Y_1) == 0x000128, "Member 'BP_AK_Env_SplineActor_C_ExecuteUbergraph_BP_AK_Env_SplineActor::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_AK_Env_SplineActor_C_ExecuteUbergraph_BP_AK_Env_SplineActor, CallFunc_BreakVector_Z_1) == 0x000130, "Member 'BP_AK_Env_SplineActor_C_ExecuteUbergraph_BP_AK_Env_SplineActor::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_AK_Env_SplineActor_C_ExecuteUbergraph_BP_AK_Env_SplineActor, CallFunc_GetControlledPawnLocation_ControlledPawnReference_2) == 0x000138, "Member 'BP_AK_Env_SplineActor_C_ExecuteUbergraph_BP_AK_Env_SplineActor::CallFunc_GetControlledPawnLocation_ControlledPawnReference_2' has a wrong offset!");
static_assert(offsetof(BP_AK_Env_SplineActor_C_ExecuteUbergraph_BP_AK_Env_SplineActor, CallFunc_GetControlledPawnLocation_ControlledPawnLocation_2) == 0x000140, "Member 'BP_AK_Env_SplineActor_C_ExecuteUbergraph_BP_AK_Env_SplineActor::CallFunc_GetControlledPawnLocation_ControlledPawnLocation_2' has a wrong offset!");
static_assert(offsetof(BP_AK_Env_SplineActor_C_ExecuteUbergraph_BP_AK_Env_SplineActor, CallFunc_MakeVector_ReturnValue) == 0x00014C, "Member 'BP_AK_Env_SplineActor_C_ExecuteUbergraph_BP_AK_Env_SplineActor::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AK_Env_SplineActor_C_ExecuteUbergraph_BP_AK_Env_SplineActor, CallFunc_GetActorForwardVector_ReturnValue) == 0x000158, "Member 'BP_AK_Env_SplineActor_C_ExecuteUbergraph_BP_AK_Env_SplineActor::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AK_Env_SplineActor_C_ExecuteUbergraph_BP_AK_Env_SplineActor, CallFunc_Add_VectorVector_ReturnValue) == 0x000164, "Member 'BP_AK_Env_SplineActor_C_ExecuteUbergraph_BP_AK_Env_SplineActor::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AK_Env_SplineActor_C_ExecuteUbergraph_BP_AK_Env_SplineActor, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000170, "Member 'BP_AK_Env_SplineActor_C_ExecuteUbergraph_BP_AK_Env_SplineActor::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AK_Env_SplineActor_C_ExecuteUbergraph_BP_AK_Env_SplineActor, CallFunc_GetPlayerControllerCameraRotation_PlayerControllerCameraRotation) == 0x00017C, "Member 'BP_AK_Env_SplineActor_C_ExecuteUbergraph_BP_AK_Env_SplineActor::CallFunc_GetPlayerControllerCameraRotation_PlayerControllerCameraRotation' has a wrong offset!");
static_assert(offsetof(BP_AK_Env_SplineActor_C_ExecuteUbergraph_BP_AK_Env_SplineActor, CallFunc_GetPlayerControllerCameraRotation_PlayerControllerCameraRotation_1) == 0x000188, "Member 'BP_AK_Env_SplineActor_C_ExecuteUbergraph_BP_AK_Env_SplineActor::CallFunc_GetPlayerControllerCameraRotation_PlayerControllerCameraRotation_1' has a wrong offset!");
static_assert(offsetof(BP_AK_Env_SplineActor_C_ExecuteUbergraph_BP_AK_Env_SplineActor, CallFunc_K2_SetWorldLocationAndRotation_SweepHitResult) == 0x000194, "Member 'BP_AK_Env_SplineActor_C_ExecuteUbergraph_BP_AK_Env_SplineActor::CallFunc_K2_SetWorldLocationAndRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_AK_Env_SplineActor_C_ExecuteUbergraph_BP_AK_Env_SplineActor, CallFunc_Conv_RotatorToVector_ReturnValue) == 0x000230, "Member 'BP_AK_Env_SplineActor_C_ExecuteUbergraph_BP_AK_Env_SplineActor::CallFunc_Conv_RotatorToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AK_Env_SplineActor_C_ExecuteUbergraph_BP_AK_Env_SplineActor, CallFunc_GetIsInsideSpline_IsInsideSpline_) == 0x00023C, "Member 'BP_AK_Env_SplineActor_C_ExecuteUbergraph_BP_AK_Env_SplineActor::CallFunc_GetIsInsideSpline_IsInsideSpline_' has a wrong offset!");
static_assert(offsetof(BP_AK_Env_SplineActor_C_ExecuteUbergraph_BP_AK_Env_SplineActor, CallFunc_GetIsInsideSpline_IsInsideSplineChanged_) == 0x00023D, "Member 'BP_AK_Env_SplineActor_C_ExecuteUbergraph_BP_AK_Env_SplineActor::CallFunc_GetIsInsideSpline_IsInsideSplineChanged_' has a wrong offset!");
static_assert(offsetof(BP_AK_Env_SplineActor_C_ExecuteUbergraph_BP_AK_Env_SplineActor, CallFunc_GetIsInsideSpline_isDownside_) == 0x00023E, "Member 'BP_AK_Env_SplineActor_C_ExecuteUbergraph_BP_AK_Env_SplineActor::CallFunc_GetIsInsideSpline_isDownside_' has a wrong offset!");
static_assert(offsetof(BP_AK_Env_SplineActor_C_ExecuteUbergraph_BP_AK_Env_SplineActor, CallFunc_GetDistanceToPlayerFromClosestSplinePoint_DistanceToPlayerFromClosestSplinePoint) == 0x000240, "Member 'BP_AK_Env_SplineActor_C_ExecuteUbergraph_BP_AK_Env_SplineActor::CallFunc_GetDistanceToPlayerFromClosestSplinePoint_DistanceToPlayerFromClosestSplinePoint' has a wrong offset!");
static_assert(offsetof(BP_AK_Env_SplineActor_C_ExecuteUbergraph_BP_AK_Env_SplineActor, CallFunc_GetDistanceToPlayerFromClosestSplinePoint_DistanceToPlayerFromClosestSplinePoint_1) == 0x000248, "Member 'BP_AK_Env_SplineActor_C_ExecuteUbergraph_BP_AK_Env_SplineActor::CallFunc_GetDistanceToPlayerFromClosestSplinePoint_DistanceToPlayerFromClosestSplinePoint_1' has a wrong offset!");
static_assert(offsetof(BP_AK_Env_SplineActor_C_ExecuteUbergraph_BP_AK_Env_SplineActor, CallFunc_MapRangeClamped_ReturnValue) == 0x000250, "Member 'BP_AK_Env_SplineActor_C_ExecuteUbergraph_BP_AK_Env_SplineActor::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AK_Env_SplineActor_C_ExecuteUbergraph_BP_AK_Env_SplineActor, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000258, "Member 'BP_AK_Env_SplineActor_C_ExecuteUbergraph_BP_AK_Env_SplineActor::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AK_Env_SplineActor_C_ExecuteUbergraph_BP_AK_Env_SplineActor, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000259, "Member 'BP_AK_Env_SplineActor_C_ExecuteUbergraph_BP_AK_Env_SplineActor::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AK_Env_SplineActor_C_ExecuteUbergraph_BP_AK_Env_SplineActor, CallFunc_Conv_DoubleToText_ReturnValue) == 0x000260, "Member 'BP_AK_Env_SplineActor_C_ExecuteUbergraph_BP_AK_Env_SplineActor::CallFunc_Conv_DoubleToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AK_Env_SplineActor_C_ExecuteUbergraph_BP_AK_Env_SplineActor, K2Node_MakeStruct_FormatArgumentData_1) == 0x000278, "Member 'BP_AK_Env_SplineActor_C_ExecuteUbergraph_BP_AK_Env_SplineActor::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(BP_AK_Env_SplineActor_C_ExecuteUbergraph_BP_AK_Env_SplineActor, CallFunc_Conv_BoolToText_ReturnValue_1) == 0x0002C8, "Member 'BP_AK_Env_SplineActor_C_ExecuteUbergraph_BP_AK_Env_SplineActor::CallFunc_Conv_BoolToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AK_Env_SplineActor_C_ExecuteUbergraph_BP_AK_Env_SplineActor, K2Node_MakeStruct_FormatArgumentData_2) == 0x0002E0, "Member 'BP_AK_Env_SplineActor_C_ExecuteUbergraph_BP_AK_Env_SplineActor::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(BP_AK_Env_SplineActor_C_ExecuteUbergraph_BP_AK_Env_SplineActor, K2Node_MakeArray_Array) == 0x000330, "Member 'BP_AK_Env_SplineActor_C_ExecuteUbergraph_BP_AK_Env_SplineActor::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_AK_Env_SplineActor_C_ExecuteUbergraph_BP_AK_Env_SplineActor, CallFunc_Format_ReturnValue) == 0x000340, "Member 'BP_AK_Env_SplineActor_C_ExecuteUbergraph_BP_AK_Env_SplineActor::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AK_Env_SplineActor_C_ExecuteUbergraph_BP_AK_Env_SplineActor, CallFunc_Conv_TextToString_ReturnValue) == 0x000358, "Member 'BP_AK_Env_SplineActor_C_ExecuteUbergraph_BP_AK_Env_SplineActor::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AK_Env_SplineActor_C_ExecuteUbergraph_BP_AK_Env_SplineActor, CallFunc_GetPlayerController_ReturnValue_1) == 0x000368, "Member 'BP_AK_Env_SplineActor_C_ExecuteUbergraph_BP_AK_Env_SplineActor::CallFunc_GetPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AK_Env_SplineActor_C_ExecuteUbergraph_BP_AK_Env_SplineActor, K2Node_CreateDelegate_OutputDelegate) == 0x000370, "Member 'BP_AK_Env_SplineActor_C_ExecuteUbergraph_BP_AK_Env_SplineActor::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_AK_Env_SplineActor_C_ExecuteUbergraph_BP_AK_Env_SplineActor, CallFunc_IsValid_ReturnValue_1) == 0x000380, "Member 'BP_AK_Env_SplineActor_C_ExecuteUbergraph_BP_AK_Env_SplineActor::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AK_Env_SplineActor_C_ExecuteUbergraph_BP_AK_Env_SplineActor, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000388, "Member 'BP_AK_Env_SplineActor_C_ExecuteUbergraph_BP_AK_Env_SplineActor::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AK_Env_SplineActor_C_ExecuteUbergraph_BP_AK_Env_SplineActor, CallFunc_GetPlayerController_ReturnValue_2) == 0x000390, "Member 'BP_AK_Env_SplineActor_C_ExecuteUbergraph_BP_AK_Env_SplineActor::CallFunc_GetPlayerController_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_AK_Env_SplineActor_C_ExecuteUbergraph_BP_AK_Env_SplineActor, CallFunc_IsValid_ReturnValue_2) == 0x000398, "Member 'BP_AK_Env_SplineActor_C_ExecuteUbergraph_BP_AK_Env_SplineActor::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_AK_Env_SplineActor_C_ExecuteUbergraph_BP_AK_Env_SplineActor, CallFunc_K2_SetTimerDelegate_Time_ImplicitCast) == 0x00039C, "Member 'BP_AK_Env_SplineActor_C_ExecuteUbergraph_BP_AK_Env_SplineActor::CallFunc_K2_SetTimerDelegate_Time_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_AK_Env_SplineActor_C_ExecuteUbergraph_BP_AK_Env_SplineActor, CallFunc_SetRTPCValue_Value_ImplicitCast) == 0x0003A0, "Member 'BP_AK_Env_SplineActor_C_ExecuteUbergraph_BP_AK_Env_SplineActor::CallFunc_SetRTPCValue_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_AK_Env_SplineActor_C_ExecuteUbergraph_BP_AK_Env_SplineActor, CallFunc_SetAttenuationScalingFactor_Value_ImplicitCast) == 0x0003A4, "Member 'BP_AK_Env_SplineActor_C_ExecuteUbergraph_BP_AK_Env_SplineActor::CallFunc_SetAttenuationScalingFactor_Value_ImplicitCast' has a wrong offset!");

// Function BP_AK_Env_SplineActor.BP_AK_Env_SplineActor_C.GetControlledPawnLocation
// 0x0040 (0x0040 - 0x0000)
struct BP_AK_Env_SplineActor_C_GetControlledPawnLocation final
{
public:
	class APawn*                                  ControlledPawnReference;                           // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ControlledPawnLocation;                            // 0x0008(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x002C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AK_Env_SplineActor_C_GetControlledPawnLocation) == 0x000008, "Wrong alignment on BP_AK_Env_SplineActor_C_GetControlledPawnLocation");
static_assert(sizeof(BP_AK_Env_SplineActor_C_GetControlledPawnLocation) == 0x000040, "Wrong size on BP_AK_Env_SplineActor_C_GetControlledPawnLocation");
static_assert(offsetof(BP_AK_Env_SplineActor_C_GetControlledPawnLocation, ControlledPawnReference) == 0x000000, "Member 'BP_AK_Env_SplineActor_C_GetControlledPawnLocation::ControlledPawnReference' has a wrong offset!");
static_assert(offsetof(BP_AK_Env_SplineActor_C_GetControlledPawnLocation, ControlledPawnLocation) == 0x000008, "Member 'BP_AK_Env_SplineActor_C_GetControlledPawnLocation::ControlledPawnLocation' has a wrong offset!");
static_assert(offsetof(BP_AK_Env_SplineActor_C_GetControlledPawnLocation, CallFunc_GetPlayerController_ReturnValue) == 0x000018, "Member 'BP_AK_Env_SplineActor_C_GetControlledPawnLocation::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AK_Env_SplineActor_C_GetControlledPawnLocation, CallFunc_K2_GetPawn_ReturnValue) == 0x000020, "Member 'BP_AK_Env_SplineActor_C_GetControlledPawnLocation::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AK_Env_SplineActor_C_GetControlledPawnLocation, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'BP_AK_Env_SplineActor_C_GetControlledPawnLocation::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AK_Env_SplineActor_C_GetControlledPawnLocation, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00002C, "Member 'BP_AK_Env_SplineActor_C_GetControlledPawnLocation::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AK_Env_SplineActor_C_GetControlledPawnLocation, CallFunc_IsValid_ReturnValue_1) == 0x000038, "Member 'BP_AK_Env_SplineActor_C_GetControlledPawnLocation::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function BP_AK_Env_SplineActor.BP_AK_Env_SplineActor_C.GetDistanceToPlayerFromClosestSplinePoint
// 0x0040 (0x0040 - 0x0000)
struct BP_AK_Env_SplineActor_C_GetDistanceToPlayerFromClosestSplinePoint final
{
public:
	double                                        DistanceToPlayerFromClosestSplinePoint;            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_VSize_ReturnValue;                        // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AK_Env_SplineActor_C_GetDistanceToPlayerFromClosestSplinePoint) == 0x000008, "Wrong alignment on BP_AK_Env_SplineActor_C_GetDistanceToPlayerFromClosestSplinePoint");
static_assert(sizeof(BP_AK_Env_SplineActor_C_GetDistanceToPlayerFromClosestSplinePoint) == 0x000040, "Wrong size on BP_AK_Env_SplineActor_C_GetDistanceToPlayerFromClosestSplinePoint");
static_assert(offsetof(BP_AK_Env_SplineActor_C_GetDistanceToPlayerFromClosestSplinePoint, DistanceToPlayerFromClosestSplinePoint) == 0x000000, "Member 'BP_AK_Env_SplineActor_C_GetDistanceToPlayerFromClosestSplinePoint::DistanceToPlayerFromClosestSplinePoint' has a wrong offset!");
static_assert(offsetof(BP_AK_Env_SplineActor_C_GetDistanceToPlayerFromClosestSplinePoint, CallFunc_GetPlayerController_ReturnValue) == 0x000008, "Member 'BP_AK_Env_SplineActor_C_GetDistanceToPlayerFromClosestSplinePoint::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AK_Env_SplineActor_C_GetDistanceToPlayerFromClosestSplinePoint, CallFunc_K2_GetPawn_ReturnValue) == 0x000010, "Member 'BP_AK_Env_SplineActor_C_GetDistanceToPlayerFromClosestSplinePoint::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AK_Env_SplineActor_C_GetDistanceToPlayerFromClosestSplinePoint, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000018, "Member 'BP_AK_Env_SplineActor_C_GetDistanceToPlayerFromClosestSplinePoint::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AK_Env_SplineActor_C_GetDistanceToPlayerFromClosestSplinePoint, CallFunc_IsValid_ReturnValue) == 0x000024, "Member 'BP_AK_Env_SplineActor_C_GetDistanceToPlayerFromClosestSplinePoint::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AK_Env_SplineActor_C_GetDistanceToPlayerFromClosestSplinePoint, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000028, "Member 'BP_AK_Env_SplineActor_C_GetDistanceToPlayerFromClosestSplinePoint::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AK_Env_SplineActor_C_GetDistanceToPlayerFromClosestSplinePoint, CallFunc_VSize_ReturnValue) == 0x000038, "Member 'BP_AK_Env_SplineActor_C_GetDistanceToPlayerFromClosestSplinePoint::CallFunc_VSize_ReturnValue' has a wrong offset!");

// Function BP_AK_Env_SplineActor.BP_AK_Env_SplineActor_C.GetIsInsideSpline
// 0x0060 (0x0060 - 0x0000)
struct BP_AK_Env_SplineActor_C_GetIsInsideSpline final
{
public:
	bool                                          IsInsideSpline_;                                   // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsInsideSplineChanged_;                            // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsDownside_;                                       // 0x0002(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetControlledPawnLocation_ControlledPawnReference; // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetControlledPawnLocation_ControlledPawnLocation; // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetControlledPawnLocation_ControlledPawnReference_1; // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetControlledPawnLocation_ControlledPawnLocation_1; // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_FindRightVectorClosestToWorldLocation_ReturnValue; // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Dot_VectorVector_ReturnValue;             // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AK_Env_SplineActor_C_GetIsInsideSpline) == 0x000008, "Wrong alignment on BP_AK_Env_SplineActor_C_GetIsInsideSpline");
static_assert(sizeof(BP_AK_Env_SplineActor_C_GetIsInsideSpline) == 0x000060, "Wrong size on BP_AK_Env_SplineActor_C_GetIsInsideSpline");
static_assert(offsetof(BP_AK_Env_SplineActor_C_GetIsInsideSpline, IsInsideSpline_) == 0x000000, "Member 'BP_AK_Env_SplineActor_C_GetIsInsideSpline::IsInsideSpline_' has a wrong offset!");
static_assert(offsetof(BP_AK_Env_SplineActor_C_GetIsInsideSpline, IsInsideSplineChanged_) == 0x000001, "Member 'BP_AK_Env_SplineActor_C_GetIsInsideSpline::IsInsideSplineChanged_' has a wrong offset!");
static_assert(offsetof(BP_AK_Env_SplineActor_C_GetIsInsideSpline, IsDownside_) == 0x000002, "Member 'BP_AK_Env_SplineActor_C_GetIsInsideSpline::IsDownside_' has a wrong offset!");
static_assert(offsetof(BP_AK_Env_SplineActor_C_GetIsInsideSpline, CallFunc_GetControlledPawnLocation_ControlledPawnReference) == 0x000008, "Member 'BP_AK_Env_SplineActor_C_GetIsInsideSpline::CallFunc_GetControlledPawnLocation_ControlledPawnReference' has a wrong offset!");
static_assert(offsetof(BP_AK_Env_SplineActor_C_GetIsInsideSpline, CallFunc_GetControlledPawnLocation_ControlledPawnLocation) == 0x000010, "Member 'BP_AK_Env_SplineActor_C_GetIsInsideSpline::CallFunc_GetControlledPawnLocation_ControlledPawnLocation' has a wrong offset!");
static_assert(offsetof(BP_AK_Env_SplineActor_C_GetIsInsideSpline, CallFunc_GetControlledPawnLocation_ControlledPawnReference_1) == 0x000020, "Member 'BP_AK_Env_SplineActor_C_GetIsInsideSpline::CallFunc_GetControlledPawnLocation_ControlledPawnReference_1' has a wrong offset!");
static_assert(offsetof(BP_AK_Env_SplineActor_C_GetIsInsideSpline, CallFunc_GetControlledPawnLocation_ControlledPawnLocation_1) == 0x000028, "Member 'BP_AK_Env_SplineActor_C_GetIsInsideSpline::CallFunc_GetControlledPawnLocation_ControlledPawnLocation_1' has a wrong offset!");
static_assert(offsetof(BP_AK_Env_SplineActor_C_GetIsInsideSpline, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000034, "Member 'BP_AK_Env_SplineActor_C_GetIsInsideSpline::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AK_Env_SplineActor_C_GetIsInsideSpline, CallFunc_FindRightVectorClosestToWorldLocation_ReturnValue) == 0x000040, "Member 'BP_AK_Env_SplineActor_C_GetIsInsideSpline::CallFunc_FindRightVectorClosestToWorldLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AK_Env_SplineActor_C_GetIsInsideSpline, CallFunc_Dot_VectorVector_ReturnValue) == 0x000050, "Member 'BP_AK_Env_SplineActor_C_GetIsInsideSpline::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AK_Env_SplineActor_C_GetIsInsideSpline, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000058, "Member 'BP_AK_Env_SplineActor_C_GetIsInsideSpline::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AK_Env_SplineActor_C_GetIsInsideSpline, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000059, "Member 'BP_AK_Env_SplineActor_C_GetIsInsideSpline::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function BP_AK_Env_SplineActor.BP_AK_Env_SplineActor_C.GetPlayerControllerCameraRotation
// 0x0028 (0x0028 - 0x0000)
struct BP_AK_Env_SplineActor_C_GetPlayerControllerCameraRotation final
{
public:
	struct FRotator                               PlayerControllerCameraRotation;                    // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetCameraRotation_ReturnValue;            // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AK_Env_SplineActor_C_GetPlayerControllerCameraRotation) == 0x000008, "Wrong alignment on BP_AK_Env_SplineActor_C_GetPlayerControllerCameraRotation");
static_assert(sizeof(BP_AK_Env_SplineActor_C_GetPlayerControllerCameraRotation) == 0x000028, "Wrong size on BP_AK_Env_SplineActor_C_GetPlayerControllerCameraRotation");
static_assert(offsetof(BP_AK_Env_SplineActor_C_GetPlayerControllerCameraRotation, PlayerControllerCameraRotation) == 0x000000, "Member 'BP_AK_Env_SplineActor_C_GetPlayerControllerCameraRotation::PlayerControllerCameraRotation' has a wrong offset!");
static_assert(offsetof(BP_AK_Env_SplineActor_C_GetPlayerControllerCameraRotation, CallFunc_GetPlayerController_ReturnValue) == 0x000010, "Member 'BP_AK_Env_SplineActor_C_GetPlayerControllerCameraRotation::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AK_Env_SplineActor_C_GetPlayerControllerCameraRotation, CallFunc_GetCameraRotation_ReturnValue) == 0x000018, "Member 'BP_AK_Env_SplineActor_C_GetPlayerControllerCameraRotation::CallFunc_GetCameraRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AK_Env_SplineActor_C_GetPlayerControllerCameraRotation, CallFunc_IsValid_ReturnValue) == 0x000024, "Member 'BP_AK_Env_SplineActor_C_GetPlayerControllerCameraRotation::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_AK_Env_SplineActor.BP_AK_Env_SplineActor_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_AK_Env_SplineActor_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AK_Env_SplineActor_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_AK_Env_SplineActor_C_ReceiveTick");
static_assert(sizeof(BP_AK_Env_SplineActor_C_ReceiveTick) == 0x000004, "Wrong size on BP_AK_Env_SplineActor_C_ReceiveTick");
static_assert(offsetof(BP_AK_Env_SplineActor_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_AK_Env_SplineActor_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_AK_Env_SplineActor.BP_AK_Env_SplineActor_C.UserConstructionScript
// 0x00A0 (0x00A0 - 0x0000)
struct BP_AK_Env_SplineActor_C_UserConstructionScript final
{
public:
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0000(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0010(0x0030)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USplineMeshComponent*                   CallFunc_AddComponent_ReturnValue;                 // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumberOfSplinePoints_ReturnValue;      // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAndTangentAtSplinePoint_Location; // 0x0054(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAndTangentAtSplinePoint_Tangent; // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAndTangentAtSplinePoint_Location_1; // 0x0070(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAndTangentAtSplinePoint_Tangent_1; // 0x007C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x3];                                       // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_OcclusionRefreshInterval_ImplicitCast; // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AK_Env_SplineActor_C_UserConstructionScript) == 0x000010, "Wrong alignment on BP_AK_Env_SplineActor_C_UserConstructionScript");
static_assert(sizeof(BP_AK_Env_SplineActor_C_UserConstructionScript) == 0x0000A0, "Wrong size on BP_AK_Env_SplineActor_C_UserConstructionScript");
static_assert(offsetof(BP_AK_Env_SplineActor_C_UserConstructionScript, CallFunc_MakeVector_ReturnValue) == 0x000000, "Member 'BP_AK_Env_SplineActor_C_UserConstructionScript::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AK_Env_SplineActor_C_UserConstructionScript, CallFunc_MakeTransform_ReturnValue) == 0x000010, "Member 'BP_AK_Env_SplineActor_C_UserConstructionScript::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AK_Env_SplineActor_C_UserConstructionScript, CallFunc_AddComponent_ReturnValue) == 0x000040, "Member 'BP_AK_Env_SplineActor_C_UserConstructionScript::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AK_Env_SplineActor_C_UserConstructionScript, Temp_int_Variable) == 0x000048, "Member 'BP_AK_Env_SplineActor_C_UserConstructionScript::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_AK_Env_SplineActor_C_UserConstructionScript, CallFunc_Add_IntInt_ReturnValue) == 0x00004C, "Member 'BP_AK_Env_SplineActor_C_UserConstructionScript::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AK_Env_SplineActor_C_UserConstructionScript, CallFunc_GetNumberOfSplinePoints_ReturnValue) == 0x000050, "Member 'BP_AK_Env_SplineActor_C_UserConstructionScript::CallFunc_GetNumberOfSplinePoints_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AK_Env_SplineActor_C_UserConstructionScript, CallFunc_GetLocationAndTangentAtSplinePoint_Location) == 0x000054, "Member 'BP_AK_Env_SplineActor_C_UserConstructionScript::CallFunc_GetLocationAndTangentAtSplinePoint_Location' has a wrong offset!");
static_assert(offsetof(BP_AK_Env_SplineActor_C_UserConstructionScript, CallFunc_GetLocationAndTangentAtSplinePoint_Tangent) == 0x000060, "Member 'BP_AK_Env_SplineActor_C_UserConstructionScript::CallFunc_GetLocationAndTangentAtSplinePoint_Tangent' has a wrong offset!");
static_assert(offsetof(BP_AK_Env_SplineActor_C_UserConstructionScript, CallFunc_Subtract_IntInt_ReturnValue) == 0x00006C, "Member 'BP_AK_Env_SplineActor_C_UserConstructionScript::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AK_Env_SplineActor_C_UserConstructionScript, CallFunc_GetLocationAndTangentAtSplinePoint_Location_1) == 0x000070, "Member 'BP_AK_Env_SplineActor_C_UserConstructionScript::CallFunc_GetLocationAndTangentAtSplinePoint_Location_1' has a wrong offset!");
static_assert(offsetof(BP_AK_Env_SplineActor_C_UserConstructionScript, CallFunc_GetLocationAndTangentAtSplinePoint_Tangent_1) == 0x00007C, "Member 'BP_AK_Env_SplineActor_C_UserConstructionScript::CallFunc_GetLocationAndTangentAtSplinePoint_Tangent_1' has a wrong offset!");
static_assert(offsetof(BP_AK_Env_SplineActor_C_UserConstructionScript, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000088, "Member 'BP_AK_Env_SplineActor_C_UserConstructionScript::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AK_Env_SplineActor_C_UserConstructionScript, CallFunc_Add_IntInt_ReturnValue_1) == 0x00008C, "Member 'BP_AK_Env_SplineActor_C_UserConstructionScript::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AK_Env_SplineActor_C_UserConstructionScript, K2Node_VariableSet_OcclusionRefreshInterval_ImplicitCast) == 0x000090, "Member 'BP_AK_Env_SplineActor_C_UserConstructionScript::K2Node_VariableSet_OcclusionRefreshInterval_ImplicitCast' has a wrong offset!");

}

