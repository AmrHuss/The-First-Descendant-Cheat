#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AudioZoneBox

#include "Basic.hpp"

#include "AkAudio_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "M1_structs.hpp"
#include "Engine_structs.hpp"
#include "Amb_Space_structs.hpp"
#include "AkEnvZoneType_structs.hpp"


namespace SDK::Params
{

// Function BP_AudioZoneBox.BP_AudioZoneBox_C.ActiveIndoor?
// 0x0068 (0x0068 - 0x0000)
struct BP_AudioZoneBox_C_ActiveIndoor_ final
{
public:
	bool                                          ActiveIndoor__0;                                   // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable;                            // 0x0004(0x0010)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable;                              // 0x0018(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_K2_GetComponentScale_ReturnValue;         // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X;                            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostAssociatedAkEvent_ReturnValue;        // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SetRTPCValue_Value_ImplicitCast;          // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AudioZoneBox_C_ActiveIndoor_) == 0x000008, "Wrong alignment on BP_AudioZoneBox_C_ActiveIndoor_");
static_assert(sizeof(BP_AudioZoneBox_C_ActiveIndoor_) == 0x000068, "Wrong size on BP_AudioZoneBox_C_ActiveIndoor_");
static_assert(offsetof(BP_AudioZoneBox_C_ActiveIndoor_, ActiveIndoor__0) == 0x000000, "Member 'BP_AudioZoneBox_C_ActiveIndoor_::ActiveIndoor__0' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_ActiveIndoor_, Temp_delegate_Variable) == 0x000004, "Member 'BP_AudioZoneBox_C_ActiveIndoor_::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_ActiveIndoor_, Temp_struct_Variable) == 0x000018, "Member 'BP_AudioZoneBox_C_ActiveIndoor_::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_ActiveIndoor_, CallFunc_K2_GetComponentScale_ReturnValue) == 0x000028, "Member 'BP_AudioZoneBox_C_ActiveIndoor_::CallFunc_K2_GetComponentScale_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_ActiveIndoor_, CallFunc_BreakVector_X) == 0x000038, "Member 'BP_AudioZoneBox_C_ActiveIndoor_::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_ActiveIndoor_, CallFunc_BreakVector_Y) == 0x000040, "Member 'BP_AudioZoneBox_C_ActiveIndoor_::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_ActiveIndoor_, CallFunc_BreakVector_Z) == 0x000048, "Member 'BP_AudioZoneBox_C_ActiveIndoor_::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_ActiveIndoor_, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000050, "Member 'BP_AudioZoneBox_C_ActiveIndoor_::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_ActiveIndoor_, CallFunc_PostAssociatedAkEvent_ReturnValue) == 0x000058, "Member 'BP_AudioZoneBox_C_ActiveIndoor_::CallFunc_PostAssociatedAkEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_ActiveIndoor_, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x00005C, "Member 'BP_AudioZoneBox_C_ActiveIndoor_::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_ActiveIndoor_, CallFunc_SetRTPCValue_Value_ImplicitCast) == 0x000060, "Member 'BP_AudioZoneBox_C_ActiveIndoor_::CallFunc_SetRTPCValue_Value_ImplicitCast' has a wrong offset!");

// Function BP_AudioZoneBox.BP_AudioZoneBox_C.BndEvt__BP_AudioZoneBox_AreaMesh_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct BP_AudioZoneBox_C_BndEvt__BP_AudioZoneBox_AreaMesh_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AudioZoneBox_C_BndEvt__BP_AudioZoneBox_AreaMesh_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_AudioZoneBox_C_BndEvt__BP_AudioZoneBox_AreaMesh_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_AudioZoneBox_C_BndEvt__BP_AudioZoneBox_AreaMesh_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature) == 0x000020, "Wrong size on BP_AudioZoneBox_C_BndEvt__BP_AudioZoneBox_AreaMesh_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_AudioZoneBox_C_BndEvt__BP_AudioZoneBox_AreaMesh_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_AudioZoneBox_C_BndEvt__BP_AudioZoneBox_AreaMesh_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_BndEvt__BP_AudioZoneBox_AreaMesh_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_AudioZoneBox_C_BndEvt__BP_AudioZoneBox_AreaMesh_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_BndEvt__BP_AudioZoneBox_AreaMesh_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_AudioZoneBox_C_BndEvt__BP_AudioZoneBox_AreaMesh_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_BndEvt__BP_AudioZoneBox_AreaMesh_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_AudioZoneBox_C_BndEvt__BP_AudioZoneBox_AreaMesh_K2Node_ComponentBoundEvent_3_ComponentEndOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");

// Function BP_AudioZoneBox.BP_AudioZoneBox_C.BndEvt__BP_AudioZoneBox_Visualize_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature
// 0x00C0 (0x00C0 - 0x0000)
struct BP_AudioZoneBox_C_BndEvt__BP_AudioZoneBox_Visualize_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x009C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_AudioZoneBox_C_BndEvt__BP_AudioZoneBox_Visualize_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_AudioZoneBox_C_BndEvt__BP_AudioZoneBox_Visualize_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_AudioZoneBox_C_BndEvt__BP_AudioZoneBox_Visualize_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature) == 0x0000C0, "Wrong size on BP_AudioZoneBox_C_BndEvt__BP_AudioZoneBox_Visualize_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_AudioZoneBox_C_BndEvt__BP_AudioZoneBox_Visualize_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_AudioZoneBox_C_BndEvt__BP_AudioZoneBox_Visualize_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_BndEvt__BP_AudioZoneBox_Visualize_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_AudioZoneBox_C_BndEvt__BP_AudioZoneBox_Visualize_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_BndEvt__BP_AudioZoneBox_Visualize_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_AudioZoneBox_C_BndEvt__BP_AudioZoneBox_Visualize_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_BndEvt__BP_AudioZoneBox_Visualize_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_AudioZoneBox_C_BndEvt__BP_AudioZoneBox_Visualize_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_BndEvt__BP_AudioZoneBox_Visualize_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'BP_AudioZoneBox_C_BndEvt__BP_AudioZoneBox_Visualize_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_BndEvt__BP_AudioZoneBox_Visualize_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'BP_AudioZoneBox_C_BndEvt__BP_AudioZoneBox_Visualize_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function BP_AudioZoneBox.BP_AudioZoneBox_C.Bp_EnvZoneEnter
// 0x0008 (0x0008 - 0x0000)
struct BP_AudioZoneBox_C_Bp_EnvZoneEnter final
{
public:
	class ABP_AudioZoneBox_C*                     OverlapedZone;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AudioZoneBox_C_Bp_EnvZoneEnter) == 0x000008, "Wrong alignment on BP_AudioZoneBox_C_Bp_EnvZoneEnter");
static_assert(sizeof(BP_AudioZoneBox_C_Bp_EnvZoneEnter) == 0x000008, "Wrong size on BP_AudioZoneBox_C_Bp_EnvZoneEnter");
static_assert(offsetof(BP_AudioZoneBox_C_Bp_EnvZoneEnter, OverlapedZone) == 0x000000, "Member 'BP_AudioZoneBox_C_Bp_EnvZoneEnter::OverlapedZone' has a wrong offset!");

// Function BP_AudioZoneBox.BP_AudioZoneBox_C.BP_EnvZoneLeave
// 0x0008 (0x0008 - 0x0000)
struct BP_AudioZoneBox_C_BP_EnvZoneLeave final
{
public:
	class ABP_AudioZoneBox_C*                     LeaveZone;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AudioZoneBox_C_BP_EnvZoneLeave) == 0x000008, "Wrong alignment on BP_AudioZoneBox_C_BP_EnvZoneLeave");
static_assert(sizeof(BP_AudioZoneBox_C_BP_EnvZoneLeave) == 0x000008, "Wrong size on BP_AudioZoneBox_C_BP_EnvZoneLeave");
static_assert(offsetof(BP_AudioZoneBox_C_BP_EnvZoneLeave, LeaveZone) == 0x000000, "Member 'BP_AudioZoneBox_C_BP_EnvZoneLeave::LeaveZone' has a wrong offset!");

// Function BP_AudioZoneBox.BP_AudioZoneBox_C.BpAkZone3dBaseRepeat
// 0x0010 (0x0010 - 0x0000)
struct BP_AudioZoneBox_C_BpAkZone3dBaseRepeat final
{
public:
	class UAkAudioEvent*                          RepeatAkEvent;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Delay;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AudioZoneBox_C_BpAkZone3dBaseRepeat) == 0x000008, "Wrong alignment on BP_AudioZoneBox_C_BpAkZone3dBaseRepeat");
static_assert(sizeof(BP_AudioZoneBox_C_BpAkZone3dBaseRepeat) == 0x000010, "Wrong size on BP_AudioZoneBox_C_BpAkZone3dBaseRepeat");
static_assert(offsetof(BP_AudioZoneBox_C_BpAkZone3dBaseRepeat, RepeatAkEvent) == 0x000000, "Member 'BP_AudioZoneBox_C_BpAkZone3dBaseRepeat::RepeatAkEvent' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_BpAkZone3dBaseRepeat, Delay) == 0x000008, "Member 'BP_AudioZoneBox_C_BpAkZone3dBaseRepeat::Delay' has a wrong offset!");

// Function BP_AudioZoneBox.BP_AudioZoneBox_C.BpAkZone3dSecodryRepeat
// 0x0010 (0x0010 - 0x0000)
struct BP_AudioZoneBox_C_BpAkZone3dSecodryRepeat final
{
public:
	class UAkAudioEvent*                          RepeatAkEvent;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Delay;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AudioZoneBox_C_BpAkZone3dSecodryRepeat) == 0x000008, "Wrong alignment on BP_AudioZoneBox_C_BpAkZone3dSecodryRepeat");
static_assert(sizeof(BP_AudioZoneBox_C_BpAkZone3dSecodryRepeat) == 0x000010, "Wrong size on BP_AudioZoneBox_C_BpAkZone3dSecodryRepeat");
static_assert(offsetof(BP_AudioZoneBox_C_BpAkZone3dSecodryRepeat, RepeatAkEvent) == 0x000000, "Member 'BP_AudioZoneBox_C_BpAkZone3dSecodryRepeat::RepeatAkEvent' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_BpAkZone3dSecodryRepeat, Delay) == 0x000008, "Member 'BP_AudioZoneBox_C_BpAkZone3dSecodryRepeat::Delay' has a wrong offset!");

// Function BP_AudioZoneBox.BP_AudioZoneBox_C.CalculateAttenuate
// 0x0048 (0x0048 - 0x0000)
struct BP_AudioZoneBox_C_CalculateAttenuate final
{
public:
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0000(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Vector_Distance_ReturnValue;              // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AudioZoneBox_C_CalculateAttenuate) == 0x000008, "Wrong alignment on BP_AudioZoneBox_C_CalculateAttenuate");
static_assert(sizeof(BP_AudioZoneBox_C_CalculateAttenuate) == 0x000048, "Wrong size on BP_AudioZoneBox_C_CalculateAttenuate");
static_assert(offsetof(BP_AudioZoneBox_C_CalculateAttenuate, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000000, "Member 'BP_AudioZoneBox_C_CalculateAttenuate::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_CalculateAttenuate, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000010, "Member 'BP_AudioZoneBox_C_CalculateAttenuate::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_CalculateAttenuate, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000018, "Member 'BP_AudioZoneBox_C_CalculateAttenuate::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_CalculateAttenuate, CallFunc_GetPlayerCharacter_ReturnValue) == 0x000020, "Member 'BP_AudioZoneBox_C_CalculateAttenuate::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_CalculateAttenuate, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000028, "Member 'BP_AudioZoneBox_C_CalculateAttenuate::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_CalculateAttenuate, CallFunc_Vector_Distance_ReturnValue) == 0x000038, "Member 'BP_AudioZoneBox_C_CalculateAttenuate::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_CalculateAttenuate, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000040, "Member 'BP_AudioZoneBox_C_CalculateAttenuate::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");

// Function BP_AudioZoneBox.BP_AudioZoneBox_C.EnableAkComponentsTick
// 0x0001 (0x0001 - 0x0000)
struct BP_AudioZoneBox_C_EnableAkComponentsTick final
{
public:
	bool                                          bEnable;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AudioZoneBox_C_EnableAkComponentsTick) == 0x000001, "Wrong alignment on BP_AudioZoneBox_C_EnableAkComponentsTick");
static_assert(sizeof(BP_AudioZoneBox_C_EnableAkComponentsTick) == 0x000001, "Wrong size on BP_AudioZoneBox_C_EnableAkComponentsTick");
static_assert(offsetof(BP_AudioZoneBox_C_EnableAkComponentsTick, bEnable) == 0x000000, "Member 'BP_AudioZoneBox_C_EnableAkComponentsTick::bEnable' has a wrong offset!");

// Function BP_AudioZoneBox.BP_AudioZoneBox_C.ExecuteUbergraph_BP_AudioZoneBox
// 0x0470 (0x0470 - 0x0000)
struct BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable;                              // 0x0008(0x0010)(ConstParm, ReferenceParm)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable;                            // 0x0018(0x0010)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A[0x2];                                       // 0x002A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_PostAkEvent_ReturnValue;                  // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_1;                          // 0x0030(0x0010)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable_1;                            // 0x0048(0x0010)(ConstParm, ReferenceParm)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	const class ABP_AudioZoneBox_C*               Temp_object_Variable;                              // 0x0070(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7D[0x3];                                       // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AudioZoneBox_C*                     K2Node_Event_OverlapedZone;                        // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_AudioZoneBox_C*                     K2Node_Event_LeaveZone;                            // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable_2;                          // 0x00A8(0x0010)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue_1;         // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable_2;                            // 0x00C0(0x0010)(ConstParm, ReferenceParm)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x00D0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x00E0(0x0008)(NoDestructor, HasGetValueTypeHash)
	class UAkAudioEvent*                          Temp_object_Variable_1;                            // 0x00E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_1;  // 0x00F0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_1;           // 0x00F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_1;            // 0x0100(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_1;       // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x010C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10D[0x3];                                      // 0x010D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x0110(0x009C)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_1AC[0x4];                                      // 0x01AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x01B0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x01B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x01C0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x01CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x01CD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CE[0x2];                                      // 0x01CE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Map_Length_ReturnValue;                   // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D4[0x4];                                      // 0x01D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UAkAudioEvent*>                  CallFunc_Map_Keys_Keys;                            // 0x01D8(0x0010)(ReferenceParm)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E9[0x7];                                      // 0x01E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAkAudioEvent*                          K2Node_CustomEvent_RepeatAkEvent_1;                // 0x01F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_CustomEvent_Delay_1;                        // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue;         // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_204[0x4];                                      // 0x0204(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAkAudioEvent*                          CallFunc_Spawn3dEnvEvent_PlayedAk;                 // 0x0210(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Spawn3dEnvEvent_Delay;                    // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_221[0x7];                                      // 0x0221(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_EnvAudio_C>       CallFunc_BP_EnvZoneLeave_self_CastInput;           // 0x0228(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostAkEvent_ReturnValue_1;                // 0x0238(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_23C[0x4];                                      // 0x023C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue_1;       // 0x0248(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24C[0x4];                                      // 0x024C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_1;           // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0258(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25C[0x4];                                      // 0x025C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAkAudioEvent*                          CallFunc_Array_Get_Item;                           // 0x0260(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0268(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0269(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26A[0x6];                                      // 0x026A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAkAudioEvent*                          CallFunc_Spawn3dEnvEvent_PlayedAk_1;               // 0x0270(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Spawn3dEnvEvent_Delay_1;                  // 0x0278(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAkAudioEvent*                          Temp_object_Variable_2;                            // 0x0280(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0288(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_289[0x3];                                      // 0x0289(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x028C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAkAudioEvent*                          K2Node_CustomEvent_RepeatAkEvent;                  // 0x0290(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_CustomEvent_Delay;                          // 0x0298(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAkAudioEvent*                          CallFunc_Array_Get_Item_1;                         // 0x02A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x02A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A9[0x7];                                      // 0x02A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAkAudioEvent*                          CallFunc_Spawn3dEnvEvent_PlayedAk_2;               // 0x02B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Spawn3dEnvEvent_Delay_2;                  // 0x02B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAkAudioEvent*                          CallFunc_Spawn3dEnvEvent_PlayedAk_3;               // 0x02C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Spawn3dEnvEvent_Delay_3;                  // 0x02C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x02D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x02D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AK_Ambient_3D_C*                    CallFunc_Array_Get_Item_2;                         // 0x02D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x02E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x02E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x02E5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E6[0x2];                                      // 0x02E6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x02E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x02EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AK_Ambient_3D_C*                    CallFunc_Array_Get_Item_3;                         // 0x02F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x02F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x02FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x02FD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FE[0x2];                                      // 0x02FE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_GlobalEnvManager_C*                 CallFunc_GetActorOfClass_ReturnValue;              // 0x0300(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x0308(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_8;                    // 0x0309(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30A[0x6];                                      // 0x030A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_EnvAudio_C>       CallFunc_Bp_EnvZoneEnter_self_CastInput;           // 0x0310(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0320(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x032C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0338(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_344[0x4];                                      // 0x0344(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue_2;         // 0x0348(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x0350(0x009C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	EValidOutputPin                               CallFunc_FindAkComponentWithValid_OutputPins;      // 0x03EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3ED[0x3];                                      // 0x03ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UM1AkComponent*                         CallFunc_FindAkComponentWithValid_ReturnValue;     // 0x03F0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	const class ABP_AudioZoneBox_C*               Temp_object_Variable_3;                            // 0x03F8(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0400(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEmpty_ReturnValue;                      // 0x0401(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_9;                    // 0x0402(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_403[0x5];                                      // 0x0403(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UAkAudioEvent*                          K2Node_Select_Default;                             // 0x0408(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostAkEvent_ReturnValue_2;                // 0x0410(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_414[0x4];                                      // 0x0414(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue_3;         // 0x0418(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_GetOverlappingActors_OverlappingActors;   // 0x0420(0x0010)(ReferenceParm)
	class AActor*                                 CallFunc_Array_Get_Item_4;                         // 0x0430(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0438(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_2;    // 0x043C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x043D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x043E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bActivated;                     // 0x043F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_AudioZoneBox_C*                     CallFunc_Array_Get_Item_5;                         // 0x0440(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_10;                   // 0x0448(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_449[0x3];                                      // 0x0449(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x044C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_4;                // 0x0450(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetConsoleVariableBoolValue_ReturnValue;  // 0x0451(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetConsoleVariableBoolValue_ReturnValue_1; // 0x0452(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_11;                   // 0x0453(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Delay_Duration_ImplicitCast;              // 0x0454(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Delay_Duration_ImplicitCast_1;            // 0x0458(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetAttenuationScalingFactor_Value_ImplicitCast; // 0x045C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Delay_Duration_ImplicitCast_2;            // 0x0460(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Delay_Duration_ImplicitCast_3;            // 0x0464(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetRTPCValue_Value_ImplicitCast;          // 0x0468(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox) == 0x000008, "Wrong alignment on BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox");
static_assert(sizeof(BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox) == 0x000470, "Wrong size on BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox");
static_assert(offsetof(BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox, EntryPoint) == 0x000000, "Member 'BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox, Temp_struct_Variable) == 0x000008, "Member 'BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox, Temp_delegate_Variable) == 0x000018, "Member 'BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox, Temp_bool_Has_Been_Initd_Variable) == 0x000028, "Member 'BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox, CallFunc_IsValid_ReturnValue) == 0x000029, "Member 'BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox, CallFunc_PostAkEvent_ReturnValue) == 0x00002C, "Member 'BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox::CallFunc_PostAkEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox, Temp_delegate_Variable_1) == 0x000030, "Member 'BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox::Temp_delegate_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox, Temp_bool_IsClosed_Variable) == 0x000040, "Member 'BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox, Temp_int_Array_Index_Variable) == 0x000044, "Member 'BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox, Temp_struct_Variable_1) == 0x000048, "Member 'BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox, Temp_int_Loop_Counter_Variable) == 0x000058, "Member 'BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox, CallFunc_Add_IntInt_ReturnValue) == 0x00005C, "Member 'BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox, Temp_bool_True_if_break_was_hit_Variable) == 0x000060, "Member 'BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox, Temp_int_Array_Index_Variable_1) == 0x000064, "Member 'BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox, CallFunc_Not_PreBool_ReturnValue) == 0x000068, "Member 'BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox, Temp_object_Variable) == 0x000070, "Member 'BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox, Temp_int_Loop_Counter_Variable_1) == 0x000078, "Member 'BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox, CallFunc_IsValid_ReturnValue_1) == 0x00007C, "Member 'BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox, CallFunc_Add_IntInt_ReturnValue_1) == 0x000080, "Member 'BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox, Temp_int_Array_Index_Variable_2) == 0x000084, "Member 'BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox, Temp_int_Array_Index_Variable_3) == 0x000088, "Member 'BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox, K2Node_Event_OverlapedZone) == 0x000090, "Member 'BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox::K2Node_Event_OverlapedZone' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox, K2Node_Event_LeaveZone) == 0x000098, "Member 'BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox::K2Node_Event_LeaveZone' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox, CallFunc_GetPlayerCharacter_ReturnValue) == 0x0000A0, "Member 'BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox, Temp_delegate_Variable_2) == 0x0000A8, "Member 'BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox::Temp_delegate_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox, CallFunc_GetPlayerCharacter_ReturnValue_1) == 0x0000B8, "Member 'BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox::CallFunc_GetPlayerCharacter_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox, Temp_struct_Variable_2) == 0x0000C0, "Member 'BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox, K2Node_CreateDelegate_OutputDelegate) == 0x0000D0, "Member 'BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x0000E0, "Member 'BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox, Temp_object_Variable_1) == 0x0000E8, "Member 'BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox, K2Node_ComponentBoundEvent_OverlappedComponent_1) == 0x0000F0, "Member 'BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox::K2Node_ComponentBoundEvent_OverlappedComponent_1' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox, K2Node_ComponentBoundEvent_OtherActor_1) == 0x0000F8, "Member 'BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox::K2Node_ComponentBoundEvent_OtherActor_1' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox, K2Node_ComponentBoundEvent_OtherComp_1) == 0x000100, "Member 'BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox::K2Node_ComponentBoundEvent_OtherComp_1' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox, K2Node_ComponentBoundEvent_OtherBodyIndex_1) == 0x000108, "Member 'BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox::K2Node_ComponentBoundEvent_OtherBodyIndex_1' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox, K2Node_ComponentBoundEvent_bFromSweep) == 0x00010C, "Member 'BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox, K2Node_ComponentBoundEvent_SweepResult) == 0x000110, "Member 'BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x0001B0, "Member 'BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox, K2Node_ComponentBoundEvent_OtherActor) == 0x0001B8, "Member 'BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox, K2Node_ComponentBoundEvent_OtherComp) == 0x0001C0, "Member 'BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x0001C8, "Member 'BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x0001CC, "Member 'BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x0001CD, "Member 'BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox, CallFunc_Map_Length_ReturnValue) == 0x0001D0, "Member 'BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox::CallFunc_Map_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox, CallFunc_Map_Keys_Keys) == 0x0001D8, "Member 'BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x0001E8, "Member 'BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox, K2Node_CustomEvent_RepeatAkEvent_1) == 0x0001F0, "Member 'BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox::K2Node_CustomEvent_RepeatAkEvent_1' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox, K2Node_CustomEvent_Delay_1) == 0x0001F8, "Member 'BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox::K2Node_CustomEvent_Delay_1' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox, CallFunc_RandomIntegerInRange_ReturnValue) == 0x000200, "Member 'BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox::CallFunc_RandomIntegerInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000208, "Member 'BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox, CallFunc_Spawn3dEnvEvent_PlayedAk) == 0x000210, "Member 'BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox::CallFunc_Spawn3dEnvEvent_PlayedAk' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox, CallFunc_Spawn3dEnvEvent_Delay) == 0x000218, "Member 'BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox::CallFunc_Spawn3dEnvEvent_Delay' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox, CallFunc_IsValid_ReturnValue_2) == 0x000220, "Member 'BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox, CallFunc_BP_EnvZoneLeave_self_CastInput) == 0x000228, "Member 'BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox::CallFunc_BP_EnvZoneLeave_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox, CallFunc_PostAkEvent_ReturnValue_1) == 0x000238, "Member 'BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox::CallFunc_PostAkEvent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000240, "Member 'BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox, CallFunc_RandomIntegerInRange_ReturnValue_1) == 0x000248, "Member 'BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox::CallFunc_RandomIntegerInRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox, CallFunc_Conv_IntToDouble_ReturnValue_1) == 0x000250, "Member 'BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox::CallFunc_Conv_IntToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox, CallFunc_Array_Length_ReturnValue) == 0x000258, "Member 'BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox, CallFunc_Array_Get_Item) == 0x000260, "Member 'BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox, CallFunc_Less_IntInt_ReturnValue) == 0x000268, "Member 'BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox, CallFunc_IsValid_ReturnValue_3) == 0x000269, "Member 'BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox, CallFunc_Spawn3dEnvEvent_PlayedAk_1) == 0x000270, "Member 'BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox::CallFunc_Spawn3dEnvEvent_PlayedAk_1' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox, CallFunc_Spawn3dEnvEvent_Delay_1) == 0x000278, "Member 'BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox::CallFunc_Spawn3dEnvEvent_Delay_1' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox, Temp_object_Variable_2) == 0x000280, "Member 'BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox, Temp_bool_Variable) == 0x000288, "Member 'BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox, CallFunc_Array_LastIndex_ReturnValue) == 0x00028C, "Member 'BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox, K2Node_CustomEvent_RepeatAkEvent) == 0x000290, "Member 'BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox::K2Node_CustomEvent_RepeatAkEvent' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox, K2Node_CustomEvent_Delay) == 0x000298, "Member 'BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox::K2Node_CustomEvent_Delay' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox, CallFunc_Array_Get_Item_1) == 0x0002A0, "Member 'BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox, CallFunc_IsValid_ReturnValue_4) == 0x0002A8, "Member 'BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox, CallFunc_Spawn3dEnvEvent_PlayedAk_2) == 0x0002B0, "Member 'BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox::CallFunc_Spawn3dEnvEvent_PlayedAk_2' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox, CallFunc_Spawn3dEnvEvent_Delay_2) == 0x0002B8, "Member 'BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox::CallFunc_Spawn3dEnvEvent_Delay_2' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox, CallFunc_Spawn3dEnvEvent_PlayedAk_3) == 0x0002C0, "Member 'BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox::CallFunc_Spawn3dEnvEvent_PlayedAk_3' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox, CallFunc_Spawn3dEnvEvent_Delay_3) == 0x0002C8, "Member 'BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox::CallFunc_Spawn3dEnvEvent_Delay_3' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox, Temp_int_Loop_Counter_Variable_2) == 0x0002D0, "Member 'BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox, CallFunc_Add_IntInt_ReturnValue_2) == 0x0002D4, "Member 'BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox, CallFunc_Array_Get_Item_2) == 0x0002D8, "Member 'BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox, CallFunc_Array_Length_ReturnValue_1) == 0x0002E0, "Member 'BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox, CallFunc_IsValid_ReturnValue_5) == 0x0002E4, "Member 'BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox, CallFunc_Less_IntInt_ReturnValue_1) == 0x0002E5, "Member 'BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox, Temp_int_Loop_Counter_Variable_3) == 0x0002E8, "Member 'BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox, CallFunc_Add_IntInt_ReturnValue_3) == 0x0002EC, "Member 'BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox, CallFunc_Array_Get_Item_3) == 0x0002F0, "Member 'BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox, CallFunc_Array_Length_ReturnValue_2) == 0x0002F8, "Member 'BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox, CallFunc_IsValid_ReturnValue_6) == 0x0002FC, "Member 'BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox, CallFunc_Less_IntInt_ReturnValue_2) == 0x0002FD, "Member 'BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox, CallFunc_GetActorOfClass_ReturnValue) == 0x000300, "Member 'BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox::CallFunc_GetActorOfClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox, CallFunc_IsValid_ReturnValue_7) == 0x000308, "Member 'BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox, CallFunc_IsValid_ReturnValue_8) == 0x000309, "Member 'BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox::CallFunc_IsValid_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox, CallFunc_Bp_EnvZoneEnter_self_CastInput) == 0x000310, "Member 'BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox::CallFunc_Bp_EnvZoneEnter_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox, CallFunc_BreakTransform_Location) == 0x000320, "Member 'BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox, CallFunc_BreakTransform_Rotation) == 0x00032C, "Member 'BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox, CallFunc_BreakTransform_Scale) == 0x000338, "Member 'BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox, CallFunc_GetPlayerCharacter_ReturnValue_2) == 0x000348, "Member 'BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox::CallFunc_GetPlayerCharacter_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x000350, "Member 'BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox, CallFunc_FindAkComponentWithValid_OutputPins) == 0x0003EC, "Member 'BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox::CallFunc_FindAkComponentWithValid_OutputPins' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox, CallFunc_FindAkComponentWithValid_ReturnValue) == 0x0003F0, "Member 'BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox::CallFunc_FindAkComponentWithValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox, Temp_object_Variable_3) == 0x0003F8, "Member 'BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox, K2Node_SwitchEnum_CmpSuccess) == 0x000400, "Member 'BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox, CallFunc_IsEmpty_ReturnValue) == 0x000401, "Member 'BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox::CallFunc_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox, CallFunc_IsValid_ReturnValue_9) == 0x000402, "Member 'BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox::CallFunc_IsValid_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox, K2Node_Select_Default) == 0x000408, "Member 'BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox, CallFunc_PostAkEvent_ReturnValue_2) == 0x000410, "Member 'BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox::CallFunc_PostAkEvent_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox, CallFunc_GetPlayerCharacter_ReturnValue_3) == 0x000418, "Member 'BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox::CallFunc_GetPlayerCharacter_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox, CallFunc_GetOverlappingActors_OverlappingActors) == 0x000420, "Member 'BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox::CallFunc_GetOverlappingActors_OverlappingActors' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox, CallFunc_Array_Get_Item_4) == 0x000430, "Member 'BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox, CallFunc_Array_Length_ReturnValue_3) == 0x000438, "Member 'BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox, CallFunc_EqualEqual_ObjectObject_ReturnValue_2) == 0x00043C, "Member 'BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox::CallFunc_EqualEqual_ObjectObject_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox, CallFunc_Less_IntInt_ReturnValue_3) == 0x00043D, "Member 'BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox, CallFunc_BooleanAND_ReturnValue) == 0x00043E, "Member 'BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox, K2Node_CustomEvent_bActivated) == 0x00043F, "Member 'BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox::K2Node_CustomEvent_bActivated' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox, CallFunc_Array_Get_Item_5) == 0x000440, "Member 'BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox::CallFunc_Array_Get_Item_5' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox, CallFunc_IsValid_ReturnValue_10) == 0x000448, "Member 'BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox::CallFunc_IsValid_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox, CallFunc_Array_Length_ReturnValue_4) == 0x00044C, "Member 'BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox, CallFunc_Less_IntInt_ReturnValue_4) == 0x000450, "Member 'BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox::CallFunc_Less_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox, CallFunc_GetConsoleVariableBoolValue_ReturnValue) == 0x000451, "Member 'BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox::CallFunc_GetConsoleVariableBoolValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox, CallFunc_GetConsoleVariableBoolValue_ReturnValue_1) == 0x000452, "Member 'BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox::CallFunc_GetConsoleVariableBoolValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox, CallFunc_IsValid_ReturnValue_11) == 0x000453, "Member 'BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox::CallFunc_IsValid_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox, CallFunc_Delay_Duration_ImplicitCast) == 0x000454, "Member 'BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox::CallFunc_Delay_Duration_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox, CallFunc_Delay_Duration_ImplicitCast_1) == 0x000458, "Member 'BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox::CallFunc_Delay_Duration_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox, CallFunc_SetAttenuationScalingFactor_Value_ImplicitCast) == 0x00045C, "Member 'BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox::CallFunc_SetAttenuationScalingFactor_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox, CallFunc_Delay_Duration_ImplicitCast_2) == 0x000460, "Member 'BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox::CallFunc_Delay_Duration_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox, CallFunc_Delay_Duration_ImplicitCast_3) == 0x000464, "Member 'BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox::CallFunc_Delay_Duration_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox, CallFunc_SetRTPCValue_Value_ImplicitCast) == 0x000468, "Member 'BP_AudioZoneBox_C_ExecuteUbergraph_BP_AudioZoneBox::CallFunc_SetRTPCValue_Value_ImplicitCast' has a wrong offset!");

// Function BP_AudioZoneBox.BP_AudioZoneBox_C.FillAllOverlappedZonesAsSlave
// 0x0128 (0x0128 - 0x0000)
struct BP_AudioZoneBox_C_FillAllOverlappedZonesAsSlave final
{
public:
	struct FBox                                   TargetBounds;                                      // 0x0000(0x001C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FBox                                   MyBounds;                                          // 0x001C(0x001C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<class ABP_AudioZoneBox_C*>             Volumes;                                           // 0x0038(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsIntersect_bResult;                      // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_AudioZoneBox_C*>             CallFunc_GetAllActorsOfClass_OutActors;            // 0x0058(0x0010)(ReferenceParm)
	struct FVector                                CallFunc_GetComponentBounds_Origin;                // 0x0068(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetComponentBounds_BoxExtent;             // 0x0074(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetComponentBounds_SphereRadius;          // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AudioZoneBox_C*                     CallFunc_Array_Get_Item;                           // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0090(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9D[0x3];                                       // 0x009D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetComponentBounds_Origin_1;              // 0x00B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetComponentBounds_BoxExtent_1;           // 0x00BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetComponentBounds_SphereRadius_1;        // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBox                                   CallFunc_MakeBox_ReturnValue;                      // 0x00CC(0x001C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x00E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x00F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBox                                   CallFunc_MakeBox_ReturnValue_1;                    // 0x0104(0x001C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AudioZoneBox_C_FillAllOverlappedZonesAsSlave) == 0x000008, "Wrong alignment on BP_AudioZoneBox_C_FillAllOverlappedZonesAsSlave");
static_assert(sizeof(BP_AudioZoneBox_C_FillAllOverlappedZonesAsSlave) == 0x000128, "Wrong size on BP_AudioZoneBox_C_FillAllOverlappedZonesAsSlave");
static_assert(offsetof(BP_AudioZoneBox_C_FillAllOverlappedZonesAsSlave, TargetBounds) == 0x000000, "Member 'BP_AudioZoneBox_C_FillAllOverlappedZonesAsSlave::TargetBounds' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_FillAllOverlappedZonesAsSlave, MyBounds) == 0x00001C, "Member 'BP_AudioZoneBox_C_FillAllOverlappedZonesAsSlave::MyBounds' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_FillAllOverlappedZonesAsSlave, Volumes) == 0x000038, "Member 'BP_AudioZoneBox_C_FillAllOverlappedZonesAsSlave::Volumes' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_FillAllOverlappedZonesAsSlave, Temp_int_Array_Index_Variable) == 0x000048, "Member 'BP_AudioZoneBox_C_FillAllOverlappedZonesAsSlave::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_FillAllOverlappedZonesAsSlave, Temp_int_Loop_Counter_Variable) == 0x00004C, "Member 'BP_AudioZoneBox_C_FillAllOverlappedZonesAsSlave::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_FillAllOverlappedZonesAsSlave, CallFunc_Add_IntInt_ReturnValue) == 0x000050, "Member 'BP_AudioZoneBox_C_FillAllOverlappedZonesAsSlave::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_FillAllOverlappedZonesAsSlave, CallFunc_IsIntersect_bResult) == 0x000054, "Member 'BP_AudioZoneBox_C_FillAllOverlappedZonesAsSlave::CallFunc_IsIntersect_bResult' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_FillAllOverlappedZonesAsSlave, CallFunc_GetAllActorsOfClass_OutActors) == 0x000058, "Member 'BP_AudioZoneBox_C_FillAllOverlappedZonesAsSlave::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_FillAllOverlappedZonesAsSlave, CallFunc_GetComponentBounds_Origin) == 0x000068, "Member 'BP_AudioZoneBox_C_FillAllOverlappedZonesAsSlave::CallFunc_GetComponentBounds_Origin' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_FillAllOverlappedZonesAsSlave, CallFunc_GetComponentBounds_BoxExtent) == 0x000074, "Member 'BP_AudioZoneBox_C_FillAllOverlappedZonesAsSlave::CallFunc_GetComponentBounds_BoxExtent' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_FillAllOverlappedZonesAsSlave, CallFunc_GetComponentBounds_SphereRadius) == 0x000080, "Member 'BP_AudioZoneBox_C_FillAllOverlappedZonesAsSlave::CallFunc_GetComponentBounds_SphereRadius' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_FillAllOverlappedZonesAsSlave, CallFunc_Array_Get_Item) == 0x000088, "Member 'BP_AudioZoneBox_C_FillAllOverlappedZonesAsSlave::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_FillAllOverlappedZonesAsSlave, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000090, "Member 'BP_AudioZoneBox_C_FillAllOverlappedZonesAsSlave::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_FillAllOverlappedZonesAsSlave, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x00009C, "Member 'BP_AudioZoneBox_C_FillAllOverlappedZonesAsSlave::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_FillAllOverlappedZonesAsSlave, CallFunc_Array_Add_ReturnValue) == 0x0000A0, "Member 'BP_AudioZoneBox_C_FillAllOverlappedZonesAsSlave::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_FillAllOverlappedZonesAsSlave, CallFunc_Add_VectorVector_ReturnValue) == 0x0000A4, "Member 'BP_AudioZoneBox_C_FillAllOverlappedZonesAsSlave::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_FillAllOverlappedZonesAsSlave, CallFunc_GetComponentBounds_Origin_1) == 0x0000B0, "Member 'BP_AudioZoneBox_C_FillAllOverlappedZonesAsSlave::CallFunc_GetComponentBounds_Origin_1' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_FillAllOverlappedZonesAsSlave, CallFunc_GetComponentBounds_BoxExtent_1) == 0x0000BC, "Member 'BP_AudioZoneBox_C_FillAllOverlappedZonesAsSlave::CallFunc_GetComponentBounds_BoxExtent_1' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_FillAllOverlappedZonesAsSlave, CallFunc_GetComponentBounds_SphereRadius_1) == 0x0000C8, "Member 'BP_AudioZoneBox_C_FillAllOverlappedZonesAsSlave::CallFunc_GetComponentBounds_SphereRadius_1' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_FillAllOverlappedZonesAsSlave, CallFunc_MakeBox_ReturnValue) == 0x0000CC, "Member 'BP_AudioZoneBox_C_FillAllOverlappedZonesAsSlave::CallFunc_MakeBox_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_FillAllOverlappedZonesAsSlave, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x0000E8, "Member 'BP_AudioZoneBox_C_FillAllOverlappedZonesAsSlave::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_FillAllOverlappedZonesAsSlave, CallFunc_Add_VectorVector_ReturnValue_1) == 0x0000F4, "Member 'BP_AudioZoneBox_C_FillAllOverlappedZonesAsSlave::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_FillAllOverlappedZonesAsSlave, CallFunc_Array_Length_ReturnValue) == 0x000100, "Member 'BP_AudioZoneBox_C_FillAllOverlappedZonesAsSlave::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_FillAllOverlappedZonesAsSlave, CallFunc_MakeBox_ReturnValue_1) == 0x000104, "Member 'BP_AudioZoneBox_C_FillAllOverlappedZonesAsSlave::CallFunc_MakeBox_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_FillAllOverlappedZonesAsSlave, CallFunc_Less_IntInt_ReturnValue) == 0x000120, "Member 'BP_AudioZoneBox_C_FillAllOverlappedZonesAsSlave::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_AudioZoneBox.BP_AudioZoneBox_C.FindAmbienceSpotPoint
// 0x02C0 (0x02C0 - 0x0000)
struct BP_AudioZoneBox_C_FindAmbienceSpotPoint final
{
public:
	TArray<class AActor*>                         LHitActor;                                         // 0x0000(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentScale_ReturnValue;         // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0xC];                                       // 0x0044(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0050(0x0030)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0090(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_Conv_VectorToTransform_ReturnValue;       // 0x00A0(0x0030)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeRelativeTransform_ReturnValue;        // 0x00D0(0x0030)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0104(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0110(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x011C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_129[0x7];                                      // 0x0129(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0130(0x0010)(ConstParm, ReferenceParm)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0140(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_14C[0x4];                                      // 0x014C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x0150(0x0010)(ConstParm, ReferenceParm)
	TArray<struct FHitResult>                     CallFunc_BoxTraceMultiForObjects_OutHits;          // 0x0160(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_BoxTraceMultiForObjects_ReturnValue;      // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_171[0x3];                                      // 0x0171(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_Array_Get_Item_1;                         // 0x0178(0x009C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0214(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0215(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0216(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_217[0x1];                                      // 0x0217(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x021C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0220(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x022C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0238(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0244(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0250(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0258(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0260(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0268(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x0270(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0278(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x027C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0280(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0284(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0290(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x029C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x02A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue;                     // 0x02B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AudioZoneBox_C_FindAmbienceSpotPoint) == 0x000010, "Wrong alignment on BP_AudioZoneBox_C_FindAmbienceSpotPoint");
static_assert(sizeof(BP_AudioZoneBox_C_FindAmbienceSpotPoint) == 0x0002C0, "Wrong size on BP_AudioZoneBox_C_FindAmbienceSpotPoint");
static_assert(offsetof(BP_AudioZoneBox_C_FindAmbienceSpotPoint, LHitActor) == 0x000000, "Member 'BP_AudioZoneBox_C_FindAmbienceSpotPoint::LHitActor' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_FindAmbienceSpotPoint, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'BP_AudioZoneBox_C_FindAmbienceSpotPoint::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_FindAmbienceSpotPoint, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'BP_AudioZoneBox_C_FindAmbienceSpotPoint::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_FindAmbienceSpotPoint, Temp_int_Array_Index_Variable) == 0x000018, "Member 'BP_AudioZoneBox_C_FindAmbienceSpotPoint::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_FindAmbienceSpotPoint, CallFunc_K2_GetComponentScale_ReturnValue) == 0x00001C, "Member 'BP_AudioZoneBox_C_FindAmbienceSpotPoint::CallFunc_K2_GetComponentScale_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_FindAmbienceSpotPoint, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000028, "Member 'BP_AudioZoneBox_C_FindAmbienceSpotPoint::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_FindAmbienceSpotPoint, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000034, "Member 'BP_AudioZoneBox_C_FindAmbienceSpotPoint::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_FindAmbienceSpotPoint, Temp_int_Array_Index_Variable_1) == 0x000040, "Member 'BP_AudioZoneBox_C_FindAmbienceSpotPoint::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_FindAmbienceSpotPoint, CallFunc_GetTransform_ReturnValue) == 0x000050, "Member 'BP_AudioZoneBox_C_FindAmbienceSpotPoint::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_FindAmbienceSpotPoint, Temp_int_Loop_Counter_Variable_1) == 0x000080, "Member 'BP_AudioZoneBox_C_FindAmbienceSpotPoint::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_FindAmbienceSpotPoint, CallFunc_Array_Get_Item) == 0x000088, "Member 'BP_AudioZoneBox_C_FindAmbienceSpotPoint::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_FindAmbienceSpotPoint, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000090, "Member 'BP_AudioZoneBox_C_FindAmbienceSpotPoint::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_FindAmbienceSpotPoint, CallFunc_Add_IntInt_ReturnValue_1) == 0x00009C, "Member 'BP_AudioZoneBox_C_FindAmbienceSpotPoint::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_FindAmbienceSpotPoint, CallFunc_Conv_VectorToTransform_ReturnValue) == 0x0000A0, "Member 'BP_AudioZoneBox_C_FindAmbienceSpotPoint::CallFunc_Conv_VectorToTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_FindAmbienceSpotPoint, CallFunc_MakeRelativeTransform_ReturnValue) == 0x0000D0, "Member 'BP_AudioZoneBox_C_FindAmbienceSpotPoint::CallFunc_MakeRelativeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_FindAmbienceSpotPoint, CallFunc_Array_Length_ReturnValue) == 0x000100, "Member 'BP_AudioZoneBox_C_FindAmbienceSpotPoint::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_FindAmbienceSpotPoint, CallFunc_BreakTransform_Location) == 0x000104, "Member 'BP_AudioZoneBox_C_FindAmbienceSpotPoint::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_FindAmbienceSpotPoint, CallFunc_BreakTransform_Rotation) == 0x000110, "Member 'BP_AudioZoneBox_C_FindAmbienceSpotPoint::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_FindAmbienceSpotPoint, CallFunc_BreakTransform_Scale) == 0x00011C, "Member 'BP_AudioZoneBox_C_FindAmbienceSpotPoint::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_FindAmbienceSpotPoint, CallFunc_Less_IntInt_ReturnValue) == 0x000128, "Member 'BP_AudioZoneBox_C_FindAmbienceSpotPoint::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_FindAmbienceSpotPoint, Temp_object_Variable) == 0x000130, "Member 'BP_AudioZoneBox_C_FindAmbienceSpotPoint::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_FindAmbienceSpotPoint, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000140, "Member 'BP_AudioZoneBox_C_FindAmbienceSpotPoint::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_FindAmbienceSpotPoint, K2Node_MakeArray_Array) == 0x000150, "Member 'BP_AudioZoneBox_C_FindAmbienceSpotPoint::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_FindAmbienceSpotPoint, CallFunc_BoxTraceMultiForObjects_OutHits) == 0x000160, "Member 'BP_AudioZoneBox_C_FindAmbienceSpotPoint::CallFunc_BoxTraceMultiForObjects_OutHits' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_FindAmbienceSpotPoint, CallFunc_BoxTraceMultiForObjects_ReturnValue) == 0x000170, "Member 'BP_AudioZoneBox_C_FindAmbienceSpotPoint::CallFunc_BoxTraceMultiForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_FindAmbienceSpotPoint, CallFunc_Array_Length_ReturnValue_1) == 0x000174, "Member 'BP_AudioZoneBox_C_FindAmbienceSpotPoint::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_FindAmbienceSpotPoint, CallFunc_Array_Get_Item_1) == 0x000178, "Member 'BP_AudioZoneBox_C_FindAmbienceSpotPoint::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_FindAmbienceSpotPoint, CallFunc_Less_IntInt_ReturnValue_1) == 0x000214, "Member 'BP_AudioZoneBox_C_FindAmbienceSpotPoint::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_FindAmbienceSpotPoint, CallFunc_BreakHitResult_bBlockingHit) == 0x000215, "Member 'BP_AudioZoneBox_C_FindAmbienceSpotPoint::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_FindAmbienceSpotPoint, CallFunc_BreakHitResult_bInitialOverlap) == 0x000216, "Member 'BP_AudioZoneBox_C_FindAmbienceSpotPoint::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_FindAmbienceSpotPoint, CallFunc_BreakHitResult_Time) == 0x000218, "Member 'BP_AudioZoneBox_C_FindAmbienceSpotPoint::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_FindAmbienceSpotPoint, CallFunc_BreakHitResult_Distance) == 0x00021C, "Member 'BP_AudioZoneBox_C_FindAmbienceSpotPoint::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_FindAmbienceSpotPoint, CallFunc_BreakHitResult_Location) == 0x000220, "Member 'BP_AudioZoneBox_C_FindAmbienceSpotPoint::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_FindAmbienceSpotPoint, CallFunc_BreakHitResult_ImpactPoint) == 0x00022C, "Member 'BP_AudioZoneBox_C_FindAmbienceSpotPoint::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_FindAmbienceSpotPoint, CallFunc_BreakHitResult_Normal) == 0x000238, "Member 'BP_AudioZoneBox_C_FindAmbienceSpotPoint::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_FindAmbienceSpotPoint, CallFunc_BreakHitResult_ImpactNormal) == 0x000244, "Member 'BP_AudioZoneBox_C_FindAmbienceSpotPoint::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_FindAmbienceSpotPoint, CallFunc_BreakHitResult_PhysMat) == 0x000250, "Member 'BP_AudioZoneBox_C_FindAmbienceSpotPoint::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_FindAmbienceSpotPoint, CallFunc_BreakHitResult_HitActor) == 0x000258, "Member 'BP_AudioZoneBox_C_FindAmbienceSpotPoint::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_FindAmbienceSpotPoint, CallFunc_BreakHitResult_HitComponent) == 0x000260, "Member 'BP_AudioZoneBox_C_FindAmbienceSpotPoint::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_FindAmbienceSpotPoint, CallFunc_BreakHitResult_HitBoneName) == 0x000268, "Member 'BP_AudioZoneBox_C_FindAmbienceSpotPoint::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_FindAmbienceSpotPoint, CallFunc_BreakHitResult_BoneName) == 0x000270, "Member 'BP_AudioZoneBox_C_FindAmbienceSpotPoint::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_FindAmbienceSpotPoint, CallFunc_BreakHitResult_HitItem) == 0x000278, "Member 'BP_AudioZoneBox_C_FindAmbienceSpotPoint::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_FindAmbienceSpotPoint, CallFunc_BreakHitResult_ElementIndex) == 0x00027C, "Member 'BP_AudioZoneBox_C_FindAmbienceSpotPoint::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_FindAmbienceSpotPoint, CallFunc_BreakHitResult_FaceIndex) == 0x000280, "Member 'BP_AudioZoneBox_C_FindAmbienceSpotPoint::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_FindAmbienceSpotPoint, CallFunc_BreakHitResult_TraceStart) == 0x000284, "Member 'BP_AudioZoneBox_C_FindAmbienceSpotPoint::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_FindAmbienceSpotPoint, CallFunc_BreakHitResult_TraceEnd) == 0x000290, "Member 'BP_AudioZoneBox_C_FindAmbienceSpotPoint::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_FindAmbienceSpotPoint, CallFunc_Array_AddUnique_ReturnValue) == 0x00029C, "Member 'BP_AudioZoneBox_C_FindAmbienceSpotPoint::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_FindAmbienceSpotPoint, CallFunc_GetDisplayName_ReturnValue) == 0x0002A0, "Member 'BP_AudioZoneBox_C_FindAmbienceSpotPoint::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_FindAmbienceSpotPoint, CallFunc_Contains_ReturnValue) == 0x0002B0, "Member 'BP_AudioZoneBox_C_FindAmbienceSpotPoint::CallFunc_Contains_ReturnValue' has a wrong offset!");

// Function BP_AudioZoneBox.BP_AudioZoneBox_C.GetHighestPriorityMaster
// 0x0020 (0x0020 - 0x0000)
struct BP_AudioZoneBox_C_GetHighestPriorityMaster final
{
public:
	class ABP_AudioZoneBox_C*                     ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AudioZoneBox_C*                     CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AudioZoneBox_C_GetHighestPriorityMaster) == 0x000008, "Wrong alignment on BP_AudioZoneBox_C_GetHighestPriorityMaster");
static_assert(sizeof(BP_AudioZoneBox_C_GetHighestPriorityMaster) == 0x000020, "Wrong size on BP_AudioZoneBox_C_GetHighestPriorityMaster");
static_assert(offsetof(BP_AudioZoneBox_C_GetHighestPriorityMaster, ReturnValue) == 0x000000, "Member 'BP_AudioZoneBox_C_GetHighestPriorityMaster::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_GetHighestPriorityMaster, CallFunc_Array_Length_ReturnValue) == 0x000008, "Member 'BP_AudioZoneBox_C_GetHighestPriorityMaster::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_GetHighestPriorityMaster, CallFunc_Array_Get_Item) == 0x000010, "Member 'BP_AudioZoneBox_C_GetHighestPriorityMaster::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_GetHighestPriorityMaster, CallFunc_Greater_IntInt_ReturnValue) == 0x000018, "Member 'BP_AudioZoneBox_C_GetHighestPriorityMaster::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function BP_AudioZoneBox.BP_AudioZoneBox_C.IsIntersect
// 0x00F8 (0x00F8 - 0x0000)
struct BP_AudioZoneBox_C_IsIntersect final
{
public:
	struct FBox                                   A;                                                 // 0x0000(0x001C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FBox                                   B;                                                 // 0x001C(0x001C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bResult;                                           // 0x0038(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBox                                   NewLocalVar;                                       // 0x003C(0x001C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakVector3f_X;                          // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector3f_Y;                          // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector3f_Z;                          // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector3f_X_1;                        // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector3f_Y_1;                        // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector3f_Z_1;                        // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector3f_X_2;                        // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector3f_Y_2;                        // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector3f_Z_2;                        // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector3f_X_3;                        // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector3f_Y_3;                        // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector3f_Z_3;                        // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_2;       // 0x008A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x008B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_3;       // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_4;       // 0x008D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_5;       // 0x008E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x008F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Greater_DoubleDouble_B_ImplicitCast;      // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_B_ImplicitCast_1;    // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_B_ImplicitCast_2;    // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_B_ImplicitCast_3;    // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_B_ImplicitCast_4;    // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_B_ImplicitCast_5;    // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast;      // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast_1;    // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast_2;    // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast_3;    // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast_4;    // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast_5;    // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AudioZoneBox_C_IsIntersect) == 0x000008, "Wrong alignment on BP_AudioZoneBox_C_IsIntersect");
static_assert(sizeof(BP_AudioZoneBox_C_IsIntersect) == 0x0000F8, "Wrong size on BP_AudioZoneBox_C_IsIntersect");
static_assert(offsetof(BP_AudioZoneBox_C_IsIntersect, A) == 0x000000, "Member 'BP_AudioZoneBox_C_IsIntersect::A' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_IsIntersect, B) == 0x00001C, "Member 'BP_AudioZoneBox_C_IsIntersect::B' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_IsIntersect, bResult) == 0x000038, "Member 'BP_AudioZoneBox_C_IsIntersect::bResult' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_IsIntersect, NewLocalVar) == 0x00003C, "Member 'BP_AudioZoneBox_C_IsIntersect::NewLocalVar' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_IsIntersect, CallFunc_BreakVector3f_X) == 0x000058, "Member 'BP_AudioZoneBox_C_IsIntersect::CallFunc_BreakVector3f_X' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_IsIntersect, CallFunc_BreakVector3f_Y) == 0x00005C, "Member 'BP_AudioZoneBox_C_IsIntersect::CallFunc_BreakVector3f_Y' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_IsIntersect, CallFunc_BreakVector3f_Z) == 0x000060, "Member 'BP_AudioZoneBox_C_IsIntersect::CallFunc_BreakVector3f_Z' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_IsIntersect, CallFunc_BreakVector3f_X_1) == 0x000064, "Member 'BP_AudioZoneBox_C_IsIntersect::CallFunc_BreakVector3f_X_1' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_IsIntersect, CallFunc_BreakVector3f_Y_1) == 0x000068, "Member 'BP_AudioZoneBox_C_IsIntersect::CallFunc_BreakVector3f_Y_1' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_IsIntersect, CallFunc_BreakVector3f_Z_1) == 0x00006C, "Member 'BP_AudioZoneBox_C_IsIntersect::CallFunc_BreakVector3f_Z_1' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_IsIntersect, CallFunc_BreakVector3f_X_2) == 0x000070, "Member 'BP_AudioZoneBox_C_IsIntersect::CallFunc_BreakVector3f_X_2' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_IsIntersect, CallFunc_BreakVector3f_Y_2) == 0x000074, "Member 'BP_AudioZoneBox_C_IsIntersect::CallFunc_BreakVector3f_Y_2' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_IsIntersect, CallFunc_BreakVector3f_Z_2) == 0x000078, "Member 'BP_AudioZoneBox_C_IsIntersect::CallFunc_BreakVector3f_Z_2' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_IsIntersect, CallFunc_BreakVector3f_X_3) == 0x00007C, "Member 'BP_AudioZoneBox_C_IsIntersect::CallFunc_BreakVector3f_X_3' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_IsIntersect, CallFunc_BreakVector3f_Y_3) == 0x000080, "Member 'BP_AudioZoneBox_C_IsIntersect::CallFunc_BreakVector3f_Y_3' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_IsIntersect, CallFunc_BreakVector3f_Z_3) == 0x000084, "Member 'BP_AudioZoneBox_C_IsIntersect::CallFunc_BreakVector3f_Z_3' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_IsIntersect, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000088, "Member 'BP_AudioZoneBox_C_IsIntersect::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_IsIntersect, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x000089, "Member 'BP_AudioZoneBox_C_IsIntersect::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_IsIntersect, CallFunc_Greater_DoubleDouble_ReturnValue_2) == 0x00008A, "Member 'BP_AudioZoneBox_C_IsIntersect::CallFunc_Greater_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_IsIntersect, CallFunc_BooleanOR_ReturnValue) == 0x00008B, "Member 'BP_AudioZoneBox_C_IsIntersect::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_IsIntersect, CallFunc_Greater_DoubleDouble_ReturnValue_3) == 0x00008C, "Member 'BP_AudioZoneBox_C_IsIntersect::CallFunc_Greater_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_IsIntersect, CallFunc_Greater_DoubleDouble_ReturnValue_4) == 0x00008D, "Member 'BP_AudioZoneBox_C_IsIntersect::CallFunc_Greater_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_IsIntersect, CallFunc_Greater_DoubleDouble_ReturnValue_5) == 0x00008E, "Member 'BP_AudioZoneBox_C_IsIntersect::CallFunc_Greater_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_IsIntersect, CallFunc_BooleanOR_ReturnValue_1) == 0x00008F, "Member 'BP_AudioZoneBox_C_IsIntersect::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_IsIntersect, CallFunc_BooleanOR_ReturnValue_2) == 0x000090, "Member 'BP_AudioZoneBox_C_IsIntersect::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_IsIntersect, CallFunc_Greater_DoubleDouble_B_ImplicitCast) == 0x000098, "Member 'BP_AudioZoneBox_C_IsIntersect::CallFunc_Greater_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_IsIntersect, CallFunc_Greater_DoubleDouble_B_ImplicitCast_1) == 0x0000A0, "Member 'BP_AudioZoneBox_C_IsIntersect::CallFunc_Greater_DoubleDouble_B_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_IsIntersect, CallFunc_Greater_DoubleDouble_B_ImplicitCast_2) == 0x0000A8, "Member 'BP_AudioZoneBox_C_IsIntersect::CallFunc_Greater_DoubleDouble_B_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_IsIntersect, CallFunc_Greater_DoubleDouble_B_ImplicitCast_3) == 0x0000B0, "Member 'BP_AudioZoneBox_C_IsIntersect::CallFunc_Greater_DoubleDouble_B_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_IsIntersect, CallFunc_Greater_DoubleDouble_B_ImplicitCast_4) == 0x0000B8, "Member 'BP_AudioZoneBox_C_IsIntersect::CallFunc_Greater_DoubleDouble_B_ImplicitCast_4' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_IsIntersect, CallFunc_Greater_DoubleDouble_B_ImplicitCast_5) == 0x0000C0, "Member 'BP_AudioZoneBox_C_IsIntersect::CallFunc_Greater_DoubleDouble_B_ImplicitCast_5' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_IsIntersect, CallFunc_Greater_DoubleDouble_A_ImplicitCast) == 0x0000C8, "Member 'BP_AudioZoneBox_C_IsIntersect::CallFunc_Greater_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_IsIntersect, CallFunc_Greater_DoubleDouble_A_ImplicitCast_1) == 0x0000D0, "Member 'BP_AudioZoneBox_C_IsIntersect::CallFunc_Greater_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_IsIntersect, CallFunc_Greater_DoubleDouble_A_ImplicitCast_2) == 0x0000D8, "Member 'BP_AudioZoneBox_C_IsIntersect::CallFunc_Greater_DoubleDouble_A_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_IsIntersect, CallFunc_Greater_DoubleDouble_A_ImplicitCast_3) == 0x0000E0, "Member 'BP_AudioZoneBox_C_IsIntersect::CallFunc_Greater_DoubleDouble_A_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_IsIntersect, CallFunc_Greater_DoubleDouble_A_ImplicitCast_4) == 0x0000E8, "Member 'BP_AudioZoneBox_C_IsIntersect::CallFunc_Greater_DoubleDouble_A_ImplicitCast_4' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_IsIntersect, CallFunc_Greater_DoubleDouble_A_ImplicitCast_5) == 0x0000F0, "Member 'BP_AudioZoneBox_C_IsIntersect::CallFunc_Greater_DoubleDouble_A_ImplicitCast_5' has a wrong offset!");

// Function BP_AudioZoneBox.BP_AudioZoneBox_C.NotifyOcclusionToSlave
// 0x0001 (0x0001 - 0x0000)
struct BP_AudioZoneBox_C_NotifyOcclusionToSlave final
{
public:
	bool                                          bActivated;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AudioZoneBox_C_NotifyOcclusionToSlave) == 0x000001, "Wrong alignment on BP_AudioZoneBox_C_NotifyOcclusionToSlave");
static_assert(sizeof(BP_AudioZoneBox_C_NotifyOcclusionToSlave) == 0x000001, "Wrong size on BP_AudioZoneBox_C_NotifyOcclusionToSlave");
static_assert(offsetof(BP_AudioZoneBox_C_NotifyOcclusionToSlave, bActivated) == 0x000000, "Member 'BP_AudioZoneBox_C_NotifyOcclusionToSlave::bActivated' has a wrong offset!");

// Function BP_AudioZoneBox.BP_AudioZoneBox_C.Reverb_param
// 0x0018 (0x0018 - 0x0000)
struct BP_AudioZoneBox_C_Reverb_param final
{
public:
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SetRTPCValue_Value_ImplicitCast;          // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetRTPCValue_Value_ImplicitCast_1;        // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetRTPCValue_Value_ImplicitCast_2;        // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetRTPCValue_Value_ImplicitCast_3;        // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetRTPCValue_Value_ImplicitCast_4;        // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AudioZoneBox_C_Reverb_param) == 0x000004, "Wrong alignment on BP_AudioZoneBox_C_Reverb_param");
static_assert(sizeof(BP_AudioZoneBox_C_Reverb_param) == 0x000018, "Wrong size on BP_AudioZoneBox_C_Reverb_param");
static_assert(offsetof(BP_AudioZoneBox_C_Reverb_param, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000000, "Member 'BP_AudioZoneBox_C_Reverb_param::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_Reverb_param, CallFunc_SetRTPCValue_Value_ImplicitCast) == 0x000004, "Member 'BP_AudioZoneBox_C_Reverb_param::CallFunc_SetRTPCValue_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_Reverb_param, CallFunc_SetRTPCValue_Value_ImplicitCast_1) == 0x000008, "Member 'BP_AudioZoneBox_C_Reverb_param::CallFunc_SetRTPCValue_Value_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_Reverb_param, CallFunc_SetRTPCValue_Value_ImplicitCast_2) == 0x00000C, "Member 'BP_AudioZoneBox_C_Reverb_param::CallFunc_SetRTPCValue_Value_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_Reverb_param, CallFunc_SetRTPCValue_Value_ImplicitCast_3) == 0x000010, "Member 'BP_AudioZoneBox_C_Reverb_param::CallFunc_SetRTPCValue_Value_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_Reverb_param, CallFunc_SetRTPCValue_Value_ImplicitCast_4) == 0x000014, "Member 'BP_AudioZoneBox_C_Reverb_param::CallFunc_SetRTPCValue_Value_ImplicitCast_4' has a wrong offset!");

// Function BP_AudioZoneBox.BP_AudioZoneBox_C.setReverb
// 0x0098 (0x0098 - 0x0000)
struct BP_AudioZoneBox_C_SetReverb final
{
public:
	EAmb_Space                                    Temp_byte_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable;                              // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_1;                            // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_2;                            // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_3;                            // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_4;                            // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_5;                            // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_6;                            // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_Select_Default;                             // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x3];                                       // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_VariableSet_Priority_ImplicitCast;          // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_Priority_ImplicitCast_1;        // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AudioZoneBox_C_SetReverb) == 0x000008, "Wrong alignment on BP_AudioZoneBox_C_SetReverb");
static_assert(sizeof(BP_AudioZoneBox_C_SetReverb) == 0x000098, "Wrong size on BP_AudioZoneBox_C_SetReverb");
static_assert(offsetof(BP_AudioZoneBox_C_SetReverb, Temp_byte_Variable) == 0x000000, "Member 'BP_AudioZoneBox_C_SetReverb::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_SetReverb, Temp_string_Variable) == 0x000008, "Member 'BP_AudioZoneBox_C_SetReverb::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_SetReverb, Temp_string_Variable_1) == 0x000018, "Member 'BP_AudioZoneBox_C_SetReverb::Temp_string_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_SetReverb, Temp_string_Variable_2) == 0x000028, "Member 'BP_AudioZoneBox_C_SetReverb::Temp_string_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_SetReverb, Temp_string_Variable_3) == 0x000038, "Member 'BP_AudioZoneBox_C_SetReverb::Temp_string_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_SetReverb, Temp_string_Variable_4) == 0x000048, "Member 'BP_AudioZoneBox_C_SetReverb::Temp_string_Variable_4' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_SetReverb, Temp_string_Variable_5) == 0x000058, "Member 'BP_AudioZoneBox_C_SetReverb::Temp_string_Variable_5' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_SetReverb, Temp_string_Variable_6) == 0x000068, "Member 'BP_AudioZoneBox_C_SetReverb::Temp_string_Variable_6' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_SetReverb, K2Node_Select_Default) == 0x000078, "Member 'BP_AudioZoneBox_C_SetReverb::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_SetReverb, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000088, "Member 'BP_AudioZoneBox_C_SetReverb::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_SetReverb, K2Node_VariableSet_Priority_ImplicitCast) == 0x00008C, "Member 'BP_AudioZoneBox_C_SetReverb::K2Node_VariableSet_Priority_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_SetReverb, K2Node_VariableSet_Priority_ImplicitCast_1) == 0x000090, "Member 'BP_AudioZoneBox_C_SetReverb::K2Node_VariableSet_Priority_ImplicitCast_1' has a wrong offset!");

// Function BP_AudioZoneBox.BP_AudioZoneBox_C.Spawn3dEnvEvent
// 0x0138 (0x0138 - 0x0000)
struct BP_AudioZoneBox_C_Spawn3dEnvEvent final
{
public:
	class UAkAudioEvent*                          AkEvent;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAkAudioEvent*                          PlayedAk;                                          // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Delay;                                             // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable;                              // 0x0018(0x0010)(ConstParm, ReferenceParm)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue;         // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Map_Find_Value;                           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable;                            // 0x0050(0x0010)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostAkEvent_ReturnValue;                  // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0070(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7D[0x3];                                       // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0080(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RandomPointInBoundingBox_ReturnValue;     // 0x008C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult;       // 0x0098(0x009C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_AudioZoneBox_C_Spawn3dEnvEvent) == 0x000008, "Wrong alignment on BP_AudioZoneBox_C_Spawn3dEnvEvent");
static_assert(sizeof(BP_AudioZoneBox_C_Spawn3dEnvEvent) == 0x000138, "Wrong size on BP_AudioZoneBox_C_Spawn3dEnvEvent");
static_assert(offsetof(BP_AudioZoneBox_C_Spawn3dEnvEvent, AkEvent) == 0x000000, "Member 'BP_AudioZoneBox_C_Spawn3dEnvEvent::AkEvent' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_Spawn3dEnvEvent, PlayedAk) == 0x000008, "Member 'BP_AudioZoneBox_C_Spawn3dEnvEvent::PlayedAk' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_Spawn3dEnvEvent, Delay) == 0x000010, "Member 'BP_AudioZoneBox_C_Spawn3dEnvEvent::Delay' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_Spawn3dEnvEvent, Temp_struct_Variable) == 0x000018, "Member 'BP_AudioZoneBox_C_Spawn3dEnvEvent::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_Spawn3dEnvEvent, CallFunc_RandomIntegerInRange_ReturnValue) == 0x000028, "Member 'BP_AudioZoneBox_C_Spawn3dEnvEvent::CallFunc_RandomIntegerInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_Spawn3dEnvEvent, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000030, "Member 'BP_AudioZoneBox_C_Spawn3dEnvEvent::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_Spawn3dEnvEvent, CallFunc_Map_Find_Value) == 0x000038, "Member 'BP_AudioZoneBox_C_Spawn3dEnvEvent::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_Spawn3dEnvEvent, CallFunc_Map_Find_ReturnValue) == 0x000040, "Member 'BP_AudioZoneBox_C_Spawn3dEnvEvent::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_Spawn3dEnvEvent, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000048, "Member 'BP_AudioZoneBox_C_Spawn3dEnvEvent::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_Spawn3dEnvEvent, Temp_delegate_Variable) == 0x000050, "Member 'BP_AudioZoneBox_C_Spawn3dEnvEvent::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_Spawn3dEnvEvent, CallFunc_PostAkEvent_ReturnValue) == 0x000060, "Member 'BP_AudioZoneBox_C_Spawn3dEnvEvent::CallFunc_PostAkEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_Spawn3dEnvEvent, CallFunc_GetPlayerCharacter_ReturnValue) == 0x000068, "Member 'BP_AudioZoneBox_C_Spawn3dEnvEvent::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_Spawn3dEnvEvent, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000070, "Member 'BP_AudioZoneBox_C_Spawn3dEnvEvent::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_Spawn3dEnvEvent, CallFunc_IsValid_ReturnValue) == 0x00007C, "Member 'BP_AudioZoneBox_C_Spawn3dEnvEvent::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_Spawn3dEnvEvent, CallFunc_Add_VectorVector_ReturnValue) == 0x000080, "Member 'BP_AudioZoneBox_C_Spawn3dEnvEvent::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_Spawn3dEnvEvent, CallFunc_RandomPointInBoundingBox_ReturnValue) == 0x00008C, "Member 'BP_AudioZoneBox_C_Spawn3dEnvEvent::CallFunc_RandomPointInBoundingBox_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_Spawn3dEnvEvent, CallFunc_K2_SetWorldLocation_SweepHitResult) == 0x000098, "Member 'BP_AudioZoneBox_C_Spawn3dEnvEvent::CallFunc_K2_SetWorldLocation_SweepHitResult' has a wrong offset!");

// Function BP_AudioZoneBox.BP_AudioZoneBox_C.UpdateMasterOcclusionZones
// 0x0068 (0x0068 - 0x0000)
struct BP_AudioZoneBox_C_UpdateMasterOcclusionZones final
{
public:
	const class ABP_AudioZoneBox_C*               InMaster;                                          // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	bool                                          bAdd;                                              // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AudioZoneBox_C*                     CurrentHighestPriorityMaster;                      // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	class ABP_AudioZoneBox_C*                     PrevHighestPriorityMaster;                         // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32[0x6];                                       // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AudioZoneBox_C*                     CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_46[0x2];                                       // 0x0046(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4E[0x2];                                       // 0x004E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_AudioZoneBox_C*                     CallFunc_GetHighestPriorityMaster_ReturnValue;     // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_AudioZoneBox_C*                     CallFunc_GetHighestPriorityMaster_ReturnValue_1;   // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsEmpty_ReturnValue;                // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_62[0x2];                                       // 0x0062(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SetRTPCValue_Value_ImplicitCast;          // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AudioZoneBox_C_UpdateMasterOcclusionZones) == 0x000008, "Wrong alignment on BP_AudioZoneBox_C_UpdateMasterOcclusionZones");
static_assert(sizeof(BP_AudioZoneBox_C_UpdateMasterOcclusionZones) == 0x000068, "Wrong size on BP_AudioZoneBox_C_UpdateMasterOcclusionZones");
static_assert(offsetof(BP_AudioZoneBox_C_UpdateMasterOcclusionZones, InMaster) == 0x000000, "Member 'BP_AudioZoneBox_C_UpdateMasterOcclusionZones::InMaster' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_UpdateMasterOcclusionZones, bAdd) == 0x000008, "Member 'BP_AudioZoneBox_C_UpdateMasterOcclusionZones::bAdd' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_UpdateMasterOcclusionZones, CurrentHighestPriorityMaster) == 0x000010, "Member 'BP_AudioZoneBox_C_UpdateMasterOcclusionZones::CurrentHighestPriorityMaster' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_UpdateMasterOcclusionZones, PrevHighestPriorityMaster) == 0x000018, "Member 'BP_AudioZoneBox_C_UpdateMasterOcclusionZones::PrevHighestPriorityMaster' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_UpdateMasterOcclusionZones, Temp_int_Loop_Counter_Variable) == 0x000020, "Member 'BP_AudioZoneBox_C_UpdateMasterOcclusionZones::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_UpdateMasterOcclusionZones, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member 'BP_AudioZoneBox_C_UpdateMasterOcclusionZones::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_UpdateMasterOcclusionZones, Temp_bool_True_if_break_was_hit_Variable) == 0x000028, "Member 'BP_AudioZoneBox_C_UpdateMasterOcclusionZones::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_UpdateMasterOcclusionZones, Temp_int_Array_Index_Variable) == 0x00002C, "Member 'BP_AudioZoneBox_C_UpdateMasterOcclusionZones::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_UpdateMasterOcclusionZones, CallFunc_Not_PreBool_ReturnValue) == 0x000030, "Member 'BP_AudioZoneBox_C_UpdateMasterOcclusionZones::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_UpdateMasterOcclusionZones, CallFunc_Array_RemoveItem_ReturnValue) == 0x000031, "Member 'BP_AudioZoneBox_C_UpdateMasterOcclusionZones::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_UpdateMasterOcclusionZones, CallFunc_Array_Get_Item) == 0x000038, "Member 'BP_AudioZoneBox_C_UpdateMasterOcclusionZones::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_UpdateMasterOcclusionZones, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'BP_AudioZoneBox_C_UpdateMasterOcclusionZones::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_UpdateMasterOcclusionZones, CallFunc_Less_IntInt_ReturnValue) == 0x000044, "Member 'BP_AudioZoneBox_C_UpdateMasterOcclusionZones::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_UpdateMasterOcclusionZones, CallFunc_BooleanAND_ReturnValue) == 0x000045, "Member 'BP_AudioZoneBox_C_UpdateMasterOcclusionZones::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_UpdateMasterOcclusionZones, CallFunc_Array_Add_ReturnValue) == 0x000048, "Member 'BP_AudioZoneBox_C_UpdateMasterOcclusionZones::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_UpdateMasterOcclusionZones, CallFunc_Less_DoubleDouble_ReturnValue) == 0x00004C, "Member 'BP_AudioZoneBox_C_UpdateMasterOcclusionZones::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_UpdateMasterOcclusionZones, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x00004D, "Member 'BP_AudioZoneBox_C_UpdateMasterOcclusionZones::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_UpdateMasterOcclusionZones, CallFunc_GetHighestPriorityMaster_ReturnValue) == 0x000050, "Member 'BP_AudioZoneBox_C_UpdateMasterOcclusionZones::CallFunc_GetHighestPriorityMaster_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_UpdateMasterOcclusionZones, CallFunc_GetHighestPriorityMaster_ReturnValue_1) == 0x000058, "Member 'BP_AudioZoneBox_C_UpdateMasterOcclusionZones::CallFunc_GetHighestPriorityMaster_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_UpdateMasterOcclusionZones, CallFunc_Array_IsEmpty_ReturnValue) == 0x000060, "Member 'BP_AudioZoneBox_C_UpdateMasterOcclusionZones::CallFunc_Array_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_UpdateMasterOcclusionZones, CallFunc_IsValid_ReturnValue) == 0x000061, "Member 'BP_AudioZoneBox_C_UpdateMasterOcclusionZones::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_UpdateMasterOcclusionZones, CallFunc_SetRTPCValue_Value_ImplicitCast) == 0x000064, "Member 'BP_AudioZoneBox_C_UpdateMasterOcclusionZones::CallFunc_SetRTPCValue_Value_ImplicitCast' has a wrong offset!");

// Function BP_AudioZoneBox.BP_AudioZoneBox_C.UserConstructionScript
// 0x0208 (0x0208 - 0x0000)
struct BP_AudioZoneBox_C_UserConstructionScript final
{
public:
	EAkEnvZoneType                                Temp_byte_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UStaticMesh*                            Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            Temp_object_Variable_1;                            // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            Temp_object_Variable_2;                            // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UStaticMesh*                            K2Node_Select_Default;                             // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetStaticMesh_ReturnValue;                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x002C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0038(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0044(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x005C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x0068(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x0074(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x0080(0x009C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult;    // 0x011C(0x009C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_Conv_LinearColorToVector_ReturnValue;     // 0x01B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C4[0x4];                                      // 0x01C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D1[0x3];                                      // 0x01D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x01D4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x01E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_LinearColorToVector_ReturnValue_1;   // 0x01EC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F9[0x3];                                      // 0x01F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x01FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AudioZoneBox_C_UserConstructionScript) == 0x000008, "Wrong alignment on BP_AudioZoneBox_C_UserConstructionScript");
static_assert(sizeof(BP_AudioZoneBox_C_UserConstructionScript) == 0x000208, "Wrong size on BP_AudioZoneBox_C_UserConstructionScript");
static_assert(offsetof(BP_AudioZoneBox_C_UserConstructionScript, Temp_byte_Variable) == 0x000000, "Member 'BP_AudioZoneBox_C_UserConstructionScript::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_UserConstructionScript, Temp_object_Variable) == 0x000008, "Member 'BP_AudioZoneBox_C_UserConstructionScript::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_UserConstructionScript, Temp_object_Variable_1) == 0x000010, "Member 'BP_AudioZoneBox_C_UserConstructionScript::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_UserConstructionScript, Temp_object_Variable_2) == 0x000018, "Member 'BP_AudioZoneBox_C_UserConstructionScript::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_UserConstructionScript, K2Node_Select_Default) == 0x000020, "Member 'BP_AudioZoneBox_C_UserConstructionScript::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_UserConstructionScript, CallFunc_SetStaticMesh_ReturnValue) == 0x000028, "Member 'BP_AudioZoneBox_C_UserConstructionScript::CallFunc_SetStaticMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_UserConstructionScript, CallFunc_BreakTransform_Location) == 0x00002C, "Member 'BP_AudioZoneBox_C_UserConstructionScript::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_UserConstructionScript, CallFunc_BreakTransform_Rotation) == 0x000038, "Member 'BP_AudioZoneBox_C_UserConstructionScript::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_UserConstructionScript, CallFunc_BreakTransform_Scale) == 0x000044, "Member 'BP_AudioZoneBox_C_UserConstructionScript::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_UserConstructionScript, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000050, "Member 'BP_AudioZoneBox_C_UserConstructionScript::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_UserConstructionScript, CallFunc_BreakTransform_Location_1) == 0x00005C, "Member 'BP_AudioZoneBox_C_UserConstructionScript::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_UserConstructionScript, CallFunc_BreakTransform_Rotation_1) == 0x000068, "Member 'BP_AudioZoneBox_C_UserConstructionScript::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_UserConstructionScript, CallFunc_BreakTransform_Scale_1) == 0x000074, "Member 'BP_AudioZoneBox_C_UserConstructionScript::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_UserConstructionScript, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x000080, "Member 'BP_AudioZoneBox_C_UserConstructionScript::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_UserConstructionScript, CallFunc_K2_SetRelativeRotation_SweepHitResult) == 0x00011C, "Member 'BP_AudioZoneBox_C_UserConstructionScript::CallFunc_K2_SetRelativeRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_UserConstructionScript, CallFunc_Conv_LinearColorToVector_ReturnValue) == 0x0001B8, "Member 'BP_AudioZoneBox_C_UserConstructionScript::CallFunc_Conv_LinearColorToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_UserConstructionScript, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0001C8, "Member 'BP_AudioZoneBox_C_UserConstructionScript::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_UserConstructionScript, K2Node_SwitchEnum_CmpSuccess) == 0x0001D0, "Member 'BP_AudioZoneBox_C_UserConstructionScript::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_UserConstructionScript, CallFunc_MakeVector_ReturnValue) == 0x0001D4, "Member 'BP_AudioZoneBox_C_UserConstructionScript::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_UserConstructionScript, CallFunc_Add_VectorVector_ReturnValue) == 0x0001E0, "Member 'BP_AudioZoneBox_C_UserConstructionScript::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_UserConstructionScript, CallFunc_Conv_LinearColorToVector_ReturnValue_1) == 0x0001EC, "Member 'BP_AudioZoneBox_C_UserConstructionScript::CallFunc_Conv_LinearColorToVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_UserConstructionScript, CallFunc_Less_DoubleDouble_ReturnValue) == 0x0001F8, "Member 'BP_AudioZoneBox_C_UserConstructionScript::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AudioZoneBox_C_UserConstructionScript, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x0001FC, "Member 'BP_AudioZoneBox_C_UserConstructionScript::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");

}

