#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BlackBox

#include "Basic.hpp"

#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_BlackBox.BP_BlackBox_C
// 0x0040 (0x0288 - 0x0248)
class ABP_BlackBox_C final : public AActor
{
public:
	class UStaticMeshComponent*                   Plane1;                                            // 0x0248(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Plane;                                             // 0x0250(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Plane6;                                            // 0x0258(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Plane5;                                            // 0x0260(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Plane4;                                            // 0x0268(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Plane3;                                            // 0x0270(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Plane2;                                            // 0x0278(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0280(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_BlackBox_C">();
	}
	static class ABP_BlackBox_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_BlackBox_C>();
	}
};
static_assert(alignof(ABP_BlackBox_C) == 0x000008, "Wrong alignment on ABP_BlackBox_C");
static_assert(sizeof(ABP_BlackBox_C) == 0x000288, "Wrong size on ABP_BlackBox_C");
static_assert(offsetof(ABP_BlackBox_C, Plane1) == 0x000248, "Member 'ABP_BlackBox_C::Plane1' has a wrong offset!");
static_assert(offsetof(ABP_BlackBox_C, Plane) == 0x000250, "Member 'ABP_BlackBox_C::Plane' has a wrong offset!");
static_assert(offsetof(ABP_BlackBox_C, Plane6) == 0x000258, "Member 'ABP_BlackBox_C::Plane6' has a wrong offset!");
static_assert(offsetof(ABP_BlackBox_C, Plane5) == 0x000260, "Member 'ABP_BlackBox_C::Plane5' has a wrong offset!");
static_assert(offsetof(ABP_BlackBox_C, Plane4) == 0x000268, "Member 'ABP_BlackBox_C::Plane4' has a wrong offset!");
static_assert(offsetof(ABP_BlackBox_C, Plane3) == 0x000270, "Member 'ABP_BlackBox_C::Plane3' has a wrong offset!");
static_assert(offsetof(ABP_BlackBox_C, Plane2) == 0x000278, "Member 'ABP_BlackBox_C::Plane2' has a wrong offset!");
static_assert(offsetof(ABP_BlackBox_C, DefaultSceneRoot) == 0x000280, "Member 'ABP_BlackBox_C::DefaultSceneRoot' has a wrong offset!");

}

