#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CampTank

#include "Basic.hpp"

#include "M1_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "M1Actor_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_CampTank.BP_CampTank_C
// 0x00E8 (0x0350 - 0x0268)
class ABP_CampTank_C final : public AM1StaticMeshActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0268(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USkeletalMeshComponent*                 Camp_Tank;                                         // 0x0270(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Camp_Tank_Core;                                    // 0x0278(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Camp_Cannon;                                       // 0x0280(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Camp_Tank_Cannon;                                  // 0x0288(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Camp_Tire00_PJY16;                              // 0x0290(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Camp_Tire00_PJY15;                              // 0x0298(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Camp_Tire00_PJY14;                              // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Camp_Tire00_PJY13;                              // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Camp_Tire00_PJY12;                              // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Camp_Tire00_PJY11;                              // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Camp_Tire00_PJY10;                              // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Camp_Tire00_PJY9;                               // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Camp_Tire00_PJY8;                               // 0x02D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Camp_Tire00_PJY7;                               // 0x02D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Camp_Tire00_PJY6;                               // 0x02E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Camp_Tire00_PJY5;                               // 0x02E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Camp_Tire00_PJY3;                               // 0x02F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Camp_Tire00_PJY2;                               // 0x02F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Camp_Tire00_PJY1;                               // 0x0300(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Camp_Tire00_PJY;                                // 0x0308(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Camp_Tank01_PJY;                                // 0x0310(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_Camp_Tank00_PJY;                                // 0x0318(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               SM_Camp_Tank00;                                    // 0x0320(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               SM_Camp_Tank01;                                    // 0x032C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               SK_Camp_Cannon;                                    // 0x0338(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bIsLeftSide;                                       // 0x0344(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_345[0x3];                                      // 0x0345(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 Camp_Cannon_0;                                     // 0x0348(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)

public:
	void UserConstructionScript();
	void SetCampState(class USkeletalMeshComponent* InMesh, bool bIsNewlyActivated);
	void SetCampAnimation(class USkeletalMeshComponent* InMesh);
	void ReceiveBeginPlay();
	void PlayCampAnimation(bool bIsNewlyActivated);
	void ExecuteUbergraph_BP_CampTank(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_CampTank_C">();
	}
	static class ABP_CampTank_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_CampTank_C>();
	}
};
static_assert(alignof(ABP_CampTank_C) == 0x000008, "Wrong alignment on ABP_CampTank_C");
static_assert(sizeof(ABP_CampTank_C) == 0x000350, "Wrong size on ABP_CampTank_C");
static_assert(offsetof(ABP_CampTank_C, UberGraphFrame) == 0x000268, "Member 'ABP_CampTank_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_CampTank_C, Camp_Tank) == 0x000270, "Member 'ABP_CampTank_C::Camp_Tank' has a wrong offset!");
static_assert(offsetof(ABP_CampTank_C, Camp_Tank_Core) == 0x000278, "Member 'ABP_CampTank_C::Camp_Tank_Core' has a wrong offset!");
static_assert(offsetof(ABP_CampTank_C, Camp_Cannon) == 0x000280, "Member 'ABP_CampTank_C::Camp_Cannon' has a wrong offset!");
static_assert(offsetof(ABP_CampTank_C, Camp_Tank_Cannon) == 0x000288, "Member 'ABP_CampTank_C::Camp_Tank_Cannon' has a wrong offset!");
static_assert(offsetof(ABP_CampTank_C, SM_Camp_Tire00_PJY16) == 0x000290, "Member 'ABP_CampTank_C::SM_Camp_Tire00_PJY16' has a wrong offset!");
static_assert(offsetof(ABP_CampTank_C, SM_Camp_Tire00_PJY15) == 0x000298, "Member 'ABP_CampTank_C::SM_Camp_Tire00_PJY15' has a wrong offset!");
static_assert(offsetof(ABP_CampTank_C, SM_Camp_Tire00_PJY14) == 0x0002A0, "Member 'ABP_CampTank_C::SM_Camp_Tire00_PJY14' has a wrong offset!");
static_assert(offsetof(ABP_CampTank_C, SM_Camp_Tire00_PJY13) == 0x0002A8, "Member 'ABP_CampTank_C::SM_Camp_Tire00_PJY13' has a wrong offset!");
static_assert(offsetof(ABP_CampTank_C, SM_Camp_Tire00_PJY12) == 0x0002B0, "Member 'ABP_CampTank_C::SM_Camp_Tire00_PJY12' has a wrong offset!");
static_assert(offsetof(ABP_CampTank_C, SM_Camp_Tire00_PJY11) == 0x0002B8, "Member 'ABP_CampTank_C::SM_Camp_Tire00_PJY11' has a wrong offset!");
static_assert(offsetof(ABP_CampTank_C, SM_Camp_Tire00_PJY10) == 0x0002C0, "Member 'ABP_CampTank_C::SM_Camp_Tire00_PJY10' has a wrong offset!");
static_assert(offsetof(ABP_CampTank_C, SM_Camp_Tire00_PJY9) == 0x0002C8, "Member 'ABP_CampTank_C::SM_Camp_Tire00_PJY9' has a wrong offset!");
static_assert(offsetof(ABP_CampTank_C, SM_Camp_Tire00_PJY8) == 0x0002D0, "Member 'ABP_CampTank_C::SM_Camp_Tire00_PJY8' has a wrong offset!");
static_assert(offsetof(ABP_CampTank_C, SM_Camp_Tire00_PJY7) == 0x0002D8, "Member 'ABP_CampTank_C::SM_Camp_Tire00_PJY7' has a wrong offset!");
static_assert(offsetof(ABP_CampTank_C, SM_Camp_Tire00_PJY6) == 0x0002E0, "Member 'ABP_CampTank_C::SM_Camp_Tire00_PJY6' has a wrong offset!");
static_assert(offsetof(ABP_CampTank_C, SM_Camp_Tire00_PJY5) == 0x0002E8, "Member 'ABP_CampTank_C::SM_Camp_Tire00_PJY5' has a wrong offset!");
static_assert(offsetof(ABP_CampTank_C, SM_Camp_Tire00_PJY3) == 0x0002F0, "Member 'ABP_CampTank_C::SM_Camp_Tire00_PJY3' has a wrong offset!");
static_assert(offsetof(ABP_CampTank_C, SM_Camp_Tire00_PJY2) == 0x0002F8, "Member 'ABP_CampTank_C::SM_Camp_Tire00_PJY2' has a wrong offset!");
static_assert(offsetof(ABP_CampTank_C, SM_Camp_Tire00_PJY1) == 0x000300, "Member 'ABP_CampTank_C::SM_Camp_Tire00_PJY1' has a wrong offset!");
static_assert(offsetof(ABP_CampTank_C, SM_Camp_Tire00_PJY) == 0x000308, "Member 'ABP_CampTank_C::SM_Camp_Tire00_PJY' has a wrong offset!");
static_assert(offsetof(ABP_CampTank_C, SM_Camp_Tank01_PJY) == 0x000310, "Member 'ABP_CampTank_C::SM_Camp_Tank01_PJY' has a wrong offset!");
static_assert(offsetof(ABP_CampTank_C, SM_Camp_Tank00_PJY) == 0x000318, "Member 'ABP_CampTank_C::SM_Camp_Tank00_PJY' has a wrong offset!");
static_assert(offsetof(ABP_CampTank_C, SM_Camp_Tank00) == 0x000320, "Member 'ABP_CampTank_C::SM_Camp_Tank00' has a wrong offset!");
static_assert(offsetof(ABP_CampTank_C, SM_Camp_Tank01) == 0x00032C, "Member 'ABP_CampTank_C::SM_Camp_Tank01' has a wrong offset!");
static_assert(offsetof(ABP_CampTank_C, SK_Camp_Cannon) == 0x000338, "Member 'ABP_CampTank_C::SK_Camp_Cannon' has a wrong offset!");
static_assert(offsetof(ABP_CampTank_C, bIsLeftSide) == 0x000344, "Member 'ABP_CampTank_C::bIsLeftSide' has a wrong offset!");
static_assert(offsetof(ABP_CampTank_C, Camp_Cannon_0) == 0x000348, "Member 'ABP_CampTank_C::Camp_Cannon_0' has a wrong offset!");

}

