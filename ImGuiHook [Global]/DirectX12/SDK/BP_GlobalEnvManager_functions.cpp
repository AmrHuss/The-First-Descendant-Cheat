#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_GlobalEnvManager

#include "Basic.hpp"

#include "BP_GlobalEnvManager_classes.hpp"
#include "BP_GlobalEnvManager_parameters.hpp"


namespace SDK
{

// Function BP_GlobalEnvManager.BP_GlobalEnvManager_C.2DOneShot_Event
// (BlueprintCallable, BlueprintEvent)

void ABP_GlobalEnvManager_C::TwoDOneShot_Event()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GlobalEnvManager_C", "2DOneShot_Event");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GlobalEnvManager.BP_GlobalEnvManager_C.BP_EnvZoneActiveByPlayer
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_GlobalEnvManager_C::BP_EnvZoneActiveByPlayer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GlobalEnvManager_C", "BP_EnvZoneActiveByPlayer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GlobalEnvManager.BP_GlobalEnvManager_C.BP_EnvZoneDiscard
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_GlobalEnvManager_C::BP_EnvZoneDiscard()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GlobalEnvManager_C", "BP_EnvZoneDiscard");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GlobalEnvManager.BP_GlobalEnvManager_C.Bp_EnvZoneEnter
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_AudioZoneBox_C*               OverlapedZone                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_GlobalEnvManager_C::Bp_EnvZoneEnter(class ABP_AudioZoneBox_C* OverlapedZone)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GlobalEnvManager_C", "Bp_EnvZoneEnter");

	Params::BP_GlobalEnvManager_C_Bp_EnvZoneEnter Parms{};

	Parms.OverlapedZone = OverlapedZone;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GlobalEnvManager.BP_GlobalEnvManager_C.BP_EnvZoneInitActive
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_GlobalEnvManager_C::BP_EnvZoneInitActive()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GlobalEnvManager_C", "BP_EnvZoneInitActive");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GlobalEnvManager.BP_GlobalEnvManager_C.BP_EnvZoneLeave
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_AudioZoneBox_C*               LeaveZone                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_GlobalEnvManager_C::BP_EnvZoneLeave(class ABP_AudioZoneBox_C* LeaveZone)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GlobalEnvManager_C", "BP_EnvZoneLeave");

	Params::BP_GlobalEnvManager_C_BP_EnvZoneLeave Parms{};

	Parms.LeaveZone = LeaveZone;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GlobalEnvManager.BP_GlobalEnvManager_C.BPStartOmniEnvEvent
// (BlueprintCallable, BlueprintEvent)

void ABP_GlobalEnvManager_C::BPStartOmniEnvEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GlobalEnvManager_C", "BPStartOmniEnvEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GlobalEnvManager.BP_GlobalEnvManager_C.CollectBPZone
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_AudioZoneBox_C*               NewVol                                                 (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor, HasGetValueTypeHash)

void ABP_GlobalEnvManager_C::CollectBPZone(const class ABP_AudioZoneBox_C*& NewVol)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GlobalEnvManager_C", "CollectBPZone");

	Params::BP_GlobalEnvManager_C_CollectBPZone Parms{};

	Parms.NewVol = NewVol;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GlobalEnvManager.BP_GlobalEnvManager_C.Debug_String
// (BlueprintCallable, BlueprintEvent)

void ABP_GlobalEnvManager_C::Debug_String()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GlobalEnvManager_C", "Debug_String");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GlobalEnvManager.BP_GlobalEnvManager_C.ExecuteUbergraph_BP_GlobalEnvManager
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_GlobalEnvManager_C::ExecuteUbergraph_BP_GlobalEnvManager(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GlobalEnvManager_C", "ExecuteUbergraph_BP_GlobalEnvManager");

	Params::BP_GlobalEnvManager_C_ExecuteUbergraph_BP_GlobalEnvManager Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GlobalEnvManager.BP_GlobalEnvManager_C.FindInsideZone
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    SuccessFindZone_                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_GlobalEnvManager_C::FindInsideZone(bool* SuccessFindZone_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GlobalEnvManager_C", "FindInsideZone");

	Params::BP_GlobalEnvManager_C_FindInsideZone Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (SuccessFindZone_ != nullptr)
		*SuccessFindZone_ = Parms.SuccessFindZone_;
}


// Function BP_GlobalEnvManager.BP_GlobalEnvManager_C.GlobalEnvEventSpot
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_GlobalEnvManager_C::GlobalEnvEventSpot()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GlobalEnvManager_C", "GlobalEnvEventSpot");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GlobalEnvManager.BP_GlobalEnvManager_C.Init
// (BlueprintCallable, BlueprintEvent)

void ABP_GlobalEnvManager_C::Init()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GlobalEnvManager_C", "Init");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GlobalEnvManager.BP_GlobalEnvManager_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_GlobalEnvManager_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GlobalEnvManager_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GlobalEnvManager.BP_GlobalEnvManager_C.SetEnvInitParameter
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_GlobalEnvManager_C::SetEnvInitParameter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GlobalEnvManager_C", "SetEnvInitParameter");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GlobalEnvManager.BP_GlobalEnvManager_C.SetEnvOverride
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_AudioZoneBox_C*               RefreshOverlapedZone                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    Entering_                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_GlobalEnvManager_C::SetEnvOverride(class ABP_AudioZoneBox_C* RefreshOverlapedZone, bool Entering_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GlobalEnvManager_C", "SetEnvOverride");

	Params::BP_GlobalEnvManager_C_SetEnvOverride Parms{};

	Parms.RefreshOverlapedZone = RefreshOverlapedZone;
	Parms.Entering_ = Entering_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_GlobalEnvManager.BP_GlobalEnvManager_C.SetReverbParam
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_GlobalEnvManager_C::SetReverbParam()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GlobalEnvManager_C", "SetReverbParam");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GlobalEnvManager.BP_GlobalEnvManager_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_GlobalEnvManager_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GlobalEnvManager_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_GlobalEnvManager.BP_GlobalEnvManager_C.ZoneLeaveOldZoneOverride
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_AudioZoneBox_C*               OverlapedZone                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_GlobalEnvManager_C::ZoneLeaveOldZoneOverride(class ABP_AudioZoneBox_C* OverlapedZone)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_GlobalEnvManager_C", "ZoneLeaveOldZoneOverride");

	Params::BP_GlobalEnvManager_C_ZoneLeaveOldZoneOverride Parms{};

	Parms.OverlapedZone = OverlapedZone;

	UObject::ProcessEvent(Func, &Parms);
}

}

