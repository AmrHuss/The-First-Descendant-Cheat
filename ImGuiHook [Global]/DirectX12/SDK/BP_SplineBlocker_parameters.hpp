#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SplineBlocker

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_SplineBlocker.BP_SplineBlocker_C.GetBlockerSize
// 0x0060 (0x0060 - 0x0000)
struct BP_SplineBlocker_C_GetBlockerSize final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetMeshLength_MeshLength;                 // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorScale3D_ReturnValue;              // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector2D_X;                          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector3f_X;                          // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector3f_Y;                          // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector3f_Z;                          // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_FunctionResult_ReturnValue_ImplicitCast;    // 0x0050(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_B_ImplicitCast;     // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SplineBlocker_C_GetBlockerSize) == 0x000008, "Wrong alignment on BP_SplineBlocker_C_GetBlockerSize");
static_assert(sizeof(BP_SplineBlocker_C_GetBlockerSize) == 0x000060, "Wrong size on BP_SplineBlocker_C_GetBlockerSize");
static_assert(offsetof(BP_SplineBlocker_C_GetBlockerSize, ReturnValue) == 0x000000, "Member 'BP_SplineBlocker_C_GetBlockerSize::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineBlocker_C_GetBlockerSize, CallFunc_GetMeshLength_MeshLength) == 0x000008, "Member 'BP_SplineBlocker_C_GetBlockerSize::CallFunc_GetMeshLength_MeshLength' has a wrong offset!");
static_assert(offsetof(BP_SplineBlocker_C_GetBlockerSize, CallFunc_GetActorScale3D_ReturnValue) == 0x000010, "Member 'BP_SplineBlocker_C_GetBlockerSize::CallFunc_GetActorScale3D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineBlocker_C_GetBlockerSize, CallFunc_BreakVector2D_X) == 0x000020, "Member 'BP_SplineBlocker_C_GetBlockerSize::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(BP_SplineBlocker_C_GetBlockerSize, CallFunc_BreakVector2D_Y) == 0x000028, "Member 'BP_SplineBlocker_C_GetBlockerSize::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(BP_SplineBlocker_C_GetBlockerSize, CallFunc_BreakVector3f_X) == 0x000030, "Member 'BP_SplineBlocker_C_GetBlockerSize::CallFunc_BreakVector3f_X' has a wrong offset!");
static_assert(offsetof(BP_SplineBlocker_C_GetBlockerSize, CallFunc_BreakVector3f_Y) == 0x000034, "Member 'BP_SplineBlocker_C_GetBlockerSize::CallFunc_BreakVector3f_Y' has a wrong offset!");
static_assert(offsetof(BP_SplineBlocker_C_GetBlockerSize, CallFunc_BreakVector3f_Z) == 0x000038, "Member 'BP_SplineBlocker_C_GetBlockerSize::CallFunc_BreakVector3f_Z' has a wrong offset!");
static_assert(offsetof(BP_SplineBlocker_C_GetBlockerSize, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000040, "Member 'BP_SplineBlocker_C_GetBlockerSize::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineBlocker_C_GetBlockerSize, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000048, "Member 'BP_SplineBlocker_C_GetBlockerSize::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineBlocker_C_GetBlockerSize, K2Node_FunctionResult_ReturnValue_ImplicitCast) == 0x000050, "Member 'BP_SplineBlocker_C_GetBlockerSize::K2Node_FunctionResult_ReturnValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_SplineBlocker_C_GetBlockerSize, CallFunc_Multiply_DoubleDouble_B_ImplicitCast) == 0x000058, "Member 'BP_SplineBlocker_C_GetBlockerSize::CallFunc_Multiply_DoubleDouble_B_ImplicitCast' has a wrong offset!");

// Function BP_SplineBlocker.BP_SplineBlocker_C.GetExtrudeSize
// 0x0060 (0x0060 - 0x0000)
struct BP_SplineBlocker_C_GetExtrudeSize final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetMeshLength_MeshLength;                 // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorScale3D_ReturnValue;              // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector2D_X;                          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector3f_X;                          // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector3f_Y;                          // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector3f_Z;                          // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_FunctionResult_ReturnValue_ImplicitCast;    // 0x0050(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_B_ImplicitCast;     // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SplineBlocker_C_GetExtrudeSize) == 0x000008, "Wrong alignment on BP_SplineBlocker_C_GetExtrudeSize");
static_assert(sizeof(BP_SplineBlocker_C_GetExtrudeSize) == 0x000060, "Wrong size on BP_SplineBlocker_C_GetExtrudeSize");
static_assert(offsetof(BP_SplineBlocker_C_GetExtrudeSize, ReturnValue) == 0x000000, "Member 'BP_SplineBlocker_C_GetExtrudeSize::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineBlocker_C_GetExtrudeSize, CallFunc_GetMeshLength_MeshLength) == 0x000008, "Member 'BP_SplineBlocker_C_GetExtrudeSize::CallFunc_GetMeshLength_MeshLength' has a wrong offset!");
static_assert(offsetof(BP_SplineBlocker_C_GetExtrudeSize, CallFunc_GetActorScale3D_ReturnValue) == 0x000010, "Member 'BP_SplineBlocker_C_GetExtrudeSize::CallFunc_GetActorScale3D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineBlocker_C_GetExtrudeSize, CallFunc_BreakVector2D_X) == 0x000020, "Member 'BP_SplineBlocker_C_GetExtrudeSize::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(BP_SplineBlocker_C_GetExtrudeSize, CallFunc_BreakVector2D_Y) == 0x000028, "Member 'BP_SplineBlocker_C_GetExtrudeSize::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(BP_SplineBlocker_C_GetExtrudeSize, CallFunc_BreakVector3f_X) == 0x000030, "Member 'BP_SplineBlocker_C_GetExtrudeSize::CallFunc_BreakVector3f_X' has a wrong offset!");
static_assert(offsetof(BP_SplineBlocker_C_GetExtrudeSize, CallFunc_BreakVector3f_Y) == 0x000034, "Member 'BP_SplineBlocker_C_GetExtrudeSize::CallFunc_BreakVector3f_Y' has a wrong offset!");
static_assert(offsetof(BP_SplineBlocker_C_GetExtrudeSize, CallFunc_BreakVector3f_Z) == 0x000038, "Member 'BP_SplineBlocker_C_GetExtrudeSize::CallFunc_BreakVector3f_Z' has a wrong offset!");
static_assert(offsetof(BP_SplineBlocker_C_GetExtrudeSize, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000040, "Member 'BP_SplineBlocker_C_GetExtrudeSize::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineBlocker_C_GetExtrudeSize, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000048, "Member 'BP_SplineBlocker_C_GetExtrudeSize::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineBlocker_C_GetExtrudeSize, K2Node_FunctionResult_ReturnValue_ImplicitCast) == 0x000050, "Member 'BP_SplineBlocker_C_GetExtrudeSize::K2Node_FunctionResult_ReturnValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_SplineBlocker_C_GetExtrudeSize, CallFunc_Multiply_DoubleDouble_B_ImplicitCast) == 0x000058, "Member 'BP_SplineBlocker_C_GetExtrudeSize::CallFunc_Multiply_DoubleDouble_B_ImplicitCast' has a wrong offset!");

// Function BP_SplineBlocker.BP_SplineBlocker_C.GetMeshLength
// 0x0060 (0x0060 - 0x0000)
struct BP_SplineBlocker_C_GetMeshLength final
{
public:
	double                                        MeshLength;                                        // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESplineMeshAxis                               Temp_byte_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBox                                   CallFunc_GetBoundingBox_ReturnValue;               // 0x000C(0x001C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X;                            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default;                             // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue;                          // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SplineBlocker_C_GetMeshLength) == 0x000008, "Wrong alignment on BP_SplineBlocker_C_GetMeshLength");
static_assert(sizeof(BP_SplineBlocker_C_GetMeshLength) == 0x000060, "Wrong size on BP_SplineBlocker_C_GetMeshLength");
static_assert(offsetof(BP_SplineBlocker_C_GetMeshLength, MeshLength) == 0x000000, "Member 'BP_SplineBlocker_C_GetMeshLength::MeshLength' has a wrong offset!");
static_assert(offsetof(BP_SplineBlocker_C_GetMeshLength, Temp_byte_Variable) == 0x000008, "Member 'BP_SplineBlocker_C_GetMeshLength::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_SplineBlocker_C_GetMeshLength, CallFunc_IsValid_ReturnValue) == 0x000009, "Member 'BP_SplineBlocker_C_GetMeshLength::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineBlocker_C_GetMeshLength, CallFunc_GetBoundingBox_ReturnValue) == 0x00000C, "Member 'BP_SplineBlocker_C_GetMeshLength::CallFunc_GetBoundingBox_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineBlocker_C_GetMeshLength, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000028, "Member 'BP_SplineBlocker_C_GetMeshLength::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineBlocker_C_GetMeshLength, CallFunc_BreakVector_X) == 0x000038, "Member 'BP_SplineBlocker_C_GetMeshLength::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_SplineBlocker_C_GetMeshLength, CallFunc_BreakVector_Y) == 0x000040, "Member 'BP_SplineBlocker_C_GetMeshLength::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_SplineBlocker_C_GetMeshLength, CallFunc_BreakVector_Z) == 0x000048, "Member 'BP_SplineBlocker_C_GetMeshLength::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_SplineBlocker_C_GetMeshLength, K2Node_Select_Default) == 0x000050, "Member 'BP_SplineBlocker_C_GetMeshLength::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_SplineBlocker_C_GetMeshLength, CallFunc_Abs_ReturnValue) == 0x000058, "Member 'BP_SplineBlocker_C_GetMeshLength::CallFunc_Abs_ReturnValue' has a wrong offset!");

// Function BP_SplineBlocker.BP_SplineBlocker_C.GetSplitSize
// 0x0018 (0x0018 - 0x0000)
struct BP_SplineBlocker_C_GetSplitSize final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(ConstParm, Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetMeshLength_MeshLength;                 // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_FunctionResult_ReturnValue_ImplicitCast;    // 0x0010(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SplineBlocker_C_GetSplitSize) == 0x000008, "Wrong alignment on BP_SplineBlocker_C_GetSplitSize");
static_assert(sizeof(BP_SplineBlocker_C_GetSplitSize) == 0x000018, "Wrong size on BP_SplineBlocker_C_GetSplitSize");
static_assert(offsetof(BP_SplineBlocker_C_GetSplitSize, ReturnValue) == 0x000000, "Member 'BP_SplineBlocker_C_GetSplitSize::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineBlocker_C_GetSplitSize, CallFunc_GetMeshLength_MeshLength) == 0x000008, "Member 'BP_SplineBlocker_C_GetSplitSize::CallFunc_GetMeshLength_MeshLength' has a wrong offset!");
static_assert(offsetof(BP_SplineBlocker_C_GetSplitSize, K2Node_FunctionResult_ReturnValue_ImplicitCast) == 0x000010, "Member 'BP_SplineBlocker_C_GetSplitSize::K2Node_FunctionResult_ReturnValue_ImplicitCast' has a wrong offset!");

}

