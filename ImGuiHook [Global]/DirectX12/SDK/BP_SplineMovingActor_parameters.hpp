#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SplineMovingActor

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_SplineMovingActor.BP_SplineMovingActor_C.ExecuteUbergraph_BP_SplineMovingActor
// 0x0008 (0x0008 - 0x0000)
struct BP_SplineMovingActor_C_ExecuteUbergraph_BP_SplineMovingActor final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SplineMovingActor_C_ExecuteUbergraph_BP_SplineMovingActor) == 0x000004, "Wrong alignment on BP_SplineMovingActor_C_ExecuteUbergraph_BP_SplineMovingActor");
static_assert(sizeof(BP_SplineMovingActor_C_ExecuteUbergraph_BP_SplineMovingActor) == 0x000008, "Wrong size on BP_SplineMovingActor_C_ExecuteUbergraph_BP_SplineMovingActor");
static_assert(offsetof(BP_SplineMovingActor_C_ExecuteUbergraph_BP_SplineMovingActor, EntryPoint) == 0x000000, "Member 'BP_SplineMovingActor_C_ExecuteUbergraph_BP_SplineMovingActor::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_SplineMovingActor_C_ExecuteUbergraph_BP_SplineMovingActor, K2Node_Event_DeltaSeconds) == 0x000004, "Member 'BP_SplineMovingActor_C_ExecuteUbergraph_BP_SplineMovingActor::K2Node_Event_DeltaSeconds' has a wrong offset!");

// Function BP_SplineMovingActor.BP_SplineMovingActor_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_SplineMovingActor_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SplineMovingActor_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_SplineMovingActor_C_ReceiveTick");
static_assert(sizeof(BP_SplineMovingActor_C_ReceiveTick) == 0x000004, "Wrong size on BP_SplineMovingActor_C_ReceiveTick");
static_assert(offsetof(BP_SplineMovingActor_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_SplineMovingActor_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_SplineMovingActor.BP_SplineMovingActor_C.UserConstructionScript
// 0x02F0 (0x02F0 - 0x0000)
struct BP_SplineMovingActor_C_UserConstructionScript final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetNumberOfSplinePoints_ReturnValue;      // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAtSplinePoint_ReturnValue;     // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_DegCos_ReturnValue;                       // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_DegSin_ReturnValue;                       // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0070(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7D[0x3];                                       // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x0080(0x009C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FVector                                CallFunc_GetLocationAtSplinePoint_ReturnValue_1;   // 0x011C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNumberOfSplinePoints_ReturnValue_1;    // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12C[0x4];                                      // 0x012C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X_1;                          // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14C[0x4];                                      // 0x014C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocationAtSplinePoint_ReturnValue_2;   // 0x0158(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0164(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_2;                          // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_2;                          // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_2;                          // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult_1;  // 0x0188(0x009C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         Pad_224[0x4];                                      // 0x0224(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_2;           // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x0230(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult_2;  // 0x023C(0x009C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	double                                        CallFunc_Multiply_DoubleDouble_B_ImplicitCast;     // 0x02D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_A_ImplicitCast;     // 0x02E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x02E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_SplineMovingActor_C_UserConstructionScript) == 0x000008, "Wrong alignment on BP_SplineMovingActor_C_UserConstructionScript");
static_assert(sizeof(BP_SplineMovingActor_C_UserConstructionScript) == 0x0002F0, "Wrong size on BP_SplineMovingActor_C_UserConstructionScript");
static_assert(offsetof(BP_SplineMovingActor_C_UserConstructionScript, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'BP_SplineMovingActor_C_UserConstructionScript::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMovingActor_C_UserConstructionScript, CallFunc_IsValid_ReturnValue_1) == 0x000001, "Member 'BP_SplineMovingActor_C_UserConstructionScript::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMovingActor_C_UserConstructionScript, CallFunc_GetNumberOfSplinePoints_ReturnValue) == 0x000004, "Member 'BP_SplineMovingActor_C_UserConstructionScript::CallFunc_GetNumberOfSplinePoints_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMovingActor_C_UserConstructionScript, CallFunc_Subtract_IntInt_ReturnValue) == 0x000008, "Member 'BP_SplineMovingActor_C_UserConstructionScript::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMovingActor_C_UserConstructionScript, CallFunc_GetLocationAtSplinePoint_ReturnValue) == 0x00000C, "Member 'BP_SplineMovingActor_C_UserConstructionScript::CallFunc_GetLocationAtSplinePoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMovingActor_C_UserConstructionScript, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000018, "Member 'BP_SplineMovingActor_C_UserConstructionScript::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMovingActor_C_UserConstructionScript, CallFunc_BreakVector_X) == 0x000020, "Member 'BP_SplineMovingActor_C_UserConstructionScript::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_SplineMovingActor_C_UserConstructionScript, CallFunc_BreakVector_Y) == 0x000028, "Member 'BP_SplineMovingActor_C_UserConstructionScript::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_SplineMovingActor_C_UserConstructionScript, CallFunc_BreakVector_Z) == 0x000030, "Member 'BP_SplineMovingActor_C_UserConstructionScript::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_SplineMovingActor_C_UserConstructionScript, CallFunc_DegCos_ReturnValue) == 0x000038, "Member 'BP_SplineMovingActor_C_UserConstructionScript::CallFunc_DegCos_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMovingActor_C_UserConstructionScript, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000040, "Member 'BP_SplineMovingActor_C_UserConstructionScript::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMovingActor_C_UserConstructionScript, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000048, "Member 'BP_SplineMovingActor_C_UserConstructionScript::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMovingActor_C_UserConstructionScript, CallFunc_DegSin_ReturnValue) == 0x000050, "Member 'BP_SplineMovingActor_C_UserConstructionScript::CallFunc_DegSin_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMovingActor_C_UserConstructionScript, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000058, "Member 'BP_SplineMovingActor_C_UserConstructionScript::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMovingActor_C_UserConstructionScript, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000060, "Member 'BP_SplineMovingActor_C_UserConstructionScript::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMovingActor_C_UserConstructionScript, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000068, "Member 'BP_SplineMovingActor_C_UserConstructionScript::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplineMovingActor_C_UserConstructionScript, CallFunc_MakeVector_ReturnValue) == 0x000070, "Member 'BP_SplineMovingActor_C_UserConstructionScript::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMovingActor_C_UserConstructionScript, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00007C, "Member 'BP_SplineMovingActor_C_UserConstructionScript::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_SplineMovingActor_C_UserConstructionScript, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x000080, "Member 'BP_SplineMovingActor_C_UserConstructionScript::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_SplineMovingActor_C_UserConstructionScript, CallFunc_GetLocationAtSplinePoint_ReturnValue_1) == 0x00011C, "Member 'BP_SplineMovingActor_C_UserConstructionScript::CallFunc_GetLocationAtSplinePoint_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMovingActor_C_UserConstructionScript, CallFunc_GetNumberOfSplinePoints_ReturnValue_1) == 0x000128, "Member 'BP_SplineMovingActor_C_UserConstructionScript::CallFunc_GetNumberOfSplinePoints_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMovingActor_C_UserConstructionScript, CallFunc_BreakVector_X_1) == 0x000130, "Member 'BP_SplineMovingActor_C_UserConstructionScript::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMovingActor_C_UserConstructionScript, CallFunc_BreakVector_Y_1) == 0x000138, "Member 'BP_SplineMovingActor_C_UserConstructionScript::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMovingActor_C_UserConstructionScript, CallFunc_BreakVector_Z_1) == 0x000140, "Member 'BP_SplineMovingActor_C_UserConstructionScript::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMovingActor_C_UserConstructionScript, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000148, "Member 'BP_SplineMovingActor_C_UserConstructionScript::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMovingActor_C_UserConstructionScript, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000150, "Member 'BP_SplineMovingActor_C_UserConstructionScript::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMovingActor_C_UserConstructionScript, CallFunc_GetLocationAtSplinePoint_ReturnValue_2) == 0x000158, "Member 'BP_SplineMovingActor_C_UserConstructionScript::CallFunc_GetLocationAtSplinePoint_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplineMovingActor_C_UserConstructionScript, CallFunc_MakeVector_ReturnValue_1) == 0x000164, "Member 'BP_SplineMovingActor_C_UserConstructionScript::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMovingActor_C_UserConstructionScript, CallFunc_BreakVector_X_2) == 0x000170, "Member 'BP_SplineMovingActor_C_UserConstructionScript::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(BP_SplineMovingActor_C_UserConstructionScript, CallFunc_BreakVector_Y_2) == 0x000178, "Member 'BP_SplineMovingActor_C_UserConstructionScript::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(BP_SplineMovingActor_C_UserConstructionScript, CallFunc_BreakVector_Z_2) == 0x000180, "Member 'BP_SplineMovingActor_C_UserConstructionScript::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(BP_SplineMovingActor_C_UserConstructionScript, CallFunc_K2_SetRelativeLocation_SweepHitResult_1) == 0x000188, "Member 'BP_SplineMovingActor_C_UserConstructionScript::CallFunc_K2_SetRelativeLocation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(BP_SplineMovingActor_C_UserConstructionScript, CallFunc_Add_DoubleDouble_ReturnValue_2) == 0x000228, "Member 'BP_SplineMovingActor_C_UserConstructionScript::CallFunc_Add_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplineMovingActor_C_UserConstructionScript, CallFunc_MakeVector_ReturnValue_2) == 0x000230, "Member 'BP_SplineMovingActor_C_UserConstructionScript::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_SplineMovingActor_C_UserConstructionScript, CallFunc_K2_SetRelativeLocation_SweepHitResult_2) == 0x00023C, "Member 'BP_SplineMovingActor_C_UserConstructionScript::CallFunc_K2_SetRelativeLocation_SweepHitResult_2' has a wrong offset!");
static_assert(offsetof(BP_SplineMovingActor_C_UserConstructionScript, CallFunc_Multiply_DoubleDouble_B_ImplicitCast) == 0x0002D8, "Member 'BP_SplineMovingActor_C_UserConstructionScript::CallFunc_Multiply_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_SplineMovingActor_C_UserConstructionScript, CallFunc_Subtract_DoubleDouble_A_ImplicitCast) == 0x0002E0, "Member 'BP_SplineMovingActor_C_UserConstructionScript::CallFunc_Subtract_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_SplineMovingActor_C_UserConstructionScript, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x0002E8, "Member 'BP_SplineMovingActor_C_UserConstructionScript::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");

}

