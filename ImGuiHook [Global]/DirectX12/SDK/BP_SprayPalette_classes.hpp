#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_SprayPalette

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_SprayPalette.BP_SprayPalette_C
// 0x0028 (0x0270 - 0x0248)
class ABP_SprayPalette_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0248(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBP_AKComponent_C*                      BP_AKComponent;                                    // 0x0250(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Plane;                                             // 0x0258(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Scene;                                             // 0x0260(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAkAudioEvent*                          AkAudio;                                           // 0x0268(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_SprayPalette(int32 EntryPoint);
	void ReceiveBeginPlay();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_SprayPalette_C">();
	}
	static class ABP_SprayPalette_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_SprayPalette_C>();
	}
};
static_assert(alignof(ABP_SprayPalette_C) == 0x000008, "Wrong alignment on ABP_SprayPalette_C");
static_assert(sizeof(ABP_SprayPalette_C) == 0x000270, "Wrong size on ABP_SprayPalette_C");
static_assert(offsetof(ABP_SprayPalette_C, UberGraphFrame) == 0x000248, "Member 'ABP_SprayPalette_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_SprayPalette_C, BP_AKComponent) == 0x000250, "Member 'ABP_SprayPalette_C::BP_AKComponent' has a wrong offset!");
static_assert(offsetof(ABP_SprayPalette_C, Plane) == 0x000258, "Member 'ABP_SprayPalette_C::Plane' has a wrong offset!");
static_assert(offsetof(ABP_SprayPalette_C, Scene) == 0x000260, "Member 'ABP_SprayPalette_C::Scene' has a wrong offset!");
static_assert(offsetof(ABP_SprayPalette_C, AkAudio) == 0x000268, "Member 'ABP_SprayPalette_C::AkAudio' has a wrong offset!");

}

