#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CL_SurroundArcs

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "WB_CrosshairLayerBase_Circles_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass CL_SurroundArcs.CL_SurroundArcs_C
// 0x0078 (0x08A8 - 0x0830)
class UCL_SurroundArcs_C final : public UWB_CrosshairLayerBase_Circles_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_CL_SurroundArcs_C;                  // 0x0830(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	double                                        ArcRadius;                                         // 0x0838(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ArcLength__Angle_;                                 // 0x0840(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        LineThickness;                                     // 0x0848(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NArcs;                                             // 0x0850(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_854[0x4];                                      // 0x0854(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CenterGap;                                         // 0x0858(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          StepAngleForceEqualDivision;                       // 0x0860(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_861[0x7];                                      // 0x0861(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        StepAngle;                                         // 0x0868(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          EnableRecoilResponse;                              // 0x0870(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_871[0x7];                                      // 0x0871(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        RecoilToCenterGapPercentage;                       // 0x0878(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        RecoilToArcRadiusPercentage;                       // 0x0880(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ElementAngle;                                      // 0x0888(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        LayerAngle;                                        // 0x0890(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        AutoRotationRPM__Element_;                         // 0x0898(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        AutoRotationRPM__Layer_;                           // 0x08A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_CL_SurroundArcs(int32 EntryPoint);
	void InitializeEditableVariables();
	void PreConstruct(bool IsDesignTime);
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"CL_SurroundArcs_C">();
	}
	static class UCL_SurroundArcs_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCL_SurroundArcs_C>();
	}
};
static_assert(alignof(UCL_SurroundArcs_C) == 0x000008, "Wrong alignment on UCL_SurroundArcs_C");
static_assert(sizeof(UCL_SurroundArcs_C) == 0x0008A8, "Wrong size on UCL_SurroundArcs_C");
static_assert(offsetof(UCL_SurroundArcs_C, UberGraphFrame_CL_SurroundArcs_C) == 0x000830, "Member 'UCL_SurroundArcs_C::UberGraphFrame_CL_SurroundArcs_C' has a wrong offset!");
static_assert(offsetof(UCL_SurroundArcs_C, ArcRadius) == 0x000838, "Member 'UCL_SurroundArcs_C::ArcRadius' has a wrong offset!");
static_assert(offsetof(UCL_SurroundArcs_C, ArcLength__Angle_) == 0x000840, "Member 'UCL_SurroundArcs_C::ArcLength__Angle_' has a wrong offset!");
static_assert(offsetof(UCL_SurroundArcs_C, LineThickness) == 0x000848, "Member 'UCL_SurroundArcs_C::LineThickness' has a wrong offset!");
static_assert(offsetof(UCL_SurroundArcs_C, NArcs) == 0x000850, "Member 'UCL_SurroundArcs_C::NArcs' has a wrong offset!");
static_assert(offsetof(UCL_SurroundArcs_C, CenterGap) == 0x000858, "Member 'UCL_SurroundArcs_C::CenterGap' has a wrong offset!");
static_assert(offsetof(UCL_SurroundArcs_C, StepAngleForceEqualDivision) == 0x000860, "Member 'UCL_SurroundArcs_C::StepAngleForceEqualDivision' has a wrong offset!");
static_assert(offsetof(UCL_SurroundArcs_C, StepAngle) == 0x000868, "Member 'UCL_SurroundArcs_C::StepAngle' has a wrong offset!");
static_assert(offsetof(UCL_SurroundArcs_C, EnableRecoilResponse) == 0x000870, "Member 'UCL_SurroundArcs_C::EnableRecoilResponse' has a wrong offset!");
static_assert(offsetof(UCL_SurroundArcs_C, RecoilToCenterGapPercentage) == 0x000878, "Member 'UCL_SurroundArcs_C::RecoilToCenterGapPercentage' has a wrong offset!");
static_assert(offsetof(UCL_SurroundArcs_C, RecoilToArcRadiusPercentage) == 0x000880, "Member 'UCL_SurroundArcs_C::RecoilToArcRadiusPercentage' has a wrong offset!");
static_assert(offsetof(UCL_SurroundArcs_C, ElementAngle) == 0x000888, "Member 'UCL_SurroundArcs_C::ElementAngle' has a wrong offset!");
static_assert(offsetof(UCL_SurroundArcs_C, LayerAngle) == 0x000890, "Member 'UCL_SurroundArcs_C::LayerAngle' has a wrong offset!");
static_assert(offsetof(UCL_SurroundArcs_C, AutoRotationRPM__Element_) == 0x000898, "Member 'UCL_SurroundArcs_C::AutoRotationRPM__Element_' has a wrong offset!");
static_assert(offsetof(UCL_SurroundArcs_C, AutoRotationRPM__Layer_) == 0x0008A0, "Member 'UCL_SurroundArcs_C::AutoRotationRPM__Layer_' has a wrong offset!");

}

