#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CL_SurroundArcs

#include "Basic.hpp"

#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function CL_SurroundArcs.CL_SurroundArcs_C.ExecuteUbergraph_CL_SurroundArcs
// 0x0058 (0x0058 - 0x0000)
struct CL_SurroundArcs_C_ExecuteUbergraph_CL_SurroundArcs final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0018(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CL_SurroundArcs_C_ExecuteUbergraph_CL_SurroundArcs) == 0x000008, "Wrong alignment on CL_SurroundArcs_C_ExecuteUbergraph_CL_SurroundArcs");
static_assert(sizeof(CL_SurroundArcs_C_ExecuteUbergraph_CL_SurroundArcs) == 0x000058, "Wrong size on CL_SurroundArcs_C_ExecuteUbergraph_CL_SurroundArcs");
static_assert(offsetof(CL_SurroundArcs_C_ExecuteUbergraph_CL_SurroundArcs, EntryPoint) == 0x000000, "Member 'CL_SurroundArcs_C_ExecuteUbergraph_CL_SurroundArcs::EntryPoint' has a wrong offset!");
static_assert(offsetof(CL_SurroundArcs_C_ExecuteUbergraph_CL_SurroundArcs, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000008, "Member 'CL_SurroundArcs_C_ExecuteUbergraph_CL_SurroundArcs::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(CL_SurroundArcs_C_ExecuteUbergraph_CL_SurroundArcs, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000010, "Member 'CL_SurroundArcs_C_ExecuteUbergraph_CL_SurroundArcs::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(CL_SurroundArcs_C_ExecuteUbergraph_CL_SurroundArcs, K2Node_Event_MyGeometry) == 0x000018, "Member 'CL_SurroundArcs_C_ExecuteUbergraph_CL_SurroundArcs::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(CL_SurroundArcs_C_ExecuteUbergraph_CL_SurroundArcs, K2Node_Event_InDeltaTime) == 0x000050, "Member 'CL_SurroundArcs_C_ExecuteUbergraph_CL_SurroundArcs::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(CL_SurroundArcs_C_ExecuteUbergraph_CL_SurroundArcs, K2Node_Event_IsDesignTime) == 0x000054, "Member 'CL_SurroundArcs_C_ExecuteUbergraph_CL_SurroundArcs::K2Node_Event_IsDesignTime' has a wrong offset!");

// Function CL_SurroundArcs.CL_SurroundArcs_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct CL_SurroundArcs_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CL_SurroundArcs_C_PreConstruct) == 0x000001, "Wrong alignment on CL_SurroundArcs_C_PreConstruct");
static_assert(sizeof(CL_SurroundArcs_C_PreConstruct) == 0x000001, "Wrong size on CL_SurroundArcs_C_PreConstruct");
static_assert(offsetof(CL_SurroundArcs_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'CL_SurroundArcs_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function CL_SurroundArcs.CL_SurroundArcs_C.Tick
// 0x003C (0x003C - 0x0000)
struct CL_SurroundArcs_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CL_SurroundArcs_C_Tick) == 0x000004, "Wrong alignment on CL_SurroundArcs_C_Tick");
static_assert(sizeof(CL_SurroundArcs_C_Tick) == 0x00003C, "Wrong size on CL_SurroundArcs_C_Tick");
static_assert(offsetof(CL_SurroundArcs_C_Tick, MyGeometry) == 0x000000, "Member 'CL_SurroundArcs_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(CL_SurroundArcs_C_Tick, InDeltaTime) == 0x000038, "Member 'CL_SurroundArcs_C_Tick::InDeltaTime' has a wrong offset!");

}

