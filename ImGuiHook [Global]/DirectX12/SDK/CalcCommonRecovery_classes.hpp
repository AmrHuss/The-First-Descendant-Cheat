#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CalcCommonRecovery

#include "Basic.hpp"

#include "M1_structs.hpp"
#include "CalcRecoveryBase_classes.hpp"
#include "M1Data_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass CalcCommonRecovery.CalcCommonRecovery_C
// 0x0010 (0x0110 - 0x0100)
class UCalcCommonRecovery_C final : public UCalcRecoveryBase_C
{
public:
	uint8                                         Pad_FA[0x6];                                       // 0x00FA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        RecoveryAmount;                                    // 0x0100(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EM1RecoveryType                               RecoveryType;                                      // 0x0108(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void DoCalculation(struct FM1AbilityOpCalcParam& Param, struct FM1CalcDamageInfo& DamageInfo) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"CalcCommonRecovery_C">();
	}
	static class UCalcCommonRecovery_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCalcCommonRecovery_C>();
	}
};
static_assert(alignof(UCalcCommonRecovery_C) == 0x000008, "Wrong alignment on UCalcCommonRecovery_C");
static_assert(sizeof(UCalcCommonRecovery_C) == 0x000110, "Wrong size on UCalcCommonRecovery_C");
static_assert(offsetof(UCalcCommonRecovery_C, RecoveryAmount) == 0x000100, "Member 'UCalcCommonRecovery_C::RecoveryAmount' has a wrong offset!");
static_assert(offsetof(UCalcCommonRecovery_C, RecoveryType) == 0x000108, "Member 'UCalcCommonRecovery_C::RecoveryType' has a wrong offset!");

}

