#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CalcShieldBaseDamage

#include "Basic.hpp"

#include "CalcDamageBase_classes.hpp"
#include "M1Data_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass CalcShieldBaseDamage.CalcShieldBaseDamage_C
// 0x0020 (0x0150 - 0x0130)
class UCalcShieldBaseDamage_C final : public UCalcDamageBase_C
{
public:
	double                                        NormalDamageRatio;                                 // 0x0130(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ChampionDamageRatio;                               // 0x0138(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        NamedDamageRatio;                                  // 0x0140(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        BossDamageRatio;                                   // 0x0148(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void DoCalculation(struct FM1AbilityOpCalcParam& Param, struct FM1CalcDamageInfo& DamageInfo) const;
	void GetDamageRatio(struct FM1AbilityOpCalcParam& Param, double* Ratio) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"CalcShieldBaseDamage_C">();
	}
	static class UCalcShieldBaseDamage_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCalcShieldBaseDamage_C>();
	}
};
static_assert(alignof(UCalcShieldBaseDamage_C) == 0x000008, "Wrong alignment on UCalcShieldBaseDamage_C");
static_assert(sizeof(UCalcShieldBaseDamage_C) == 0x000150, "Wrong size on UCalcShieldBaseDamage_C");
static_assert(offsetof(UCalcShieldBaseDamage_C, NormalDamageRatio) == 0x000130, "Member 'UCalcShieldBaseDamage_C::NormalDamageRatio' has a wrong offset!");
static_assert(offsetof(UCalcShieldBaseDamage_C, ChampionDamageRatio) == 0x000138, "Member 'UCalcShieldBaseDamage_C::ChampionDamageRatio' has a wrong offset!");
static_assert(offsetof(UCalcShieldBaseDamage_C, NamedDamageRatio) == 0x000140, "Member 'UCalcShieldBaseDamage_C::NamedDamageRatio' has a wrong offset!");
static_assert(offsetof(UCalcShieldBaseDamage_C, BossDamageRatio) == 0x000148, "Member 'UCalcShieldBaseDamage_C::BossDamageRatio' has a wrong offset!");

}

