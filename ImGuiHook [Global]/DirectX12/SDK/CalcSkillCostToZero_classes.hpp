#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CalcSkillCostToZero

#include "Basic.hpp"

#include "M1Data_structs.hpp"
#include "CalcEtcBase_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass CalcSkillCostToZero.CalcSkillCostToZero_C
// 0x0010 (0x0108 - 0x00F8)
class UCalcSkillCostToZero_C final : public UCalcEtcBase_C
{
public:
	EM1StatType                                   CurrentStat;                                       // 0x00F8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EM1StatType                                   MaxStat;                                           // 0x00F9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FA[0x6];                                       // 0x00FA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        MinRate;                                           // 0x0100(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void DoCalculation(struct FM1AbilityOpCalcParam& Param, struct FM1CalcDamageInfo& DamageInfo, struct FM1AbilityOpExecCalcOutput& Output) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"CalcSkillCostToZero_C">();
	}
	static class UCalcSkillCostToZero_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCalcSkillCostToZero_C>();
	}
};
static_assert(alignof(UCalcSkillCostToZero_C) == 0x000008, "Wrong alignment on UCalcSkillCostToZero_C");
static_assert(sizeof(UCalcSkillCostToZero_C) == 0x000108, "Wrong size on UCalcSkillCostToZero_C");
static_assert(offsetof(UCalcSkillCostToZero_C, CurrentStat) == 0x0000F8, "Member 'UCalcSkillCostToZero_C::CurrentStat' has a wrong offset!");
static_assert(offsetof(UCalcSkillCostToZero_C, MaxStat) == 0x0000F9, "Member 'UCalcSkillCostToZero_C::MaxStat' has a wrong offset!");
static_assert(offsetof(UCalcSkillCostToZero_C, MinRate) == 0x000100, "Member 'UCalcSkillCostToZero_C::MinRate' has a wrong offset!");

}

