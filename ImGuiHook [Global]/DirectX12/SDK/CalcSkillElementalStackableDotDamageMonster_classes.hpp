#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CalcSkillElementalStackableDotDamageMonster

#include "Basic.hpp"

#include "CalcSkillDamageMonster_New_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass CalcSkillElementalStackableDotDamageMonster.CalcSkillElementalStackableDotDamageMonster_C
// 0x0018 (0x0150 - 0x0138)
class UCalcSkillElementalStackableDotDamageMonster_C final : public UCalcSkillDamageMonster_New_C
{
public:
	double                                        StackRatio;                                        // 0x0138(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         StackCount;                                        // 0x0140(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_144[0x4];                                      // 0x0144(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Ratio;                                             // 0x0148(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void DoCalculation(struct FM1AbilityOpCalcParam& Param, struct FM1CalcDamageInfo& DamageInfo) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"CalcSkillElementalStackableDotDamageMonster_C">();
	}
	static class UCalcSkillElementalStackableDotDamageMonster_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCalcSkillElementalStackableDotDamageMonster_C>();
	}
};
static_assert(alignof(UCalcSkillElementalStackableDotDamageMonster_C) == 0x000008, "Wrong alignment on UCalcSkillElementalStackableDotDamageMonster_C");
static_assert(sizeof(UCalcSkillElementalStackableDotDamageMonster_C) == 0x000150, "Wrong size on UCalcSkillElementalStackableDotDamageMonster_C");
static_assert(offsetof(UCalcSkillElementalStackableDotDamageMonster_C, StackRatio) == 0x000138, "Member 'UCalcSkillElementalStackableDotDamageMonster_C::StackRatio' has a wrong offset!");
static_assert(offsetof(UCalcSkillElementalStackableDotDamageMonster_C, StackCount) == 0x000140, "Member 'UCalcSkillElementalStackableDotDamageMonster_C::StackCount' has a wrong offset!");
static_assert(offsetof(UCalcSkillElementalStackableDotDamageMonster_C, Ratio) == 0x000148, "Member 'UCalcSkillElementalStackableDotDamageMonster_C::Ratio' has a wrong offset!");

}

