#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CalcValueDamageShieldCannon

#include "Basic.hpp"

#include "CalcDamageBase_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass CalcValueDamageShieldCannon.CalcValueDamageShieldCannon_C
// 0x0020 (0x0150 - 0x0130)
class UCalcValueDamageShieldCannon_C final : public UCalcDamageBase_C
{
public:
	double                                        DamageRatio;                                       // 0x0130(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        DefaultShield;                                     // 0x0138(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        DamageRatio2;                                      // 0x0140(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Damage;                                            // 0x0148(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void DoCalculation(struct FM1AbilityOpCalcParam& Param, struct FM1CalcDamageInfo& DamageInfo) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"CalcValueDamageShieldCannon_C">();
	}
	static class UCalcValueDamageShieldCannon_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCalcValueDamageShieldCannon_C>();
	}
};
static_assert(alignof(UCalcValueDamageShieldCannon_C) == 0x000008, "Wrong alignment on UCalcValueDamageShieldCannon_C");
static_assert(sizeof(UCalcValueDamageShieldCannon_C) == 0x000150, "Wrong size on UCalcValueDamageShieldCannon_C");
static_assert(offsetof(UCalcValueDamageShieldCannon_C, DamageRatio) == 0x000130, "Member 'UCalcValueDamageShieldCannon_C::DamageRatio' has a wrong offset!");
static_assert(offsetof(UCalcValueDamageShieldCannon_C, DefaultShield) == 0x000138, "Member 'UCalcValueDamageShieldCannon_C::DefaultShield' has a wrong offset!");
static_assert(offsetof(UCalcValueDamageShieldCannon_C, DamageRatio2) == 0x000140, "Member 'UCalcValueDamageShieldCannon_C::DamageRatio2' has a wrong offset!");
static_assert(offsetof(UCalcValueDamageShieldCannon_C, Damage) == 0x000148, "Member 'UCalcValueDamageShieldCannon_C::Damage' has a wrong offset!");

}

