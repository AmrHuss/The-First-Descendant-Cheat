#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CalcValueDamage

#include "Basic.hpp"

#include "CalcDamageBase_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass CalcValueDamage.CalcValueDamage_C
// 0x0010 (0x0140 - 0x0130)
class UCalcValueDamage_C final : public UCalcDamageBase_C
{
public:
	int32                                         Damage;                                            // 0x0130(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_134[0x4];                                      // 0x0134(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        DamageRatio;                                       // 0x0138(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void DoCalculation(struct FM1AbilityOpCalcParam& Param, struct FM1CalcDamageInfo& DamageInfo) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"CalcValueDamage_C">();
	}
	static class UCalcValueDamage_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCalcValueDamage_C>();
	}
};
static_assert(alignof(UCalcValueDamage_C) == 0x000008, "Wrong alignment on UCalcValueDamage_C");
static_assert(sizeof(UCalcValueDamage_C) == 0x000140, "Wrong size on UCalcValueDamage_C");
static_assert(offsetof(UCalcValueDamage_C, Damage) == 0x000130, "Member 'UCalcValueDamage_C::Damage' has a wrong offset!");
static_assert(offsetof(UCalcValueDamage_C, DamageRatio) == 0x000138, "Member 'UCalcValueDamage_C::DamageRatio' has a wrong offset!");

}

