#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CameraModifier_DeboneArrived

#include "Basic.hpp"

#include "CameraModifier_DeboneArrived_classes.hpp"
#include "CameraModifier_DeboneArrived_parameters.hpp"


namespace SDK
{

// Function CameraModifier_DeboneArrived.CameraModifier_DeboneArrived_C.BlueprintModifyCamera
// (BlueprintCosmetic, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          ViewLocation                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         ViewRotation                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   FOV                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          NewViewLocation                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         NewViewRotation                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   NewFOV                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UCameraModifier_DeboneArrived_C::BlueprintModifyCamera(float DeltaTime, const struct FVector& ViewLocation, const struct FRotator& ViewRotation, float FOV, struct FVector* NewViewLocation, struct FRotator* NewViewRotation, float* NewFOV)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CameraModifier_DeboneArrived_C", "BlueprintModifyCamera");

	Params::CameraModifier_DeboneArrived_C_BlueprintModifyCamera Parms{};

	Parms.DeltaTime = DeltaTime;
	Parms.ViewLocation = std::move(ViewLocation);
	Parms.ViewRotation = std::move(ViewRotation);
	Parms.FOV = FOV;

	UObject::ProcessEvent(Func, &Parms);

	if (NewViewLocation != nullptr)
		*NewViewLocation = std::move(Parms.NewViewLocation);

	if (NewViewRotation != nullptr)
		*NewViewRotation = std::move(Parms.NewViewRotation);

	if (NewFOV != nullptr)
		*NewFOV = Parms.NewFOV;
}


// Function CameraModifier_DeboneArrived.CameraModifier_DeboneArrived_C.FadeCameraLocation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FVector                          OutLocation                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UCameraModifier_DeboneArrived_C::FadeCameraLocation(struct FVector* OutLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CameraModifier_DeboneArrived_C", "FadeCameraLocation");

	Params::CameraModifier_DeboneArrived_C_FadeCameraLocation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutLocation != nullptr)
		*OutLocation = std::move(Parms.OutLocation);
}


// Function CameraModifier_DeboneArrived.CameraModifier_DeboneArrived_C.FadeCameraRotation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FRotator                         OutRotation                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UCameraModifier_DeboneArrived_C::FadeCameraRotation(struct FRotator* OutRotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CameraModifier_DeboneArrived_C", "FadeCameraRotation");

	Params::CameraModifier_DeboneArrived_C_FadeCameraRotation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutRotation != nullptr)
		*OutRotation = std::move(Parms.OutRotation);
}


// Function CameraModifier_DeboneArrived.CameraModifier_DeboneArrived_C.FullyCameraLocation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FRotator                         InViewRotation                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FVector                          OutLocation                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UCameraModifier_DeboneArrived_C::FullyCameraLocation(const struct FRotator& InViewRotation, struct FVector* OutLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CameraModifier_DeboneArrived_C", "FullyCameraLocation");

	Params::CameraModifier_DeboneArrived_C_FullyCameraLocation Parms{};

	Parms.InViewRotation = std::move(InViewRotation);

	UObject::ProcessEvent(Func, &Parms);

	if (OutLocation != nullptr)
		*OutLocation = std::move(Parms.OutLocation);
}


// Function CameraModifier_DeboneArrived.CameraModifier_DeboneArrived_C.FullyCameraRotation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FRotator                         OutRotation                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UCameraModifier_DeboneArrived_C::FullyCameraRotation(struct FRotator* OutRotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CameraModifier_DeboneArrived_C", "FullyCameraRotation");

	Params::CameraModifier_DeboneArrived_C_FullyCameraRotation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutRotation != nullptr)
		*OutRotation = std::move(Parms.OutRotation);
}


// Function CameraModifier_DeboneArrived.CameraModifier_DeboneArrived_C.FullyCameraRotationClamp
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FRotator                         Begin                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FRotator                         Goal                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// double                                  DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         OutBegin                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FRotator                         OutGoal                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UCameraModifier_DeboneArrived_C::FullyCameraRotationClamp(const struct FRotator& Begin, const struct FRotator& Goal, double DeltaSeconds, struct FRotator* OutBegin, struct FRotator* OutGoal)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CameraModifier_DeboneArrived_C", "FullyCameraRotationClamp");

	Params::CameraModifier_DeboneArrived_C_FullyCameraRotationClamp Parms{};

	Parms.Begin = std::move(Begin);
	Parms.Goal = std::move(Goal);
	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);

	if (OutBegin != nullptr)
		*OutBegin = std::move(Parms.OutBegin);

	if (OutGoal != nullptr)
		*OutGoal = std::move(Parms.OutGoal);
}


// Function CameraModifier_DeboneArrived.CameraModifier_DeboneArrived_C.GetCurvedAlpha
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// double                                  Float                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UCameraModifier_DeboneArrived_C::GetCurvedAlpha(double* Float)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CameraModifier_DeboneArrived_C", "GetCurvedAlpha");

	Params::CameraModifier_DeboneArrived_C_GetCurvedAlpha Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Float != nullptr)
		*Float = Parms.Float;
}


// Function CameraModifier_DeboneArrived.CameraModifier_DeboneArrived_C.InitFadeIn
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          InLocation                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         InRotation                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UCameraModifier_DeboneArrived_C::InitFadeIn(const struct FVector& InLocation, const struct FRotator& InRotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CameraModifier_DeboneArrived_C", "InitFadeIn");

	Params::CameraModifier_DeboneArrived_C_InitFadeIn Parms{};

	Parms.InLocation = std::move(InLocation);
	Parms.InRotation = std::move(InRotation);

	UObject::ProcessEvent(Func, &Parms);
}


// Function CameraModifier_DeboneArrived.CameraModifier_DeboneArrived_C.InitFadeOut
// (Public, BlueprintCallable, BlueprintEvent)

void UCameraModifier_DeboneArrived_C::InitFadeOut()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CameraModifier_DeboneArrived_C", "InitFadeOut");

	UObject::ProcessEvent(Func, nullptr);
}


// Function CameraModifier_DeboneArrived.CameraModifier_DeboneArrived_C.InitFully
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          OutLocation                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         OutRotation                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UCameraModifier_DeboneArrived_C::InitFully(struct FVector* OutLocation, struct FRotator* OutRotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CameraModifier_DeboneArrived_C", "InitFully");

	Params::CameraModifier_DeboneArrived_C_InitFully Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (OutLocation != nullptr)
		*OutLocation = std::move(Parms.OutLocation);

	if (OutRotation != nullptr)
		*OutRotation = std::move(Parms.OutRotation);
}


// Function CameraModifier_DeboneArrived.CameraModifier_DeboneArrived_C.ProcessFadeIn
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          InViewLocation                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         InViewRotation                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FVector                          OutViewLocation                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         OutViewRotation                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UCameraModifier_DeboneArrived_C::ProcessFadeIn(const struct FVector& InViewLocation, const struct FRotator& InViewRotation, struct FVector* OutViewLocation, struct FRotator* OutViewRotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CameraModifier_DeboneArrived_C", "ProcessFadeIn");

	Params::CameraModifier_DeboneArrived_C_ProcessFadeIn Parms{};

	Parms.InViewLocation = std::move(InViewLocation);
	Parms.InViewRotation = std::move(InViewRotation);

	UObject::ProcessEvent(Func, &Parms);

	if (OutViewLocation != nullptr)
		*OutViewLocation = std::move(Parms.OutViewLocation);

	if (OutViewRotation != nullptr)
		*OutViewRotation = std::move(Parms.OutViewRotation);
}


// Function CameraModifier_DeboneArrived.CameraModifier_DeboneArrived_C.ProcessFadeOut
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          InViewLocation                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         InViewRotation                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FVector                          OutViewLocation                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         OutViewRotation                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UCameraModifier_DeboneArrived_C::ProcessFadeOut(const struct FVector& InViewLocation, const struct FRotator& InViewRotation, struct FVector* OutViewLocation, struct FRotator* OutViewRotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CameraModifier_DeboneArrived_C", "ProcessFadeOut");

	Params::CameraModifier_DeboneArrived_C_ProcessFadeOut Parms{};

	Parms.InViewLocation = std::move(InViewLocation);
	Parms.InViewRotation = std::move(InViewRotation);

	UObject::ProcessEvent(Func, &Parms);

	if (OutViewLocation != nullptr)
		*OutViewLocation = std::move(Parms.OutViewLocation);

	if (OutViewRotation != nullptr)
		*OutViewRotation = std::move(Parms.OutViewRotation);
}


// Function CameraModifier_DeboneArrived.CameraModifier_DeboneArrived_C.ProcessFully
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          InViewLocation                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         InViewRotation                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// double                                  DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          OutViewLocation                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         OutViewRotation                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UCameraModifier_DeboneArrived_C::ProcessFully(const struct FVector& InViewLocation, const struct FRotator& InViewRotation, double DeltaSeconds, struct FVector* OutViewLocation, struct FRotator* OutViewRotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CameraModifier_DeboneArrived_C", "ProcessFully");

	Params::CameraModifier_DeboneArrived_C_ProcessFully Parms{};

	Parms.InViewLocation = std::move(InViewLocation);
	Parms.InViewRotation = std::move(InViewRotation);
	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);

	if (OutViewLocation != nullptr)
		*OutViewLocation = std::move(Parms.OutViewLocation);

	if (OutViewRotation != nullptr)
		*OutViewRotation = std::move(Parms.OutViewRotation);
}


// Function CameraModifier_DeboneArrived.CameraModifier_DeboneArrived_C.ProcessZero
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          InViewLocation                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         InViewRotation                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FVector                          OutViewLocation                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         OutViewRotation                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UCameraModifier_DeboneArrived_C::ProcessZero(const struct FVector& InViewLocation, const struct FRotator& InViewRotation, struct FVector* OutViewLocation, struct FRotator* OutViewRotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CameraModifier_DeboneArrived_C", "ProcessZero");

	Params::CameraModifier_DeboneArrived_C_ProcessZero Parms{};

	Parms.InViewLocation = std::move(InViewLocation);
	Parms.InViewRotation = std::move(InViewRotation);

	UObject::ProcessEvent(Func, &Parms);

	if (OutViewLocation != nullptr)
		*OutViewLocation = std::move(Parms.OutViewLocation);

	if (OutViewRotation != nullptr)
		*OutViewRotation = std::move(Parms.OutViewRotation);
}


// Function CameraModifier_DeboneArrived.CameraModifier_DeboneArrived_C.StopCameraClamp
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bStop                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UCameraModifier_DeboneArrived_C::StopCameraClamp(bool bStop)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CameraModifier_DeboneArrived_C", "StopCameraClamp");

	Params::CameraModifier_DeboneArrived_C_StopCameraClamp Parms{};

	Parms.bStop = bStop;

	UObject::ProcessEvent(Func, &Parms);
}


// Function CameraModifier_DeboneArrived.CameraModifier_DeboneArrived_C.UpdateAfterViews
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          InLocation                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         InRotation                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FVector                          OutLocation                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         OutRotation                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UCameraModifier_DeboneArrived_C::UpdateAfterViews(const struct FVector& InLocation, const struct FRotator& InRotation, struct FVector* OutLocation, struct FRotator* OutRotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("CameraModifier_DeboneArrived_C", "UpdateAfterViews");

	Params::CameraModifier_DeboneArrived_C_UpdateAfterViews Parms{};

	Parms.InLocation = std::move(InLocation);
	Parms.InRotation = std::move(InRotation);

	UObject::ProcessEvent(Func, &Parms);

	if (OutLocation != nullptr)
		*OutLocation = std::move(Parms.OutLocation);

	if (OutRotation != nullptr)
		*OutRotation = std::move(Parms.OutRotation);
}

}

