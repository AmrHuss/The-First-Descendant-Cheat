#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CameraModifier_DeboneStart

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "M1_classes.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass CameraModifier_DeboneStart.CameraModifier_DeboneStart_C
// 0x0148 (0x0190 - 0x0048)
class UCameraModifier_DeboneStart_C final : public UM1CameraModifierForPlayer
{
public:
	double                                        CameraGoalDistance;                                // 0x0048(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CameraGoalPitch;                                   // 0x0050(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bInitialized;                                      // 0x0058(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bInterrupted;                                      // 0x0059(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A[0x2];                                       // 0x005A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                PrevViewTargetLocation;                            // 0x005C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               PrevViewTargetRotation;                            // 0x0068(0x000C)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        PrevAlpha;                                         // 0x0078(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRuntimeFloatCurve                     LocationCurve;                                     // 0x0080(0x0088)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FRuntimeFloatCurve                     RotationCurve;                                     // 0x0108(0x0088)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void BlueprintModifyCamera(float DeltaTime, const struct FVector& ViewLocation, const struct FRotator& ViewRotation, float FOV, struct FVector* NewViewLocation, struct FRotator* NewViewRotation, float* NewFOV);
	void FadeCameraLocation(const struct FVector& InViewLocation, struct FVector* OutLocation);
	void FadeCameraRotation(const struct FRotator& InViewRotation, struct FRotator* OutRotation);
	void GetLocationAlpha(double* OutAlpha);
	void GetRotationAlpha(double* OutAlpha);
	void Initialize(const struct FVector& InLocation, const struct FRotator& InRotation);
	void SetInterrupted();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"CameraModifier_DeboneStart_C">();
	}
	static class UCameraModifier_DeboneStart_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCameraModifier_DeboneStart_C>();
	}
};
static_assert(alignof(UCameraModifier_DeboneStart_C) == 0x000008, "Wrong alignment on UCameraModifier_DeboneStart_C");
static_assert(sizeof(UCameraModifier_DeboneStart_C) == 0x000190, "Wrong size on UCameraModifier_DeboneStart_C");
static_assert(offsetof(UCameraModifier_DeboneStart_C, CameraGoalDistance) == 0x000048, "Member 'UCameraModifier_DeboneStart_C::CameraGoalDistance' has a wrong offset!");
static_assert(offsetof(UCameraModifier_DeboneStart_C, CameraGoalPitch) == 0x000050, "Member 'UCameraModifier_DeboneStart_C::CameraGoalPitch' has a wrong offset!");
static_assert(offsetof(UCameraModifier_DeboneStart_C, bInitialized) == 0x000058, "Member 'UCameraModifier_DeboneStart_C::bInitialized' has a wrong offset!");
static_assert(offsetof(UCameraModifier_DeboneStart_C, bInterrupted) == 0x000059, "Member 'UCameraModifier_DeboneStart_C::bInterrupted' has a wrong offset!");
static_assert(offsetof(UCameraModifier_DeboneStart_C, PrevViewTargetLocation) == 0x00005C, "Member 'UCameraModifier_DeboneStart_C::PrevViewTargetLocation' has a wrong offset!");
static_assert(offsetof(UCameraModifier_DeboneStart_C, PrevViewTargetRotation) == 0x000068, "Member 'UCameraModifier_DeboneStart_C::PrevViewTargetRotation' has a wrong offset!");
static_assert(offsetof(UCameraModifier_DeboneStart_C, PrevAlpha) == 0x000078, "Member 'UCameraModifier_DeboneStart_C::PrevAlpha' has a wrong offset!");
static_assert(offsetof(UCameraModifier_DeboneStart_C, LocationCurve) == 0x000080, "Member 'UCameraModifier_DeboneStart_C::LocationCurve' has a wrong offset!");
static_assert(offsetof(UCameraModifier_DeboneStart_C, RotationCurve) == 0x000108, "Member 'UCameraModifier_DeboneStart_C::RotationCurve' has a wrong offset!");

}

