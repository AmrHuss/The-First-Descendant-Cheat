#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: IK

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function IK.IK_C.AnimGraph
// 0x0020 (0x0020 - 0x0000)
struct IK_C_AnimGraph final
{
public:
	struct FPoseLink                              InPose;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              AnimGraph_0;                                       // 0x0010(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(IK_C_AnimGraph) == 0x000008, "Wrong alignment on IK_C_AnimGraph");
static_assert(sizeof(IK_C_AnimGraph) == 0x000020, "Wrong size on IK_C_AnimGraph");
static_assert(offsetof(IK_C_AnimGraph, InPose) == 0x000000, "Member 'IK_C_AnimGraph::InPose' has a wrong offset!");
static_assert(offsetof(IK_C_AnimGraph, AnimGraph_0) == 0x000010, "Member 'IK_C_AnimGraph::AnimGraph_0' has a wrong offset!");

// Function IK.IK_C.ExecuteUbergraph_IK
// 0x0028 (0x0028 - 0x0000)
struct IK_C_ExecuteUbergraph_IK final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0004(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(IK_C_ExecuteUbergraph_IK) == 0x000004, "Wrong alignment on IK_C_ExecuteUbergraph_IK");
static_assert(sizeof(IK_C_ExecuteUbergraph_IK) == 0x000028, "Wrong size on IK_C_ExecuteUbergraph_IK");
static_assert(offsetof(IK_C_ExecuteUbergraph_IK, EntryPoint) == 0x000000, "Member 'IK_C_ExecuteUbergraph_IK::EntryPoint' has a wrong offset!");
static_assert(offsetof(IK_C_ExecuteUbergraph_IK, CallFunc_BreakTransform_Location) == 0x000004, "Member 'IK_C_ExecuteUbergraph_IK::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(IK_C_ExecuteUbergraph_IK, CallFunc_BreakTransform_Rotation) == 0x000010, "Member 'IK_C_ExecuteUbergraph_IK::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(IK_C_ExecuteUbergraph_IK, CallFunc_BreakTransform_Scale) == 0x00001C, "Member 'IK_C_ExecuteUbergraph_IK::CallFunc_BreakTransform_Scale' has a wrong offset!");

}

