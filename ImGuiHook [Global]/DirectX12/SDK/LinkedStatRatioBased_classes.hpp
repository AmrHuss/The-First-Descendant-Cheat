#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: LinkedStatRatioBased

#include "Basic.hpp"

#include "M1Data_structs.hpp"
#include "M1_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass LinkedStatRatioBased.LinkedStatRatioBased_C
// 0x0010 (0x00F8 - 0x00E8)
class ULinkedStatRatioBased_C final : public UM1AbilityOpModValueCalc
{
public:
	double                                        MaxRatio;                                          // 0x00E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EM1StatType                                   CurrentStatType;                                   // 0x00F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EM1StatType                                   MaxStatType;                                       // 0x00F1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bLostStatRatio;                                    // 0x00F2(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	struct FM1ScaledInteger CalculateValue(const struct FM1AbilityOpCalcParam& Param) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"LinkedStatRatioBased_C">();
	}
	static class ULinkedStatRatioBased_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ULinkedStatRatioBased_C>();
	}
};
static_assert(alignof(ULinkedStatRatioBased_C) == 0x000008, "Wrong alignment on ULinkedStatRatioBased_C");
static_assert(sizeof(ULinkedStatRatioBased_C) == 0x0000F8, "Wrong size on ULinkedStatRatioBased_C");
static_assert(offsetof(ULinkedStatRatioBased_C, MaxRatio) == 0x0000E8, "Member 'ULinkedStatRatioBased_C::MaxRatio' has a wrong offset!");
static_assert(offsetof(ULinkedStatRatioBased_C, CurrentStatType) == 0x0000F0, "Member 'ULinkedStatRatioBased_C::CurrentStatType' has a wrong offset!");
static_assert(offsetof(ULinkedStatRatioBased_C, MaxStatType) == 0x0000F1, "Member 'ULinkedStatRatioBased_C::MaxStatType' has a wrong offset!");
static_assert(offsetof(ULinkedStatRatioBased_C, bLostStatRatio) == 0x0000F2, "Member 'ULinkedStatRatioBased_C::bLostStatRatio' has a wrong offset!");

}

