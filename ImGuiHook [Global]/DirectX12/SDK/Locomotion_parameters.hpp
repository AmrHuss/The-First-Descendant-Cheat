#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Locomotion

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function Locomotion.Locomotion_C.AnimGraph
// 0x0010 (0x0010 - 0x0000)
struct Locomotion_C_AnimGraph final
{
public:
	struct FPoseLink                              AnimGraph_0;                                       // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(Locomotion_C_AnimGraph) == 0x000008, "Wrong alignment on Locomotion_C_AnimGraph");
static_assert(sizeof(Locomotion_C_AnimGraph) == 0x000010, "Wrong size on Locomotion_C_AnimGraph");
static_assert(offsetof(Locomotion_C_AnimGraph, AnimGraph_0) == 0x000000, "Member 'Locomotion_C_AnimGraph::AnimGraph_0' has a wrong offset!");

// Function Locomotion.Locomotion_C.BlueprintUpdateAnimation
// 0x0004 (0x0004 - 0x0000)
struct Locomotion_C_BlueprintUpdateAnimation final
{
public:
	float                                         DeltaTimeX;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Locomotion_C_BlueprintUpdateAnimation) == 0x000004, "Wrong alignment on Locomotion_C_BlueprintUpdateAnimation");
static_assert(sizeof(Locomotion_C_BlueprintUpdateAnimation) == 0x000004, "Wrong size on Locomotion_C_BlueprintUpdateAnimation");
static_assert(offsetof(Locomotion_C_BlueprintUpdateAnimation, DeltaTimeX) == 0x000000, "Member 'Locomotion_C_BlueprintUpdateAnimation::DeltaTimeX' has a wrong offset!");

// Function Locomotion.Locomotion_C.ExecuteUbergraph_Locomotion
// 0x00B0 (0x00B0 - 0x0000)
struct Locomotion_C_ExecuteUbergraph_Locomotion final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7[0x1];                                        // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRelevantAnimTimeFraction_ReturnValue;  // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13[0x1];                                       // 0x0013(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRelevantAnimTime_ReturnValue;          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_5;                 // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_6;                 // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRelevantAnimTime_ReturnValue_1;        // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_2;       // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_7;                 // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x0027(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRelevantAnimTimeFraction_ReturnValue_1; // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_3;       // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E[0x2];                                       // 0x002E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRelevantAnimTime_ReturnValue_2;        // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_8;                 // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_4;       // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_9;                 // 0x0036(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0037(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_10;                // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A[0x6];                                       // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_11;                // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_12;                // 0x0053(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_13;                // 0x0055(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x0056(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_14;                // 0x0057(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_15;                // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_16;                // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A[0x2];                                       // 0x005A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaTimeX;                           // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_NearlyEqual_FloatFloat_A_ImplicitCast;    // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast;      // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast_1;    // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast_2;    // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast_3;    // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast_4;    // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GreaterEqual_DoubleDouble_A_ImplicitCast; // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_A_ImplicitCast;       // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_StructMemberSet___FloatProperty_3_ImplicitCast; // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A4[0x4];                                       // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Less_DoubleDouble_A_ImplicitCast;         // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Locomotion_C_ExecuteUbergraph_Locomotion) == 0x000008, "Wrong alignment on Locomotion_C_ExecuteUbergraph_Locomotion");
static_assert(sizeof(Locomotion_C_ExecuteUbergraph_Locomotion) == 0x0000B0, "Wrong size on Locomotion_C_ExecuteUbergraph_Locomotion");
static_assert(offsetof(Locomotion_C_ExecuteUbergraph_Locomotion, EntryPoint) == 0x000000, "Member 'Locomotion_C_ExecuteUbergraph_Locomotion::EntryPoint' has a wrong offset!");
static_assert(offsetof(Locomotion_C_ExecuteUbergraph_Locomotion, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x000004, "Member 'Locomotion_C_ExecuteUbergraph_Locomotion::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Locomotion_C_ExecuteUbergraph_Locomotion, CallFunc_BooleanAND_ReturnValue) == 0x000005, "Member 'Locomotion_C_ExecuteUbergraph_Locomotion::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Locomotion_C_ExecuteUbergraph_Locomotion, CallFunc_BooleanAND_ReturnValue_1) == 0x000006, "Member 'Locomotion_C_ExecuteUbergraph_Locomotion::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Locomotion_C_ExecuteUbergraph_Locomotion, CallFunc_GetRelevantAnimTimeFraction_ReturnValue) == 0x000008, "Member 'Locomotion_C_ExecuteUbergraph_Locomotion::CallFunc_GetRelevantAnimTimeFraction_ReturnValue' has a wrong offset!");
static_assert(offsetof(Locomotion_C_ExecuteUbergraph_Locomotion, CallFunc_BooleanAND_ReturnValue_2) == 0x00000C, "Member 'Locomotion_C_ExecuteUbergraph_Locomotion::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Locomotion_C_ExecuteUbergraph_Locomotion, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x00000D, "Member 'Locomotion_C_ExecuteUbergraph_Locomotion::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Locomotion_C_ExecuteUbergraph_Locomotion, CallFunc_BooleanAND_ReturnValue_3) == 0x00000E, "Member 'Locomotion_C_ExecuteUbergraph_Locomotion::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Locomotion_C_ExecuteUbergraph_Locomotion, CallFunc_Not_PreBool_ReturnValue) == 0x00000F, "Member 'Locomotion_C_ExecuteUbergraph_Locomotion::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Locomotion_C_ExecuteUbergraph_Locomotion, CallFunc_Not_PreBool_ReturnValue_1) == 0x000010, "Member 'Locomotion_C_ExecuteUbergraph_Locomotion::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Locomotion_C_ExecuteUbergraph_Locomotion, CallFunc_BooleanAND_ReturnValue_4) == 0x000011, "Member 'Locomotion_C_ExecuteUbergraph_Locomotion::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Locomotion_C_ExecuteUbergraph_Locomotion, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000012, "Member 'Locomotion_C_ExecuteUbergraph_Locomotion::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Locomotion_C_ExecuteUbergraph_Locomotion, CallFunc_GetRelevantAnimTime_ReturnValue) == 0x000014, "Member 'Locomotion_C_ExecuteUbergraph_Locomotion::CallFunc_GetRelevantAnimTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(Locomotion_C_ExecuteUbergraph_Locomotion, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x000018, "Member 'Locomotion_C_ExecuteUbergraph_Locomotion::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Locomotion_C_ExecuteUbergraph_Locomotion, CallFunc_BooleanAND_ReturnValue_5) == 0x000019, "Member 'Locomotion_C_ExecuteUbergraph_Locomotion::CallFunc_BooleanAND_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Locomotion_C_ExecuteUbergraph_Locomotion, CallFunc_BooleanAND_ReturnValue_6) == 0x00001A, "Member 'Locomotion_C_ExecuteUbergraph_Locomotion::CallFunc_BooleanAND_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Locomotion_C_ExecuteUbergraph_Locomotion, CallFunc_BooleanOR_ReturnValue) == 0x00001B, "Member 'Locomotion_C_ExecuteUbergraph_Locomotion::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Locomotion_C_ExecuteUbergraph_Locomotion, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x00001C, "Member 'Locomotion_C_ExecuteUbergraph_Locomotion::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Locomotion_C_ExecuteUbergraph_Locomotion, CallFunc_GetRelevantAnimTime_ReturnValue_1) == 0x000020, "Member 'Locomotion_C_ExecuteUbergraph_Locomotion::CallFunc_GetRelevantAnimTime_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Locomotion_C_ExecuteUbergraph_Locomotion, CallFunc_Greater_DoubleDouble_ReturnValue_2) == 0x000024, "Member 'Locomotion_C_ExecuteUbergraph_Locomotion::CallFunc_Greater_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Locomotion_C_ExecuteUbergraph_Locomotion, CallFunc_BooleanAND_ReturnValue_7) == 0x000025, "Member 'Locomotion_C_ExecuteUbergraph_Locomotion::CallFunc_BooleanAND_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Locomotion_C_ExecuteUbergraph_Locomotion, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000026, "Member 'Locomotion_C_ExecuteUbergraph_Locomotion::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Locomotion_C_ExecuteUbergraph_Locomotion, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x000027, "Member 'Locomotion_C_ExecuteUbergraph_Locomotion::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Locomotion_C_ExecuteUbergraph_Locomotion, CallFunc_GetRelevantAnimTimeFraction_ReturnValue_1) == 0x000028, "Member 'Locomotion_C_ExecuteUbergraph_Locomotion::CallFunc_GetRelevantAnimTimeFraction_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Locomotion_C_ExecuteUbergraph_Locomotion, CallFunc_BooleanOR_ReturnValue_1) == 0x00002C, "Member 'Locomotion_C_ExecuteUbergraph_Locomotion::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Locomotion_C_ExecuteUbergraph_Locomotion, CallFunc_Greater_DoubleDouble_ReturnValue_3) == 0x00002D, "Member 'Locomotion_C_ExecuteUbergraph_Locomotion::CallFunc_Greater_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Locomotion_C_ExecuteUbergraph_Locomotion, CallFunc_GetRelevantAnimTime_ReturnValue_2) == 0x000030, "Member 'Locomotion_C_ExecuteUbergraph_Locomotion::CallFunc_GetRelevantAnimTime_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Locomotion_C_ExecuteUbergraph_Locomotion, CallFunc_BooleanAND_ReturnValue_8) == 0x000034, "Member 'Locomotion_C_ExecuteUbergraph_Locomotion::CallFunc_BooleanAND_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Locomotion_C_ExecuteUbergraph_Locomotion, CallFunc_Greater_DoubleDouble_ReturnValue_4) == 0x000035, "Member 'Locomotion_C_ExecuteUbergraph_Locomotion::CallFunc_Greater_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Locomotion_C_ExecuteUbergraph_Locomotion, CallFunc_BooleanAND_ReturnValue_9) == 0x000036, "Member 'Locomotion_C_ExecuteUbergraph_Locomotion::CallFunc_BooleanAND_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(Locomotion_C_ExecuteUbergraph_Locomotion, CallFunc_BooleanOR_ReturnValue_2) == 0x000037, "Member 'Locomotion_C_ExecuteUbergraph_Locomotion::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Locomotion_C_ExecuteUbergraph_Locomotion, CallFunc_BooleanAND_ReturnValue_10) == 0x000038, "Member 'Locomotion_C_ExecuteUbergraph_Locomotion::CallFunc_BooleanAND_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(Locomotion_C_ExecuteUbergraph_Locomotion, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000039, "Member 'Locomotion_C_ExecuteUbergraph_Locomotion::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Locomotion_C_ExecuteUbergraph_Locomotion, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000040, "Member 'Locomotion_C_ExecuteUbergraph_Locomotion::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Locomotion_C_ExecuteUbergraph_Locomotion, CallFunc_SelectFloat_ReturnValue) == 0x000048, "Member 'Locomotion_C_ExecuteUbergraph_Locomotion::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Locomotion_C_ExecuteUbergraph_Locomotion, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000050, "Member 'Locomotion_C_ExecuteUbergraph_Locomotion::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Locomotion_C_ExecuteUbergraph_Locomotion, CallFunc_BooleanAND_ReturnValue_11) == 0x000051, "Member 'Locomotion_C_ExecuteUbergraph_Locomotion::CallFunc_BooleanAND_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(Locomotion_C_ExecuteUbergraph_Locomotion, CallFunc_Not_PreBool_ReturnValue_2) == 0x000052, "Member 'Locomotion_C_ExecuteUbergraph_Locomotion::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Locomotion_C_ExecuteUbergraph_Locomotion, CallFunc_BooleanAND_ReturnValue_12) == 0x000053, "Member 'Locomotion_C_ExecuteUbergraph_Locomotion::CallFunc_BooleanAND_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(Locomotion_C_ExecuteUbergraph_Locomotion, CallFunc_Not_PreBool_ReturnValue_3) == 0x000054, "Member 'Locomotion_C_ExecuteUbergraph_Locomotion::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Locomotion_C_ExecuteUbergraph_Locomotion, CallFunc_BooleanAND_ReturnValue_13) == 0x000055, "Member 'Locomotion_C_ExecuteUbergraph_Locomotion::CallFunc_BooleanAND_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(Locomotion_C_ExecuteUbergraph_Locomotion, CallFunc_BooleanOR_ReturnValue_3) == 0x000056, "Member 'Locomotion_C_ExecuteUbergraph_Locomotion::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Locomotion_C_ExecuteUbergraph_Locomotion, CallFunc_BooleanAND_ReturnValue_14) == 0x000057, "Member 'Locomotion_C_ExecuteUbergraph_Locomotion::CallFunc_BooleanAND_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(Locomotion_C_ExecuteUbergraph_Locomotion, CallFunc_BooleanAND_ReturnValue_15) == 0x000058, "Member 'Locomotion_C_ExecuteUbergraph_Locomotion::CallFunc_BooleanAND_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(Locomotion_C_ExecuteUbergraph_Locomotion, CallFunc_BooleanAND_ReturnValue_16) == 0x000059, "Member 'Locomotion_C_ExecuteUbergraph_Locomotion::CallFunc_BooleanAND_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(Locomotion_C_ExecuteUbergraph_Locomotion, K2Node_Event_DeltaTimeX) == 0x00005C, "Member 'Locomotion_C_ExecuteUbergraph_Locomotion::K2Node_Event_DeltaTimeX' has a wrong offset!");
static_assert(offsetof(Locomotion_C_ExecuteUbergraph_Locomotion, CallFunc_NearlyEqual_FloatFloat_A_ImplicitCast) == 0x000060, "Member 'Locomotion_C_ExecuteUbergraph_Locomotion::CallFunc_NearlyEqual_FloatFloat_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Locomotion_C_ExecuteUbergraph_Locomotion, CallFunc_Greater_DoubleDouble_A_ImplicitCast) == 0x000068, "Member 'Locomotion_C_ExecuteUbergraph_Locomotion::CallFunc_Greater_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Locomotion_C_ExecuteUbergraph_Locomotion, CallFunc_Greater_DoubleDouble_A_ImplicitCast_1) == 0x000070, "Member 'Locomotion_C_ExecuteUbergraph_Locomotion::CallFunc_Greater_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Locomotion_C_ExecuteUbergraph_Locomotion, CallFunc_Greater_DoubleDouble_A_ImplicitCast_2) == 0x000078, "Member 'Locomotion_C_ExecuteUbergraph_Locomotion::CallFunc_Greater_DoubleDouble_A_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(Locomotion_C_ExecuteUbergraph_Locomotion, CallFunc_Greater_DoubleDouble_A_ImplicitCast_3) == 0x000080, "Member 'Locomotion_C_ExecuteUbergraph_Locomotion::CallFunc_Greater_DoubleDouble_A_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(Locomotion_C_ExecuteUbergraph_Locomotion, CallFunc_Greater_DoubleDouble_A_ImplicitCast_4) == 0x000088, "Member 'Locomotion_C_ExecuteUbergraph_Locomotion::CallFunc_Greater_DoubleDouble_A_ImplicitCast_4' has a wrong offset!");
static_assert(offsetof(Locomotion_C_ExecuteUbergraph_Locomotion, CallFunc_GreaterEqual_DoubleDouble_A_ImplicitCast) == 0x000090, "Member 'Locomotion_C_ExecuteUbergraph_Locomotion::CallFunc_GreaterEqual_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Locomotion_C_ExecuteUbergraph_Locomotion, CallFunc_Divide_DoubleDouble_A_ImplicitCast) == 0x000098, "Member 'Locomotion_C_ExecuteUbergraph_Locomotion::CallFunc_Divide_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Locomotion_C_ExecuteUbergraph_Locomotion, K2Node_StructMemberSet___FloatProperty_3_ImplicitCast) == 0x0000A0, "Member 'Locomotion_C_ExecuteUbergraph_Locomotion::K2Node_StructMemberSet___FloatProperty_3_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Locomotion_C_ExecuteUbergraph_Locomotion, CallFunc_Less_DoubleDouble_A_ImplicitCast) == 0x0000A8, "Member 'Locomotion_C_ExecuteUbergraph_Locomotion::CallFunc_Less_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function Locomotion.Locomotion_C.FullBody
// 0x0020 (0x0020 - 0x0000)
struct Locomotion_C_FullBody final
{
public:
	struct FPoseLink                              InPose_FullBody;                                   // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              FullBody_0;                                        // 0x0010(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(Locomotion_C_FullBody) == 0x000008, "Wrong alignment on Locomotion_C_FullBody");
static_assert(sizeof(Locomotion_C_FullBody) == 0x000020, "Wrong size on Locomotion_C_FullBody");
static_assert(offsetof(Locomotion_C_FullBody, InPose_FullBody) == 0x000000, "Member 'Locomotion_C_FullBody::InPose_FullBody' has a wrong offset!");
static_assert(offsetof(Locomotion_C_FullBody, FullBody_0) == 0x000010, "Member 'Locomotion_C_FullBody::FullBody_0' has a wrong offset!");

// Function Locomotion.Locomotion_C.LocomotionLayer
// 0x0010 (0x0010 - 0x0000)
struct Locomotion_C_LocomotionLayer final
{
public:
	struct FPoseLink                              LocomotionLayer_0;                                 // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(Locomotion_C_LocomotionLayer) == 0x000008, "Wrong alignment on Locomotion_C_LocomotionLayer");
static_assert(sizeof(Locomotion_C_LocomotionLayer) == 0x000010, "Wrong size on Locomotion_C_LocomotionLayer");
static_assert(offsetof(Locomotion_C_LocomotionLayer, LocomotionLayer_0) == 0x000000, "Member 'Locomotion_C_LocomotionLayer::LocomotionLayer_0' has a wrong offset!");

// Function Locomotion.Locomotion_C.Motion_M
// 0x0020 (0x0020 - 0x0000)
struct Locomotion_C_Motion_M final
{
public:
	struct FPoseLink                              InPose_Motion_M;                                   // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              Motion_M_0;                                        // 0x0010(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(Locomotion_C_Motion_M) == 0x000008, "Wrong alignment on Locomotion_C_Motion_M");
static_assert(sizeof(Locomotion_C_Motion_M) == 0x000020, "Wrong size on Locomotion_C_Motion_M");
static_assert(offsetof(Locomotion_C_Motion_M, InPose_Motion_M) == 0x000000, "Member 'Locomotion_C_Motion_M::InPose_Motion_M' has a wrong offset!");
static_assert(offsetof(Locomotion_C_Motion_M, Motion_M_0) == 0x000010, "Member 'Locomotion_C_Motion_M::Motion_M_0' has a wrong offset!");

// Function Locomotion.Locomotion_C.UpperBody_L
// 0x0020 (0x0020 - 0x0000)
struct Locomotion_C_UpperBody_L final
{
public:
	struct FPoseLink                              InPose_UpperBody_L;                                // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              UpperBody_L_0;                                     // 0x0010(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(Locomotion_C_UpperBody_L) == 0x000008, "Wrong alignment on Locomotion_C_UpperBody_L");
static_assert(sizeof(Locomotion_C_UpperBody_L) == 0x000020, "Wrong size on Locomotion_C_UpperBody_L");
static_assert(offsetof(Locomotion_C_UpperBody_L, InPose_UpperBody_L) == 0x000000, "Member 'Locomotion_C_UpperBody_L::InPose_UpperBody_L' has a wrong offset!");
static_assert(offsetof(Locomotion_C_UpperBody_L, UpperBody_L_0) == 0x000010, "Member 'Locomotion_C_UpperBody_L::UpperBody_L_0' has a wrong offset!");

// Function Locomotion.Locomotion_C.UpperBody_L_Additive
// 0x0020 (0x0020 - 0x0000)
struct Locomotion_C_UpperBody_L_Additive final
{
public:
	struct FPoseLink                              InPose_UpperBody_L_Additive;                       // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              UpperBody_L_Additive_0;                            // 0x0010(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(Locomotion_C_UpperBody_L_Additive) == 0x000008, "Wrong alignment on Locomotion_C_UpperBody_L_Additive");
static_assert(sizeof(Locomotion_C_UpperBody_L_Additive) == 0x000020, "Wrong size on Locomotion_C_UpperBody_L_Additive");
static_assert(offsetof(Locomotion_C_UpperBody_L_Additive, InPose_UpperBody_L_Additive) == 0x000000, "Member 'Locomotion_C_UpperBody_L_Additive::InPose_UpperBody_L_Additive' has a wrong offset!");
static_assert(offsetof(Locomotion_C_UpperBody_L_Additive, UpperBody_L_Additive_0) == 0x000010, "Member 'Locomotion_C_UpperBody_L_Additive::UpperBody_L_Additive_0' has a wrong offset!");

// Function Locomotion.Locomotion_C.UpperBody_U
// 0x0020 (0x0020 - 0x0000)
struct Locomotion_C_UpperBody_U final
{
public:
	struct FPoseLink                              InPose_UpperBody_U;                                // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              UpperBody_U_0;                                     // 0x0010(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(Locomotion_C_UpperBody_U) == 0x000008, "Wrong alignment on Locomotion_C_UpperBody_U");
static_assert(sizeof(Locomotion_C_UpperBody_U) == 0x000020, "Wrong size on Locomotion_C_UpperBody_U");
static_assert(offsetof(Locomotion_C_UpperBody_U, InPose_UpperBody_U) == 0x000000, "Member 'Locomotion_C_UpperBody_U::InPose_UpperBody_U' has a wrong offset!");
static_assert(offsetof(Locomotion_C_UpperBody_U, UpperBody_U_0) == 0x000010, "Member 'Locomotion_C_UpperBody_U::UpperBody_U_0' has a wrong offset!");

// Function Locomotion.Locomotion_C.UpperBody_U_R
// 0x0020 (0x0020 - 0x0000)
struct Locomotion_C_UpperBody_U_R final
{
public:
	struct FPoseLink                              InPose_UpperBody_U_R;                              // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              UpperBody_U_R_0;                                   // 0x0010(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(Locomotion_C_UpperBody_U_R) == 0x000008, "Wrong alignment on Locomotion_C_UpperBody_U_R");
static_assert(sizeof(Locomotion_C_UpperBody_U_R) == 0x000020, "Wrong size on Locomotion_C_UpperBody_U_R");
static_assert(offsetof(Locomotion_C_UpperBody_U_R, InPose_UpperBody_U_R) == 0x000000, "Member 'Locomotion_C_UpperBody_U_R::InPose_UpperBody_U_R' has a wrong offset!");
static_assert(offsetof(Locomotion_C_UpperBody_U_R, UpperBody_U_R_0) == 0x000010, "Member 'Locomotion_C_UpperBody_U_R::UpperBody_U_R_0' has a wrong offset!");

}

