#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: M1AnimPhys

#include "Basic.hpp"

#include "M1Actor_structs.hpp"
#include "M1AnimPhys_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// Class M1AnimPhys.M1AnimNotifyState_DisableAnimPhys
// 0x0038 (0x0068 - 0x0030)
class UM1AnimNotifyState_DisableAnimPhys final : public UAnimNotifyState
{
public:
	TSoftObjectPtr<class USkeleton>               TargetSkeleton;                                    // 0x0030(0x0030)(Edit, BlueprintVisible, BlueprintReadOnly, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EM1AnimPhysDisabledState                      DiresedState;                                      // 0x0060(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"M1AnimNotifyState_DisableAnimPhys">();
	}
	static class UM1AnimNotifyState_DisableAnimPhys* GetDefaultObj()
	{
		return GetDefaultObjImpl<UM1AnimNotifyState_DisableAnimPhys>();
	}
};
static_assert(alignof(UM1AnimNotifyState_DisableAnimPhys) == 0x000008, "Wrong alignment on UM1AnimNotifyState_DisableAnimPhys");
static_assert(sizeof(UM1AnimNotifyState_DisableAnimPhys) == 0x000068, "Wrong size on UM1AnimNotifyState_DisableAnimPhys");
static_assert(offsetof(UM1AnimNotifyState_DisableAnimPhys, TargetSkeleton) == 0x000030, "Member 'UM1AnimNotifyState_DisableAnimPhys::TargetSkeleton' has a wrong offset!");
static_assert(offsetof(UM1AnimNotifyState_DisableAnimPhys, DiresedState) == 0x000060, "Member 'UM1AnimNotifyState_DisableAnimPhys::DiresedState' has a wrong offset!");

// Class M1AnimPhys.M1AnimPhysCollisionData
// 0x0020 (0x0048 - 0x0028)
class UM1AnimPhysCollisionData final : public UAssetUserData
{
public:
	TArray<struct FM1AnimPhysSphereCollider>      SphereColliders;                                   // 0x0028(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)
	TArray<struct FM1AnimPhysCapsuleCollider>     CapsuleColliders;                                  // 0x0038(0x0010)(Edit, ZeroConstructor, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"M1AnimPhysCollisionData">();
	}
	static class UM1AnimPhysCollisionData* GetDefaultObj()
	{
		return GetDefaultObjImpl<UM1AnimPhysCollisionData>();
	}
};
static_assert(alignof(UM1AnimPhysCollisionData) == 0x000008, "Wrong alignment on UM1AnimPhysCollisionData");
static_assert(sizeof(UM1AnimPhysCollisionData) == 0x000048, "Wrong size on UM1AnimPhysCollisionData");
static_assert(offsetof(UM1AnimPhysCollisionData, SphereColliders) == 0x000028, "Member 'UM1AnimPhysCollisionData::SphereColliders' has a wrong offset!");
static_assert(offsetof(UM1AnimPhysCollisionData, CapsuleColliders) == 0x000038, "Member 'UM1AnimPhysCollisionData::CapsuleColliders' has a wrong offset!");

}

