#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: M1VivoxSettings

#include "Basic.hpp"

#include "DeveloperSettings_classes.hpp"


namespace SDK
{

// Class M1VivoxSettings.M1VivoxSettings
// 0x0010 (0x0048 - 0x0038)
class UM1VivoxSettings final : public UDeveloperSettings
{
public:
	float                                         InputVolumeRangeMinimum;                           // 0x0038(0x0004)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         InputVolumeRangeMaximum;                           // 0x003C(0x0004)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         OutputVolumeRangeMinimum;                          // 0x0040(0x0004)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                         OutputVolumeRangeMaximum;                          // 0x0044(0x0004)(Edit, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"M1VivoxSettings">();
	}
	static class UM1VivoxSettings* GetDefaultObj()
	{
		return GetDefaultObjImpl<UM1VivoxSettings>();
	}
};
static_assert(alignof(UM1VivoxSettings) == 0x000008, "Wrong alignment on UM1VivoxSettings");
static_assert(sizeof(UM1VivoxSettings) == 0x000048, "Wrong size on UM1VivoxSettings");
static_assert(offsetof(UM1VivoxSettings, InputVolumeRangeMinimum) == 0x000038, "Member 'UM1VivoxSettings::InputVolumeRangeMinimum' has a wrong offset!");
static_assert(offsetof(UM1VivoxSettings, InputVolumeRangeMaximum) == 0x00003C, "Member 'UM1VivoxSettings::InputVolumeRangeMaximum' has a wrong offset!");
static_assert(offsetof(UM1VivoxSettings, OutputVolumeRangeMinimum) == 0x000040, "Member 'UM1VivoxSettings::OutputVolumeRangeMinimum' has a wrong offset!");
static_assert(offsetof(UM1VivoxSettings, OutputVolumeRangeMaximum) == 0x000044, "Member 'UM1VivoxSettings::OutputVolumeRangeMaximum' has a wrong offset!");

}

