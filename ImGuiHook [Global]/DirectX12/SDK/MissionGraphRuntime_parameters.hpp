#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MissionGraphRuntime

#include "Basic.hpp"


namespace SDK::Params
{

// Function MissionGraphRuntime.MissionGraph.GetNodesByLevel
// 0x0018 (0x0018 - 0x0000)
struct MissionGraph_GetNodesByLevel final
{
public:
	int32                                         Level;                                             // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMissionGraphTaskNode*>          Nodes;                                             // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(MissionGraph_GetNodesByLevel) == 0x000008, "Wrong alignment on MissionGraph_GetNodesByLevel");
static_assert(sizeof(MissionGraph_GetNodesByLevel) == 0x000018, "Wrong size on MissionGraph_GetNodesByLevel");
static_assert(offsetof(MissionGraph_GetNodesByLevel, Level) == 0x000000, "Member 'MissionGraph_GetNodesByLevel::Level' has a wrong offset!");
static_assert(offsetof(MissionGraph_GetNodesByLevel, Nodes) == 0x000008, "Member 'MissionGraph_GetNodesByLevel::Nodes' has a wrong offset!");

// Function MissionGraphRuntime.MissionGraph.Print
// 0x0002 (0x0002 - 0x0000)
struct MissionGraph_Print final
{
public:
	bool                                          ToConsole;                                         // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ToScreen;                                          // 0x0001(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MissionGraph_Print) == 0x000001, "Wrong alignment on MissionGraph_Print");
static_assert(sizeof(MissionGraph_Print) == 0x000002, "Wrong size on MissionGraph_Print");
static_assert(offsetof(MissionGraph_Print, ToConsole) == 0x000000, "Member 'MissionGraph_Print::ToConsole' has a wrong offset!");
static_assert(offsetof(MissionGraph_Print, ToScreen) == 0x000001, "Member 'MissionGraph_Print::ToScreen' has a wrong offset!");

// Function MissionGraphRuntime.MissionGraph.GetLevelNum
// 0x0004 (0x0004 - 0x0000)
struct MissionGraph_GetLevelNum final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MissionGraph_GetLevelNum) == 0x000004, "Wrong alignment on MissionGraph_GetLevelNum");
static_assert(sizeof(MissionGraph_GetLevelNum) == 0x000004, "Wrong size on MissionGraph_GetLevelNum");
static_assert(offsetof(MissionGraph_GetLevelNum, ReturnValue) == 0x000000, "Member 'MissionGraph_GetLevelNum::ReturnValue' has a wrong offset!");

// Function MissionGraphRuntime.MissionGraphTaskNode.GetEdge
// 0x0010 (0x0010 - 0x0000)
struct MissionGraphTaskNode_GetEdge final
{
public:
	class UMissionGraphTaskNode*                  ChildNode;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMissionGraphEdge*                      ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MissionGraphTaskNode_GetEdge) == 0x000008, "Wrong alignment on MissionGraphTaskNode_GetEdge");
static_assert(sizeof(MissionGraphTaskNode_GetEdge) == 0x000010, "Wrong size on MissionGraphTaskNode_GetEdge");
static_assert(offsetof(MissionGraphTaskNode_GetEdge, ChildNode) == 0x000000, "Member 'MissionGraphTaskNode_GetEdge::ChildNode' has a wrong offset!");
static_assert(offsetof(MissionGraphTaskNode_GetEdge, ReturnValue) == 0x000008, "Member 'MissionGraphTaskNode_GetEdge::ReturnValue' has a wrong offset!");

// Function MissionGraphRuntime.MissionGraphTaskNode.GetDescription
// 0x0018 (0x0018 - 0x0000)
struct MissionGraphTaskNode_GetDescription final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(MissionGraphTaskNode_GetDescription) == 0x000008, "Wrong alignment on MissionGraphTaskNode_GetDescription");
static_assert(sizeof(MissionGraphTaskNode_GetDescription) == 0x000018, "Wrong size on MissionGraphTaskNode_GetDescription");
static_assert(offsetof(MissionGraphTaskNode_GetDescription, ReturnValue) == 0x000000, "Member 'MissionGraphTaskNode_GetDescription::ReturnValue' has a wrong offset!");

// Function MissionGraphRuntime.MissionGraphTaskNode.GetGraph
// 0x0008 (0x0008 - 0x0000)
struct MissionGraphTaskNode_GetGraph final
{
public:
	class UMissionGraph*                          ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MissionGraphTaskNode_GetGraph) == 0x000008, "Wrong alignment on MissionGraphTaskNode_GetGraph");
static_assert(sizeof(MissionGraphTaskNode_GetGraph) == 0x000008, "Wrong size on MissionGraphTaskNode_GetGraph");
static_assert(offsetof(MissionGraphTaskNode_GetGraph, ReturnValue) == 0x000000, "Member 'MissionGraphTaskNode_GetGraph::ReturnValue' has a wrong offset!");

// Function MissionGraphRuntime.MissionGraphTaskNode.IsLeafNode
// 0x0001 (0x0001 - 0x0000)
struct MissionGraphTaskNode_IsLeafNode final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(MissionGraphTaskNode_IsLeafNode) == 0x000001, "Wrong alignment on MissionGraphTaskNode_IsLeafNode");
static_assert(sizeof(MissionGraphTaskNode_IsLeafNode) == 0x000001, "Wrong size on MissionGraphTaskNode_IsLeafNode");
static_assert(offsetof(MissionGraphTaskNode_IsLeafNode, ReturnValue) == 0x000000, "Member 'MissionGraphTaskNode_IsLeafNode::ReturnValue' has a wrong offset!");

}

