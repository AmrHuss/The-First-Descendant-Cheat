#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: NPC_035_VoiceJournal

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function NPC_035_VoiceJournal.NPC_035_VoiceJournal_C.ExecuteUbergraph_NPC_035_VoiceJournal
// 0x0018 (0x0018 - 0x0000)
struct NPC_035_VoiceJournal_C_ExecuteUbergraph_NPC_035_VoiceJournal final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_OtherActor;                           // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(NPC_035_VoiceJournal_C_ExecuteUbergraph_NPC_035_VoiceJournal) == 0x000008, "Wrong alignment on NPC_035_VoiceJournal_C_ExecuteUbergraph_NPC_035_VoiceJournal");
static_assert(sizeof(NPC_035_VoiceJournal_C_ExecuteUbergraph_NPC_035_VoiceJournal) == 0x000018, "Wrong size on NPC_035_VoiceJournal_C_ExecuteUbergraph_NPC_035_VoiceJournal");
static_assert(offsetof(NPC_035_VoiceJournal_C_ExecuteUbergraph_NPC_035_VoiceJournal, EntryPoint) == 0x000000, "Member 'NPC_035_VoiceJournal_C_ExecuteUbergraph_NPC_035_VoiceJournal::EntryPoint' has a wrong offset!");
static_assert(offsetof(NPC_035_VoiceJournal_C_ExecuteUbergraph_NPC_035_VoiceJournal, K2Node_Event_OtherActor) == 0x000008, "Member 'NPC_035_VoiceJournal_C_ExecuteUbergraph_NPC_035_VoiceJournal::K2Node_Event_OtherActor' has a wrong offset!");
static_assert(offsetof(NPC_035_VoiceJournal_C_ExecuteUbergraph_NPC_035_VoiceJournal, K2Node_Event_DeltaSeconds) == 0x000010, "Member 'NPC_035_VoiceJournal_C_ExecuteUbergraph_NPC_035_VoiceJournal::K2Node_Event_DeltaSeconds' has a wrong offset!");

// Function NPC_035_VoiceJournal.NPC_035_VoiceJournal_C.ReceiveActorBeginOverlap
// 0x0008 (0x0008 - 0x0000)
struct NPC_035_VoiceJournal_C_ReceiveActorBeginOverlap final
{
public:
	class AActor*                                 OtherActor;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(NPC_035_VoiceJournal_C_ReceiveActorBeginOverlap) == 0x000008, "Wrong alignment on NPC_035_VoiceJournal_C_ReceiveActorBeginOverlap");
static_assert(sizeof(NPC_035_VoiceJournal_C_ReceiveActorBeginOverlap) == 0x000008, "Wrong size on NPC_035_VoiceJournal_C_ReceiveActorBeginOverlap");
static_assert(offsetof(NPC_035_VoiceJournal_C_ReceiveActorBeginOverlap, OtherActor) == 0x000000, "Member 'NPC_035_VoiceJournal_C_ReceiveActorBeginOverlap::OtherActor' has a wrong offset!");

// Function NPC_035_VoiceJournal.NPC_035_VoiceJournal_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct NPC_035_VoiceJournal_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(NPC_035_VoiceJournal_C_ReceiveTick) == 0x000004, "Wrong alignment on NPC_035_VoiceJournal_C_ReceiveTick");
static_assert(sizeof(NPC_035_VoiceJournal_C_ReceiveTick) == 0x000004, "Wrong size on NPC_035_VoiceJournal_C_ReceiveTick");
static_assert(offsetof(NPC_035_VoiceJournal_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'NPC_035_VoiceJournal_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function NPC_035_VoiceJournal.NPC_035_VoiceJournal_C.SetOffsetOfMeshAndNameTag
// 0x00B8 (0x00B8 - 0x0000)
struct NPC_035_VoiceJournal_C_SetOffsetOfMeshAndNameTag final
{
public:
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0008(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x0014(0x009C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	double                                        CallFunc_Subtract_DoubleDouble_B_ImplicitCast;     // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(NPC_035_VoiceJournal_C_SetOffsetOfMeshAndNameTag) == 0x000008, "Wrong alignment on NPC_035_VoiceJournal_C_SetOffsetOfMeshAndNameTag");
static_assert(sizeof(NPC_035_VoiceJournal_C_SetOffsetOfMeshAndNameTag) == 0x0000B8, "Wrong size on NPC_035_VoiceJournal_C_SetOffsetOfMeshAndNameTag");
static_assert(offsetof(NPC_035_VoiceJournal_C_SetOffsetOfMeshAndNameTag, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000000, "Member 'NPC_035_VoiceJournal_C_SetOffsetOfMeshAndNameTag::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(NPC_035_VoiceJournal_C_SetOffsetOfMeshAndNameTag, CallFunc_MakeVector_ReturnValue) == 0x000008, "Member 'NPC_035_VoiceJournal_C_SetOffsetOfMeshAndNameTag::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(NPC_035_VoiceJournal_C_SetOffsetOfMeshAndNameTag, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x000014, "Member 'NPC_035_VoiceJournal_C_SetOffsetOfMeshAndNameTag::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(NPC_035_VoiceJournal_C_SetOffsetOfMeshAndNameTag, CallFunc_Subtract_DoubleDouble_B_ImplicitCast) == 0x0000B0, "Member 'NPC_035_VoiceJournal_C_SetOffsetOfMeshAndNameTag::CallFunc_Subtract_DoubleDouble_B_ImplicitCast' has a wrong offset!");

}

