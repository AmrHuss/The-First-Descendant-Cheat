#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: NexonPlatform

#include "Basic.hpp"

#include "NexonPlatform_classes.hpp"
#include "NexonPlatform_parameters.hpp"


namespace SDK
{

// Function NexonPlatform.NXPToyCSInterface.OpenNCSForNonMember
// (Final, Native, Public, Const)

void UNXPToyCSInterface::OpenNCSForNonMember() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NXPToyCSInterface", "OpenNCSForNonMember");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function NexonPlatform.NXPEveInterface.billingPayment
// (Final, Native, Public, Const)
// Parameters:
// class FString                           ProductId                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Callback_0                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UNXPEveInterface::billingPayment(const class FString& ProductId, const class FString& Callback_0) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NXPEveInterface", "billingPayment");

	Params::NXPEveInterface_billingPayment Parms{};

	Parms.ProductId = std::move(ProductId);
	Parms.Callback_0 = std::move(Callback_0);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function NexonPlatform.NXPEveInterface.billingRequestProducts
// (Final, Native, Public, HasOutParams, Const)
// Parameters:
// TArray<class FString>                   ProductIds                                             (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// class FString                           Callback_0                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UNXPEveInterface::billingRequestProducts(const TArray<class FString>& ProductIds, const class FString& Callback_0) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NXPEveInterface", "billingRequestProducts");

	Params::NXPEveInterface_billingRequestProducts Parms{};

	Parms.ProductIds = std::move(ProductIds);
	Parms.Callback_0 = std::move(Callback_0);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function NexonPlatform.NXPEveInterface.callback
// (Final, Native, Public, Const)
// Parameters:
// class FString                           ErrorCode                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Message                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UNXPEveInterface::Callback(const class FString& ErrorCode, const class FString& Message) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NXPEveInterface", "callback");

	Params::NXPEveInterface_Callback Parms{};

	Parms.ErrorCode = std::move(ErrorCode);
	Parms.Message = std::move(Message);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function NexonPlatform.NXPEveInterface.dismissWebView
// (Final, Native, Public, Const)
// Parameters:
// class FString                           Callback                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UNXPEveInterface::DismissWebView(const class FString& Callback) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NXPEveInterface", "dismissWebView");

	Params::NXPEveInterface_DismissWebView Parms{};

	Parms.Callback = std::move(Callback);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function NexonPlatform.NXPEveInterface.doNotShowToday
// (Final, Native, Public, Const)
// Parameters:
// class FString                           PlacementId                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           State                                                  (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UNXPEveInterface::DoNotShowToday(const class FString& PlacementId, const class FString& State) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NXPEveInterface", "doNotShowToday");

	Params::NXPEveInterface_DoNotShowToday Parms{};

	Parms.PlacementId = std::move(PlacementId);
	Parms.State = std::move(State);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function NexonPlatform.NXPEveInterface.getCountry
// (Final, Native, Public, Const)
// Parameters:
// class FString                           Callback                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UNXPEveInterface::GetCountry(const class FString& Callback) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NXPEveInterface", "getCountry");

	Params::NXPEveInterface_GetCountry Parms{};

	Parms.Callback = std::move(Callback);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function NexonPlatform.NXPEveInterface.getDisplayCutout
// (Final, Native, Public, Const)
// Parameters:
// class FString                           Callback                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UNXPEveInterface::GetDisplayCutout(const class FString& Callback) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NXPEveInterface", "getDisplayCutout");

	Params::NXPEveInterface_GetDisplayCutout Parms{};

	Parms.Callback = std::move(Callback);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function NexonPlatform.NXPEveInterface.getLocale
// (Final, Native, Public, Const)
// Parameters:
// class FString                           Callback                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UNXPEveInterface::GetLocale(const class FString& Callback) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NXPEveInterface", "getLocale");

	Params::NXPEveInterface_GetLocale Parms{};

	Parms.Callback = std::move(Callback);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function NexonPlatform.NXPEveInterface.getUserInfo
// (Final, Native, Public, Const)
// Parameters:
// class FString                           Callback                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UNXPEveInterface::GetUserInfo(const class FString& Callback) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NXPEveInterface", "getUserInfo");

	Params::NXPEveInterface_GetUserInfo Parms{};

	Parms.Callback = std::move(Callback);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function NexonPlatform.NXPEveInterface.openLink
// (Final, Native, Public, Const)
// Parameters:
// class FString                           EveLinkJsonString                                      (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Callback                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UNXPEveInterface::OpenLink(const class FString& EveLinkJsonString, const class FString& Callback) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NXPEveInterface", "openLink");

	Params::NXPEveInterface_OpenLink Parms{};

	Parms.EveLinkJsonString = std::move(EveLinkJsonString);
	Parms.Callback = std::move(Callback);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function NexonPlatform.NXPEveInterface.saveEveUserInfo
// (Final, Native, Public, Const)
// Parameters:
// class FString                           UserInfo                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UNXPEveInterface::SaveEveUserInfo(const class FString& UserInfo) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NXPEveInterface", "saveEveUserInfo");

	Params::NXPEveInterface_SaveEveUserInfo Parms{};

	Parms.UserInfo = std::move(UserInfo);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}

}

