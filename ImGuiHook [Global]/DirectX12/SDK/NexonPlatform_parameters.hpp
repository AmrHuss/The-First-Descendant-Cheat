#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: NexonPlatform

#include "Basic.hpp"


namespace SDK::Params
{

// Function NexonPlatform.NXPEveInterface.billingPayment
// 0x0020 (0x0020 - 0x0000)
struct NXPEveInterface_billingPayment final
{
public:
	class FString                                 ProductId;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Callback_0;                                        // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(NXPEveInterface_billingPayment) == 0x000008, "Wrong alignment on NXPEveInterface_billingPayment");
static_assert(sizeof(NXPEveInterface_billingPayment) == 0x000020, "Wrong size on NXPEveInterface_billingPayment");
static_assert(offsetof(NXPEveInterface_billingPayment, ProductId) == 0x000000, "Member 'NXPEveInterface_billingPayment::ProductId' has a wrong offset!");
static_assert(offsetof(NXPEveInterface_billingPayment, Callback_0) == 0x000010, "Member 'NXPEveInterface_billingPayment::Callback_0' has a wrong offset!");

// Function NexonPlatform.NXPEveInterface.billingRequestProducts
// 0x0020 (0x0020 - 0x0000)
struct NXPEveInterface_billingRequestProducts final
{
public:
	TArray<class FString>                         ProductIds;                                        // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	class FString                                 Callback_0;                                        // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(NXPEveInterface_billingRequestProducts) == 0x000008, "Wrong alignment on NXPEveInterface_billingRequestProducts");
static_assert(sizeof(NXPEveInterface_billingRequestProducts) == 0x000020, "Wrong size on NXPEveInterface_billingRequestProducts");
static_assert(offsetof(NXPEveInterface_billingRequestProducts, ProductIds) == 0x000000, "Member 'NXPEveInterface_billingRequestProducts::ProductIds' has a wrong offset!");
static_assert(offsetof(NXPEveInterface_billingRequestProducts, Callback_0) == 0x000010, "Member 'NXPEveInterface_billingRequestProducts::Callback_0' has a wrong offset!");

// Function NexonPlatform.NXPEveInterface.callback
// 0x0020 (0x0020 - 0x0000)
struct NXPEveInterface_Callback final
{
public:
	class FString                                 ErrorCode;                                         // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Message;                                           // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(NXPEveInterface_Callback) == 0x000008, "Wrong alignment on NXPEveInterface_Callback");
static_assert(sizeof(NXPEveInterface_Callback) == 0x000020, "Wrong size on NXPEveInterface_Callback");
static_assert(offsetof(NXPEveInterface_Callback, ErrorCode) == 0x000000, "Member 'NXPEveInterface_Callback::ErrorCode' has a wrong offset!");
static_assert(offsetof(NXPEveInterface_Callback, Message) == 0x000010, "Member 'NXPEveInterface_Callback::Message' has a wrong offset!");

// Function NexonPlatform.NXPEveInterface.dismissWebView
// 0x0010 (0x0010 - 0x0000)
struct NXPEveInterface_DismissWebView final
{
public:
	class FString                                 Callback;                                          // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(NXPEveInterface_DismissWebView) == 0x000008, "Wrong alignment on NXPEveInterface_DismissWebView");
static_assert(sizeof(NXPEveInterface_DismissWebView) == 0x000010, "Wrong size on NXPEveInterface_DismissWebView");
static_assert(offsetof(NXPEveInterface_DismissWebView, Callback) == 0x000000, "Member 'NXPEveInterface_DismissWebView::Callback' has a wrong offset!");

// Function NexonPlatform.NXPEveInterface.doNotShowToday
// 0x0020 (0x0020 - 0x0000)
struct NXPEveInterface_DoNotShowToday final
{
public:
	class FString                                 PlacementId;                                       // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 State;                                             // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(NXPEveInterface_DoNotShowToday) == 0x000008, "Wrong alignment on NXPEveInterface_DoNotShowToday");
static_assert(sizeof(NXPEveInterface_DoNotShowToday) == 0x000020, "Wrong size on NXPEveInterface_DoNotShowToday");
static_assert(offsetof(NXPEveInterface_DoNotShowToday, PlacementId) == 0x000000, "Member 'NXPEveInterface_DoNotShowToday::PlacementId' has a wrong offset!");
static_assert(offsetof(NXPEveInterface_DoNotShowToday, State) == 0x000010, "Member 'NXPEveInterface_DoNotShowToday::State' has a wrong offset!");

// Function NexonPlatform.NXPEveInterface.getCountry
// 0x0010 (0x0010 - 0x0000)
struct NXPEveInterface_GetCountry final
{
public:
	class FString                                 Callback;                                          // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(NXPEveInterface_GetCountry) == 0x000008, "Wrong alignment on NXPEveInterface_GetCountry");
static_assert(sizeof(NXPEveInterface_GetCountry) == 0x000010, "Wrong size on NXPEveInterface_GetCountry");
static_assert(offsetof(NXPEveInterface_GetCountry, Callback) == 0x000000, "Member 'NXPEveInterface_GetCountry::Callback' has a wrong offset!");

// Function NexonPlatform.NXPEveInterface.getDisplayCutout
// 0x0010 (0x0010 - 0x0000)
struct NXPEveInterface_GetDisplayCutout final
{
public:
	class FString                                 Callback;                                          // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(NXPEveInterface_GetDisplayCutout) == 0x000008, "Wrong alignment on NXPEveInterface_GetDisplayCutout");
static_assert(sizeof(NXPEveInterface_GetDisplayCutout) == 0x000010, "Wrong size on NXPEveInterface_GetDisplayCutout");
static_assert(offsetof(NXPEveInterface_GetDisplayCutout, Callback) == 0x000000, "Member 'NXPEveInterface_GetDisplayCutout::Callback' has a wrong offset!");

// Function NexonPlatform.NXPEveInterface.getLocale
// 0x0010 (0x0010 - 0x0000)
struct NXPEveInterface_GetLocale final
{
public:
	class FString                                 Callback;                                          // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(NXPEveInterface_GetLocale) == 0x000008, "Wrong alignment on NXPEveInterface_GetLocale");
static_assert(sizeof(NXPEveInterface_GetLocale) == 0x000010, "Wrong size on NXPEveInterface_GetLocale");
static_assert(offsetof(NXPEveInterface_GetLocale, Callback) == 0x000000, "Member 'NXPEveInterface_GetLocale::Callback' has a wrong offset!");

// Function NexonPlatform.NXPEveInterface.getUserInfo
// 0x0010 (0x0010 - 0x0000)
struct NXPEveInterface_GetUserInfo final
{
public:
	class FString                                 Callback;                                          // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(NXPEveInterface_GetUserInfo) == 0x000008, "Wrong alignment on NXPEveInterface_GetUserInfo");
static_assert(sizeof(NXPEveInterface_GetUserInfo) == 0x000010, "Wrong size on NXPEveInterface_GetUserInfo");
static_assert(offsetof(NXPEveInterface_GetUserInfo, Callback) == 0x000000, "Member 'NXPEveInterface_GetUserInfo::Callback' has a wrong offset!");

// Function NexonPlatform.NXPEveInterface.openLink
// 0x0020 (0x0020 - 0x0000)
struct NXPEveInterface_OpenLink final
{
public:
	class FString                                 EveLinkJsonString;                                 // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Callback;                                          // 0x0010(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(NXPEveInterface_OpenLink) == 0x000008, "Wrong alignment on NXPEveInterface_OpenLink");
static_assert(sizeof(NXPEveInterface_OpenLink) == 0x000020, "Wrong size on NXPEveInterface_OpenLink");
static_assert(offsetof(NXPEveInterface_OpenLink, EveLinkJsonString) == 0x000000, "Member 'NXPEveInterface_OpenLink::EveLinkJsonString' has a wrong offset!");
static_assert(offsetof(NXPEveInterface_OpenLink, Callback) == 0x000010, "Member 'NXPEveInterface_OpenLink::Callback' has a wrong offset!");

// Function NexonPlatform.NXPEveInterface.saveEveUserInfo
// 0x0010 (0x0010 - 0x0000)
struct NXPEveInterface_SaveEveUserInfo final
{
public:
	class FString                                 UserInfo;                                          // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(NXPEveInterface_SaveEveUserInfo) == 0x000008, "Wrong alignment on NXPEveInterface_SaveEveUserInfo");
static_assert(sizeof(NXPEveInterface_SaveEveUserInfo) == 0x000010, "Wrong size on NXPEveInterface_SaveEveUserInfo");
static_assert(offsetof(NXPEveInterface_SaveEveUserInfo, UserInfo) == 0x000000, "Member 'NXPEveInterface_SaveEveUserInfo::UserInfo' has a wrong offset!");

}

