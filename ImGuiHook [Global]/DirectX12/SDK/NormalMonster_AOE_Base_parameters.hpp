#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: NormalMonster_AOE_Base

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "M1_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "M1Data_structs.hpp"


namespace SDK::Params
{

// Function NormalMonster_AOE_Base.NormalMonster_AOE_Base_C.SpawnPreActivateFX
// 0x0040 (0x0040 - 0x0000)
struct NormalMonster_AOE_Base_C_SpawnPreActivateFX final
{
public:
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0000(0x0030)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UNiagaraComponent*>              CallFunc_SpawnFXsForAbility_ReturnValue;           // 0x0030(0x0010)(ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(NormalMonster_AOE_Base_C_SpawnPreActivateFX) == 0x000010, "Wrong alignment on NormalMonster_AOE_Base_C_SpawnPreActivateFX");
static_assert(sizeof(NormalMonster_AOE_Base_C_SpawnPreActivateFX) == 0x000040, "Wrong size on NormalMonster_AOE_Base_C_SpawnPreActivateFX");
static_assert(offsetof(NormalMonster_AOE_Base_C_SpawnPreActivateFX, CallFunc_GetTransform_ReturnValue) == 0x000000, "Member 'NormalMonster_AOE_Base_C_SpawnPreActivateFX::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(NormalMonster_AOE_Base_C_SpawnPreActivateFX, CallFunc_SpawnFXsForAbility_ReturnValue) == 0x000030, "Member 'NormalMonster_AOE_Base_C_SpawnPreActivateFX::CallFunc_SpawnFXsForAbility_ReturnValue' has a wrong offset!");

// Function NormalMonster_AOE_Base.NormalMonster_AOE_Base_C.SpawnPersistantAOEFx
// 0x0040 (0x0040 - 0x0000)
struct NormalMonster_AOE_Base_C_SpawnPersistantAOEFx final
{
public:
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0000(0x0030)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UNiagaraComponent*>              CallFunc_SpawnFXsForAbility_ReturnValue;           // 0x0030(0x0010)(ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(NormalMonster_AOE_Base_C_SpawnPersistantAOEFx) == 0x000010, "Wrong alignment on NormalMonster_AOE_Base_C_SpawnPersistantAOEFx");
static_assert(sizeof(NormalMonster_AOE_Base_C_SpawnPersistantAOEFx) == 0x000040, "Wrong size on NormalMonster_AOE_Base_C_SpawnPersistantAOEFx");
static_assert(offsetof(NormalMonster_AOE_Base_C_SpawnPersistantAOEFx, CallFunc_GetTransform_ReturnValue) == 0x000000, "Member 'NormalMonster_AOE_Base_C_SpawnPersistantAOEFx::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(NormalMonster_AOE_Base_C_SpawnPersistantAOEFx, CallFunc_SpawnFXsForAbility_ReturnValue) == 0x000030, "Member 'NormalMonster_AOE_Base_C_SpawnPersistantAOEFx::CallFunc_SpawnFXsForAbility_ReturnValue' has a wrong offset!");

// Function NormalMonster_AOE_Base.NormalMonster_AOE_Base_C.SpawnHitFX
// 0x00E0 (0x00E0 - 0x0000)
struct NormalMonster_AOE_Base_C_SpawnHitFX final
{
public:
	TArray<class AActor*>                         Actor_Transform;                                   // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_28[0x8];                                       // 0x0028(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0030(0x0030)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0064(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0070(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x007C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_88[0x8];                                       // 0x0088(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0090(0x0030)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C4[0x4];                                       // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UNiagaraComponent*>              CallFunc_SpawnFXsForAbility_ReturnValue;           // 0x00C8(0x0010)(ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(NormalMonster_AOE_Base_C_SpawnHitFX) == 0x000010, "Wrong alignment on NormalMonster_AOE_Base_C_SpawnHitFX");
static_assert(sizeof(NormalMonster_AOE_Base_C_SpawnHitFX) == 0x0000E0, "Wrong size on NormalMonster_AOE_Base_C_SpawnHitFX");
static_assert(offsetof(NormalMonster_AOE_Base_C_SpawnHitFX, Actor_Transform) == 0x000000, "Member 'NormalMonster_AOE_Base_C_SpawnHitFX::Actor_Transform' has a wrong offset!");
static_assert(offsetof(NormalMonster_AOE_Base_C_SpawnHitFX, CallFunc_Array_Length_ReturnValue) == 0x000010, "Member 'NormalMonster_AOE_Base_C_SpawnHitFX::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(NormalMonster_AOE_Base_C_SpawnHitFX, Temp_int_Array_Index_Variable) == 0x000014, "Member 'NormalMonster_AOE_Base_C_SpawnHitFX::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(NormalMonster_AOE_Base_C_SpawnHitFX, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'NormalMonster_AOE_Base_C_SpawnHitFX::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(NormalMonster_AOE_Base_C_SpawnHitFX, CallFunc_Array_Get_Item) == 0x000020, "Member 'NormalMonster_AOE_Base_C_SpawnHitFX::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(NormalMonster_AOE_Base_C_SpawnHitFX, CallFunc_GetTransform_ReturnValue) == 0x000030, "Member 'NormalMonster_AOE_Base_C_SpawnHitFX::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(NormalMonster_AOE_Base_C_SpawnHitFX, CallFunc_Less_IntInt_ReturnValue) == 0x000060, "Member 'NormalMonster_AOE_Base_C_SpawnHitFX::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(NormalMonster_AOE_Base_C_SpawnHitFX, CallFunc_BreakTransform_Location) == 0x000064, "Member 'NormalMonster_AOE_Base_C_SpawnHitFX::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(NormalMonster_AOE_Base_C_SpawnHitFX, CallFunc_BreakTransform_Rotation) == 0x000070, "Member 'NormalMonster_AOE_Base_C_SpawnHitFX::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(NormalMonster_AOE_Base_C_SpawnHitFX, CallFunc_BreakTransform_Scale) == 0x00007C, "Member 'NormalMonster_AOE_Base_C_SpawnHitFX::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(NormalMonster_AOE_Base_C_SpawnHitFX, CallFunc_MakeTransform_ReturnValue) == 0x000090, "Member 'NormalMonster_AOE_Base_C_SpawnHitFX::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(NormalMonster_AOE_Base_C_SpawnHitFX, CallFunc_Add_IntInt_ReturnValue) == 0x0000C0, "Member 'NormalMonster_AOE_Base_C_SpawnHitFX::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(NormalMonster_AOE_Base_C_SpawnHitFX, CallFunc_SpawnFXsForAbility_ReturnValue) == 0x0000C8, "Member 'NormalMonster_AOE_Base_C_SpawnHitFX::CallFunc_SpawnFXsForAbility_ReturnValue' has a wrong offset!");

// Function NormalMonster_AOE_Base.NormalMonster_AOE_Base_C.SpawnExplosionFX
// 0x0040 (0x0040 - 0x0000)
struct NormalMonster_AOE_Base_C_SpawnExplosionFX final
{
public:
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0000(0x0030)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UNiagaraComponent*>              CallFunc_SpawnFXsForAbility_ReturnValue;           // 0x0030(0x0010)(ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(NormalMonster_AOE_Base_C_SpawnExplosionFX) == 0x000010, "Wrong alignment on NormalMonster_AOE_Base_C_SpawnExplosionFX");
static_assert(sizeof(NormalMonster_AOE_Base_C_SpawnExplosionFX) == 0x000040, "Wrong size on NormalMonster_AOE_Base_C_SpawnExplosionFX");
static_assert(offsetof(NormalMonster_AOE_Base_C_SpawnExplosionFX, CallFunc_GetTransform_ReturnValue) == 0x000000, "Member 'NormalMonster_AOE_Base_C_SpawnExplosionFX::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(NormalMonster_AOE_Base_C_SpawnExplosionFX, CallFunc_SpawnFXsForAbility_ReturnValue) == 0x000030, "Member 'NormalMonster_AOE_Base_C_SpawnExplosionFX::CallFunc_SpawnFXsForAbility_ReturnValue' has a wrong offset!");

// Function NormalMonster_AOE_Base.NormalMonster_AOE_Base_C.SpawnDecalFX
// 0x00A0 (0x00A0 - 0x0000)
struct NormalMonster_AOE_Base_C_SpawnDecalFX final
{
public:
	class FName                                   FName;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Duration;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Size;                                              // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Height;                                            // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0020(0x0030)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FM1FXScalarParam>               CallFunc_MakeDecalParams_ReturnParams;             // 0x0050(0x0010)(ReferenceParm)
	struct FM1FXParam                             K2Node_MakeStruct_M1FXParam;                       // 0x0060(0x0030)()
	TArray<class UNiagaraComponent*>              CallFunc_SpawnFXsForAbility_ReturnValue;           // 0x0090(0x0010)(ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(NormalMonster_AOE_Base_C_SpawnDecalFX) == 0x000010, "Wrong alignment on NormalMonster_AOE_Base_C_SpawnDecalFX");
static_assert(sizeof(NormalMonster_AOE_Base_C_SpawnDecalFX) == 0x0000A0, "Wrong size on NormalMonster_AOE_Base_C_SpawnDecalFX");
static_assert(offsetof(NormalMonster_AOE_Base_C_SpawnDecalFX, FName) == 0x000000, "Member 'NormalMonster_AOE_Base_C_SpawnDecalFX::FName' has a wrong offset!");
static_assert(offsetof(NormalMonster_AOE_Base_C_SpawnDecalFX, Duration) == 0x000008, "Member 'NormalMonster_AOE_Base_C_SpawnDecalFX::Duration' has a wrong offset!");
static_assert(offsetof(NormalMonster_AOE_Base_C_SpawnDecalFX, Size) == 0x000010, "Member 'NormalMonster_AOE_Base_C_SpawnDecalFX::Size' has a wrong offset!");
static_assert(offsetof(NormalMonster_AOE_Base_C_SpawnDecalFX, Height) == 0x000018, "Member 'NormalMonster_AOE_Base_C_SpawnDecalFX::Height' has a wrong offset!");
static_assert(offsetof(NormalMonster_AOE_Base_C_SpawnDecalFX, CallFunc_GetTransform_ReturnValue) == 0x000020, "Member 'NormalMonster_AOE_Base_C_SpawnDecalFX::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(NormalMonster_AOE_Base_C_SpawnDecalFX, CallFunc_MakeDecalParams_ReturnParams) == 0x000050, "Member 'NormalMonster_AOE_Base_C_SpawnDecalFX::CallFunc_MakeDecalParams_ReturnParams' has a wrong offset!");
static_assert(offsetof(NormalMonster_AOE_Base_C_SpawnDecalFX, K2Node_MakeStruct_M1FXParam) == 0x000060, "Member 'NormalMonster_AOE_Base_C_SpawnDecalFX::K2Node_MakeStruct_M1FXParam' has a wrong offset!");
static_assert(offsetof(NormalMonster_AOE_Base_C_SpawnDecalFX, CallFunc_SpawnFXsForAbility_ReturnValue) == 0x000090, "Member 'NormalMonster_AOE_Base_C_SpawnDecalFX::CallFunc_SpawnFXsForAbility_ReturnValue' has a wrong offset!");

// Function NormalMonster_AOE_Base.NormalMonster_AOE_Base_C.NetMultiSpawnHitFX
// 0x0010 (0x0010 - 0x0000)
struct NormalMonster_AOE_Base_C_NetMultiSpawnHitFX final
{
public:
	TArray<class AActor*>                         Overalpping_Actors;                                // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(NormalMonster_AOE_Base_C_NetMultiSpawnHitFX) == 0x000008, "Wrong alignment on NormalMonster_AOE_Base_C_NetMultiSpawnHitFX");
static_assert(sizeof(NormalMonster_AOE_Base_C_NetMultiSpawnHitFX) == 0x000010, "Wrong size on NormalMonster_AOE_Base_C_NetMultiSpawnHitFX");
static_assert(offsetof(NormalMonster_AOE_Base_C_NetMultiSpawnHitFX, Overalpping_Actors) == 0x000000, "Member 'NormalMonster_AOE_Base_C_NetMultiSpawnHitFX::Overalpping_Actors' has a wrong offset!");

// Function NormalMonster_AOE_Base.NormalMonster_AOE_Base_C.InitalizeCollision
// 0x0018 (0x0018 - 0x0000)
struct NormalMonster_AOE_Base_C_InitalizeCollision final
{
public:
	class UM1CylinderComponent*                   CallFunc_GetComponentByClass_ReturnValue;          // 0x0000(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UShapeComponent*                        CallFunc_GetComponentByClass_ReturnValue_1;        // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(NormalMonster_AOE_Base_C_InitalizeCollision) == 0x000008, "Wrong alignment on NormalMonster_AOE_Base_C_InitalizeCollision");
static_assert(sizeof(NormalMonster_AOE_Base_C_InitalizeCollision) == 0x000018, "Wrong size on NormalMonster_AOE_Base_C_InitalizeCollision");
static_assert(offsetof(NormalMonster_AOE_Base_C_InitalizeCollision, CallFunc_GetComponentByClass_ReturnValue) == 0x000000, "Member 'NormalMonster_AOE_Base_C_InitalizeCollision::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(NormalMonster_AOE_Base_C_InitalizeCollision, CallFunc_GetComponentByClass_ReturnValue_1) == 0x000008, "Member 'NormalMonster_AOE_Base_C_InitalizeCollision::CallFunc_GetComponentByClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(NormalMonster_AOE_Base_C_InitalizeCollision, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'NormalMonster_AOE_Base_C_InitalizeCollision::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function NormalMonster_AOE_Base.NormalMonster_AOE_Base_C.FindExplosionOverlapTargets
// 0x0038 (0x0038 - 0x0000)
struct NormalMonster_AOE_Base_C_FindExplosionOverlapTargets final
{
public:
	TArray<class AActor*>                         NewParam;                                          // 0x0000(0x0010)(Parm, OutParm)
	class APawn*                                  CallFunc_GetInstigator_ReturnValue;                // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_GetOverlappingActorsNoFilter_ReturnValue; // 0x0018(0x0010)(ReferenceParm)
	TArray<class AActor*>                         CallFunc_FilterActorByRelations_ReturnValue;       // 0x0028(0x0010)(ReferenceParm)
};
static_assert(alignof(NormalMonster_AOE_Base_C_FindExplosionOverlapTargets) == 0x000008, "Wrong alignment on NormalMonster_AOE_Base_C_FindExplosionOverlapTargets");
static_assert(sizeof(NormalMonster_AOE_Base_C_FindExplosionOverlapTargets) == 0x000038, "Wrong size on NormalMonster_AOE_Base_C_FindExplosionOverlapTargets");
static_assert(offsetof(NormalMonster_AOE_Base_C_FindExplosionOverlapTargets, NewParam) == 0x000000, "Member 'NormalMonster_AOE_Base_C_FindExplosionOverlapTargets::NewParam' has a wrong offset!");
static_assert(offsetof(NormalMonster_AOE_Base_C_FindExplosionOverlapTargets, CallFunc_GetInstigator_ReturnValue) == 0x000010, "Member 'NormalMonster_AOE_Base_C_FindExplosionOverlapTargets::CallFunc_GetInstigator_ReturnValue' has a wrong offset!");
static_assert(offsetof(NormalMonster_AOE_Base_C_FindExplosionOverlapTargets, CallFunc_GetOverlappingActorsNoFilter_ReturnValue) == 0x000018, "Member 'NormalMonster_AOE_Base_C_FindExplosionOverlapTargets::CallFunc_GetOverlappingActorsNoFilter_ReturnValue' has a wrong offset!");
static_assert(offsetof(NormalMonster_AOE_Base_C_FindExplosionOverlapTargets, CallFunc_FilterActorByRelations_ReturnValue) == 0x000028, "Member 'NormalMonster_AOE_Base_C_FindExplosionOverlapTargets::CallFunc_FilterActorByRelations_ReturnValue' has a wrong offset!");

// Function NormalMonster_AOE_Base.NormalMonster_AOE_Base_C.ExecuteUbergraph_NormalMonster_AOE_Base
// 0x00B8 (0x00B8 - 0x0000)
struct NormalMonster_AOE_Base_C_ExecuteUbergraph_NormalMonster_AOE_Base final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         K2Node_CustomEvent_Overalpping_Actors;             // 0x0008(0x0010)(ConstParm, ReferenceParm)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26[0x2];                                       // 0x0026(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0028(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue_1;     // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B[0x1];                                       // 0x003B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x003C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_1;          // 0x004E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F[0x1];                                       // 0x004F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0050(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_1;        // 0x0058(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_2;          // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FMax_ReturnValue;                         // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_3;          // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue_4;          // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_1;               // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_73[0x5];                                       // 0x0073(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetCollisionOverlappingActors_OverlappingActors; // 0x0078(0x0010)(ReferenceParm)
	bool                                          CallFunc_Array_IsEmpty_ReturnValue;                // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9D[0x3];                                       // 0x009D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Delay_Duration_ImplicitCast;              // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_SetTimerDelegate_Time_ImplicitCast;    // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_SetTimerDelegate_Time_ImplicitCast_1;  // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetLifeSpan_InLifespan_ImplicitCast;      // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Delay_Duration_ImplicitCast_1;            // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(NormalMonster_AOE_Base_C_ExecuteUbergraph_NormalMonster_AOE_Base) == 0x000008, "Wrong alignment on NormalMonster_AOE_Base_C_ExecuteUbergraph_NormalMonster_AOE_Base");
static_assert(sizeof(NormalMonster_AOE_Base_C_ExecuteUbergraph_NormalMonster_AOE_Base) == 0x0000B8, "Wrong size on NormalMonster_AOE_Base_C_ExecuteUbergraph_NormalMonster_AOE_Base");
static_assert(offsetof(NormalMonster_AOE_Base_C_ExecuteUbergraph_NormalMonster_AOE_Base, EntryPoint) == 0x000000, "Member 'NormalMonster_AOE_Base_C_ExecuteUbergraph_NormalMonster_AOE_Base::EntryPoint' has a wrong offset!");
static_assert(offsetof(NormalMonster_AOE_Base_C_ExecuteUbergraph_NormalMonster_AOE_Base, K2Node_CustomEvent_Overalpping_Actors) == 0x000008, "Member 'NormalMonster_AOE_Base_C_ExecuteUbergraph_NormalMonster_AOE_Base::K2Node_CustomEvent_Overalpping_Actors' has a wrong offset!");
static_assert(offsetof(NormalMonster_AOE_Base_C_ExecuteUbergraph_NormalMonster_AOE_Base, Temp_int_Array_Index_Variable) == 0x000018, "Member 'NormalMonster_AOE_Base_C_ExecuteUbergraph_NormalMonster_AOE_Base::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(NormalMonster_AOE_Base_C_ExecuteUbergraph_NormalMonster_AOE_Base, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'NormalMonster_AOE_Base_C_ExecuteUbergraph_NormalMonster_AOE_Base::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(NormalMonster_AOE_Base_C_ExecuteUbergraph_NormalMonster_AOE_Base, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'NormalMonster_AOE_Base_C_ExecuteUbergraph_NormalMonster_AOE_Base::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(NormalMonster_AOE_Base_C_ExecuteUbergraph_NormalMonster_AOE_Base, CallFunc_HasAuthority_ReturnValue) == 0x000024, "Member 'NormalMonster_AOE_Base_C_ExecuteUbergraph_NormalMonster_AOE_Base::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(NormalMonster_AOE_Base_C_ExecuteUbergraph_NormalMonster_AOE_Base, CallFunc_IsDedicatedServer_ReturnValue) == 0x000025, "Member 'NormalMonster_AOE_Base_C_ExecuteUbergraph_NormalMonster_AOE_Base::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(NormalMonster_AOE_Base_C_ExecuteUbergraph_NormalMonster_AOE_Base, K2Node_CreateDelegate_OutputDelegate) == 0x000028, "Member 'NormalMonster_AOE_Base_C_ExecuteUbergraph_NormalMonster_AOE_Base::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(NormalMonster_AOE_Base_C_ExecuteUbergraph_NormalMonster_AOE_Base, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000038, "Member 'NormalMonster_AOE_Base_C_ExecuteUbergraph_NormalMonster_AOE_Base::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(NormalMonster_AOE_Base_C_ExecuteUbergraph_NormalMonster_AOE_Base, CallFunc_LessEqual_DoubleDouble_ReturnValue_1) == 0x000039, "Member 'NormalMonster_AOE_Base_C_ExecuteUbergraph_NormalMonster_AOE_Base::CallFunc_LessEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(NormalMonster_AOE_Base_C_ExecuteUbergraph_NormalMonster_AOE_Base, CallFunc_BooleanAND_ReturnValue) == 0x00003A, "Member 'NormalMonster_AOE_Base_C_ExecuteUbergraph_NormalMonster_AOE_Base::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(NormalMonster_AOE_Base_C_ExecuteUbergraph_NormalMonster_AOE_Base, K2Node_CreateDelegate_OutputDelegate_1) == 0x00003C, "Member 'NormalMonster_AOE_Base_C_ExecuteUbergraph_NormalMonster_AOE_Base::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(NormalMonster_AOE_Base_C_ExecuteUbergraph_NormalMonster_AOE_Base, CallFunc_IsValid_ReturnValue) == 0x00004C, "Member 'NormalMonster_AOE_Base_C_ExecuteUbergraph_NormalMonster_AOE_Base::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(NormalMonster_AOE_Base_C_ExecuteUbergraph_NormalMonster_AOE_Base, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x00004D, "Member 'NormalMonster_AOE_Base_C_ExecuteUbergraph_NormalMonster_AOE_Base::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(NormalMonster_AOE_Base_C_ExecuteUbergraph_NormalMonster_AOE_Base, CallFunc_IsDedicatedServer_ReturnValue_1) == 0x00004E, "Member 'NormalMonster_AOE_Base_C_ExecuteUbergraph_NormalMonster_AOE_Base::CallFunc_IsDedicatedServer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(NormalMonster_AOE_Base_C_ExecuteUbergraph_NormalMonster_AOE_Base, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000050, "Member 'NormalMonster_AOE_Base_C_ExecuteUbergraph_NormalMonster_AOE_Base::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(NormalMonster_AOE_Base_C_ExecuteUbergraph_NormalMonster_AOE_Base, CallFunc_K2_SetTimerDelegate_ReturnValue_1) == 0x000058, "Member 'NormalMonster_AOE_Base_C_ExecuteUbergraph_NormalMonster_AOE_Base::CallFunc_K2_SetTimerDelegate_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(NormalMonster_AOE_Base_C_ExecuteUbergraph_NormalMonster_AOE_Base, CallFunc_IsDedicatedServer_ReturnValue_2) == 0x000060, "Member 'NormalMonster_AOE_Base_C_ExecuteUbergraph_NormalMonster_AOE_Base::CallFunc_IsDedicatedServer_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(NormalMonster_AOE_Base_C_ExecuteUbergraph_NormalMonster_AOE_Base, CallFunc_FMax_ReturnValue) == 0x000068, "Member 'NormalMonster_AOE_Base_C_ExecuteUbergraph_NormalMonster_AOE_Base::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(NormalMonster_AOE_Base_C_ExecuteUbergraph_NormalMonster_AOE_Base, CallFunc_IsDedicatedServer_ReturnValue_3) == 0x000070, "Member 'NormalMonster_AOE_Base_C_ExecuteUbergraph_NormalMonster_AOE_Base::CallFunc_IsDedicatedServer_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(NormalMonster_AOE_Base_C_ExecuteUbergraph_NormalMonster_AOE_Base, CallFunc_IsDedicatedServer_ReturnValue_4) == 0x000071, "Member 'NormalMonster_AOE_Base_C_ExecuteUbergraph_NormalMonster_AOE_Base::CallFunc_IsDedicatedServer_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(NormalMonster_AOE_Base_C_ExecuteUbergraph_NormalMonster_AOE_Base, CallFunc_HasAuthority_ReturnValue_1) == 0x000072, "Member 'NormalMonster_AOE_Base_C_ExecuteUbergraph_NormalMonster_AOE_Base::CallFunc_HasAuthority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(NormalMonster_AOE_Base_C_ExecuteUbergraph_NormalMonster_AOE_Base, CallFunc_GetCollisionOverlappingActors_OverlappingActors) == 0x000078, "Member 'NormalMonster_AOE_Base_C_ExecuteUbergraph_NormalMonster_AOE_Base::CallFunc_GetCollisionOverlappingActors_OverlappingActors' has a wrong offset!");
static_assert(offsetof(NormalMonster_AOE_Base_C_ExecuteUbergraph_NormalMonster_AOE_Base, CallFunc_Array_IsEmpty_ReturnValue) == 0x000088, "Member 'NormalMonster_AOE_Base_C_ExecuteUbergraph_NormalMonster_AOE_Base::CallFunc_Array_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(NormalMonster_AOE_Base_C_ExecuteUbergraph_NormalMonster_AOE_Base, CallFunc_Array_Get_Item) == 0x000090, "Member 'NormalMonster_AOE_Base_C_ExecuteUbergraph_NormalMonster_AOE_Base::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(NormalMonster_AOE_Base_C_ExecuteUbergraph_NormalMonster_AOE_Base, CallFunc_Array_Length_ReturnValue) == 0x000098, "Member 'NormalMonster_AOE_Base_C_ExecuteUbergraph_NormalMonster_AOE_Base::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(NormalMonster_AOE_Base_C_ExecuteUbergraph_NormalMonster_AOE_Base, CallFunc_Less_IntInt_ReturnValue) == 0x00009C, "Member 'NormalMonster_AOE_Base_C_ExecuteUbergraph_NormalMonster_AOE_Base::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(NormalMonster_AOE_Base_C_ExecuteUbergraph_NormalMonster_AOE_Base, CallFunc_Delay_Duration_ImplicitCast) == 0x0000A0, "Member 'NormalMonster_AOE_Base_C_ExecuteUbergraph_NormalMonster_AOE_Base::CallFunc_Delay_Duration_ImplicitCast' has a wrong offset!");
static_assert(offsetof(NormalMonster_AOE_Base_C_ExecuteUbergraph_NormalMonster_AOE_Base, CallFunc_K2_SetTimerDelegate_Time_ImplicitCast) == 0x0000A4, "Member 'NormalMonster_AOE_Base_C_ExecuteUbergraph_NormalMonster_AOE_Base::CallFunc_K2_SetTimerDelegate_Time_ImplicitCast' has a wrong offset!");
static_assert(offsetof(NormalMonster_AOE_Base_C_ExecuteUbergraph_NormalMonster_AOE_Base, CallFunc_K2_SetTimerDelegate_Time_ImplicitCast_1) == 0x0000A8, "Member 'NormalMonster_AOE_Base_C_ExecuteUbergraph_NormalMonster_AOE_Base::CallFunc_K2_SetTimerDelegate_Time_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(NormalMonster_AOE_Base_C_ExecuteUbergraph_NormalMonster_AOE_Base, CallFunc_SetLifeSpan_InLifespan_ImplicitCast) == 0x0000AC, "Member 'NormalMonster_AOE_Base_C_ExecuteUbergraph_NormalMonster_AOE_Base::CallFunc_SetLifeSpan_InLifespan_ImplicitCast' has a wrong offset!");
static_assert(offsetof(NormalMonster_AOE_Base_C_ExecuteUbergraph_NormalMonster_AOE_Base, CallFunc_Delay_Duration_ImplicitCast_1) == 0x0000B0, "Member 'NormalMonster_AOE_Base_C_ExecuteUbergraph_NormalMonster_AOE_Base::CallFunc_Delay_Duration_ImplicitCast_1' has a wrong offset!");

// Function NormalMonster_AOE_Base.NormalMonster_AOE_Base_C.ExecuteIntervalHit
// 0x0088 (0x0088 - 0x0000)
struct NormalMonster_AOE_Base_C_ExecuteIntervalHit final
{
public:
	class AActor*                                 OverlappingActor;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<struct FM1TaggedAbilityParamData>      Temp_struct_Variable;                              // 0x0008(0x0010)(ConstParm, ReferenceParm)
	class UM1StatusEffectComponent*               CallFunc_GetComponentByClass_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           Temp_name_Variable;                                // 0x0020(0x0010)(ConstParm, ReferenceParm)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FM1AbilityContextHandle                CallFunc_BP_MakeForwardingContext_ReturnValue;     // 0x0038(0x0010)()
	TArray<struct FM1AbilityId>                   CallFunc_InvokeAllStatusEffectToTargetByTag_ReturnValue; // 0x0048(0x0010)(ReferenceParm)
	struct FGameplayTag                           CallFunc_MakeLiteralGameplayTag_ReturnValue;       // 0x0058(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  CallFunc_MakeGameplayTagContainerFromTag_ReturnValue; // 0x0060(0x0020)()
	bool                                          CallFunc_IsActiveStatusEffectIdTag_ReturnValue;    // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(NormalMonster_AOE_Base_C_ExecuteIntervalHit) == 0x000008, "Wrong alignment on NormalMonster_AOE_Base_C_ExecuteIntervalHit");
static_assert(sizeof(NormalMonster_AOE_Base_C_ExecuteIntervalHit) == 0x000088, "Wrong size on NormalMonster_AOE_Base_C_ExecuteIntervalHit");
static_assert(offsetof(NormalMonster_AOE_Base_C_ExecuteIntervalHit, OverlappingActor) == 0x000000, "Member 'NormalMonster_AOE_Base_C_ExecuteIntervalHit::OverlappingActor' has a wrong offset!");
static_assert(offsetof(NormalMonster_AOE_Base_C_ExecuteIntervalHit, Temp_struct_Variable) == 0x000008, "Member 'NormalMonster_AOE_Base_C_ExecuteIntervalHit::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(NormalMonster_AOE_Base_C_ExecuteIntervalHit, CallFunc_GetComponentByClass_ReturnValue) == 0x000018, "Member 'NormalMonster_AOE_Base_C_ExecuteIntervalHit::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(NormalMonster_AOE_Base_C_ExecuteIntervalHit, Temp_name_Variable) == 0x000020, "Member 'NormalMonster_AOE_Base_C_ExecuteIntervalHit::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(NormalMonster_AOE_Base_C_ExecuteIntervalHit, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'NormalMonster_AOE_Base_C_ExecuteIntervalHit::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(NormalMonster_AOE_Base_C_ExecuteIntervalHit, CallFunc_BP_MakeForwardingContext_ReturnValue) == 0x000038, "Member 'NormalMonster_AOE_Base_C_ExecuteIntervalHit::CallFunc_BP_MakeForwardingContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(NormalMonster_AOE_Base_C_ExecuteIntervalHit, CallFunc_InvokeAllStatusEffectToTargetByTag_ReturnValue) == 0x000048, "Member 'NormalMonster_AOE_Base_C_ExecuteIntervalHit::CallFunc_InvokeAllStatusEffectToTargetByTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(NormalMonster_AOE_Base_C_ExecuteIntervalHit, CallFunc_MakeLiteralGameplayTag_ReturnValue) == 0x000058, "Member 'NormalMonster_AOE_Base_C_ExecuteIntervalHit::CallFunc_MakeLiteralGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(NormalMonster_AOE_Base_C_ExecuteIntervalHit, CallFunc_MakeGameplayTagContainerFromTag_ReturnValue) == 0x000060, "Member 'NormalMonster_AOE_Base_C_ExecuteIntervalHit::CallFunc_MakeGameplayTagContainerFromTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(NormalMonster_AOE_Base_C_ExecuteIntervalHit, CallFunc_IsActiveStatusEffectIdTag_ReturnValue) == 0x000080, "Member 'NormalMonster_AOE_Base_C_ExecuteIntervalHit::CallFunc_IsActiveStatusEffectIdTag_ReturnValue' has a wrong offset!");

// Function NormalMonster_AOE_Base.NormalMonster_AOE_Base_C.ApplyExplosion
// 0x0088 (0x0088 - 0x0000)
struct NormalMonster_AOE_Base_C_ApplyExplosion final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           Temp_name_Variable;                                // 0x0008(0x0010)(ConstParm, ReferenceParm)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FM1TaggedAbilityParamData>      Temp_struct_Variable;                              // 0x0020(0x0010)(ConstParm, ReferenceParm)
	class APawn*                                  CallFunc_GetInstigator_ReturnValue;                // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FM1AbilityContextHandle                CallFunc_BP_MakeForwardingContext_ReturnValue;     // 0x0038(0x0010)()
	TArray<class AActor*>                         CallFunc_FindExplosionOverlapTargets_NewParam;     // 0x0048(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FM1AbilityId>                   CallFunc_InvokeAllStatusEffectToTargetByTag_ReturnValue; // 0x0070(0x0010)(ReferenceParm)
	bool                                          CallFunc_IsValidEnemy_ReturnValue;                 // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(NormalMonster_AOE_Base_C_ApplyExplosion) == 0x000008, "Wrong alignment on NormalMonster_AOE_Base_C_ApplyExplosion");
static_assert(sizeof(NormalMonster_AOE_Base_C_ApplyExplosion) == 0x000088, "Wrong size on NormalMonster_AOE_Base_C_ApplyExplosion");
static_assert(offsetof(NormalMonster_AOE_Base_C_ApplyExplosion, Temp_int_Array_Index_Variable) == 0x000000, "Member 'NormalMonster_AOE_Base_C_ApplyExplosion::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(NormalMonster_AOE_Base_C_ApplyExplosion, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'NormalMonster_AOE_Base_C_ApplyExplosion::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(NormalMonster_AOE_Base_C_ApplyExplosion, Temp_name_Variable) == 0x000008, "Member 'NormalMonster_AOE_Base_C_ApplyExplosion::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(NormalMonster_AOE_Base_C_ApplyExplosion, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'NormalMonster_AOE_Base_C_ApplyExplosion::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(NormalMonster_AOE_Base_C_ApplyExplosion, Temp_struct_Variable) == 0x000020, "Member 'NormalMonster_AOE_Base_C_ApplyExplosion::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(NormalMonster_AOE_Base_C_ApplyExplosion, CallFunc_GetInstigator_ReturnValue) == 0x000030, "Member 'NormalMonster_AOE_Base_C_ApplyExplosion::CallFunc_GetInstigator_ReturnValue' has a wrong offset!");
static_assert(offsetof(NormalMonster_AOE_Base_C_ApplyExplosion, CallFunc_BP_MakeForwardingContext_ReturnValue) == 0x000038, "Member 'NormalMonster_AOE_Base_C_ApplyExplosion::CallFunc_BP_MakeForwardingContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(NormalMonster_AOE_Base_C_ApplyExplosion, CallFunc_FindExplosionOverlapTargets_NewParam) == 0x000048, "Member 'NormalMonster_AOE_Base_C_ApplyExplosion::CallFunc_FindExplosionOverlapTargets_NewParam' has a wrong offset!");
static_assert(offsetof(NormalMonster_AOE_Base_C_ApplyExplosion, CallFunc_Array_Length_ReturnValue) == 0x000058, "Member 'NormalMonster_AOE_Base_C_ApplyExplosion::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(NormalMonster_AOE_Base_C_ApplyExplosion, CallFunc_Array_Get_Item) == 0x000060, "Member 'NormalMonster_AOE_Base_C_ApplyExplosion::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(NormalMonster_AOE_Base_C_ApplyExplosion, CallFunc_Less_IntInt_ReturnValue) == 0x000068, "Member 'NormalMonster_AOE_Base_C_ApplyExplosion::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(NormalMonster_AOE_Base_C_ApplyExplosion, CallFunc_InvokeAllStatusEffectToTargetByTag_ReturnValue) == 0x000070, "Member 'NormalMonster_AOE_Base_C_ApplyExplosion::CallFunc_InvokeAllStatusEffectToTargetByTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(NormalMonster_AOE_Base_C_ApplyExplosion, CallFunc_IsValidEnemy_ReturnValue) == 0x000080, "Member 'NormalMonster_AOE_Base_C_ApplyExplosion::CallFunc_IsValidEnemy_ReturnValue' has a wrong offset!");

}

