#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: NormalMonster_MeleeAttackSphere

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function NormalMonster_MeleeAttackSphere.NormalMonster_MeleeAttackSphere_C.CheckOverlapHitDetection
// 0x0028 (0x0028 - 0x0000)
struct NormalMonster_MeleeAttackSphere_C_CheckOverlapHitDetection final
{
public:
	TArray<class AActor*>                         HitActors;                                         // 0x0000(0x0010)(Parm, OutParm)
	TArray<class AActor*>                         CallFunc_FindSphereOverlapActors_OutActors;        // 0x0010(0x0010)(ReferenceParm)
	bool                                          CallFunc_FindSphereOverlapActors_ReturnValue;      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_FindSphereOverlapActors_SphereRadius_ImplicitCast; // 0x0024(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(NormalMonster_MeleeAttackSphere_C_CheckOverlapHitDetection) == 0x000008, "Wrong alignment on NormalMonster_MeleeAttackSphere_C_CheckOverlapHitDetection");
static_assert(sizeof(NormalMonster_MeleeAttackSphere_C_CheckOverlapHitDetection) == 0x000028, "Wrong size on NormalMonster_MeleeAttackSphere_C_CheckOverlapHitDetection");
static_assert(offsetof(NormalMonster_MeleeAttackSphere_C_CheckOverlapHitDetection, HitActors) == 0x000000, "Member 'NormalMonster_MeleeAttackSphere_C_CheckOverlapHitDetection::HitActors' has a wrong offset!");
static_assert(offsetof(NormalMonster_MeleeAttackSphere_C_CheckOverlapHitDetection, CallFunc_FindSphereOverlapActors_OutActors) == 0x000010, "Member 'NormalMonster_MeleeAttackSphere_C_CheckOverlapHitDetection::CallFunc_FindSphereOverlapActors_OutActors' has a wrong offset!");
static_assert(offsetof(NormalMonster_MeleeAttackSphere_C_CheckOverlapHitDetection, CallFunc_FindSphereOverlapActors_ReturnValue) == 0x000020, "Member 'NormalMonster_MeleeAttackSphere_C_CheckOverlapHitDetection::CallFunc_FindSphereOverlapActors_ReturnValue' has a wrong offset!");
static_assert(offsetof(NormalMonster_MeleeAttackSphere_C_CheckOverlapHitDetection, CallFunc_FindSphereOverlapActors_SphereRadius_ImplicitCast) == 0x000024, "Member 'NormalMonster_MeleeAttackSphere_C_CheckOverlapHitDetection::CallFunc_FindSphereOverlapActors_SphereRadius_ImplicitCast' has a wrong offset!");

// Function NormalMonster_MeleeAttackSphere.NormalMonster_MeleeAttackSphere_C.DrawDebugSphere
// 0x0010 (0x0010 - 0x0000)
struct NormalMonster_MeleeAttackSphere_C_DrawDebugSphere final
{
public:
	struct FVector                                SphereCenterLoc;                                   // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DrawDebugSphere_Radius_ImplicitCast;      // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(NormalMonster_MeleeAttackSphere_C_DrawDebugSphere) == 0x000004, "Wrong alignment on NormalMonster_MeleeAttackSphere_C_DrawDebugSphere");
static_assert(sizeof(NormalMonster_MeleeAttackSphere_C_DrawDebugSphere) == 0x000010, "Wrong size on NormalMonster_MeleeAttackSphere_C_DrawDebugSphere");
static_assert(offsetof(NormalMonster_MeleeAttackSphere_C_DrawDebugSphere, SphereCenterLoc) == 0x000000, "Member 'NormalMonster_MeleeAttackSphere_C_DrawDebugSphere::SphereCenterLoc' has a wrong offset!");
static_assert(offsetof(NormalMonster_MeleeAttackSphere_C_DrawDebugSphere, CallFunc_DrawDebugSphere_Radius_ImplicitCast) == 0x00000C, "Member 'NormalMonster_MeleeAttackSphere_C_DrawDebugSphere::CallFunc_DrawDebugSphere_Radius_ImplicitCast' has a wrong offset!");

}

