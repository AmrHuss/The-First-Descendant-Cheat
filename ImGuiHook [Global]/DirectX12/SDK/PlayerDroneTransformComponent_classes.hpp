#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PlayerDroneTransformComponent

#include "Basic.hpp"

#include "M1_classes.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "PlayerDroneTransformControlValues_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass PlayerDroneTransformComponent.PlayerDroneTransformComponent_C
// 0x0108 (0x0228 - 0x0120)
class UPlayerDroneTransformComponent_C final : public UM1ActorFollowComponent
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0120(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	double                                        DragRate;                                          // 0x0128(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        RestoreRate;                                       // 0x0130(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRuntimeFloatCurve                     OffsetRangeCurve;                                  // 0x0138(0x0088)(Edit, BlueprintVisible)
	double                                        AlignRate;                                         // 0x01C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        DefaultSpringStiffness;                            // 0x01C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        StrongSpringStiffness;                             // 0x01D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   JumpBaseSocketName;                                // 0x01D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bDragging;                                         // 0x01E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E1[0x7];                                      // 0x01E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        OffsetAlpha;                                       // 0x01E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TargetAlignDir;                                    // 0x01F0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CurrentAlignDir;                                   // 0x01FC(0x000C)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bDebugDraw;                                        // 0x0208(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_209[0x7];                                      // 0x0209(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FPlayerDroneTransformControlValues> TransformControlValues;                            // 0x0210(0x0010)(Edit, BlueprintVisible, Transient, DisableEditOnInstance, ContainsInstancedReference)
	float                                         CurrentSpringStiffness;                            // 0x0220(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void TickWithFollowTarget_Deprecated(class AActor*& FollowActor, float DeltaTime);
	void TickWithFollowTarget(class AActor* FollowActor, float DeltaTime);
	void TickUpdateAlignmentDirection_Deprecated(class AActor* FollowActor, float DeltaTime, bool bIsDragging);
	void TickEachControl_Deprecated(const class AActor* FollowActor, class USceneComponent* Component, const struct FM1ActorFollowParams& Params_0, double DeltaTime);
	void TickEachControl(class AActor* FollowActor, class FName ControlTag, class USceneComponent* ComponentToControl, const struct FM1ActorFollowParams& Params_0, float DeltaTime);
	void OnAddedControl_Deprecated(const class AActor* FollowActor, class USceneComponent* Component, const struct FM1ActorFollowParams& Params_0);
	void OnAddedControl(class AActor* FollowActor, class FName ControlTag, class USceneComponent* OwnedSceneComponent, const struct FM1ActorFollowParams& Params_0);
	void ExecuteUbergraph_PlayerDroneTransformComponent(int32 EntryPoint);
	double CalcOffsetZ(const class AActor* FollowActor);
	void CalcJumpZOffset(const class AActor* FollowActor, class FName JumpSocketName, double* JumpZOffset);
	struct FVector CalcBaseOffsetLocation_Deprecated(const class AActor* FollowActor, class FName SocketName, const struct FVector& Displacement);

	void CanDragBaseLocation_Deprecated(class AActor*& FollowActor, double DeltaTime, bool* bDrag) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"PlayerDroneTransformComponent_C">();
	}
	static class UPlayerDroneTransformComponent_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPlayerDroneTransformComponent_C>();
	}
};
static_assert(alignof(UPlayerDroneTransformComponent_C) == 0x000008, "Wrong alignment on UPlayerDroneTransformComponent_C");
static_assert(sizeof(UPlayerDroneTransformComponent_C) == 0x000228, "Wrong size on UPlayerDroneTransformComponent_C");
static_assert(offsetof(UPlayerDroneTransformComponent_C, UberGraphFrame) == 0x000120, "Member 'UPlayerDroneTransformComponent_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UPlayerDroneTransformComponent_C, DragRate) == 0x000128, "Member 'UPlayerDroneTransformComponent_C::DragRate' has a wrong offset!");
static_assert(offsetof(UPlayerDroneTransformComponent_C, RestoreRate) == 0x000130, "Member 'UPlayerDroneTransformComponent_C::RestoreRate' has a wrong offset!");
static_assert(offsetof(UPlayerDroneTransformComponent_C, OffsetRangeCurve) == 0x000138, "Member 'UPlayerDroneTransformComponent_C::OffsetRangeCurve' has a wrong offset!");
static_assert(offsetof(UPlayerDroneTransformComponent_C, AlignRate) == 0x0001C0, "Member 'UPlayerDroneTransformComponent_C::AlignRate' has a wrong offset!");
static_assert(offsetof(UPlayerDroneTransformComponent_C, DefaultSpringStiffness) == 0x0001C8, "Member 'UPlayerDroneTransformComponent_C::DefaultSpringStiffness' has a wrong offset!");
static_assert(offsetof(UPlayerDroneTransformComponent_C, StrongSpringStiffness) == 0x0001D0, "Member 'UPlayerDroneTransformComponent_C::StrongSpringStiffness' has a wrong offset!");
static_assert(offsetof(UPlayerDroneTransformComponent_C, JumpBaseSocketName) == 0x0001D8, "Member 'UPlayerDroneTransformComponent_C::JumpBaseSocketName' has a wrong offset!");
static_assert(offsetof(UPlayerDroneTransformComponent_C, bDragging) == 0x0001E0, "Member 'UPlayerDroneTransformComponent_C::bDragging' has a wrong offset!");
static_assert(offsetof(UPlayerDroneTransformComponent_C, OffsetAlpha) == 0x0001E8, "Member 'UPlayerDroneTransformComponent_C::OffsetAlpha' has a wrong offset!");
static_assert(offsetof(UPlayerDroneTransformComponent_C, TargetAlignDir) == 0x0001F0, "Member 'UPlayerDroneTransformComponent_C::TargetAlignDir' has a wrong offset!");
static_assert(offsetof(UPlayerDroneTransformComponent_C, CurrentAlignDir) == 0x0001FC, "Member 'UPlayerDroneTransformComponent_C::CurrentAlignDir' has a wrong offset!");
static_assert(offsetof(UPlayerDroneTransformComponent_C, bDebugDraw) == 0x000208, "Member 'UPlayerDroneTransformComponent_C::bDebugDraw' has a wrong offset!");
static_assert(offsetof(UPlayerDroneTransformComponent_C, TransformControlValues) == 0x000210, "Member 'UPlayerDroneTransformComponent_C::TransformControlValues' has a wrong offset!");
static_assert(offsetof(UPlayerDroneTransformComponent_C, CurrentSpringStiffness) == 0x000220, "Member 'UPlayerDroneTransformComponent_C::CurrentSpringStiffness' has a wrong offset!");

}

