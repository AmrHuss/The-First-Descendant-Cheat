#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: RadiusVisualizeBall

#include "Basic.hpp"

#include "RadiusVisualizeBall_classes.hpp"
#include "RadiusVisualizeBall_parameters.hpp"


namespace SDK
{

// Function RadiusVisualizeBall.RadiusVisualizeBall_C.destroy
// (Public, BlueprintCallable, BlueprintEvent)

void ARadiusVisualizeBall_C::Destroy()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RadiusVisualizeBall_C", "destroy");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RadiusVisualizeBall.RadiusVisualizeBall_C.ExecuteUbergraph_RadiusVisualizeBall
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ARadiusVisualizeBall_C::ExecuteUbergraph_RadiusVisualizeBall(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RadiusVisualizeBall_C", "ExecuteUbergraph_RadiusVisualizeBall");

	Params::RadiusVisualizeBall_C_ExecuteUbergraph_RadiusVisualizeBall Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function RadiusVisualizeBall.RadiusVisualizeBall_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ARadiusVisualizeBall_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RadiusVisualizeBall_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function RadiusVisualizeBall.RadiusVisualizeBall_C.UserConstructionScript
// (Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ARadiusVisualizeBall_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("RadiusVisualizeBall_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}

}

