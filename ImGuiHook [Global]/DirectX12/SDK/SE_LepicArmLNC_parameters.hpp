#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SE_LepicArmLNC

#include "Basic.hpp"

#include "M1_structs.hpp"


namespace SDK::Params
{

// Function SE_LepicArmLNC.SE_LepicArmLNC_C.ExecuteUbergraph_SE_LepicArmLNC
// 0x0040 (0x0040 - 0x0000)
struct SE_LepicArmLNC_C_ExecuteUbergraph_SE_LepicArmLNC final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UNiagaraComponent*>              CallFunc_SpawnFXsForAbility_ReturnValue;           // 0x0008(0x0010)(ReferenceParm, ContainsInstancedReference)
	TArray<struct FM1ActiveAbilityOperationId>    CallFunc_BP_StartOperationsToSelfByTag_ReturnValue; // 0x0018(0x0010)(ReferenceParm)
	bool                                          K2Node_Event_bCancelled;                           // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UNiagaraComponent*>              CallFunc_SpawnFXsForAbility_ReturnValue_1;         // 0x0030(0x0010)(ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(SE_LepicArmLNC_C_ExecuteUbergraph_SE_LepicArmLNC) == 0x000008, "Wrong alignment on SE_LepicArmLNC_C_ExecuteUbergraph_SE_LepicArmLNC");
static_assert(sizeof(SE_LepicArmLNC_C_ExecuteUbergraph_SE_LepicArmLNC) == 0x000040, "Wrong size on SE_LepicArmLNC_C_ExecuteUbergraph_SE_LepicArmLNC");
static_assert(offsetof(SE_LepicArmLNC_C_ExecuteUbergraph_SE_LepicArmLNC, EntryPoint) == 0x000000, "Member 'SE_LepicArmLNC_C_ExecuteUbergraph_SE_LepicArmLNC::EntryPoint' has a wrong offset!");
static_assert(offsetof(SE_LepicArmLNC_C_ExecuteUbergraph_SE_LepicArmLNC, CallFunc_SpawnFXsForAbility_ReturnValue) == 0x000008, "Member 'SE_LepicArmLNC_C_ExecuteUbergraph_SE_LepicArmLNC::CallFunc_SpawnFXsForAbility_ReturnValue' has a wrong offset!");
static_assert(offsetof(SE_LepicArmLNC_C_ExecuteUbergraph_SE_LepicArmLNC, CallFunc_BP_StartOperationsToSelfByTag_ReturnValue) == 0x000018, "Member 'SE_LepicArmLNC_C_ExecuteUbergraph_SE_LepicArmLNC::CallFunc_BP_StartOperationsToSelfByTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(SE_LepicArmLNC_C_ExecuteUbergraph_SE_LepicArmLNC, K2Node_Event_bCancelled) == 0x000028, "Member 'SE_LepicArmLNC_C_ExecuteUbergraph_SE_LepicArmLNC::K2Node_Event_bCancelled' has a wrong offset!");
static_assert(offsetof(SE_LepicArmLNC_C_ExecuteUbergraph_SE_LepicArmLNC, CallFunc_SpawnFXsForAbility_ReturnValue_1) == 0x000030, "Member 'SE_LepicArmLNC_C_ExecuteUbergraph_SE_LepicArmLNC::CallFunc_SpawnFXsForAbility_ReturnValue_1' has a wrong offset!");

// Function SE_LepicArmLNC.SE_LepicArmLNC_C.BP_OnDeactivated
// 0x0001 (0x0001 - 0x0000)
struct SE_LepicArmLNC_C_BP_OnDeactivated final
{
public:
	bool                                          bCancelled;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SE_LepicArmLNC_C_BP_OnDeactivated) == 0x000001, "Wrong alignment on SE_LepicArmLNC_C_BP_OnDeactivated");
static_assert(sizeof(SE_LepicArmLNC_C_BP_OnDeactivated) == 0x000001, "Wrong size on SE_LepicArmLNC_C_BP_OnDeactivated");
static_assert(offsetof(SE_LepicArmLNC_C_BP_OnDeactivated, bCancelled) == 0x000000, "Member 'SE_LepicArmLNC_C_BP_OnDeactivated::bCancelled' has a wrong offset!");

}

