#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SE_LepicPowerstream

#include "Basic.hpp"

#include "M1_structs.hpp"
#include "M1Data_structs.hpp"


namespace SDK::Params
{

// Function SE_LepicPowerstream.SE_LepicPowerstream_C.OnAbilityEvent_2D5086D5473DC714F5E37BADE24BE05C
// 0x0040 (0x0040 - 0x0000)
struct SE_LepicPowerstream_C_OnAbilityEvent_2D5086D5473DC714F5E37BADE24BE05C final
{
public:
	struct FM1AbilityEvent                        Event;                                             // 0x0000(0x0040)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(SE_LepicPowerstream_C_OnAbilityEvent_2D5086D5473DC714F5E37BADE24BE05C) == 0x000008, "Wrong alignment on SE_LepicPowerstream_C_OnAbilityEvent_2D5086D5473DC714F5E37BADE24BE05C");
static_assert(sizeof(SE_LepicPowerstream_C_OnAbilityEvent_2D5086D5473DC714F5E37BADE24BE05C) == 0x000040, "Wrong size on SE_LepicPowerstream_C_OnAbilityEvent_2D5086D5473DC714F5E37BADE24BE05C");
static_assert(offsetof(SE_LepicPowerstream_C_OnAbilityEvent_2D5086D5473DC714F5E37BADE24BE05C, Event) == 0x000000, "Member 'SE_LepicPowerstream_C_OnAbilityEvent_2D5086D5473DC714F5E37BADE24BE05C::Event' has a wrong offset!");

// Function SE_LepicPowerstream.SE_LepicPowerstream_C.ExecuteUbergraph_SE_LepicPowerstream
// 0x0170 (0x0170 - 0x0000)
struct SE_LepicPowerstream_C_ExecuteUbergraph_SE_LepicPowerstream final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FM1TaggedAbilityParamData>      Temp_struct_Variable;                              // 0x0008(0x0010)(ConstParm, ReferenceParm)
	TArray<class FName>                           Temp_name_Variable;                                // 0x0018(0x0010)(ConstParm, ReferenceParm)
	struct FM1AbilityContextHandle                CallFunc_BP_MakeForwardingContext_ReturnValue;     // 0x0028(0x0010)()
	TDelegate<void(struct FM1AbilityEvent& Event)> K2Node_CreateDelegate_OutputDelegate;              // 0x0038(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FM1AbilityEvent                        K2Node_CustomEvent_Event;                          // 0x0048(0x0040)(ConstParm)
	struct FM1AbilityEvent                        Temp_struct_Variable_1;                            // 0x0088(0x0040)()
	class UM1AbilityTask_WaitAbilityEvent*        CallFunc_WaitAbilityEvent_ReturnValue;             // 0x00C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D2[0x6];                                       // 0x00D2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FM1AbilityId                           CallFunc_InvokeFirstStatusEffectToTargetByTag_ReturnValue; // 0x00D8(0x0010)(HasGetValueTypeHash)
	TArray<struct FM1ActiveAbilityOperationId>    CallFunc_BP_StartOperationsToSelfByTag_ReturnValue; // 0x00E8(0x0010)(ReferenceParm)
	bool                                          K2Node_Event_bCancelled;                           // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F9[0x3];                                       // 0x00F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x00FC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x010C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10D[0x3];                                      // 0x010D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetDuration_ReturnValue;                  // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_114[0x4];                                      // 0x0114(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwnerActor_ReturnValue;                // 0x0118(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_129[0x7];                                      // 0x0129(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UM1AbilityTask_WaitDelay*               CallFunc_WaitDelay_ReturnValue;                    // 0x0130(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_139[0x7];                                      // 0x0139(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UNiagaraComponent*>              CallFunc_SpawnFXsForAbility_ReturnValue;           // 0x0140(0x0010)(ReferenceParm, ContainsInstancedReference)
	TArray<class UNiagaraComponent*>              CallFunc_SpawnFXsForAbility_ReturnValue_1;         // 0x0150(0x0010)(ReferenceParm, ContainsInstancedReference)
	double                                        CallFunc_Subtract_DoubleDouble_A_ImplicitCast;     // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_WaitDelay_InTime_ImplicitCast;            // 0x0168(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SE_LepicPowerstream_C_ExecuteUbergraph_SE_LepicPowerstream) == 0x000008, "Wrong alignment on SE_LepicPowerstream_C_ExecuteUbergraph_SE_LepicPowerstream");
static_assert(sizeof(SE_LepicPowerstream_C_ExecuteUbergraph_SE_LepicPowerstream) == 0x000170, "Wrong size on SE_LepicPowerstream_C_ExecuteUbergraph_SE_LepicPowerstream");
static_assert(offsetof(SE_LepicPowerstream_C_ExecuteUbergraph_SE_LepicPowerstream, EntryPoint) == 0x000000, "Member 'SE_LepicPowerstream_C_ExecuteUbergraph_SE_LepicPowerstream::EntryPoint' has a wrong offset!");
static_assert(offsetof(SE_LepicPowerstream_C_ExecuteUbergraph_SE_LepicPowerstream, Temp_struct_Variable) == 0x000008, "Member 'SE_LepicPowerstream_C_ExecuteUbergraph_SE_LepicPowerstream::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(SE_LepicPowerstream_C_ExecuteUbergraph_SE_LepicPowerstream, Temp_name_Variable) == 0x000018, "Member 'SE_LepicPowerstream_C_ExecuteUbergraph_SE_LepicPowerstream::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(SE_LepicPowerstream_C_ExecuteUbergraph_SE_LepicPowerstream, CallFunc_BP_MakeForwardingContext_ReturnValue) == 0x000028, "Member 'SE_LepicPowerstream_C_ExecuteUbergraph_SE_LepicPowerstream::CallFunc_BP_MakeForwardingContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(SE_LepicPowerstream_C_ExecuteUbergraph_SE_LepicPowerstream, K2Node_CreateDelegate_OutputDelegate) == 0x000038, "Member 'SE_LepicPowerstream_C_ExecuteUbergraph_SE_LepicPowerstream::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(SE_LepicPowerstream_C_ExecuteUbergraph_SE_LepicPowerstream, K2Node_CustomEvent_Event) == 0x000048, "Member 'SE_LepicPowerstream_C_ExecuteUbergraph_SE_LepicPowerstream::K2Node_CustomEvent_Event' has a wrong offset!");
static_assert(offsetof(SE_LepicPowerstream_C_ExecuteUbergraph_SE_LepicPowerstream, Temp_struct_Variable_1) == 0x000088, "Member 'SE_LepicPowerstream_C_ExecuteUbergraph_SE_LepicPowerstream::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(SE_LepicPowerstream_C_ExecuteUbergraph_SE_LepicPowerstream, CallFunc_WaitAbilityEvent_ReturnValue) == 0x0000C8, "Member 'SE_LepicPowerstream_C_ExecuteUbergraph_SE_LepicPowerstream::CallFunc_WaitAbilityEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(SE_LepicPowerstream_C_ExecuteUbergraph_SE_LepicPowerstream, CallFunc_IsValid_ReturnValue) == 0x0000D0, "Member 'SE_LepicPowerstream_C_ExecuteUbergraph_SE_LepicPowerstream::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(SE_LepicPowerstream_C_ExecuteUbergraph_SE_LepicPowerstream, CallFunc_IsValid_ReturnValue_1) == 0x0000D1, "Member 'SE_LepicPowerstream_C_ExecuteUbergraph_SE_LepicPowerstream::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SE_LepicPowerstream_C_ExecuteUbergraph_SE_LepicPowerstream, CallFunc_InvokeFirstStatusEffectToTargetByTag_ReturnValue) == 0x0000D8, "Member 'SE_LepicPowerstream_C_ExecuteUbergraph_SE_LepicPowerstream::CallFunc_InvokeFirstStatusEffectToTargetByTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(SE_LepicPowerstream_C_ExecuteUbergraph_SE_LepicPowerstream, CallFunc_BP_StartOperationsToSelfByTag_ReturnValue) == 0x0000E8, "Member 'SE_LepicPowerstream_C_ExecuteUbergraph_SE_LepicPowerstream::CallFunc_BP_StartOperationsToSelfByTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(SE_LepicPowerstream_C_ExecuteUbergraph_SE_LepicPowerstream, K2Node_Event_bCancelled) == 0x0000F8, "Member 'SE_LepicPowerstream_C_ExecuteUbergraph_SE_LepicPowerstream::K2Node_Event_bCancelled' has a wrong offset!");
static_assert(offsetof(SE_LepicPowerstream_C_ExecuteUbergraph_SE_LepicPowerstream, K2Node_CreateDelegate_OutputDelegate_1) == 0x0000FC, "Member 'SE_LepicPowerstream_C_ExecuteUbergraph_SE_LepicPowerstream::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(SE_LepicPowerstream_C_ExecuteUbergraph_SE_LepicPowerstream, CallFunc_IsDedicatedServer_ReturnValue) == 0x00010C, "Member 'SE_LepicPowerstream_C_ExecuteUbergraph_SE_LepicPowerstream::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(SE_LepicPowerstream_C_ExecuteUbergraph_SE_LepicPowerstream, CallFunc_GetDuration_ReturnValue) == 0x000110, "Member 'SE_LepicPowerstream_C_ExecuteUbergraph_SE_LepicPowerstream::CallFunc_GetDuration_ReturnValue' has a wrong offset!");
static_assert(offsetof(SE_LepicPowerstream_C_ExecuteUbergraph_SE_LepicPowerstream, CallFunc_GetOwnerActor_ReturnValue) == 0x000118, "Member 'SE_LepicPowerstream_C_ExecuteUbergraph_SE_LepicPowerstream::CallFunc_GetOwnerActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(SE_LepicPowerstream_C_ExecuteUbergraph_SE_LepicPowerstream, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000120, "Member 'SE_LepicPowerstream_C_ExecuteUbergraph_SE_LepicPowerstream::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(SE_LepicPowerstream_C_ExecuteUbergraph_SE_LepicPowerstream, CallFunc_HasAuthority_ReturnValue) == 0x000128, "Member 'SE_LepicPowerstream_C_ExecuteUbergraph_SE_LepicPowerstream::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(SE_LepicPowerstream_C_ExecuteUbergraph_SE_LepicPowerstream, CallFunc_WaitDelay_ReturnValue) == 0x000130, "Member 'SE_LepicPowerstream_C_ExecuteUbergraph_SE_LepicPowerstream::CallFunc_WaitDelay_ReturnValue' has a wrong offset!");
static_assert(offsetof(SE_LepicPowerstream_C_ExecuteUbergraph_SE_LepicPowerstream, CallFunc_IsValid_ReturnValue_2) == 0x000138, "Member 'SE_LepicPowerstream_C_ExecuteUbergraph_SE_LepicPowerstream::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(SE_LepicPowerstream_C_ExecuteUbergraph_SE_LepicPowerstream, CallFunc_SpawnFXsForAbility_ReturnValue) == 0x000140, "Member 'SE_LepicPowerstream_C_ExecuteUbergraph_SE_LepicPowerstream::CallFunc_SpawnFXsForAbility_ReturnValue' has a wrong offset!");
static_assert(offsetof(SE_LepicPowerstream_C_ExecuteUbergraph_SE_LepicPowerstream, CallFunc_SpawnFXsForAbility_ReturnValue_1) == 0x000150, "Member 'SE_LepicPowerstream_C_ExecuteUbergraph_SE_LepicPowerstream::CallFunc_SpawnFXsForAbility_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(SE_LepicPowerstream_C_ExecuteUbergraph_SE_LepicPowerstream, CallFunc_Subtract_DoubleDouble_A_ImplicitCast) == 0x000160, "Member 'SE_LepicPowerstream_C_ExecuteUbergraph_SE_LepicPowerstream::CallFunc_Subtract_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(SE_LepicPowerstream_C_ExecuteUbergraph_SE_LepicPowerstream, CallFunc_WaitDelay_InTime_ImplicitCast) == 0x000168, "Member 'SE_LepicPowerstream_C_ExecuteUbergraph_SE_LepicPowerstream::CallFunc_WaitDelay_InTime_ImplicitCast' has a wrong offset!");

// Function SE_LepicPowerstream.SE_LepicPowerstream_C.DeactivateLoopFXs
// 0x0020 (0x0020 - 0x0000)
struct SE_LepicPowerstream_C_DeactivateLoopFXs final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraComponent*                      CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SE_LepicPowerstream_C_DeactivateLoopFXs) == 0x000008, "Wrong alignment on SE_LepicPowerstream_C_DeactivateLoopFXs");
static_assert(sizeof(SE_LepicPowerstream_C_DeactivateLoopFXs) == 0x000020, "Wrong size on SE_LepicPowerstream_C_DeactivateLoopFXs");
static_assert(offsetof(SE_LepicPowerstream_C_DeactivateLoopFXs, Temp_int_Array_Index_Variable) == 0x000000, "Member 'SE_LepicPowerstream_C_DeactivateLoopFXs::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(SE_LepicPowerstream_C_DeactivateLoopFXs, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'SE_LepicPowerstream_C_DeactivateLoopFXs::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(SE_LepicPowerstream_C_DeactivateLoopFXs, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'SE_LepicPowerstream_C_DeactivateLoopFXs::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(SE_LepicPowerstream_C_DeactivateLoopFXs, CallFunc_Array_Get_Item) == 0x000010, "Member 'SE_LepicPowerstream_C_DeactivateLoopFXs::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(SE_LepicPowerstream_C_DeactivateLoopFXs, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'SE_LepicPowerstream_C_DeactivateLoopFXs::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(SE_LepicPowerstream_C_DeactivateLoopFXs, CallFunc_IsValid_ReturnValue) == 0x00001C, "Member 'SE_LepicPowerstream_C_DeactivateLoopFXs::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(SE_LepicPowerstream_C_DeactivateLoopFXs, CallFunc_Less_IntInt_ReturnValue) == 0x00001D, "Member 'SE_LepicPowerstream_C_DeactivateLoopFXs::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function SE_LepicPowerstream.SE_LepicPowerstream_C.BP_OnDeactivated
// 0x0001 (0x0001 - 0x0000)
struct SE_LepicPowerstream_C_BP_OnDeactivated final
{
public:
	bool                                          bCancelled;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(SE_LepicPowerstream_C_BP_OnDeactivated) == 0x000001, "Wrong alignment on SE_LepicPowerstream_C_BP_OnDeactivated");
static_assert(sizeof(SE_LepicPowerstream_C_BP_OnDeactivated) == 0x000001, "Wrong size on SE_LepicPowerstream_C_BP_OnDeactivated");
static_assert(offsetof(SE_LepicPowerstream_C_BP_OnDeactivated, bCancelled) == 0x000000, "Member 'SE_LepicPowerstream_C_BP_OnDeactivated::bCancelled' has a wrong offset!");

}

