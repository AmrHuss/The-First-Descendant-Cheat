#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Skill_Evade

#include "Basic.hpp"

#include "M1_structs.hpp"
#include "M1_classes.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "M1Data_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass Skill_Evade.Skill_Evade_C
// 0x0300 (0x0638 - 0x0338)
class USkill_Evade_C final : public UM1SkillAbility
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0338(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FVector                                StartLoc;                                          // 0x0340(0x000C)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                EvadeDir;                                          // 0x034C(0x000C)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        EvadeTime;                                         // 0x0358(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        EvadeMoveTimeRate;                                 // 0x0360(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        EvadeDistance;                                     // 0x0368(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UClass*>                         AbilityAnimLayers;                                 // 0x0370(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FVector                                SavedInputAxis;                                    // 0x0380(0x000C)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38C[0x4];                                      // 0x038C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FM1ActiveAbilityOperationId>    EventEvadeOprationIds;                             // 0x0390(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	double                                        EvadeExitCooltime;                                 // 0x03A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<EM1CharacterGender, class UAnimMontage*> EvadeMontage_F;                                    // 0x03A8(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<EM1CharacterGender, class UAnimMontage*> EvadeMontage_FL;                                   // 0x03F8(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<EM1CharacterGender, class UAnimMontage*> EvadeMontage_FR;                                   // 0x0448(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<EM1CharacterGender, class UAnimMontage*> EvadeMontage_L;                                    // 0x0498(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<EM1CharacterGender, class UAnimMontage*> EvadeMontage_R;                                    // 0x04E8(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<EM1CharacterGender, class UAnimMontage*> EvadeMontage_BL;                                   // 0x0538(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<EM1CharacterGender, class UAnimMontage*> EvadeMontage_BR;                                   // 0x0588(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<EM1CharacterGender, class UAnimMontage*> EvadeMontage_B;                                    // 0x05D8(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UAnimMontage*                           SelectedMontage;                                   // 0x0628(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UM1AbilityTask_PlayMontageAndWait*      PlayMontageTask;                                   // 0x0630(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void AxisMoveSmoothingOnReached();
	void BP_OnActivated();
	void BP_OnDeactivated(bool bCancelled);
	void ConvertDegreeTo8Direction(double Angle, class UAnimMontage** OutMontage);
	void ExecuteUbergraph_Skill_Evade(int32 EntryPoint);
	void GetEvadeAnimLength(double* OutLength);
	void GetEvadeRecoveryAnimLength(double* OutLength);
	void IsPlayerRunning(bool* bOutRunning);
	void IsRunning(bool* bRunning);
	void OnBlendOut_E0302FCF43DF0741F5CFC58FF67626CF(const struct FM1AbilityEvent& Event);
	void OnCompleted_E0302FCF43DF0741F5CFC58FF67626CF(const struct FM1AbilityEvent& Event);
	void OnEventReceived_E0302FCF43DF0741F5CFC58FF67626CF(const struct FM1AbilityEvent& Event);
	void OnFinished_6FE8C95042F333E7CBFD0ABF316AB07F(bool DestinationReached, bool TimedOut, const struct FVector& FinalTargetLocation);

	void GetEvadeDistance(double* OutDistance) const;
	TArray<struct FM1AbilityParamData> MakeSkillActivateParams(const class AActor* InOwner) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Skill_Evade_C">();
	}
	static class USkill_Evade_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<USkill_Evade_C>();
	}
};
static_assert(alignof(USkill_Evade_C) == 0x000008, "Wrong alignment on USkill_Evade_C");
static_assert(sizeof(USkill_Evade_C) == 0x000638, "Wrong size on USkill_Evade_C");
static_assert(offsetof(USkill_Evade_C, UberGraphFrame) == 0x000338, "Member 'USkill_Evade_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(USkill_Evade_C, StartLoc) == 0x000340, "Member 'USkill_Evade_C::StartLoc' has a wrong offset!");
static_assert(offsetof(USkill_Evade_C, EvadeDir) == 0x00034C, "Member 'USkill_Evade_C::EvadeDir' has a wrong offset!");
static_assert(offsetof(USkill_Evade_C, EvadeTime) == 0x000358, "Member 'USkill_Evade_C::EvadeTime' has a wrong offset!");
static_assert(offsetof(USkill_Evade_C, EvadeMoveTimeRate) == 0x000360, "Member 'USkill_Evade_C::EvadeMoveTimeRate' has a wrong offset!");
static_assert(offsetof(USkill_Evade_C, EvadeDistance) == 0x000368, "Member 'USkill_Evade_C::EvadeDistance' has a wrong offset!");
static_assert(offsetof(USkill_Evade_C, AbilityAnimLayers) == 0x000370, "Member 'USkill_Evade_C::AbilityAnimLayers' has a wrong offset!");
static_assert(offsetof(USkill_Evade_C, SavedInputAxis) == 0x000380, "Member 'USkill_Evade_C::SavedInputAxis' has a wrong offset!");
static_assert(offsetof(USkill_Evade_C, EventEvadeOprationIds) == 0x000390, "Member 'USkill_Evade_C::EventEvadeOprationIds' has a wrong offset!");
static_assert(offsetof(USkill_Evade_C, EvadeExitCooltime) == 0x0003A0, "Member 'USkill_Evade_C::EvadeExitCooltime' has a wrong offset!");
static_assert(offsetof(USkill_Evade_C, EvadeMontage_F) == 0x0003A8, "Member 'USkill_Evade_C::EvadeMontage_F' has a wrong offset!");
static_assert(offsetof(USkill_Evade_C, EvadeMontage_FL) == 0x0003F8, "Member 'USkill_Evade_C::EvadeMontage_FL' has a wrong offset!");
static_assert(offsetof(USkill_Evade_C, EvadeMontage_FR) == 0x000448, "Member 'USkill_Evade_C::EvadeMontage_FR' has a wrong offset!");
static_assert(offsetof(USkill_Evade_C, EvadeMontage_L) == 0x000498, "Member 'USkill_Evade_C::EvadeMontage_L' has a wrong offset!");
static_assert(offsetof(USkill_Evade_C, EvadeMontage_R) == 0x0004E8, "Member 'USkill_Evade_C::EvadeMontage_R' has a wrong offset!");
static_assert(offsetof(USkill_Evade_C, EvadeMontage_BL) == 0x000538, "Member 'USkill_Evade_C::EvadeMontage_BL' has a wrong offset!");
static_assert(offsetof(USkill_Evade_C, EvadeMontage_BR) == 0x000588, "Member 'USkill_Evade_C::EvadeMontage_BR' has a wrong offset!");
static_assert(offsetof(USkill_Evade_C, EvadeMontage_B) == 0x0005D8, "Member 'USkill_Evade_C::EvadeMontage_B' has a wrong offset!");
static_assert(offsetof(USkill_Evade_C, SelectedMontage) == 0x000628, "Member 'USkill_Evade_C::SelectedMontage' has a wrong offset!");
static_assert(offsetof(USkill_Evade_C, PlayMontageTask) == 0x000630, "Member 'USkill_Evade_C::PlayMontageTask' has a wrong offset!");

}

