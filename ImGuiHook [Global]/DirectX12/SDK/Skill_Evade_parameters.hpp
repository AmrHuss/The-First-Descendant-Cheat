#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Skill_Evade

#include "Basic.hpp"

#include "M1Data_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "M1_structs.hpp"


namespace SDK::Params
{

// Function Skill_Evade.Skill_Evade_C.AxisMoveSmoothingOnReached
// 0x00C0 (0x00C0 - 0x0000)
struct Skill_Evade_C_AxisMoveSmoothingOnReached final
{
public:
	class AActor*                                 CallFunc_GetOwnerActor_ReturnValue;                // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetLocalPlayerDesiredMoveDir_ReturnValue; // 0x0008(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AM1Player*                              K2Node_DynamicCast_AsM1Player;                     // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPawnMovementComponent*                 CallFunc_GetMovementComponent_ReturnValue;         // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UCharacterMovementComponent*            K2Node_DynamicCast_As_____________;                // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetCurrentAcceleration_ReturnValue;       // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X;                            // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0070(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMaxSpeed_ReturnValue;                  // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0080(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X_1;                          // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B4[0x4];                                       // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_VectorFloat_B_ImplicitCast;      // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Skill_Evade_C_AxisMoveSmoothingOnReached) == 0x000008, "Wrong alignment on Skill_Evade_C_AxisMoveSmoothingOnReached");
static_assert(sizeof(Skill_Evade_C_AxisMoveSmoothingOnReached) == 0x0000C0, "Wrong size on Skill_Evade_C_AxisMoveSmoothingOnReached");
static_assert(offsetof(Skill_Evade_C_AxisMoveSmoothingOnReached, CallFunc_GetOwnerActor_ReturnValue) == 0x000000, "Member 'Skill_Evade_C_AxisMoveSmoothingOnReached::CallFunc_GetOwnerActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Skill_Evade_C_AxisMoveSmoothingOnReached, CallFunc_GetLocalPlayerDesiredMoveDir_ReturnValue) == 0x000008, "Member 'Skill_Evade_C_AxisMoveSmoothingOnReached::CallFunc_GetLocalPlayerDesiredMoveDir_ReturnValue' has a wrong offset!");
static_assert(offsetof(Skill_Evade_C_AxisMoveSmoothingOnReached, K2Node_DynamicCast_AsM1Player) == 0x000018, "Member 'Skill_Evade_C_AxisMoveSmoothingOnReached::K2Node_DynamicCast_AsM1Player' has a wrong offset!");
static_assert(offsetof(Skill_Evade_C_AxisMoveSmoothingOnReached, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'Skill_Evade_C_AxisMoveSmoothingOnReached::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Skill_Evade_C_AxisMoveSmoothingOnReached, CallFunc_GetMovementComponent_ReturnValue) == 0x000028, "Member 'Skill_Evade_C_AxisMoveSmoothingOnReached::CallFunc_GetMovementComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(Skill_Evade_C_AxisMoveSmoothingOnReached, K2Node_DynamicCast_As_____________) == 0x000030, "Member 'Skill_Evade_C_AxisMoveSmoothingOnReached::K2Node_DynamicCast_As_____________' has a wrong offset!");
static_assert(offsetof(Skill_Evade_C_AxisMoveSmoothingOnReached, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'Skill_Evade_C_AxisMoveSmoothingOnReached::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(Skill_Evade_C_AxisMoveSmoothingOnReached, CallFunc_GetCurrentAcceleration_ReturnValue) == 0x00003C, "Member 'Skill_Evade_C_AxisMoveSmoothingOnReached::CallFunc_GetCurrentAcceleration_ReturnValue' has a wrong offset!");
static_assert(offsetof(Skill_Evade_C_AxisMoveSmoothingOnReached, CallFunc_Add_VectorVector_ReturnValue) == 0x000048, "Member 'Skill_Evade_C_AxisMoveSmoothingOnReached::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Skill_Evade_C_AxisMoveSmoothingOnReached, CallFunc_BreakVector_X) == 0x000058, "Member 'Skill_Evade_C_AxisMoveSmoothingOnReached::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Skill_Evade_C_AxisMoveSmoothingOnReached, CallFunc_BreakVector_Y) == 0x000060, "Member 'Skill_Evade_C_AxisMoveSmoothingOnReached::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Skill_Evade_C_AxisMoveSmoothingOnReached, CallFunc_BreakVector_Z) == 0x000068, "Member 'Skill_Evade_C_AxisMoveSmoothingOnReached::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Skill_Evade_C_AxisMoveSmoothingOnReached, CallFunc_Normal_ReturnValue) == 0x000070, "Member 'Skill_Evade_C_AxisMoveSmoothingOnReached::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(Skill_Evade_C_AxisMoveSmoothingOnReached, CallFunc_GetMaxSpeed_ReturnValue) == 0x00007C, "Member 'Skill_Evade_C_AxisMoveSmoothingOnReached::CallFunc_GetMaxSpeed_ReturnValue' has a wrong offset!");
static_assert(offsetof(Skill_Evade_C_AxisMoveSmoothingOnReached, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000080, "Member 'Skill_Evade_C_AxisMoveSmoothingOnReached::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Skill_Evade_C_AxisMoveSmoothingOnReached, CallFunc_BreakVector_X_1) == 0x000090, "Member 'Skill_Evade_C_AxisMoveSmoothingOnReached::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(Skill_Evade_C_AxisMoveSmoothingOnReached, CallFunc_BreakVector_Y_1) == 0x000098, "Member 'Skill_Evade_C_AxisMoveSmoothingOnReached::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(Skill_Evade_C_AxisMoveSmoothingOnReached, CallFunc_BreakVector_Z_1) == 0x0000A0, "Member 'Skill_Evade_C_AxisMoveSmoothingOnReached::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(Skill_Evade_C_AxisMoveSmoothingOnReached, CallFunc_MakeVector_ReturnValue) == 0x0000A8, "Member 'Skill_Evade_C_AxisMoveSmoothingOnReached::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Skill_Evade_C_AxisMoveSmoothingOnReached, CallFunc_Multiply_VectorFloat_B_ImplicitCast) == 0x0000B8, "Member 'Skill_Evade_C_AxisMoveSmoothingOnReached::CallFunc_Multiply_VectorFloat_B_ImplicitCast' has a wrong offset!");

// Function Skill_Evade.Skill_Evade_C.BP_OnDeactivated
// 0x0001 (0x0001 - 0x0000)
struct Skill_Evade_C_BP_OnDeactivated final
{
public:
	bool                                          bCancelled;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Skill_Evade_C_BP_OnDeactivated) == 0x000001, "Wrong alignment on Skill_Evade_C_BP_OnDeactivated");
static_assert(sizeof(Skill_Evade_C_BP_OnDeactivated) == 0x000001, "Wrong size on Skill_Evade_C_BP_OnDeactivated");
static_assert(offsetof(Skill_Evade_C_BP_OnDeactivated, bCancelled) == 0x000000, "Member 'Skill_Evade_C_BP_OnDeactivated::bCancelled' has a wrong offset!");

// Function Skill_Evade.Skill_Evade_C.ConvertDegreeTo8Direction
// 0x00D0 (0x00D0 - 0x0000)
struct Skill_Evade_C_ConvertDegreeTo8Direction final
{
public:
	double                                        Angle;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           OutMontage;                                        // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EM1CharacterGender                            AnimType;                                          // 0x0010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        ClampedAngle;                                      // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwnerActor_ReturnValue;                // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EM1CharacterGender                            CallFunc_GetPlayerAnimPresetType_ReturnValue;      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           CallFunc_Map_Find_Value;                           // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           CallFunc_Map_Find_Value_1;                         // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6A[0x6];                                       // 0x006A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           CallFunc_Map_Find_Value_2;                         // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_2;                   // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue_1;     // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7A[0x6];                                       // 0x007A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           CallFunc_Map_Find_Value_3;                         // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_3;                   // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue_2;     // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8A[0x6];                                       // 0x008A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           CallFunc_Map_Find_Value_4;                         // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_4;                   // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue_3;     // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9A[0x6];                                       // 0x009A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           CallFunc_Map_Find_Value_5;                         // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_5;                   // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue_4;     // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AA[0x6];                                       // 0x00AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           CallFunc_Map_Find_Value_6;                         // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_6;                   // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue_5;     // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BA[0x6];                                       // 0x00BA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           CallFunc_Map_Find_Value_7;                         // 0x00C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_7;                   // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue_6;     // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Skill_Evade_C_ConvertDegreeTo8Direction) == 0x000008, "Wrong alignment on Skill_Evade_C_ConvertDegreeTo8Direction");
static_assert(sizeof(Skill_Evade_C_ConvertDegreeTo8Direction) == 0x0000D0, "Wrong size on Skill_Evade_C_ConvertDegreeTo8Direction");
static_assert(offsetof(Skill_Evade_C_ConvertDegreeTo8Direction, Angle) == 0x000000, "Member 'Skill_Evade_C_ConvertDegreeTo8Direction::Angle' has a wrong offset!");
static_assert(offsetof(Skill_Evade_C_ConvertDegreeTo8Direction, OutMontage) == 0x000008, "Member 'Skill_Evade_C_ConvertDegreeTo8Direction::OutMontage' has a wrong offset!");
static_assert(offsetof(Skill_Evade_C_ConvertDegreeTo8Direction, AnimType) == 0x000010, "Member 'Skill_Evade_C_ConvertDegreeTo8Direction::AnimType' has a wrong offset!");
static_assert(offsetof(Skill_Evade_C_ConvertDegreeTo8Direction, ClampedAngle) == 0x000018, "Member 'Skill_Evade_C_ConvertDegreeTo8Direction::ClampedAngle' has a wrong offset!");
static_assert(offsetof(Skill_Evade_C_ConvertDegreeTo8Direction, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000020, "Member 'Skill_Evade_C_ConvertDegreeTo8Direction::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Skill_Evade_C_ConvertDegreeTo8Direction, CallFunc_Round_ReturnValue) == 0x000028, "Member 'Skill_Evade_C_ConvertDegreeTo8Direction::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(Skill_Evade_C_ConvertDegreeTo8Direction, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000030, "Member 'Skill_Evade_C_ConvertDegreeTo8Direction::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Skill_Evade_C_ConvertDegreeTo8Direction, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000038, "Member 'Skill_Evade_C_ConvertDegreeTo8Direction::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Skill_Evade_C_ConvertDegreeTo8Direction, CallFunc_GetOwnerActor_ReturnValue) == 0x000040, "Member 'Skill_Evade_C_ConvertDegreeTo8Direction::CallFunc_GetOwnerActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Skill_Evade_C_ConvertDegreeTo8Direction, CallFunc_GetPlayerAnimPresetType_ReturnValue) == 0x000048, "Member 'Skill_Evade_C_ConvertDegreeTo8Direction::CallFunc_GetPlayerAnimPresetType_ReturnValue' has a wrong offset!");
static_assert(offsetof(Skill_Evade_C_ConvertDegreeTo8Direction, CallFunc_Map_Find_Value) == 0x000050, "Member 'Skill_Evade_C_ConvertDegreeTo8Direction::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(Skill_Evade_C_ConvertDegreeTo8Direction, CallFunc_Map_Find_ReturnValue) == 0x000058, "Member 'Skill_Evade_C_ConvertDegreeTo8Direction::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(Skill_Evade_C_ConvertDegreeTo8Direction, CallFunc_Map_Find_Value_1) == 0x000060, "Member 'Skill_Evade_C_ConvertDegreeTo8Direction::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(Skill_Evade_C_ConvertDegreeTo8Direction, CallFunc_Map_Find_ReturnValue_1) == 0x000068, "Member 'Skill_Evade_C_ConvertDegreeTo8Direction::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Skill_Evade_C_ConvertDegreeTo8Direction, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x000069, "Member 'Skill_Evade_C_ConvertDegreeTo8Direction::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Skill_Evade_C_ConvertDegreeTo8Direction, CallFunc_Map_Find_Value_2) == 0x000070, "Member 'Skill_Evade_C_ConvertDegreeTo8Direction::CallFunc_Map_Find_Value_2' has a wrong offset!");
static_assert(offsetof(Skill_Evade_C_ConvertDegreeTo8Direction, CallFunc_Map_Find_ReturnValue_2) == 0x000078, "Member 'Skill_Evade_C_ConvertDegreeTo8Direction::CallFunc_Map_Find_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Skill_Evade_C_ConvertDegreeTo8Direction, CallFunc_NearlyEqual_FloatFloat_ReturnValue_1) == 0x000079, "Member 'Skill_Evade_C_ConvertDegreeTo8Direction::CallFunc_NearlyEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Skill_Evade_C_ConvertDegreeTo8Direction, CallFunc_Map_Find_Value_3) == 0x000080, "Member 'Skill_Evade_C_ConvertDegreeTo8Direction::CallFunc_Map_Find_Value_3' has a wrong offset!");
static_assert(offsetof(Skill_Evade_C_ConvertDegreeTo8Direction, CallFunc_Map_Find_ReturnValue_3) == 0x000088, "Member 'Skill_Evade_C_ConvertDegreeTo8Direction::CallFunc_Map_Find_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Skill_Evade_C_ConvertDegreeTo8Direction, CallFunc_NearlyEqual_FloatFloat_ReturnValue_2) == 0x000089, "Member 'Skill_Evade_C_ConvertDegreeTo8Direction::CallFunc_NearlyEqual_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Skill_Evade_C_ConvertDegreeTo8Direction, CallFunc_Map_Find_Value_4) == 0x000090, "Member 'Skill_Evade_C_ConvertDegreeTo8Direction::CallFunc_Map_Find_Value_4' has a wrong offset!");
static_assert(offsetof(Skill_Evade_C_ConvertDegreeTo8Direction, CallFunc_Map_Find_ReturnValue_4) == 0x000098, "Member 'Skill_Evade_C_ConvertDegreeTo8Direction::CallFunc_Map_Find_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Skill_Evade_C_ConvertDegreeTo8Direction, CallFunc_NearlyEqual_FloatFloat_ReturnValue_3) == 0x000099, "Member 'Skill_Evade_C_ConvertDegreeTo8Direction::CallFunc_NearlyEqual_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Skill_Evade_C_ConvertDegreeTo8Direction, CallFunc_Map_Find_Value_5) == 0x0000A0, "Member 'Skill_Evade_C_ConvertDegreeTo8Direction::CallFunc_Map_Find_Value_5' has a wrong offset!");
static_assert(offsetof(Skill_Evade_C_ConvertDegreeTo8Direction, CallFunc_Map_Find_ReturnValue_5) == 0x0000A8, "Member 'Skill_Evade_C_ConvertDegreeTo8Direction::CallFunc_Map_Find_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Skill_Evade_C_ConvertDegreeTo8Direction, CallFunc_NearlyEqual_FloatFloat_ReturnValue_4) == 0x0000A9, "Member 'Skill_Evade_C_ConvertDegreeTo8Direction::CallFunc_NearlyEqual_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Skill_Evade_C_ConvertDegreeTo8Direction, CallFunc_Map_Find_Value_6) == 0x0000B0, "Member 'Skill_Evade_C_ConvertDegreeTo8Direction::CallFunc_Map_Find_Value_6' has a wrong offset!");
static_assert(offsetof(Skill_Evade_C_ConvertDegreeTo8Direction, CallFunc_Map_Find_ReturnValue_6) == 0x0000B8, "Member 'Skill_Evade_C_ConvertDegreeTo8Direction::CallFunc_Map_Find_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Skill_Evade_C_ConvertDegreeTo8Direction, CallFunc_NearlyEqual_FloatFloat_ReturnValue_5) == 0x0000B9, "Member 'Skill_Evade_C_ConvertDegreeTo8Direction::CallFunc_NearlyEqual_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Skill_Evade_C_ConvertDegreeTo8Direction, CallFunc_Map_Find_Value_7) == 0x0000C0, "Member 'Skill_Evade_C_ConvertDegreeTo8Direction::CallFunc_Map_Find_Value_7' has a wrong offset!");
static_assert(offsetof(Skill_Evade_C_ConvertDegreeTo8Direction, CallFunc_Map_Find_ReturnValue_7) == 0x0000C8, "Member 'Skill_Evade_C_ConvertDegreeTo8Direction::CallFunc_Map_Find_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Skill_Evade_C_ConvertDegreeTo8Direction, CallFunc_NearlyEqual_FloatFloat_ReturnValue_6) == 0x0000C9, "Member 'Skill_Evade_C_ConvertDegreeTo8Direction::CallFunc_NearlyEqual_FloatFloat_ReturnValue_6' has a wrong offset!");

// Function Skill_Evade.Skill_Evade_C.ExecuteUbergraph_Skill_Evade
// 0x0280 (0x0280 - 0x0000)
struct Skill_Evade_C_ExecuteUbergraph_Skill_Evade final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwnerActor_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_DestinationReached;             // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_TimedOut;                       // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x2];                                       // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_CustomEvent_FinalTargetLocation;            // 0x0014(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(bool DestinationReached, bool TimedOut, const struct FVector& FinalTargetLocation)> K2Node_CreateDelegate_OutputDelegate;              // 0x0020(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Temp_struct_Variable;                              // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E[0x2];                                       // 0x003E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(struct FM1AbilityEvent& Event)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0040(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FM1AbilityEvent                        K2Node_CustomEvent_Event_2;                        // 0x0050(0x0040)(ConstParm)
	struct FM1AbilityEvent                        K2Node_CustomEvent_Event_1;                        // 0x0090(0x0040)(ConstParm)
	TDelegate<void(struct FM1AbilityEvent& Event)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x00D0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FM1AbilityEvent                        K2Node_CustomEvent_Event;                          // 0x00E0(0x0040)(ConstParm)
	TDelegate<void(struct FM1AbilityEvent& Event)> K2Node_CreateDelegate_OutputDelegate_3;            // 0x0120(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FM1AbilityEvent                        Temp_struct_Variable_1;                            // 0x0130(0x0040)()
	class AActor*                                 CallFunc_GetOwnerActor_ReturnValue_1;              // 0x0170(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_178[0x8];                                      // 0x0178(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0180(0x0030)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetAzimuthAndElevation_Azimuth;           // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetAzimuthAndElevation_Elevation;         // 0x01B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UM1AbilityTask_PlayMontageAndWait*      CallFunc_PlayMontageAndWaitForEvent_ReturnValue;   // 0x01C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_LocalRebaseVec_ReturnValue;               // 0x01D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x01DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bCancelled;                           // 0x01DD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryCommitAbility_ReturnValue;             // 0x01DE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DF[0x1];                                      // 0x01DF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwnerActor_ReturnValue_2;              // 0x01E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwnerActor_ReturnValue_3;              // 0x01E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AM1Player*                              K2Node_DynamicCast_AsM1Player;                     // 0x01F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsUsingMirroring_ReturnValue;             // 0x01F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1FA[0x6];                                      // 0x01FA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwnerActor_ReturnValue_4;              // 0x0200(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           CallFunc_ConvertDegreeTo8Direction_OutMontage;     // 0x0210(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayerRunning_bOutRunning;              // 0x0219(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21A[0x6];                                      // 0x021A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetEvadeDistance_OutDistance;             // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0228(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0234(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ValidateClientLocation_ReturnValue;       // 0x0248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_249[0x7];                                      // 0x0249(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UM1AbilityTask_ApplyRootMotionMoveToForce* CallFunc_ApplyRootMotionMoveToForce_ReturnValue;   // 0x0250(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_259[0x7];                                      // 0x0259(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_A_ImplicitCast;       // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_B_ImplicitCast;               // 0x0268(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x0270(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PlayMontageAndWaitForEvent_Rate_ImplicitCast; // 0x0278(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_ApplyRootMotionMoveToForce_Duration_ImplicitCast; // 0x027C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Skill_Evade_C_ExecuteUbergraph_Skill_Evade) == 0x000010, "Wrong alignment on Skill_Evade_C_ExecuteUbergraph_Skill_Evade");
static_assert(sizeof(Skill_Evade_C_ExecuteUbergraph_Skill_Evade) == 0x000280, "Wrong size on Skill_Evade_C_ExecuteUbergraph_Skill_Evade");
static_assert(offsetof(Skill_Evade_C_ExecuteUbergraph_Skill_Evade, EntryPoint) == 0x000000, "Member 'Skill_Evade_C_ExecuteUbergraph_Skill_Evade::EntryPoint' has a wrong offset!");
static_assert(offsetof(Skill_Evade_C_ExecuteUbergraph_Skill_Evade, CallFunc_GetOwnerActor_ReturnValue) == 0x000008, "Member 'Skill_Evade_C_ExecuteUbergraph_Skill_Evade::CallFunc_GetOwnerActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Skill_Evade_C_ExecuteUbergraph_Skill_Evade, K2Node_CustomEvent_DestinationReached) == 0x000010, "Member 'Skill_Evade_C_ExecuteUbergraph_Skill_Evade::K2Node_CustomEvent_DestinationReached' has a wrong offset!");
static_assert(offsetof(Skill_Evade_C_ExecuteUbergraph_Skill_Evade, K2Node_CustomEvent_TimedOut) == 0x000011, "Member 'Skill_Evade_C_ExecuteUbergraph_Skill_Evade::K2Node_CustomEvent_TimedOut' has a wrong offset!");
static_assert(offsetof(Skill_Evade_C_ExecuteUbergraph_Skill_Evade, K2Node_CustomEvent_FinalTargetLocation) == 0x000014, "Member 'Skill_Evade_C_ExecuteUbergraph_Skill_Evade::K2Node_CustomEvent_FinalTargetLocation' has a wrong offset!");
static_assert(offsetof(Skill_Evade_C_ExecuteUbergraph_Skill_Evade, K2Node_CreateDelegate_OutputDelegate) == 0x000020, "Member 'Skill_Evade_C_ExecuteUbergraph_Skill_Evade::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Skill_Evade_C_ExecuteUbergraph_Skill_Evade, Temp_struct_Variable) == 0x000030, "Member 'Skill_Evade_C_ExecuteUbergraph_Skill_Evade::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(Skill_Evade_C_ExecuteUbergraph_Skill_Evade, Temp_bool_Variable) == 0x00003C, "Member 'Skill_Evade_C_ExecuteUbergraph_Skill_Evade::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Skill_Evade_C_ExecuteUbergraph_Skill_Evade, Temp_bool_Variable_1) == 0x00003D, "Member 'Skill_Evade_C_ExecuteUbergraph_Skill_Evade::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(Skill_Evade_C_ExecuteUbergraph_Skill_Evade, K2Node_CreateDelegate_OutputDelegate_1) == 0x000040, "Member 'Skill_Evade_C_ExecuteUbergraph_Skill_Evade::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(Skill_Evade_C_ExecuteUbergraph_Skill_Evade, K2Node_CustomEvent_Event_2) == 0x000050, "Member 'Skill_Evade_C_ExecuteUbergraph_Skill_Evade::K2Node_CustomEvent_Event_2' has a wrong offset!");
static_assert(offsetof(Skill_Evade_C_ExecuteUbergraph_Skill_Evade, K2Node_CustomEvent_Event_1) == 0x000090, "Member 'Skill_Evade_C_ExecuteUbergraph_Skill_Evade::K2Node_CustomEvent_Event_1' has a wrong offset!");
static_assert(offsetof(Skill_Evade_C_ExecuteUbergraph_Skill_Evade, K2Node_CreateDelegate_OutputDelegate_2) == 0x0000D0, "Member 'Skill_Evade_C_ExecuteUbergraph_Skill_Evade::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(Skill_Evade_C_ExecuteUbergraph_Skill_Evade, K2Node_CustomEvent_Event) == 0x0000E0, "Member 'Skill_Evade_C_ExecuteUbergraph_Skill_Evade::K2Node_CustomEvent_Event' has a wrong offset!");
static_assert(offsetof(Skill_Evade_C_ExecuteUbergraph_Skill_Evade, K2Node_CreateDelegate_OutputDelegate_3) == 0x000120, "Member 'Skill_Evade_C_ExecuteUbergraph_Skill_Evade::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(Skill_Evade_C_ExecuteUbergraph_Skill_Evade, Temp_struct_Variable_1) == 0x000130, "Member 'Skill_Evade_C_ExecuteUbergraph_Skill_Evade::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(Skill_Evade_C_ExecuteUbergraph_Skill_Evade, CallFunc_GetOwnerActor_ReturnValue_1) == 0x000170, "Member 'Skill_Evade_C_ExecuteUbergraph_Skill_Evade::CallFunc_GetOwnerActor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Skill_Evade_C_ExecuteUbergraph_Skill_Evade, CallFunc_GetTransform_ReturnValue) == 0x000180, "Member 'Skill_Evade_C_ExecuteUbergraph_Skill_Evade::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(Skill_Evade_C_ExecuteUbergraph_Skill_Evade, CallFunc_GetAzimuthAndElevation_Azimuth) == 0x0001B0, "Member 'Skill_Evade_C_ExecuteUbergraph_Skill_Evade::CallFunc_GetAzimuthAndElevation_Azimuth' has a wrong offset!");
static_assert(offsetof(Skill_Evade_C_ExecuteUbergraph_Skill_Evade, CallFunc_GetAzimuthAndElevation_Elevation) == 0x0001B4, "Member 'Skill_Evade_C_ExecuteUbergraph_Skill_Evade::CallFunc_GetAzimuthAndElevation_Elevation' has a wrong offset!");
static_assert(offsetof(Skill_Evade_C_ExecuteUbergraph_Skill_Evade, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x0001B8, "Member 'Skill_Evade_C_ExecuteUbergraph_Skill_Evade::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Skill_Evade_C_ExecuteUbergraph_Skill_Evade, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0001C0, "Member 'Skill_Evade_C_ExecuteUbergraph_Skill_Evade::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Skill_Evade_C_ExecuteUbergraph_Skill_Evade, CallFunc_PlayMontageAndWaitForEvent_ReturnValue) == 0x0001C8, "Member 'Skill_Evade_C_ExecuteUbergraph_Skill_Evade::CallFunc_PlayMontageAndWaitForEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(Skill_Evade_C_ExecuteUbergraph_Skill_Evade, CallFunc_LocalRebaseVec_ReturnValue) == 0x0001D0, "Member 'Skill_Evade_C_ExecuteUbergraph_Skill_Evade::CallFunc_LocalRebaseVec_ReturnValue' has a wrong offset!");
static_assert(offsetof(Skill_Evade_C_ExecuteUbergraph_Skill_Evade, CallFunc_IsValid_ReturnValue) == 0x0001DC, "Member 'Skill_Evade_C_ExecuteUbergraph_Skill_Evade::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Skill_Evade_C_ExecuteUbergraph_Skill_Evade, K2Node_Event_bCancelled) == 0x0001DD, "Member 'Skill_Evade_C_ExecuteUbergraph_Skill_Evade::K2Node_Event_bCancelled' has a wrong offset!");
static_assert(offsetof(Skill_Evade_C_ExecuteUbergraph_Skill_Evade, CallFunc_TryCommitAbility_ReturnValue) == 0x0001DE, "Member 'Skill_Evade_C_ExecuteUbergraph_Skill_Evade::CallFunc_TryCommitAbility_ReturnValue' has a wrong offset!");
static_assert(offsetof(Skill_Evade_C_ExecuteUbergraph_Skill_Evade, CallFunc_GetOwnerActor_ReturnValue_2) == 0x0001E0, "Member 'Skill_Evade_C_ExecuteUbergraph_Skill_Evade::CallFunc_GetOwnerActor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Skill_Evade_C_ExecuteUbergraph_Skill_Evade, CallFunc_GetOwnerActor_ReturnValue_3) == 0x0001E8, "Member 'Skill_Evade_C_ExecuteUbergraph_Skill_Evade::CallFunc_GetOwnerActor_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Skill_Evade_C_ExecuteUbergraph_Skill_Evade, K2Node_DynamicCast_AsM1Player) == 0x0001F0, "Member 'Skill_Evade_C_ExecuteUbergraph_Skill_Evade::K2Node_DynamicCast_AsM1Player' has a wrong offset!");
static_assert(offsetof(Skill_Evade_C_ExecuteUbergraph_Skill_Evade, K2Node_DynamicCast_bSuccess) == 0x0001F8, "Member 'Skill_Evade_C_ExecuteUbergraph_Skill_Evade::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Skill_Evade_C_ExecuteUbergraph_Skill_Evade, CallFunc_IsUsingMirroring_ReturnValue) == 0x0001F9, "Member 'Skill_Evade_C_ExecuteUbergraph_Skill_Evade::CallFunc_IsUsingMirroring_ReturnValue' has a wrong offset!");
static_assert(offsetof(Skill_Evade_C_ExecuteUbergraph_Skill_Evade, CallFunc_GetOwnerActor_ReturnValue_4) == 0x000200, "Member 'Skill_Evade_C_ExecuteUbergraph_Skill_Evade::CallFunc_GetOwnerActor_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Skill_Evade_C_ExecuteUbergraph_Skill_Evade, CallFunc_SelectFloat_ReturnValue) == 0x000208, "Member 'Skill_Evade_C_ExecuteUbergraph_Skill_Evade::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Skill_Evade_C_ExecuteUbergraph_Skill_Evade, CallFunc_ConvertDegreeTo8Direction_OutMontage) == 0x000210, "Member 'Skill_Evade_C_ExecuteUbergraph_Skill_Evade::CallFunc_ConvertDegreeTo8Direction_OutMontage' has a wrong offset!");
static_assert(offsetof(Skill_Evade_C_ExecuteUbergraph_Skill_Evade, CallFunc_IsValid_ReturnValue_1) == 0x000218, "Member 'Skill_Evade_C_ExecuteUbergraph_Skill_Evade::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Skill_Evade_C_ExecuteUbergraph_Skill_Evade, CallFunc_IsPlayerRunning_bOutRunning) == 0x000219, "Member 'Skill_Evade_C_ExecuteUbergraph_Skill_Evade::CallFunc_IsPlayerRunning_bOutRunning' has a wrong offset!");
static_assert(offsetof(Skill_Evade_C_ExecuteUbergraph_Skill_Evade, CallFunc_GetEvadeDistance_OutDistance) == 0x000220, "Member 'Skill_Evade_C_ExecuteUbergraph_Skill_Evade::CallFunc_GetEvadeDistance_OutDistance' has a wrong offset!");
static_assert(offsetof(Skill_Evade_C_ExecuteUbergraph_Skill_Evade, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000228, "Member 'Skill_Evade_C_ExecuteUbergraph_Skill_Evade::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Skill_Evade_C_ExecuteUbergraph_Skill_Evade, CallFunc_Add_VectorVector_ReturnValue) == 0x000234, "Member 'Skill_Evade_C_ExecuteUbergraph_Skill_Evade::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Skill_Evade_C_ExecuteUbergraph_Skill_Evade, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000240, "Member 'Skill_Evade_C_ExecuteUbergraph_Skill_Evade::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Skill_Evade_C_ExecuteUbergraph_Skill_Evade, CallFunc_ValidateClientLocation_ReturnValue) == 0x000248, "Member 'Skill_Evade_C_ExecuteUbergraph_Skill_Evade::CallFunc_ValidateClientLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Skill_Evade_C_ExecuteUbergraph_Skill_Evade, CallFunc_ApplyRootMotionMoveToForce_ReturnValue) == 0x000250, "Member 'Skill_Evade_C_ExecuteUbergraph_Skill_Evade::CallFunc_ApplyRootMotionMoveToForce_ReturnValue' has a wrong offset!");
static_assert(offsetof(Skill_Evade_C_ExecuteUbergraph_Skill_Evade, CallFunc_IsValid_ReturnValue_2) == 0x000258, "Member 'Skill_Evade_C_ExecuteUbergraph_Skill_Evade::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Skill_Evade_C_ExecuteUbergraph_Skill_Evade, CallFunc_Divide_DoubleDouble_A_ImplicitCast) == 0x000260, "Member 'Skill_Evade_C_ExecuteUbergraph_Skill_Evade::CallFunc_Divide_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Skill_Evade_C_ExecuteUbergraph_Skill_Evade, CallFunc_SelectFloat_B_ImplicitCast) == 0x000268, "Member 'Skill_Evade_C_ExecuteUbergraph_Skill_Evade::CallFunc_SelectFloat_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Skill_Evade_C_ExecuteUbergraph_Skill_Evade, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x000270, "Member 'Skill_Evade_C_ExecuteUbergraph_Skill_Evade::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Skill_Evade_C_ExecuteUbergraph_Skill_Evade, CallFunc_PlayMontageAndWaitForEvent_Rate_ImplicitCast) == 0x000278, "Member 'Skill_Evade_C_ExecuteUbergraph_Skill_Evade::CallFunc_PlayMontageAndWaitForEvent_Rate_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Skill_Evade_C_ExecuteUbergraph_Skill_Evade, CallFunc_ApplyRootMotionMoveToForce_Duration_ImplicitCast) == 0x00027C, "Member 'Skill_Evade_C_ExecuteUbergraph_Skill_Evade::CallFunc_ApplyRootMotionMoveToForce_Duration_ImplicitCast' has a wrong offset!");

// Function Skill_Evade.Skill_Evade_C.GetEvadeAnimLength
// 0x0020 (0x0020 - 0x0000)
struct Skill_Evade_C_GetEvadeAnimLength final
{
public:
	double                                        OutLength;                                         // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwnerActor_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetStateMachineStateAnimLength_ReturnValue; // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_FunctionResult_OutLength_ImplicitCast;      // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Skill_Evade_C_GetEvadeAnimLength) == 0x000008, "Wrong alignment on Skill_Evade_C_GetEvadeAnimLength");
static_assert(sizeof(Skill_Evade_C_GetEvadeAnimLength) == 0x000020, "Wrong size on Skill_Evade_C_GetEvadeAnimLength");
static_assert(offsetof(Skill_Evade_C_GetEvadeAnimLength, OutLength) == 0x000000, "Member 'Skill_Evade_C_GetEvadeAnimLength::OutLength' has a wrong offset!");
static_assert(offsetof(Skill_Evade_C_GetEvadeAnimLength, CallFunc_GetOwnerActor_ReturnValue) == 0x000008, "Member 'Skill_Evade_C_GetEvadeAnimLength::CallFunc_GetOwnerActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Skill_Evade_C_GetEvadeAnimLength, CallFunc_GetStateMachineStateAnimLength_ReturnValue) == 0x000010, "Member 'Skill_Evade_C_GetEvadeAnimLength::CallFunc_GetStateMachineStateAnimLength_ReturnValue' has a wrong offset!");
static_assert(offsetof(Skill_Evade_C_GetEvadeAnimLength, K2Node_FunctionResult_OutLength_ImplicitCast) == 0x000018, "Member 'Skill_Evade_C_GetEvadeAnimLength::K2Node_FunctionResult_OutLength_ImplicitCast' has a wrong offset!");

// Function Skill_Evade.Skill_Evade_C.GetEvadeRecoveryAnimLength
// 0x0020 (0x0020 - 0x0000)
struct Skill_Evade_C_GetEvadeRecoveryAnimLength final
{
public:
	double                                        OutLength;                                         // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwnerActor_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetStateMachineStateAnimLength_ReturnValue; // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_FunctionResult_OutLength_ImplicitCast;      // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Skill_Evade_C_GetEvadeRecoveryAnimLength) == 0x000008, "Wrong alignment on Skill_Evade_C_GetEvadeRecoveryAnimLength");
static_assert(sizeof(Skill_Evade_C_GetEvadeRecoveryAnimLength) == 0x000020, "Wrong size on Skill_Evade_C_GetEvadeRecoveryAnimLength");
static_assert(offsetof(Skill_Evade_C_GetEvadeRecoveryAnimLength, OutLength) == 0x000000, "Member 'Skill_Evade_C_GetEvadeRecoveryAnimLength::OutLength' has a wrong offset!");
static_assert(offsetof(Skill_Evade_C_GetEvadeRecoveryAnimLength, CallFunc_GetOwnerActor_ReturnValue) == 0x000008, "Member 'Skill_Evade_C_GetEvadeRecoveryAnimLength::CallFunc_GetOwnerActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Skill_Evade_C_GetEvadeRecoveryAnimLength, CallFunc_GetStateMachineStateAnimLength_ReturnValue) == 0x000010, "Member 'Skill_Evade_C_GetEvadeRecoveryAnimLength::CallFunc_GetStateMachineStateAnimLength_ReturnValue' has a wrong offset!");
static_assert(offsetof(Skill_Evade_C_GetEvadeRecoveryAnimLength, K2Node_FunctionResult_OutLength_ImplicitCast) == 0x000018, "Member 'Skill_Evade_C_GetEvadeRecoveryAnimLength::K2Node_FunctionResult_OutLength_ImplicitCast' has a wrong offset!");

// Function Skill_Evade.Skill_Evade_C.IsPlayerRunning
// 0x0030 (0x0030 - 0x0000)
struct Skill_Evade_C_IsPlayerRunning final
{
public:
	bool                                          bOutRunning;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwnerActor_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AM1Player*                              K2Node_DynamicCast_AsM1Player;                     // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetCurrentAcceleration_ReturnValue;       // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Vector_IsNearlyZero_ReturnValue;          // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Skill_Evade_C_IsPlayerRunning) == 0x000008, "Wrong alignment on Skill_Evade_C_IsPlayerRunning");
static_assert(sizeof(Skill_Evade_C_IsPlayerRunning) == 0x000030, "Wrong size on Skill_Evade_C_IsPlayerRunning");
static_assert(offsetof(Skill_Evade_C_IsPlayerRunning, bOutRunning) == 0x000000, "Member 'Skill_Evade_C_IsPlayerRunning::bOutRunning' has a wrong offset!");
static_assert(offsetof(Skill_Evade_C_IsPlayerRunning, CallFunc_GetOwnerActor_ReturnValue) == 0x000008, "Member 'Skill_Evade_C_IsPlayerRunning::CallFunc_GetOwnerActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Skill_Evade_C_IsPlayerRunning, K2Node_DynamicCast_AsM1Player) == 0x000010, "Member 'Skill_Evade_C_IsPlayerRunning::K2Node_DynamicCast_AsM1Player' has a wrong offset!");
static_assert(offsetof(Skill_Evade_C_IsPlayerRunning, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'Skill_Evade_C_IsPlayerRunning::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Skill_Evade_C_IsPlayerRunning, CallFunc_GetCurrentAcceleration_ReturnValue) == 0x00001C, "Member 'Skill_Evade_C_IsPlayerRunning::CallFunc_GetCurrentAcceleration_ReturnValue' has a wrong offset!");
static_assert(offsetof(Skill_Evade_C_IsPlayerRunning, CallFunc_Vector_IsNearlyZero_ReturnValue) == 0x000028, "Member 'Skill_Evade_C_IsPlayerRunning::CallFunc_Vector_IsNearlyZero_ReturnValue' has a wrong offset!");
static_assert(offsetof(Skill_Evade_C_IsPlayerRunning, CallFunc_Not_PreBool_ReturnValue) == 0x000029, "Member 'Skill_Evade_C_IsPlayerRunning::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function Skill_Evade.Skill_Evade_C.IsRunning
// 0x0030 (0x0030 - 0x0000)
struct Skill_Evade_C_IsRunning final
{
public:
	bool                                          bRunning;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwnerActor_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetVelocity_ReturnValue;                  // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_VSizeXY_ReturnValue;                      // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Skill_Evade_C_IsRunning) == 0x000008, "Wrong alignment on Skill_Evade_C_IsRunning");
static_assert(sizeof(Skill_Evade_C_IsRunning) == 0x000030, "Wrong size on Skill_Evade_C_IsRunning");
static_assert(offsetof(Skill_Evade_C_IsRunning, bRunning) == 0x000000, "Member 'Skill_Evade_C_IsRunning::bRunning' has a wrong offset!");
static_assert(offsetof(Skill_Evade_C_IsRunning, CallFunc_GetOwnerActor_ReturnValue) == 0x000008, "Member 'Skill_Evade_C_IsRunning::CallFunc_GetOwnerActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Skill_Evade_C_IsRunning, CallFunc_GetVelocity_ReturnValue) == 0x000010, "Member 'Skill_Evade_C_IsRunning::CallFunc_GetVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(Skill_Evade_C_IsRunning, CallFunc_VSizeXY_ReturnValue) == 0x000020, "Member 'Skill_Evade_C_IsRunning::CallFunc_VSizeXY_ReturnValue' has a wrong offset!");
static_assert(offsetof(Skill_Evade_C_IsRunning, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000028, "Member 'Skill_Evade_C_IsRunning::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");

// Function Skill_Evade.Skill_Evade_C.OnBlendOut_E0302FCF43DF0741F5CFC58FF67626CF
// 0x0040 (0x0040 - 0x0000)
struct Skill_Evade_C_OnBlendOut_E0302FCF43DF0741F5CFC58FF67626CF final
{
public:
	struct FM1AbilityEvent                        Event;                                             // 0x0000(0x0040)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(Skill_Evade_C_OnBlendOut_E0302FCF43DF0741F5CFC58FF67626CF) == 0x000008, "Wrong alignment on Skill_Evade_C_OnBlendOut_E0302FCF43DF0741F5CFC58FF67626CF");
static_assert(sizeof(Skill_Evade_C_OnBlendOut_E0302FCF43DF0741F5CFC58FF67626CF) == 0x000040, "Wrong size on Skill_Evade_C_OnBlendOut_E0302FCF43DF0741F5CFC58FF67626CF");
static_assert(offsetof(Skill_Evade_C_OnBlendOut_E0302FCF43DF0741F5CFC58FF67626CF, Event) == 0x000000, "Member 'Skill_Evade_C_OnBlendOut_E0302FCF43DF0741F5CFC58FF67626CF::Event' has a wrong offset!");

// Function Skill_Evade.Skill_Evade_C.OnCompleted_E0302FCF43DF0741F5CFC58FF67626CF
// 0x0040 (0x0040 - 0x0000)
struct Skill_Evade_C_OnCompleted_E0302FCF43DF0741F5CFC58FF67626CF final
{
public:
	struct FM1AbilityEvent                        Event;                                             // 0x0000(0x0040)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(Skill_Evade_C_OnCompleted_E0302FCF43DF0741F5CFC58FF67626CF) == 0x000008, "Wrong alignment on Skill_Evade_C_OnCompleted_E0302FCF43DF0741F5CFC58FF67626CF");
static_assert(sizeof(Skill_Evade_C_OnCompleted_E0302FCF43DF0741F5CFC58FF67626CF) == 0x000040, "Wrong size on Skill_Evade_C_OnCompleted_E0302FCF43DF0741F5CFC58FF67626CF");
static_assert(offsetof(Skill_Evade_C_OnCompleted_E0302FCF43DF0741F5CFC58FF67626CF, Event) == 0x000000, "Member 'Skill_Evade_C_OnCompleted_E0302FCF43DF0741F5CFC58FF67626CF::Event' has a wrong offset!");

// Function Skill_Evade.Skill_Evade_C.OnEventReceived_E0302FCF43DF0741F5CFC58FF67626CF
// 0x0040 (0x0040 - 0x0000)
struct Skill_Evade_C_OnEventReceived_E0302FCF43DF0741F5CFC58FF67626CF final
{
public:
	struct FM1AbilityEvent                        Event;                                             // 0x0000(0x0040)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(Skill_Evade_C_OnEventReceived_E0302FCF43DF0741F5CFC58FF67626CF) == 0x000008, "Wrong alignment on Skill_Evade_C_OnEventReceived_E0302FCF43DF0741F5CFC58FF67626CF");
static_assert(sizeof(Skill_Evade_C_OnEventReceived_E0302FCF43DF0741F5CFC58FF67626CF) == 0x000040, "Wrong size on Skill_Evade_C_OnEventReceived_E0302FCF43DF0741F5CFC58FF67626CF");
static_assert(offsetof(Skill_Evade_C_OnEventReceived_E0302FCF43DF0741F5CFC58FF67626CF, Event) == 0x000000, "Member 'Skill_Evade_C_OnEventReceived_E0302FCF43DF0741F5CFC58FF67626CF::Event' has a wrong offset!");

// Function Skill_Evade.Skill_Evade_C.OnFinished_6FE8C95042F333E7CBFD0ABF316AB07F
// 0x0010 (0x0010 - 0x0000)
struct Skill_Evade_C_OnFinished_6FE8C95042F333E7CBFD0ABF316AB07F final
{
public:
	bool                                          DestinationReached;                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          TimedOut;                                          // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                FinalTargetLocation;                               // 0x0004(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Skill_Evade_C_OnFinished_6FE8C95042F333E7CBFD0ABF316AB07F) == 0x000004, "Wrong alignment on Skill_Evade_C_OnFinished_6FE8C95042F333E7CBFD0ABF316AB07F");
static_assert(sizeof(Skill_Evade_C_OnFinished_6FE8C95042F333E7CBFD0ABF316AB07F) == 0x000010, "Wrong size on Skill_Evade_C_OnFinished_6FE8C95042F333E7CBFD0ABF316AB07F");
static_assert(offsetof(Skill_Evade_C_OnFinished_6FE8C95042F333E7CBFD0ABF316AB07F, DestinationReached) == 0x000000, "Member 'Skill_Evade_C_OnFinished_6FE8C95042F333E7CBFD0ABF316AB07F::DestinationReached' has a wrong offset!");
static_assert(offsetof(Skill_Evade_C_OnFinished_6FE8C95042F333E7CBFD0ABF316AB07F, TimedOut) == 0x000001, "Member 'Skill_Evade_C_OnFinished_6FE8C95042F333E7CBFD0ABF316AB07F::TimedOut' has a wrong offset!");
static_assert(offsetof(Skill_Evade_C_OnFinished_6FE8C95042F333E7CBFD0ABF316AB07F, FinalTargetLocation) == 0x000004, "Member 'Skill_Evade_C_OnFinished_6FE8C95042F333E7CBFD0ABF316AB07F::FinalTargetLocation' has a wrong offset!");

// Function Skill_Evade.Skill_Evade_C.GetEvadeDistance
// 0x0058 (0x0058 - 0x0000)
struct Skill_Evade_C_GetEvadeDistance final
{
public:
	double                                        OutDistance;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwnerActor_ReturnValue;                // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_GetAttachedActors_OutActors;              // 0x0020(0x0010)(ReferenceParm)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetPathName_ReturnValue;                  // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue;                     // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Skill_Evade_C_GetEvadeDistance) == 0x000008, "Wrong alignment on Skill_Evade_C_GetEvadeDistance");
static_assert(sizeof(Skill_Evade_C_GetEvadeDistance) == 0x000058, "Wrong size on Skill_Evade_C_GetEvadeDistance");
static_assert(offsetof(Skill_Evade_C_GetEvadeDistance, OutDistance) == 0x000000, "Member 'Skill_Evade_C_GetEvadeDistance::OutDistance' has a wrong offset!");
static_assert(offsetof(Skill_Evade_C_GetEvadeDistance, Temp_int_Array_Index_Variable) == 0x000008, "Member 'Skill_Evade_C_GetEvadeDistance::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Skill_Evade_C_GetEvadeDistance, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'Skill_Evade_C_GetEvadeDistance::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Skill_Evade_C_GetEvadeDistance, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'Skill_Evade_C_GetEvadeDistance::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Skill_Evade_C_GetEvadeDistance, CallFunc_GetOwnerActor_ReturnValue) == 0x000018, "Member 'Skill_Evade_C_GetEvadeDistance::CallFunc_GetOwnerActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Skill_Evade_C_GetEvadeDistance, CallFunc_GetAttachedActors_OutActors) == 0x000020, "Member 'Skill_Evade_C_GetEvadeDistance::CallFunc_GetAttachedActors_OutActors' has a wrong offset!");
static_assert(offsetof(Skill_Evade_C_GetEvadeDistance, CallFunc_Array_Get_Item) == 0x000030, "Member 'Skill_Evade_C_GetEvadeDistance::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Skill_Evade_C_GetEvadeDistance, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'Skill_Evade_C_GetEvadeDistance::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Skill_Evade_C_GetEvadeDistance, CallFunc_GetPathName_ReturnValue) == 0x000040, "Member 'Skill_Evade_C_GetEvadeDistance::CallFunc_GetPathName_ReturnValue' has a wrong offset!");
static_assert(offsetof(Skill_Evade_C_GetEvadeDistance, CallFunc_Less_IntInt_ReturnValue) == 0x000050, "Member 'Skill_Evade_C_GetEvadeDistance::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Skill_Evade_C_GetEvadeDistance, CallFunc_Contains_ReturnValue) == 0x000051, "Member 'Skill_Evade_C_GetEvadeDistance::CallFunc_Contains_ReturnValue' has a wrong offset!");

// Function Skill_Evade.Skill_Evade_C.MakeSkillActivateParams
// 0x0140 (0x0140 - 0x0000)
struct Skill_Evade_C_MakeSkillActivateParams final
{
public:
	const class AActor*                           InOwner;                                           // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<struct FM1AbilityParamData>            ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ReturnParm)
	TArray<struct FM1AbilityParamData>            ActivateParams;                                    // 0x0018(0x0010)(Edit, BlueprintVisible)
	struct FVector                                LocalEvadeDir;                                     // 0x0028(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UM1StatComponent*                       CallFunc_GetComponentByClass_ReturnValue;          // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AM1Player*                              K2Node_DynamicCast_AsM1Player;                     // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FM1ScaledInteger                       CallFunc_GetStatValue_ReturnValue;                 // 0x0050(0x0008)(NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetControllerYaw_ReturnValue;             // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_ScaledIntToFloat_ReturnValue;        // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_DoubleToString_ReturnValue;          // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_RotatorToVector_ReturnValue;         // 0x0080(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FM1AbilityParamData                    K2Node_MakeStruct_M1AbilityParamData;              // 0x0090(0x0020)()
	struct FVector                                CallFunc_GetLastMovementInputVector_ReturnValue;   // 0x00B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x00BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_ZeroRebaseVec_ReturnValue;                // 0x00C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D4[0x4];                                       // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FM1AbilityParamData                    CallFunc_AbilityContextMakeVectorParam_ReturnValue; // 0x00D8(0x0020)()
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Vector_IsZero_ReturnValue;                // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_101[0x3];                                      // 0x0101(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0104(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FM1AbilityParamData                    CallFunc_AbilityContextMakeVectorParam_ReturnValue_1; // 0x0110(0x0020)()
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_134[0x4];                                      // 0x0134(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_DoubleToString_InDouble_ImplicitCast; // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Skill_Evade_C_MakeSkillActivateParams) == 0x000008, "Wrong alignment on Skill_Evade_C_MakeSkillActivateParams");
static_assert(sizeof(Skill_Evade_C_MakeSkillActivateParams) == 0x000140, "Wrong size on Skill_Evade_C_MakeSkillActivateParams");
static_assert(offsetof(Skill_Evade_C_MakeSkillActivateParams, InOwner) == 0x000000, "Member 'Skill_Evade_C_MakeSkillActivateParams::InOwner' has a wrong offset!");
static_assert(offsetof(Skill_Evade_C_MakeSkillActivateParams, ReturnValue) == 0x000008, "Member 'Skill_Evade_C_MakeSkillActivateParams::ReturnValue' has a wrong offset!");
static_assert(offsetof(Skill_Evade_C_MakeSkillActivateParams, ActivateParams) == 0x000018, "Member 'Skill_Evade_C_MakeSkillActivateParams::ActivateParams' has a wrong offset!");
static_assert(offsetof(Skill_Evade_C_MakeSkillActivateParams, LocalEvadeDir) == 0x000028, "Member 'Skill_Evade_C_MakeSkillActivateParams::LocalEvadeDir' has a wrong offset!");
static_assert(offsetof(Skill_Evade_C_MakeSkillActivateParams, CallFunc_GetComponentByClass_ReturnValue) == 0x000038, "Member 'Skill_Evade_C_MakeSkillActivateParams::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(Skill_Evade_C_MakeSkillActivateParams, K2Node_DynamicCast_AsM1Player) == 0x000040, "Member 'Skill_Evade_C_MakeSkillActivateParams::K2Node_DynamicCast_AsM1Player' has a wrong offset!");
static_assert(offsetof(Skill_Evade_C_MakeSkillActivateParams, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'Skill_Evade_C_MakeSkillActivateParams::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Skill_Evade_C_MakeSkillActivateParams, CallFunc_GetStatValue_ReturnValue) == 0x000050, "Member 'Skill_Evade_C_MakeSkillActivateParams::CallFunc_GetStatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(Skill_Evade_C_MakeSkillActivateParams, CallFunc_GetControllerYaw_ReturnValue) == 0x000058, "Member 'Skill_Evade_C_MakeSkillActivateParams::CallFunc_GetControllerYaw_ReturnValue' has a wrong offset!");
static_assert(offsetof(Skill_Evade_C_MakeSkillActivateParams, CallFunc_Conv_ScaledIntToFloat_ReturnValue) == 0x00005C, "Member 'Skill_Evade_C_MakeSkillActivateParams::CallFunc_Conv_ScaledIntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Skill_Evade_C_MakeSkillActivateParams, CallFunc_MakeRotator_ReturnValue) == 0x000060, "Member 'Skill_Evade_C_MakeSkillActivateParams::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Skill_Evade_C_MakeSkillActivateParams, CallFunc_Conv_DoubleToString_ReturnValue) == 0x000070, "Member 'Skill_Evade_C_MakeSkillActivateParams::CallFunc_Conv_DoubleToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(Skill_Evade_C_MakeSkillActivateParams, CallFunc_Conv_RotatorToVector_ReturnValue) == 0x000080, "Member 'Skill_Evade_C_MakeSkillActivateParams::CallFunc_Conv_RotatorToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Skill_Evade_C_MakeSkillActivateParams, K2Node_MakeStruct_M1AbilityParamData) == 0x000090, "Member 'Skill_Evade_C_MakeSkillActivateParams::K2Node_MakeStruct_M1AbilityParamData' has a wrong offset!");
static_assert(offsetof(Skill_Evade_C_MakeSkillActivateParams, CallFunc_GetLastMovementInputVector_ReturnValue) == 0x0000B0, "Member 'Skill_Evade_C_MakeSkillActivateParams::CallFunc_GetLastMovementInputVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Skill_Evade_C_MakeSkillActivateParams, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0000BC, "Member 'Skill_Evade_C_MakeSkillActivateParams::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Skill_Evade_C_MakeSkillActivateParams, CallFunc_ZeroRebaseVec_ReturnValue) == 0x0000C8, "Member 'Skill_Evade_C_MakeSkillActivateParams::CallFunc_ZeroRebaseVec_ReturnValue' has a wrong offset!");
static_assert(offsetof(Skill_Evade_C_MakeSkillActivateParams, CallFunc_AbilityContextMakeVectorParam_ReturnValue) == 0x0000D8, "Member 'Skill_Evade_C_MakeSkillActivateParams::CallFunc_AbilityContextMakeVectorParam_ReturnValue' has a wrong offset!");
static_assert(offsetof(Skill_Evade_C_MakeSkillActivateParams, CallFunc_Array_Add_ReturnValue) == 0x0000F8, "Member 'Skill_Evade_C_MakeSkillActivateParams::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(Skill_Evade_C_MakeSkillActivateParams, CallFunc_Array_Add_ReturnValue_1) == 0x0000FC, "Member 'Skill_Evade_C_MakeSkillActivateParams::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Skill_Evade_C_MakeSkillActivateParams, CallFunc_Vector_IsZero_ReturnValue) == 0x000100, "Member 'Skill_Evade_C_MakeSkillActivateParams::CallFunc_Vector_IsZero_ReturnValue' has a wrong offset!");
static_assert(offsetof(Skill_Evade_C_MakeSkillActivateParams, CallFunc_Normal_ReturnValue) == 0x000104, "Member 'Skill_Evade_C_MakeSkillActivateParams::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(Skill_Evade_C_MakeSkillActivateParams, CallFunc_AbilityContextMakeVectorParam_ReturnValue_1) == 0x000110, "Member 'Skill_Evade_C_MakeSkillActivateParams::CallFunc_AbilityContextMakeVectorParam_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Skill_Evade_C_MakeSkillActivateParams, CallFunc_Array_Add_ReturnValue_2) == 0x000130, "Member 'Skill_Evade_C_MakeSkillActivateParams::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Skill_Evade_C_MakeSkillActivateParams, CallFunc_Conv_DoubleToString_InDouble_ImplicitCast) == 0x000138, "Member 'Skill_Evade_C_MakeSkillActivateParams::CallFunc_Conv_DoubleToString_InDouble_ImplicitCast' has a wrong offset!");

}

