#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Skill_SpawnPreviewBase

#include "Basic.hpp"

#include "M1_classes.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass Skill_SpawnPreviewBase.Skill_SpawnPreviewBase_C
// 0x0070 (0x03A8 - 0x0338)
class USkill_SpawnPreviewBase_C : public UM1SkillAbility
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0338(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UClass*                                 PreviewActorClass;                                 // 0x0340(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        SpawnMaxDistance;                                  // 0x0348(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        SpawnCollisionRadius;                              // 0x0350(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        SpawnCollisionHalfHeight;                          // 0x0358(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FCollisionProfileName                  SpawnCollisionProfile;                             // 0x0360(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	class UM1AbilityTask_LocalWaitInput*          Action2InputTask;                                  // 0x0368(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UM1AbilityTask_LocalWaitInput*          Action1InputTask;                                  // 0x0370(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          bSkipOwnerWalkableCheck;                           // 0x0378(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_379[0x7];                                      // 0x0379(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAkAudioEvent*                          Preview_SFx;                                       // 0x0380(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         PreviewVFx;                                        // 0x0388(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          bRotateToOwner;                                    // 0x0390(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bDebugDraw;                                        // 0x0391(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_392[0x6];                                      // 0x0392(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ASkillPreviewActor_C*                   Client_Preview_Actor;                              // 0x0398(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           CancelMontage;                                     // 0x03A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void BP_OnActivated();
	void BP_OnDeactivated(bool bCancelled);
	struct FRotator CalcSpawnRotation(const struct FVector& SpawnLocation);
	void CancelImpl();
	void ExecuteUbergraph_Skill_SpawnPreviewBase(int32 EntryPoint);
	void FindSpawnPoint(class AActor* Owner, bool bFullDetect, bool* ReturnFound, struct FVector* ReturnLoc);
	bool FindSpawnPoint_Sweep(const struct FVector& Start, const struct FVector& Dir, double Dist, double Radius, bool bReverse, bool InDebugDraw, const struct FLinearColor& TraceColor, struct FHitResult* OutHit);
	struct FVector GetPreivewLocation();
	void IsSpawnable(bool* bSpawnable);
	void NetMulticast_Cancel();
	void NetMulticast_Spawn(const struct FVector& SpawnLocation);
	void OnBlendOut_0EA239094823F9872CECFCB111481D86(const struct FM1AbilityEvent& Event);
	void OnCompleted_0EA239094823F9872CECFCB111481D86(const struct FM1AbilityEvent& Event);
	void OnEventReceived_0EA239094823F9872CECFCB111481D86(const struct FM1AbilityEvent& Event);
	void OnInput_522170A84E52E4555938829337C329D9();
	void OnInput_EDB9B3AB427A25F22DCE05AFF98690D7();
	void RemovePreview();
	void ServerRequestSpawn(bool bResult, const struct FVector& OwnerLocation, const struct FVector& SpawnLocation);
	void Spawn_Impl(const struct FVector& SpawnLocation);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Skill_SpawnPreviewBase_C">();
	}
	static class USkill_SpawnPreviewBase_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<USkill_SpawnPreviewBase_C>();
	}
};
static_assert(alignof(USkill_SpawnPreviewBase_C) == 0x000008, "Wrong alignment on USkill_SpawnPreviewBase_C");
static_assert(sizeof(USkill_SpawnPreviewBase_C) == 0x0003A8, "Wrong size on USkill_SpawnPreviewBase_C");
static_assert(offsetof(USkill_SpawnPreviewBase_C, UberGraphFrame) == 0x000338, "Member 'USkill_SpawnPreviewBase_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(USkill_SpawnPreviewBase_C, PreviewActorClass) == 0x000340, "Member 'USkill_SpawnPreviewBase_C::PreviewActorClass' has a wrong offset!");
static_assert(offsetof(USkill_SpawnPreviewBase_C, SpawnMaxDistance) == 0x000348, "Member 'USkill_SpawnPreviewBase_C::SpawnMaxDistance' has a wrong offset!");
static_assert(offsetof(USkill_SpawnPreviewBase_C, SpawnCollisionRadius) == 0x000350, "Member 'USkill_SpawnPreviewBase_C::SpawnCollisionRadius' has a wrong offset!");
static_assert(offsetof(USkill_SpawnPreviewBase_C, SpawnCollisionHalfHeight) == 0x000358, "Member 'USkill_SpawnPreviewBase_C::SpawnCollisionHalfHeight' has a wrong offset!");
static_assert(offsetof(USkill_SpawnPreviewBase_C, SpawnCollisionProfile) == 0x000360, "Member 'USkill_SpawnPreviewBase_C::SpawnCollisionProfile' has a wrong offset!");
static_assert(offsetof(USkill_SpawnPreviewBase_C, Action2InputTask) == 0x000368, "Member 'USkill_SpawnPreviewBase_C::Action2InputTask' has a wrong offset!");
static_assert(offsetof(USkill_SpawnPreviewBase_C, Action1InputTask) == 0x000370, "Member 'USkill_SpawnPreviewBase_C::Action1InputTask' has a wrong offset!");
static_assert(offsetof(USkill_SpawnPreviewBase_C, bSkipOwnerWalkableCheck) == 0x000378, "Member 'USkill_SpawnPreviewBase_C::bSkipOwnerWalkableCheck' has a wrong offset!");
static_assert(offsetof(USkill_SpawnPreviewBase_C, Preview_SFx) == 0x000380, "Member 'USkill_SpawnPreviewBase_C::Preview_SFx' has a wrong offset!");
static_assert(offsetof(USkill_SpawnPreviewBase_C, PreviewVFx) == 0x000388, "Member 'USkill_SpawnPreviewBase_C::PreviewVFx' has a wrong offset!");
static_assert(offsetof(USkill_SpawnPreviewBase_C, bRotateToOwner) == 0x000390, "Member 'USkill_SpawnPreviewBase_C::bRotateToOwner' has a wrong offset!");
static_assert(offsetof(USkill_SpawnPreviewBase_C, bDebugDraw) == 0x000391, "Member 'USkill_SpawnPreviewBase_C::bDebugDraw' has a wrong offset!");
static_assert(offsetof(USkill_SpawnPreviewBase_C, Client_Preview_Actor) == 0x000398, "Member 'USkill_SpawnPreviewBase_C::Client_Preview_Actor' has a wrong offset!");
static_assert(offsetof(USkill_SpawnPreviewBase_C, CancelMontage) == 0x0003A0, "Member 'USkill_SpawnPreviewBase_C::CancelMontage' has a wrong offset!");

}

