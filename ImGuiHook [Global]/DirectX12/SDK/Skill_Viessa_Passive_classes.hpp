#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Skill_Viessa_Passive

#include "Basic.hpp"

#include "M1_classes.hpp"
#include "GameplayTags_structs.hpp"
#include "ViessaPassiveTargetInfo_structs.hpp"
#include "Engine_structs.hpp"
#include "M1Data_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass Skill_Viessa_Passive.Skill_Viessa_Passive_C
// 0x0050 (0x0388 - 0x0338)
class USkill_Viessa_Passive_C final : public UM1SkillAbility
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0338(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	TArray<struct FViessaPassiveTargetInfo>       PassiveTargets;                                    // 0x0340(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	int32                                         MaxLevel;                                          // 0x0350(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OverStackMonsterCount;                             // 0x0354(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PassiveStartCount;                                 // 0x0358(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PassiveStartLevel;                                 // 0x035C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AM1AbilityActor*                        IceSphereAbilityActor;                             // 0x0360(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          IsActivated;                                       // 0x0368(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DebugPrint;                                        // 0x0369(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36A[0x2];                                      // 0x036A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           PassiveQueryTag;                                   // 0x036C(0x0008)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_374[0x4];                                      // 0x0374(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EM1MonsterCategory>                    SpecialMonsterCategoryArray;                       // 0x0378(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void BP_OnActivated();
	void BP_OnDeactivated(bool bCancelled);
	void ExecuteUbergraph_Skill_Viessa_Passive(int32 EntryPoint);
	void FindPassiveTargetData(class AActor* TargetActor, bool* bFound, struct FViessaPassiveTargetInfo* OutData);
	void Invoke_Ice_Bind(class AActor* TargetActor, int32 IncreaseLevel, class FName Identity);
	void IsSpecialMonster(class AActor* TargetActor, bool* SpecialMonster);
	void MakeInvokeStatusEffectTag(int32 StackLevel, class AActor* Target, struct FGameplayTagContainer* InvokeStatusEffectTag);
	void OnAbilityDeactivated_E5D35C2B4522F41472A216B93CA10CA7(const struct FM1AbilityId& InAbilityId, const class AActor* Owner, bool bCanceled);
	void OnAbilityEvent_935A4EA54A2FF644B7D685A8DB3DC7CB(const struct FM1AbilityEvent& Event);
	void OnFunctionalTest();
	void ProccessIceSphere(int32& ApplyStackLevel);
	void RemovePassiveTargetDataOnDeactivation(const struct FM1AbilityId& TargetAbilityId, class AActor* OptionalExternalTarget);
	void UpdatePassiveTargetData(class AActor* UpdateTarget, int32 ApplyStack, const struct FM1AbilityId& AbilityId_0, class FName SkillIdentity);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Skill_Viessa_Passive_C">();
	}
	static class USkill_Viessa_Passive_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<USkill_Viessa_Passive_C>();
	}
};
static_assert(alignof(USkill_Viessa_Passive_C) == 0x000008, "Wrong alignment on USkill_Viessa_Passive_C");
static_assert(sizeof(USkill_Viessa_Passive_C) == 0x000388, "Wrong size on USkill_Viessa_Passive_C");
static_assert(offsetof(USkill_Viessa_Passive_C, UberGraphFrame) == 0x000338, "Member 'USkill_Viessa_Passive_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(USkill_Viessa_Passive_C, PassiveTargets) == 0x000340, "Member 'USkill_Viessa_Passive_C::PassiveTargets' has a wrong offset!");
static_assert(offsetof(USkill_Viessa_Passive_C, MaxLevel) == 0x000350, "Member 'USkill_Viessa_Passive_C::MaxLevel' has a wrong offset!");
static_assert(offsetof(USkill_Viessa_Passive_C, OverStackMonsterCount) == 0x000354, "Member 'USkill_Viessa_Passive_C::OverStackMonsterCount' has a wrong offset!");
static_assert(offsetof(USkill_Viessa_Passive_C, PassiveStartCount) == 0x000358, "Member 'USkill_Viessa_Passive_C::PassiveStartCount' has a wrong offset!");
static_assert(offsetof(USkill_Viessa_Passive_C, PassiveStartLevel) == 0x00035C, "Member 'USkill_Viessa_Passive_C::PassiveStartLevel' has a wrong offset!");
static_assert(offsetof(USkill_Viessa_Passive_C, IceSphereAbilityActor) == 0x000360, "Member 'USkill_Viessa_Passive_C::IceSphereAbilityActor' has a wrong offset!");
static_assert(offsetof(USkill_Viessa_Passive_C, IsActivated) == 0x000368, "Member 'USkill_Viessa_Passive_C::IsActivated' has a wrong offset!");
static_assert(offsetof(USkill_Viessa_Passive_C, DebugPrint) == 0x000369, "Member 'USkill_Viessa_Passive_C::DebugPrint' has a wrong offset!");
static_assert(offsetof(USkill_Viessa_Passive_C, PassiveQueryTag) == 0x00036C, "Member 'USkill_Viessa_Passive_C::PassiveQueryTag' has a wrong offset!");
static_assert(offsetof(USkill_Viessa_Passive_C, SpecialMonsterCategoryArray) == 0x000378, "Member 'USkill_Viessa_Passive_C::SpecialMonsterCategoryArray' has a wrong offset!");

}

