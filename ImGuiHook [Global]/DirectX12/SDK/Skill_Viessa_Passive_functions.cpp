#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Skill_Viessa_Passive

#include "Basic.hpp"

#include "Skill_Viessa_Passive_classes.hpp"
#include "Skill_Viessa_Passive_parameters.hpp"


namespace SDK
{

// Function Skill_Viessa_Passive.Skill_Viessa_Passive_C.BP_OnActivated
// (Event, Protected, BlueprintEvent)

void USkill_Viessa_Passive_C::BP_OnActivated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Skill_Viessa_Passive_C", "BP_OnActivated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Skill_Viessa_Passive.Skill_Viessa_Passive_C.BP_OnDeactivated
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bCancelled                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USkill_Viessa_Passive_C::BP_OnDeactivated(bool bCancelled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Skill_Viessa_Passive_C", "BP_OnDeactivated");

	Params::Skill_Viessa_Passive_C_BP_OnDeactivated Parms{};

	Parms.bCancelled = bCancelled;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Skill_Viessa_Passive.Skill_Viessa_Passive_C.ExecuteUbergraph_Skill_Viessa_Passive
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USkill_Viessa_Passive_C::ExecuteUbergraph_Skill_Viessa_Passive(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Skill_Viessa_Passive_C", "ExecuteUbergraph_Skill_Viessa_Passive");

	Params::Skill_Viessa_Passive_C_ExecuteUbergraph_Skill_Viessa_Passive Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Skill_Viessa_Passive.Skill_Viessa_Passive_C.FindPassiveTargetData
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           TargetActor                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    bFound                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FViessaPassiveTargetInfo         OutData                                                (Parm, OutParm, HasGetValueTypeHash)

void USkill_Viessa_Passive_C::FindPassiveTargetData(class AActor* TargetActor, bool* bFound, struct FViessaPassiveTargetInfo* OutData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Skill_Viessa_Passive_C", "FindPassiveTargetData");

	Params::Skill_Viessa_Passive_C_FindPassiveTargetData Parms{};

	Parms.TargetActor = TargetActor;

	UObject::ProcessEvent(Func, &Parms);

	if (bFound != nullptr)
		*bFound = Parms.bFound;

	if (OutData != nullptr)
		*OutData = std::move(Parms.OutData);
}


// Function Skill_Viessa_Passive.Skill_Viessa_Passive_C.Invoke Ice Bind
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           TargetActor                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// int32                                   IncreaseLevel                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             Identity                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USkill_Viessa_Passive_C::Invoke_Ice_Bind(class AActor* TargetActor, int32 IncreaseLevel, class FName Identity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Skill_Viessa_Passive_C", "Invoke Ice Bind");

	Params::Skill_Viessa_Passive_C_Invoke_Ice_Bind Parms{};

	Parms.TargetActor = TargetActor;
	Parms.IncreaseLevel = IncreaseLevel;
	Parms.Identity = Identity;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Skill_Viessa_Passive.Skill_Viessa_Passive_C.IsSpecialMonster
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           TargetActor                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    SpecialMonster                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USkill_Viessa_Passive_C::IsSpecialMonster(class AActor* TargetActor, bool* SpecialMonster)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Skill_Viessa_Passive_C", "IsSpecialMonster");

	Params::Skill_Viessa_Passive_C_IsSpecialMonster Parms{};

	Parms.TargetActor = TargetActor;

	UObject::ProcessEvent(Func, &Parms);

	if (SpecialMonster != nullptr)
		*SpecialMonster = Parms.SpecialMonster;
}


// Function Skill_Viessa_Passive.Skill_Viessa_Passive_C.MakeInvokeStatusEffectTag
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   StackLevel                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FGameplayTagContainer            InvokeStatusEffectTag                                  (Parm, OutParm)

void USkill_Viessa_Passive_C::MakeInvokeStatusEffectTag(int32 StackLevel, class AActor* Target, struct FGameplayTagContainer* InvokeStatusEffectTag)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Skill_Viessa_Passive_C", "MakeInvokeStatusEffectTag");

	Params::Skill_Viessa_Passive_C_MakeInvokeStatusEffectTag Parms{};

	Parms.StackLevel = StackLevel;
	Parms.Target = Target;

	UObject::ProcessEvent(Func, &Parms);

	if (InvokeStatusEffectTag != nullptr)
		*InvokeStatusEffectTag = std::move(Parms.InvokeStatusEffectTag);
}


// Function Skill_Viessa_Passive.Skill_Viessa_Passive_C.OnAbilityDeactivated_E5D35C2B4522F41472A216B93CA10CA7
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FM1AbilityId                     InAbilityId                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// class AActor*                           Owner                                                  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    bCanceled                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USkill_Viessa_Passive_C::OnAbilityDeactivated_E5D35C2B4522F41472A216B93CA10CA7(const struct FM1AbilityId& InAbilityId, const class AActor* Owner, bool bCanceled)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Skill_Viessa_Passive_C", "OnAbilityDeactivated_E5D35C2B4522F41472A216B93CA10CA7");

	Params::Skill_Viessa_Passive_C_OnAbilityDeactivated_E5D35C2B4522F41472A216B93CA10CA7 Parms{};

	Parms.InAbilityId = std::move(InAbilityId);
	Parms.Owner = Owner;
	Parms.bCanceled = bCanceled;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Skill_Viessa_Passive.Skill_Viessa_Passive_C.OnAbilityEvent_935A4EA54A2FF644B7D685A8DB3DC7CB
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FM1AbilityEvent                  Event                                                  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void USkill_Viessa_Passive_C::OnAbilityEvent_935A4EA54A2FF644B7D685A8DB3DC7CB(const struct FM1AbilityEvent& Event)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Skill_Viessa_Passive_C", "OnAbilityEvent_935A4EA54A2FF644B7D685A8DB3DC7CB");

	Params::Skill_Viessa_Passive_C_OnAbilityEvent_935A4EA54A2FF644B7D685A8DB3DC7CB Parms{};

	Parms.Event = std::move(Event);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Skill_Viessa_Passive.Skill_Viessa_Passive_C.OnFunctionalTest
// (Event, Protected, BlueprintEvent)

void USkill_Viessa_Passive_C::OnFunctionalTest()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Skill_Viessa_Passive_C", "OnFunctionalTest");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Skill_Viessa_Passive.Skill_Viessa_Passive_C.ProccessIceSphere
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   ApplyStackLevel                                        (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USkill_Viessa_Passive_C::ProccessIceSphere(int32& ApplyStackLevel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Skill_Viessa_Passive_C", "ProccessIceSphere");

	Params::Skill_Viessa_Passive_C_ProccessIceSphere Parms{};

	Parms.ApplyStackLevel = ApplyStackLevel;

	UObject::ProcessEvent(Func, &Parms);

	ApplyStackLevel = Parms.ApplyStackLevel;
}


// Function Skill_Viessa_Passive.Skill_Viessa_Passive_C.RemovePassiveTargetDataOnDeactivation
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FM1AbilityId                     TargetAbilityId                                        (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// class AActor*                           OptionalExternalTarget                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void USkill_Viessa_Passive_C::RemovePassiveTargetDataOnDeactivation(const struct FM1AbilityId& TargetAbilityId, class AActor* OptionalExternalTarget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Skill_Viessa_Passive_C", "RemovePassiveTargetDataOnDeactivation");

	Params::Skill_Viessa_Passive_C_RemovePassiveTargetDataOnDeactivation Parms{};

	Parms.TargetAbilityId = std::move(TargetAbilityId);
	Parms.OptionalExternalTarget = OptionalExternalTarget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Skill_Viessa_Passive.Skill_Viessa_Passive_C.UpdatePassiveTargetData
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           UpdateTarget                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// int32                                   ApplyStack                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FM1AbilityId                     AbilityId_0                                            (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// class FName                             SkillIdentity                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USkill_Viessa_Passive_C::UpdatePassiveTargetData(class AActor* UpdateTarget, int32 ApplyStack, const struct FM1AbilityId& AbilityId_0, class FName SkillIdentity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Skill_Viessa_Passive_C", "UpdatePassiveTargetData");

	Params::Skill_Viessa_Passive_C_UpdatePassiveTargetData Parms{};

	Parms.UpdateTarget = UpdateTarget;
	Parms.ApplyStack = ApplyStack;
	Parms.AbilityId_0 = std::move(AbilityId_0);
	Parms.SkillIdentity = SkillIdentity;

	UObject::ProcessEvent(Func, &Parms);
}

}

