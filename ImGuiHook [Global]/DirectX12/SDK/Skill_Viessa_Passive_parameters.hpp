#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Skill_Viessa_Passive

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "M1Data_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "ViessaPassiveTargetInfo_structs.hpp"
#include "M1_structs.hpp"


namespace SDK::Params
{

// Function Skill_Viessa_Passive.Skill_Viessa_Passive_C.BP_OnDeactivated
// 0x0001 (0x0001 - 0x0000)
struct Skill_Viessa_Passive_C_BP_OnDeactivated final
{
public:
	bool                                          bCancelled;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Skill_Viessa_Passive_C_BP_OnDeactivated) == 0x000001, "Wrong alignment on Skill_Viessa_Passive_C_BP_OnDeactivated");
static_assert(sizeof(Skill_Viessa_Passive_C_BP_OnDeactivated) == 0x000001, "Wrong size on Skill_Viessa_Passive_C_BP_OnDeactivated");
static_assert(offsetof(Skill_Viessa_Passive_C_BP_OnDeactivated, bCancelled) == 0x000000, "Member 'Skill_Viessa_Passive_C_BP_OnDeactivated::bCancelled' has a wrong offset!");

// Function Skill_Viessa_Passive.Skill_Viessa_Passive_C.ExecuteUbergraph_Skill_Viessa_Passive
// 0x0420 (0x0420 - 0x0000)
struct Skill_Viessa_Passive_C_ExecuteUbergraph_Skill_Viessa_Passive final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(struct FM1AbilityId& InAbilityId, class AActor* Owner, bool bCanceled)> K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FM1AbilityEvent                        Temp_struct_Variable;                              // 0x0018(0x0040)()
	class UM1AbilityTask_WaitAbilityEvent*        CallFunc_WaitAbilityEvent_ReturnValue;             // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UM1AbilityEventOptionalObject_Icebind_C* K2Node_DynamicCast_AsM1Ability_Event_Optional_Object_Icebind; // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UM1StatusEffectComponent*               CallFunc_GetComponentByClass_ReturnValue;          // 0x0070(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x007A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7B[0x1];                                       // 0x007B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UM1AbilityEventOptionalObject_Icebind_C* K2Node_DynamicCast_AsM1Ability_Event_Optional_Object_Icebind_1; // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDebugStringFromGameplayTag_ReturnValue; // 0x00C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x00D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x00E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x00F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x0100(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class AM1Monster*                             CallFunc_GetTestMonster_ReturnValue;               // 0x0110(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x0118(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_5;              // 0x0128(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FM1SkillFTestTestCase                  CallFunc_MakeTestCaseStatusEffectOnMonster_ReturnValue; // 0x0138(0x0068)()
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_6;              // 0x01A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FM1SkillFTestTestCase                  CallFunc_MakeTestCaseSpawnAbilityActor_ReturnValue; // 0x01B0(0x0068)()
	TArray<struct FM1SkillFTestTestCase>          K2Node_MakeArray_Array;                            // 0x0218(0x0010)(ReferenceParm)
	struct FM1SkillFTestTestCase                  CallFunc_MakeTestCaseDamageOnMonster_ReturnValue;  // 0x0228(0x0068)()
	struct FM1SkillFTestTestCaseSheet             K2Node_MakeStruct_M1SkillFTestTestCaseSheet;       // 0x0290(0x0040)()
	TArray<struct FM1SkillFTestTestCase>          K2Node_MakeArray_Array_1;                          // 0x02D0(0x0010)(ReferenceParm)
	struct FM1SkillFTestTestCaseSheet             K2Node_MakeStruct_M1SkillFTestTestCaseSheet_1;     // 0x02E0(0x0040)()
	bool                                          K2Node_Event_bCancelled;                           // 0x0320(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0321(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_322[0x6];                                      // 0x0322(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FM1AbilityId                           K2Node_CustomEvent_TargetAbilityId;                // 0x0328(0x0010)(ConstParm, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_OptionalExternalTarget;         // 0x0338(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UM1AbilityTask_WaitAbilityDeactivated*  CallFunc_WaitAbilityDeactivated_ReturnValue;       // 0x0340(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FViessaPassiveTargetInfo               CallFunc_Array_Get_Item;                           // 0x0348(0x0028)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0370(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0374(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_375[0x3];                                      // 0x0375(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FM1AbilityEvent                        K2Node_CustomEvent_Event;                          // 0x0378(0x0040)(ConstParm)
	class AActor*                                 CallFunc_GetOwnerActor_ReturnValue;                // 0x03B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x03C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x03C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C2[0x2];                                      // 0x03C2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(struct FM1AbilityEvent& Event)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x03C4(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x03D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x03D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D9[0x3];                                      // 0x03D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x03DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FM1AbilityId                           Temp_struct_Variable_1;                            // 0x03E0(0x0010)(HasGetValueTypeHash)
	class AActor*                                 Temp_object_Variable;                              // 0x03F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Equal_AbilityIdAbilityId_ReturnValue;     // 0x03F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x03F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x03FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x03FB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FC[0x4];                                      // 0x03FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FM1AbilityId                           K2Node_CustomEvent_InAbilityId;                    // 0x0400(0x0010)(ConstParm, HasGetValueTypeHash)
	const class AActor*                           K2Node_CustomEvent_Owner;                          // 0x0410(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bCanceled;                      // 0x0418(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Skill_Viessa_Passive_C_ExecuteUbergraph_Skill_Viessa_Passive) == 0x000008, "Wrong alignment on Skill_Viessa_Passive_C_ExecuteUbergraph_Skill_Viessa_Passive");
static_assert(sizeof(Skill_Viessa_Passive_C_ExecuteUbergraph_Skill_Viessa_Passive) == 0x000420, "Wrong size on Skill_Viessa_Passive_C_ExecuteUbergraph_Skill_Viessa_Passive");
static_assert(offsetof(Skill_Viessa_Passive_C_ExecuteUbergraph_Skill_Viessa_Passive, EntryPoint) == 0x000000, "Member 'Skill_Viessa_Passive_C_ExecuteUbergraph_Skill_Viessa_Passive::EntryPoint' has a wrong offset!");
static_assert(offsetof(Skill_Viessa_Passive_C_ExecuteUbergraph_Skill_Viessa_Passive, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'Skill_Viessa_Passive_C_ExecuteUbergraph_Skill_Viessa_Passive::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Skill_Viessa_Passive_C_ExecuteUbergraph_Skill_Viessa_Passive, Temp_struct_Variable) == 0x000018, "Member 'Skill_Viessa_Passive_C_ExecuteUbergraph_Skill_Viessa_Passive::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(Skill_Viessa_Passive_C_ExecuteUbergraph_Skill_Viessa_Passive, CallFunc_WaitAbilityEvent_ReturnValue) == 0x000058, "Member 'Skill_Viessa_Passive_C_ExecuteUbergraph_Skill_Viessa_Passive::CallFunc_WaitAbilityEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(Skill_Viessa_Passive_C_ExecuteUbergraph_Skill_Viessa_Passive, K2Node_DynamicCast_AsM1Ability_Event_Optional_Object_Icebind) == 0x000060, "Member 'Skill_Viessa_Passive_C_ExecuteUbergraph_Skill_Viessa_Passive::K2Node_DynamicCast_AsM1Ability_Event_Optional_Object_Icebind' has a wrong offset!");
static_assert(offsetof(Skill_Viessa_Passive_C_ExecuteUbergraph_Skill_Viessa_Passive, K2Node_DynamicCast_bSuccess) == 0x000068, "Member 'Skill_Viessa_Passive_C_ExecuteUbergraph_Skill_Viessa_Passive::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Skill_Viessa_Passive_C_ExecuteUbergraph_Skill_Viessa_Passive, CallFunc_GetComponentByClass_ReturnValue) == 0x000070, "Member 'Skill_Viessa_Passive_C_ExecuteUbergraph_Skill_Viessa_Passive::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(Skill_Viessa_Passive_C_ExecuteUbergraph_Skill_Viessa_Passive, CallFunc_IsValid_ReturnValue) == 0x000078, "Member 'Skill_Viessa_Passive_C_ExecuteUbergraph_Skill_Viessa_Passive::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Skill_Viessa_Passive_C_ExecuteUbergraph_Skill_Viessa_Passive, CallFunc_IsValid_ReturnValue_1) == 0x000079, "Member 'Skill_Viessa_Passive_C_ExecuteUbergraph_Skill_Viessa_Passive::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Skill_Viessa_Passive_C_ExecuteUbergraph_Skill_Viessa_Passive, CallFunc_IsValid_ReturnValue_2) == 0x00007A, "Member 'Skill_Viessa_Passive_C_ExecuteUbergraph_Skill_Viessa_Passive::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Skill_Viessa_Passive_C_ExecuteUbergraph_Skill_Viessa_Passive, Temp_int_Array_Index_Variable) == 0x00007C, "Member 'Skill_Viessa_Passive_C_ExecuteUbergraph_Skill_Viessa_Passive::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Skill_Viessa_Passive_C_ExecuteUbergraph_Skill_Viessa_Passive, K2Node_DynamicCast_AsM1Ability_Event_Optional_Object_Icebind_1) == 0x000080, "Member 'Skill_Viessa_Passive_C_ExecuteUbergraph_Skill_Viessa_Passive::K2Node_DynamicCast_AsM1Ability_Event_Optional_Object_Icebind_1' has a wrong offset!");
static_assert(offsetof(Skill_Viessa_Passive_C_ExecuteUbergraph_Skill_Viessa_Passive, K2Node_DynamicCast_bSuccess_1) == 0x000088, "Member 'Skill_Viessa_Passive_C_ExecuteUbergraph_Skill_Viessa_Passive::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(Skill_Viessa_Passive_C_ExecuteUbergraph_Skill_Viessa_Passive, CallFunc_Conv_IntToString_ReturnValue) == 0x000090, "Member 'Skill_Viessa_Passive_C_ExecuteUbergraph_Skill_Viessa_Passive::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(Skill_Viessa_Passive_C_ExecuteUbergraph_Skill_Viessa_Passive, CallFunc_Conv_NameToString_ReturnValue) == 0x0000A0, "Member 'Skill_Viessa_Passive_C_ExecuteUbergraph_Skill_Viessa_Passive::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(Skill_Viessa_Passive_C_ExecuteUbergraph_Skill_Viessa_Passive, CallFunc_GetDisplayName_ReturnValue) == 0x0000B0, "Member 'Skill_Viessa_Passive_C_ExecuteUbergraph_Skill_Viessa_Passive::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(Skill_Viessa_Passive_C_ExecuteUbergraph_Skill_Viessa_Passive, CallFunc_GetDebugStringFromGameplayTag_ReturnValue) == 0x0000C0, "Member 'Skill_Viessa_Passive_C_ExecuteUbergraph_Skill_Viessa_Passive::CallFunc_GetDebugStringFromGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(Skill_Viessa_Passive_C_ExecuteUbergraph_Skill_Viessa_Passive, CallFunc_Concat_StrStr_ReturnValue) == 0x0000D0, "Member 'Skill_Viessa_Passive_C_ExecuteUbergraph_Skill_Viessa_Passive::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(Skill_Viessa_Passive_C_ExecuteUbergraph_Skill_Viessa_Passive, CallFunc_Concat_StrStr_ReturnValue_1) == 0x0000E0, "Member 'Skill_Viessa_Passive_C_ExecuteUbergraph_Skill_Viessa_Passive::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Skill_Viessa_Passive_C_ExecuteUbergraph_Skill_Viessa_Passive, CallFunc_Concat_StrStr_ReturnValue_2) == 0x0000F0, "Member 'Skill_Viessa_Passive_C_ExecuteUbergraph_Skill_Viessa_Passive::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Skill_Viessa_Passive_C_ExecuteUbergraph_Skill_Viessa_Passive, CallFunc_Concat_StrStr_ReturnValue_3) == 0x000100, "Member 'Skill_Viessa_Passive_C_ExecuteUbergraph_Skill_Viessa_Passive::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Skill_Viessa_Passive_C_ExecuteUbergraph_Skill_Viessa_Passive, CallFunc_GetTestMonster_ReturnValue) == 0x000110, "Member 'Skill_Viessa_Passive_C_ExecuteUbergraph_Skill_Viessa_Passive::CallFunc_GetTestMonster_ReturnValue' has a wrong offset!");
static_assert(offsetof(Skill_Viessa_Passive_C_ExecuteUbergraph_Skill_Viessa_Passive, CallFunc_Concat_StrStr_ReturnValue_4) == 0x000118, "Member 'Skill_Viessa_Passive_C_ExecuteUbergraph_Skill_Viessa_Passive::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Skill_Viessa_Passive_C_ExecuteUbergraph_Skill_Viessa_Passive, CallFunc_Concat_StrStr_ReturnValue_5) == 0x000128, "Member 'Skill_Viessa_Passive_C_ExecuteUbergraph_Skill_Viessa_Passive::CallFunc_Concat_StrStr_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Skill_Viessa_Passive_C_ExecuteUbergraph_Skill_Viessa_Passive, CallFunc_MakeTestCaseStatusEffectOnMonster_ReturnValue) == 0x000138, "Member 'Skill_Viessa_Passive_C_ExecuteUbergraph_Skill_Viessa_Passive::CallFunc_MakeTestCaseStatusEffectOnMonster_ReturnValue' has a wrong offset!");
static_assert(offsetof(Skill_Viessa_Passive_C_ExecuteUbergraph_Skill_Viessa_Passive, CallFunc_Concat_StrStr_ReturnValue_6) == 0x0001A0, "Member 'Skill_Viessa_Passive_C_ExecuteUbergraph_Skill_Viessa_Passive::CallFunc_Concat_StrStr_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Skill_Viessa_Passive_C_ExecuteUbergraph_Skill_Viessa_Passive, CallFunc_MakeTestCaseSpawnAbilityActor_ReturnValue) == 0x0001B0, "Member 'Skill_Viessa_Passive_C_ExecuteUbergraph_Skill_Viessa_Passive::CallFunc_MakeTestCaseSpawnAbilityActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Skill_Viessa_Passive_C_ExecuteUbergraph_Skill_Viessa_Passive, K2Node_MakeArray_Array) == 0x000218, "Member 'Skill_Viessa_Passive_C_ExecuteUbergraph_Skill_Viessa_Passive::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Skill_Viessa_Passive_C_ExecuteUbergraph_Skill_Viessa_Passive, CallFunc_MakeTestCaseDamageOnMonster_ReturnValue) == 0x000228, "Member 'Skill_Viessa_Passive_C_ExecuteUbergraph_Skill_Viessa_Passive::CallFunc_MakeTestCaseDamageOnMonster_ReturnValue' has a wrong offset!");
static_assert(offsetof(Skill_Viessa_Passive_C_ExecuteUbergraph_Skill_Viessa_Passive, K2Node_MakeStruct_M1SkillFTestTestCaseSheet) == 0x000290, "Member 'Skill_Viessa_Passive_C_ExecuteUbergraph_Skill_Viessa_Passive::K2Node_MakeStruct_M1SkillFTestTestCaseSheet' has a wrong offset!");
static_assert(offsetof(Skill_Viessa_Passive_C_ExecuteUbergraph_Skill_Viessa_Passive, K2Node_MakeArray_Array_1) == 0x0002D0, "Member 'Skill_Viessa_Passive_C_ExecuteUbergraph_Skill_Viessa_Passive::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(Skill_Viessa_Passive_C_ExecuteUbergraph_Skill_Viessa_Passive, K2Node_MakeStruct_M1SkillFTestTestCaseSheet_1) == 0x0002E0, "Member 'Skill_Viessa_Passive_C_ExecuteUbergraph_Skill_Viessa_Passive::K2Node_MakeStruct_M1SkillFTestTestCaseSheet_1' has a wrong offset!");
static_assert(offsetof(Skill_Viessa_Passive_C_ExecuteUbergraph_Skill_Viessa_Passive, K2Node_Event_bCancelled) == 0x000320, "Member 'Skill_Viessa_Passive_C_ExecuteUbergraph_Skill_Viessa_Passive::K2Node_Event_bCancelled' has a wrong offset!");
static_assert(offsetof(Skill_Viessa_Passive_C_ExecuteUbergraph_Skill_Viessa_Passive, CallFunc_IsValid_ReturnValue_3) == 0x000321, "Member 'Skill_Viessa_Passive_C_ExecuteUbergraph_Skill_Viessa_Passive::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Skill_Viessa_Passive_C_ExecuteUbergraph_Skill_Viessa_Passive, K2Node_CustomEvent_TargetAbilityId) == 0x000328, "Member 'Skill_Viessa_Passive_C_ExecuteUbergraph_Skill_Viessa_Passive::K2Node_CustomEvent_TargetAbilityId' has a wrong offset!");
static_assert(offsetof(Skill_Viessa_Passive_C_ExecuteUbergraph_Skill_Viessa_Passive, K2Node_CustomEvent_OptionalExternalTarget) == 0x000338, "Member 'Skill_Viessa_Passive_C_ExecuteUbergraph_Skill_Viessa_Passive::K2Node_CustomEvent_OptionalExternalTarget' has a wrong offset!");
static_assert(offsetof(Skill_Viessa_Passive_C_ExecuteUbergraph_Skill_Viessa_Passive, CallFunc_WaitAbilityDeactivated_ReturnValue) == 0x000340, "Member 'Skill_Viessa_Passive_C_ExecuteUbergraph_Skill_Viessa_Passive::CallFunc_WaitAbilityDeactivated_ReturnValue' has a wrong offset!");
static_assert(offsetof(Skill_Viessa_Passive_C_ExecuteUbergraph_Skill_Viessa_Passive, CallFunc_Array_Get_Item) == 0x000348, "Member 'Skill_Viessa_Passive_C_ExecuteUbergraph_Skill_Viessa_Passive::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Skill_Viessa_Passive_C_ExecuteUbergraph_Skill_Viessa_Passive, CallFunc_Array_Length_ReturnValue) == 0x000370, "Member 'Skill_Viessa_Passive_C_ExecuteUbergraph_Skill_Viessa_Passive::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Skill_Viessa_Passive_C_ExecuteUbergraph_Skill_Viessa_Passive, CallFunc_IsValid_ReturnValue_4) == 0x000374, "Member 'Skill_Viessa_Passive_C_ExecuteUbergraph_Skill_Viessa_Passive::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Skill_Viessa_Passive_C_ExecuteUbergraph_Skill_Viessa_Passive, K2Node_CustomEvent_Event) == 0x000378, "Member 'Skill_Viessa_Passive_C_ExecuteUbergraph_Skill_Viessa_Passive::K2Node_CustomEvent_Event' has a wrong offset!");
static_assert(offsetof(Skill_Viessa_Passive_C_ExecuteUbergraph_Skill_Viessa_Passive, CallFunc_GetOwnerActor_ReturnValue) == 0x0003B8, "Member 'Skill_Viessa_Passive_C_ExecuteUbergraph_Skill_Viessa_Passive::CallFunc_GetOwnerActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Skill_Viessa_Passive_C_ExecuteUbergraph_Skill_Viessa_Passive, CallFunc_IsValid_ReturnValue_5) == 0x0003C0, "Member 'Skill_Viessa_Passive_C_ExecuteUbergraph_Skill_Viessa_Passive::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Skill_Viessa_Passive_C_ExecuteUbergraph_Skill_Viessa_Passive, CallFunc_HasAuthority_ReturnValue) == 0x0003C1, "Member 'Skill_Viessa_Passive_C_ExecuteUbergraph_Skill_Viessa_Passive::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(Skill_Viessa_Passive_C_ExecuteUbergraph_Skill_Viessa_Passive, K2Node_CreateDelegate_OutputDelegate_1) == 0x0003C4, "Member 'Skill_Viessa_Passive_C_ExecuteUbergraph_Skill_Viessa_Passive::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(Skill_Viessa_Passive_C_ExecuteUbergraph_Skill_Viessa_Passive, Temp_int_Loop_Counter_Variable) == 0x0003D4, "Member 'Skill_Viessa_Passive_C_ExecuteUbergraph_Skill_Viessa_Passive::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Skill_Viessa_Passive_C_ExecuteUbergraph_Skill_Viessa_Passive, CallFunc_Less_IntInt_ReturnValue) == 0x0003D8, "Member 'Skill_Viessa_Passive_C_ExecuteUbergraph_Skill_Viessa_Passive::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Skill_Viessa_Passive_C_ExecuteUbergraph_Skill_Viessa_Passive, CallFunc_Add_IntInt_ReturnValue) == 0x0003DC, "Member 'Skill_Viessa_Passive_C_ExecuteUbergraph_Skill_Viessa_Passive::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Skill_Viessa_Passive_C_ExecuteUbergraph_Skill_Viessa_Passive, Temp_struct_Variable_1) == 0x0003E0, "Member 'Skill_Viessa_Passive_C_ExecuteUbergraph_Skill_Viessa_Passive::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(Skill_Viessa_Passive_C_ExecuteUbergraph_Skill_Viessa_Passive, Temp_object_Variable) == 0x0003F0, "Member 'Skill_Viessa_Passive_C_ExecuteUbergraph_Skill_Viessa_Passive::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(Skill_Viessa_Passive_C_ExecuteUbergraph_Skill_Viessa_Passive, CallFunc_Equal_AbilityIdAbilityId_ReturnValue) == 0x0003F8, "Member 'Skill_Viessa_Passive_C_ExecuteUbergraph_Skill_Viessa_Passive::CallFunc_Equal_AbilityIdAbilityId_ReturnValue' has a wrong offset!");
static_assert(offsetof(Skill_Viessa_Passive_C_ExecuteUbergraph_Skill_Viessa_Passive, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x0003F9, "Member 'Skill_Viessa_Passive_C_ExecuteUbergraph_Skill_Viessa_Passive::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(Skill_Viessa_Passive_C_ExecuteUbergraph_Skill_Viessa_Passive, Temp_bool_Variable) == 0x0003FA, "Member 'Skill_Viessa_Passive_C_ExecuteUbergraph_Skill_Viessa_Passive::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Skill_Viessa_Passive_C_ExecuteUbergraph_Skill_Viessa_Passive, CallFunc_BooleanAND_ReturnValue) == 0x0003FB, "Member 'Skill_Viessa_Passive_C_ExecuteUbergraph_Skill_Viessa_Passive::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Skill_Viessa_Passive_C_ExecuteUbergraph_Skill_Viessa_Passive, K2Node_CustomEvent_InAbilityId) == 0x000400, "Member 'Skill_Viessa_Passive_C_ExecuteUbergraph_Skill_Viessa_Passive::K2Node_CustomEvent_InAbilityId' has a wrong offset!");
static_assert(offsetof(Skill_Viessa_Passive_C_ExecuteUbergraph_Skill_Viessa_Passive, K2Node_CustomEvent_Owner) == 0x000410, "Member 'Skill_Viessa_Passive_C_ExecuteUbergraph_Skill_Viessa_Passive::K2Node_CustomEvent_Owner' has a wrong offset!");
static_assert(offsetof(Skill_Viessa_Passive_C_ExecuteUbergraph_Skill_Viessa_Passive, K2Node_CustomEvent_bCanceled) == 0x000418, "Member 'Skill_Viessa_Passive_C_ExecuteUbergraph_Skill_Viessa_Passive::K2Node_CustomEvent_bCanceled' has a wrong offset!");

// Function Skill_Viessa_Passive.Skill_Viessa_Passive_C.FindPassiveTargetData
// 0x0078 (0x0078 - 0x0000)
struct Skill_Viessa_Passive_C_FindPassiveTargetData final
{
public:
	class AActor*                                 TargetActor;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          bFound;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FViessaPassiveTargetInfo               OutData;                                           // 0x0010(0x0028)(Parm, OutParm, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FViessaPassiveTargetInfo               CallFunc_Array_Get_Item;                           // 0x0040(0x0028)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_72[0x2];                                       // 0x0072(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Skill_Viessa_Passive_C_FindPassiveTargetData) == 0x000008, "Wrong alignment on Skill_Viessa_Passive_C_FindPassiveTargetData");
static_assert(sizeof(Skill_Viessa_Passive_C_FindPassiveTargetData) == 0x000078, "Wrong size on Skill_Viessa_Passive_C_FindPassiveTargetData");
static_assert(offsetof(Skill_Viessa_Passive_C_FindPassiveTargetData, TargetActor) == 0x000000, "Member 'Skill_Viessa_Passive_C_FindPassiveTargetData::TargetActor' has a wrong offset!");
static_assert(offsetof(Skill_Viessa_Passive_C_FindPassiveTargetData, bFound) == 0x000008, "Member 'Skill_Viessa_Passive_C_FindPassiveTargetData::bFound' has a wrong offset!");
static_assert(offsetof(Skill_Viessa_Passive_C_FindPassiveTargetData, OutData) == 0x000010, "Member 'Skill_Viessa_Passive_C_FindPassiveTargetData::OutData' has a wrong offset!");
static_assert(offsetof(Skill_Viessa_Passive_C_FindPassiveTargetData, Temp_int_Array_Index_Variable) == 0x000038, "Member 'Skill_Viessa_Passive_C_FindPassiveTargetData::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Skill_Viessa_Passive_C_FindPassiveTargetData, CallFunc_Array_Get_Item) == 0x000040, "Member 'Skill_Viessa_Passive_C_FindPassiveTargetData::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Skill_Viessa_Passive_C_FindPassiveTargetData, CallFunc_Array_Length_ReturnValue) == 0x000068, "Member 'Skill_Viessa_Passive_C_FindPassiveTargetData::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Skill_Viessa_Passive_C_FindPassiveTargetData, Temp_int_Loop_Counter_Variable) == 0x00006C, "Member 'Skill_Viessa_Passive_C_FindPassiveTargetData::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Skill_Viessa_Passive_C_FindPassiveTargetData, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000070, "Member 'Skill_Viessa_Passive_C_FindPassiveTargetData::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(Skill_Viessa_Passive_C_FindPassiveTargetData, CallFunc_Less_IntInt_ReturnValue) == 0x000071, "Member 'Skill_Viessa_Passive_C_FindPassiveTargetData::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Skill_Viessa_Passive_C_FindPassiveTargetData, CallFunc_Add_IntInt_ReturnValue) == 0x000074, "Member 'Skill_Viessa_Passive_C_FindPassiveTargetData::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function Skill_Viessa_Passive.Skill_Viessa_Passive_C.Invoke Ice Bind
// 0x0090 (0x0090 - 0x0000)
struct Skill_Viessa_Passive_C_Invoke_Ice_Bind final
{
public:
	class AActor*                                 TargetActor;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         IncreaseLevel;                                     // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Identity;                                          // 0x000C(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ApplyPassiveStack;                                 // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   NewLocalVar_0;                                     // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FindPassiveTargetData_bFound;             // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FViessaPassiveTargetInfo               CallFunc_FindPassiveTargetData_OutData;            // 0x0028(0x0028)(HasGetValueTypeHash)
	struct FGameplayTagContainer                  CallFunc_MakeInvokeStatusEffectTag_InvokeStatusEffectTag; // 0x0050(0x0020)()
	struct FM1AbilityId                           CallFunc_InvokeFirstStatusEffectToTargetByTag_ReturnValue; // 0x0070(0x0010)(HasGetValueTypeHash)
	int32                                         CallFunc_Clamp_ReturnValue;                        // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0085(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_86[0x2];                                       // 0x0086(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsActiveTag_ReturnValue;                  // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x008D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Skill_Viessa_Passive_C_Invoke_Ice_Bind) == 0x000008, "Wrong alignment on Skill_Viessa_Passive_C_Invoke_Ice_Bind");
static_assert(sizeof(Skill_Viessa_Passive_C_Invoke_Ice_Bind) == 0x000090, "Wrong size on Skill_Viessa_Passive_C_Invoke_Ice_Bind");
static_assert(offsetof(Skill_Viessa_Passive_C_Invoke_Ice_Bind, TargetActor) == 0x000000, "Member 'Skill_Viessa_Passive_C_Invoke_Ice_Bind::TargetActor' has a wrong offset!");
static_assert(offsetof(Skill_Viessa_Passive_C_Invoke_Ice_Bind, IncreaseLevel) == 0x000008, "Member 'Skill_Viessa_Passive_C_Invoke_Ice_Bind::IncreaseLevel' has a wrong offset!");
static_assert(offsetof(Skill_Viessa_Passive_C_Invoke_Ice_Bind, Identity) == 0x00000C, "Member 'Skill_Viessa_Passive_C_Invoke_Ice_Bind::Identity' has a wrong offset!");
static_assert(offsetof(Skill_Viessa_Passive_C_Invoke_Ice_Bind, ApplyPassiveStack) == 0x000014, "Member 'Skill_Viessa_Passive_C_Invoke_Ice_Bind::ApplyPassiveStack' has a wrong offset!");
static_assert(offsetof(Skill_Viessa_Passive_C_Invoke_Ice_Bind, NewLocalVar_0) == 0x000018, "Member 'Skill_Viessa_Passive_C_Invoke_Ice_Bind::NewLocalVar_0' has a wrong offset!");
static_assert(offsetof(Skill_Viessa_Passive_C_Invoke_Ice_Bind, CallFunc_FindPassiveTargetData_bFound) == 0x000020, "Member 'Skill_Viessa_Passive_C_Invoke_Ice_Bind::CallFunc_FindPassiveTargetData_bFound' has a wrong offset!");
static_assert(offsetof(Skill_Viessa_Passive_C_Invoke_Ice_Bind, CallFunc_FindPassiveTargetData_OutData) == 0x000028, "Member 'Skill_Viessa_Passive_C_Invoke_Ice_Bind::CallFunc_FindPassiveTargetData_OutData' has a wrong offset!");
static_assert(offsetof(Skill_Viessa_Passive_C_Invoke_Ice_Bind, CallFunc_MakeInvokeStatusEffectTag_InvokeStatusEffectTag) == 0x000050, "Member 'Skill_Viessa_Passive_C_Invoke_Ice_Bind::CallFunc_MakeInvokeStatusEffectTag_InvokeStatusEffectTag' has a wrong offset!");
static_assert(offsetof(Skill_Viessa_Passive_C_Invoke_Ice_Bind, CallFunc_InvokeFirstStatusEffectToTargetByTag_ReturnValue) == 0x000070, "Member 'Skill_Viessa_Passive_C_Invoke_Ice_Bind::CallFunc_InvokeFirstStatusEffectToTargetByTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(Skill_Viessa_Passive_C_Invoke_Ice_Bind, CallFunc_Clamp_ReturnValue) == 0x000080, "Member 'Skill_Viessa_Passive_C_Invoke_Ice_Bind::CallFunc_Clamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Skill_Viessa_Passive_C_Invoke_Ice_Bind, CallFunc_IsValid_ReturnValue) == 0x000084, "Member 'Skill_Viessa_Passive_C_Invoke_Ice_Bind::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Skill_Viessa_Passive_C_Invoke_Ice_Bind, CallFunc_Greater_IntInt_ReturnValue) == 0x000085, "Member 'Skill_Viessa_Passive_C_Invoke_Ice_Bind::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Skill_Viessa_Passive_C_Invoke_Ice_Bind, CallFunc_Add_IntInt_ReturnValue) == 0x000088, "Member 'Skill_Viessa_Passive_C_Invoke_Ice_Bind::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Skill_Viessa_Passive_C_Invoke_Ice_Bind, CallFunc_IsActiveTag_ReturnValue) == 0x00008C, "Member 'Skill_Viessa_Passive_C_Invoke_Ice_Bind::CallFunc_IsActiveTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(Skill_Viessa_Passive_C_Invoke_Ice_Bind, CallFunc_NotEqual_NameName_ReturnValue) == 0x00008D, "Member 'Skill_Viessa_Passive_C_Invoke_Ice_Bind::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");

// Function Skill_Viessa_Passive.Skill_Viessa_Passive_C.IsSpecialMonster
// 0x0010 (0x0010 - 0x0000)
struct Skill_Viessa_Passive_C_IsSpecialMonster final
{
public:
	class AActor*                                 TargetActor;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          SpecialMonster;                                    // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EM1MonsterCategory                            CallFunc_GetMonsterCategory_ReturnValue;           // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Skill_Viessa_Passive_C_IsSpecialMonster) == 0x000008, "Wrong alignment on Skill_Viessa_Passive_C_IsSpecialMonster");
static_assert(sizeof(Skill_Viessa_Passive_C_IsSpecialMonster) == 0x000010, "Wrong size on Skill_Viessa_Passive_C_IsSpecialMonster");
static_assert(offsetof(Skill_Viessa_Passive_C_IsSpecialMonster, TargetActor) == 0x000000, "Member 'Skill_Viessa_Passive_C_IsSpecialMonster::TargetActor' has a wrong offset!");
static_assert(offsetof(Skill_Viessa_Passive_C_IsSpecialMonster, SpecialMonster) == 0x000008, "Member 'Skill_Viessa_Passive_C_IsSpecialMonster::SpecialMonster' has a wrong offset!");
static_assert(offsetof(Skill_Viessa_Passive_C_IsSpecialMonster, CallFunc_GetMonsterCategory_ReturnValue) == 0x000009, "Member 'Skill_Viessa_Passive_C_IsSpecialMonster::CallFunc_GetMonsterCategory_ReturnValue' has a wrong offset!");
static_assert(offsetof(Skill_Viessa_Passive_C_IsSpecialMonster, CallFunc_Array_Contains_ReturnValue) == 0x00000A, "Member 'Skill_Viessa_Passive_C_IsSpecialMonster::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");

// Function Skill_Viessa_Passive.Skill_Viessa_Passive_C.MakeInvokeStatusEffectTag
// 0x0148 (0x0148 - 0x0000)
struct Skill_Viessa_Passive_C_MakeInvokeStatusEffectTag final
{
public:
	int32                                         StackLevel;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Target;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTagContainer                  InvokeStatusEffectTag;                             // 0x0010(0x0020)(Parm, OutParm)
	struct FGameplayTagContainer                  CallFunc_MakeGameplayTagContainerFromTag_ReturnValue; // 0x0030(0x0020)()
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  CallFunc_MakeGameplayTagContainerFromTag_ReturnValue_1; // 0x0058(0x0020)()
	struct FGameplayTagContainer                  CallFunc_MakeGameplayTagContainerFromTag_ReturnValue_2; // 0x0078(0x0020)()
	struct FGameplayTagContainer                  CallFunc_MakeGameplayTagContainerFromTag_ReturnValue_3; // 0x0098(0x0020)()
	bool                                          CallFunc_IsSpecialMonster_SpecialMonster;          // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BA[0x6];                                       // 0x00BA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  CallFunc_MakeGameplayTagContainerFromTag_ReturnValue_4; // 0x00C0(0x0020)()
	bool                                          K2Node_SwitchInteger_CmpSuccess_1;                 // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTagContainer                  CallFunc_MakeGameplayTagContainerFromTag_ReturnValue_5; // 0x00E8(0x0020)()
	struct FGameplayTagContainer                  CallFunc_MakeGameplayTagContainerFromTag_ReturnValue_6; // 0x0108(0x0020)()
	struct FGameplayTagContainer                  CallFunc_MakeGameplayTagContainerFromTag_ReturnValue_7; // 0x0128(0x0020)()
};
static_assert(alignof(Skill_Viessa_Passive_C_MakeInvokeStatusEffectTag) == 0x000008, "Wrong alignment on Skill_Viessa_Passive_C_MakeInvokeStatusEffectTag");
static_assert(sizeof(Skill_Viessa_Passive_C_MakeInvokeStatusEffectTag) == 0x000148, "Wrong size on Skill_Viessa_Passive_C_MakeInvokeStatusEffectTag");
static_assert(offsetof(Skill_Viessa_Passive_C_MakeInvokeStatusEffectTag, StackLevel) == 0x000000, "Member 'Skill_Viessa_Passive_C_MakeInvokeStatusEffectTag::StackLevel' has a wrong offset!");
static_assert(offsetof(Skill_Viessa_Passive_C_MakeInvokeStatusEffectTag, Target) == 0x000008, "Member 'Skill_Viessa_Passive_C_MakeInvokeStatusEffectTag::Target' has a wrong offset!");
static_assert(offsetof(Skill_Viessa_Passive_C_MakeInvokeStatusEffectTag, InvokeStatusEffectTag) == 0x000010, "Member 'Skill_Viessa_Passive_C_MakeInvokeStatusEffectTag::InvokeStatusEffectTag' has a wrong offset!");
static_assert(offsetof(Skill_Viessa_Passive_C_MakeInvokeStatusEffectTag, CallFunc_MakeGameplayTagContainerFromTag_ReturnValue) == 0x000030, "Member 'Skill_Viessa_Passive_C_MakeInvokeStatusEffectTag::CallFunc_MakeGameplayTagContainerFromTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(Skill_Viessa_Passive_C_MakeInvokeStatusEffectTag, CallFunc_Greater_IntInt_ReturnValue) == 0x000050, "Member 'Skill_Viessa_Passive_C_MakeInvokeStatusEffectTag::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Skill_Viessa_Passive_C_MakeInvokeStatusEffectTag, CallFunc_MakeGameplayTagContainerFromTag_ReturnValue_1) == 0x000058, "Member 'Skill_Viessa_Passive_C_MakeInvokeStatusEffectTag::CallFunc_MakeGameplayTagContainerFromTag_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Skill_Viessa_Passive_C_MakeInvokeStatusEffectTag, CallFunc_MakeGameplayTagContainerFromTag_ReturnValue_2) == 0x000078, "Member 'Skill_Viessa_Passive_C_MakeInvokeStatusEffectTag::CallFunc_MakeGameplayTagContainerFromTag_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Skill_Viessa_Passive_C_MakeInvokeStatusEffectTag, CallFunc_MakeGameplayTagContainerFromTag_ReturnValue_3) == 0x000098, "Member 'Skill_Viessa_Passive_C_MakeInvokeStatusEffectTag::CallFunc_MakeGameplayTagContainerFromTag_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Skill_Viessa_Passive_C_MakeInvokeStatusEffectTag, CallFunc_IsSpecialMonster_SpecialMonster) == 0x0000B8, "Member 'Skill_Viessa_Passive_C_MakeInvokeStatusEffectTag::CallFunc_IsSpecialMonster_SpecialMonster' has a wrong offset!");
static_assert(offsetof(Skill_Viessa_Passive_C_MakeInvokeStatusEffectTag, K2Node_SwitchInteger_CmpSuccess) == 0x0000B9, "Member 'Skill_Viessa_Passive_C_MakeInvokeStatusEffectTag::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Skill_Viessa_Passive_C_MakeInvokeStatusEffectTag, CallFunc_MakeGameplayTagContainerFromTag_ReturnValue_4) == 0x0000C0, "Member 'Skill_Viessa_Passive_C_MakeInvokeStatusEffectTag::CallFunc_MakeGameplayTagContainerFromTag_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Skill_Viessa_Passive_C_MakeInvokeStatusEffectTag, K2Node_SwitchInteger_CmpSuccess_1) == 0x0000E0, "Member 'Skill_Viessa_Passive_C_MakeInvokeStatusEffectTag::K2Node_SwitchInteger_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(Skill_Viessa_Passive_C_MakeInvokeStatusEffectTag, CallFunc_MakeGameplayTagContainerFromTag_ReturnValue_5) == 0x0000E8, "Member 'Skill_Viessa_Passive_C_MakeInvokeStatusEffectTag::CallFunc_MakeGameplayTagContainerFromTag_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Skill_Viessa_Passive_C_MakeInvokeStatusEffectTag, CallFunc_MakeGameplayTagContainerFromTag_ReturnValue_6) == 0x000108, "Member 'Skill_Viessa_Passive_C_MakeInvokeStatusEffectTag::CallFunc_MakeGameplayTagContainerFromTag_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Skill_Viessa_Passive_C_MakeInvokeStatusEffectTag, CallFunc_MakeGameplayTagContainerFromTag_ReturnValue_7) == 0x000128, "Member 'Skill_Viessa_Passive_C_MakeInvokeStatusEffectTag::CallFunc_MakeGameplayTagContainerFromTag_ReturnValue_7' has a wrong offset!");

// Function Skill_Viessa_Passive.Skill_Viessa_Passive_C.OnAbilityDeactivated_E5D35C2B4522F41472A216B93CA10CA7
// 0x0020 (0x0020 - 0x0000)
struct Skill_Viessa_Passive_C_OnAbilityDeactivated_E5D35C2B4522F41472A216B93CA10CA7 final
{
public:
	struct FM1AbilityId                           InAbilityId;                                       // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	const class AActor*                           Owner;                                             // 0x0010(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          bCanceled;                                         // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Skill_Viessa_Passive_C_OnAbilityDeactivated_E5D35C2B4522F41472A216B93CA10CA7) == 0x000008, "Wrong alignment on Skill_Viessa_Passive_C_OnAbilityDeactivated_E5D35C2B4522F41472A216B93CA10CA7");
static_assert(sizeof(Skill_Viessa_Passive_C_OnAbilityDeactivated_E5D35C2B4522F41472A216B93CA10CA7) == 0x000020, "Wrong size on Skill_Viessa_Passive_C_OnAbilityDeactivated_E5D35C2B4522F41472A216B93CA10CA7");
static_assert(offsetof(Skill_Viessa_Passive_C_OnAbilityDeactivated_E5D35C2B4522F41472A216B93CA10CA7, InAbilityId) == 0x000000, "Member 'Skill_Viessa_Passive_C_OnAbilityDeactivated_E5D35C2B4522F41472A216B93CA10CA7::InAbilityId' has a wrong offset!");
static_assert(offsetof(Skill_Viessa_Passive_C_OnAbilityDeactivated_E5D35C2B4522F41472A216B93CA10CA7, Owner) == 0x000010, "Member 'Skill_Viessa_Passive_C_OnAbilityDeactivated_E5D35C2B4522F41472A216B93CA10CA7::Owner' has a wrong offset!");
static_assert(offsetof(Skill_Viessa_Passive_C_OnAbilityDeactivated_E5D35C2B4522F41472A216B93CA10CA7, bCanceled) == 0x000018, "Member 'Skill_Viessa_Passive_C_OnAbilityDeactivated_E5D35C2B4522F41472A216B93CA10CA7::bCanceled' has a wrong offset!");

// Function Skill_Viessa_Passive.Skill_Viessa_Passive_C.OnAbilityEvent_935A4EA54A2FF644B7D685A8DB3DC7CB
// 0x0040 (0x0040 - 0x0000)
struct Skill_Viessa_Passive_C_OnAbilityEvent_935A4EA54A2FF644B7D685A8DB3DC7CB final
{
public:
	struct FM1AbilityEvent                        Event;                                             // 0x0000(0x0040)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(Skill_Viessa_Passive_C_OnAbilityEvent_935A4EA54A2FF644B7D685A8DB3DC7CB) == 0x000008, "Wrong alignment on Skill_Viessa_Passive_C_OnAbilityEvent_935A4EA54A2FF644B7D685A8DB3DC7CB");
static_assert(sizeof(Skill_Viessa_Passive_C_OnAbilityEvent_935A4EA54A2FF644B7D685A8DB3DC7CB) == 0x000040, "Wrong size on Skill_Viessa_Passive_C_OnAbilityEvent_935A4EA54A2FF644B7D685A8DB3DC7CB");
static_assert(offsetof(Skill_Viessa_Passive_C_OnAbilityEvent_935A4EA54A2FF644B7D685A8DB3DC7CB, Event) == 0x000000, "Member 'Skill_Viessa_Passive_C_OnAbilityEvent_935A4EA54A2FF644B7D685A8DB3DC7CB::Event' has a wrong offset!");

// Function Skill_Viessa_Passive.Skill_Viessa_Passive_C.ProccessIceSphere
// 0x00A0 (0x00A0 - 0x0000)
struct Skill_Viessa_Passive_C_ProccessIceSphere final
{
public:
	int32                                         ApplyStackLevel;                                   // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           Temp_name_Variable;                                // 0x0008(0x0010)(ConstParm, ReferenceParm)
	TArray<struct FM1TaggedAbilityParamData>      Temp_struct_Variable;                              // 0x0018(0x0010)(ConstParm, ReferenceParm)
	struct FM1AbilityContextHandle                CallFunc_BP_MakeForwardingContext_ReturnValue;     // 0x0028(0x0010)()
	class AActor*                                 CallFunc_GetOwnerActor_ReturnValue;                // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Auth_FollowActor_ReturnValue;             // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryCommitCooltime_ReturnValue;            // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_43[0x5];                                       // 0x0043(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FM1AbilityId                           CallFunc_InvokeFirstStatusEffectToSelfByTag_ReturnValue; // 0x0048(0x0010)(HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwnerActor_ReturnValue_1;              // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0060(0x0030)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AM1AbilityActor*                        CallFunc_SpawnFirstAbilityActorByTag_ReturnValue;  // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Skill_Viessa_Passive_C_ProccessIceSphere) == 0x000010, "Wrong alignment on Skill_Viessa_Passive_C_ProccessIceSphere");
static_assert(sizeof(Skill_Viessa_Passive_C_ProccessIceSphere) == 0x0000A0, "Wrong size on Skill_Viessa_Passive_C_ProccessIceSphere");
static_assert(offsetof(Skill_Viessa_Passive_C_ProccessIceSphere, ApplyStackLevel) == 0x000000, "Member 'Skill_Viessa_Passive_C_ProccessIceSphere::ApplyStackLevel' has a wrong offset!");
static_assert(offsetof(Skill_Viessa_Passive_C_ProccessIceSphere, Temp_name_Variable) == 0x000008, "Member 'Skill_Viessa_Passive_C_ProccessIceSphere::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(Skill_Viessa_Passive_C_ProccessIceSphere, Temp_struct_Variable) == 0x000018, "Member 'Skill_Viessa_Passive_C_ProccessIceSphere::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(Skill_Viessa_Passive_C_ProccessIceSphere, CallFunc_BP_MakeForwardingContext_ReturnValue) == 0x000028, "Member 'Skill_Viessa_Passive_C_ProccessIceSphere::CallFunc_BP_MakeForwardingContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(Skill_Viessa_Passive_C_ProccessIceSphere, CallFunc_GetOwnerActor_ReturnValue) == 0x000038, "Member 'Skill_Viessa_Passive_C_ProccessIceSphere::CallFunc_GetOwnerActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Skill_Viessa_Passive_C_ProccessIceSphere, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000040, "Member 'Skill_Viessa_Passive_C_ProccessIceSphere::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Skill_Viessa_Passive_C_ProccessIceSphere, CallFunc_Auth_FollowActor_ReturnValue) == 0x000041, "Member 'Skill_Viessa_Passive_C_ProccessIceSphere::CallFunc_Auth_FollowActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Skill_Viessa_Passive_C_ProccessIceSphere, CallFunc_TryCommitCooltime_ReturnValue) == 0x000042, "Member 'Skill_Viessa_Passive_C_ProccessIceSphere::CallFunc_TryCommitCooltime_ReturnValue' has a wrong offset!");
static_assert(offsetof(Skill_Viessa_Passive_C_ProccessIceSphere, CallFunc_InvokeFirstStatusEffectToSelfByTag_ReturnValue) == 0x000048, "Member 'Skill_Viessa_Passive_C_ProccessIceSphere::CallFunc_InvokeFirstStatusEffectToSelfByTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(Skill_Viessa_Passive_C_ProccessIceSphere, CallFunc_GetOwnerActor_ReturnValue_1) == 0x000058, "Member 'Skill_Viessa_Passive_C_ProccessIceSphere::CallFunc_GetOwnerActor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Skill_Viessa_Passive_C_ProccessIceSphere, CallFunc_GetTransform_ReturnValue) == 0x000060, "Member 'Skill_Viessa_Passive_C_ProccessIceSphere::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(Skill_Viessa_Passive_C_ProccessIceSphere, CallFunc_IsValid_ReturnValue) == 0x000090, "Member 'Skill_Viessa_Passive_C_ProccessIceSphere::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Skill_Viessa_Passive_C_ProccessIceSphere, CallFunc_SpawnFirstAbilityActorByTag_ReturnValue) == 0x000098, "Member 'Skill_Viessa_Passive_C_ProccessIceSphere::CallFunc_SpawnFirstAbilityActorByTag_ReturnValue' has a wrong offset!");

// Function Skill_Viessa_Passive.Skill_Viessa_Passive_C.RemovePassiveTargetDataOnDeactivation
// 0x0018 (0x0018 - 0x0000)
struct Skill_Viessa_Passive_C_RemovePassiveTargetDataOnDeactivation final
{
public:
	struct FM1AbilityId                           TargetAbilityId;                                   // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	class AActor*                                 OptionalExternalTarget;                            // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Skill_Viessa_Passive_C_RemovePassiveTargetDataOnDeactivation) == 0x000008, "Wrong alignment on Skill_Viessa_Passive_C_RemovePassiveTargetDataOnDeactivation");
static_assert(sizeof(Skill_Viessa_Passive_C_RemovePassiveTargetDataOnDeactivation) == 0x000018, "Wrong size on Skill_Viessa_Passive_C_RemovePassiveTargetDataOnDeactivation");
static_assert(offsetof(Skill_Viessa_Passive_C_RemovePassiveTargetDataOnDeactivation, TargetAbilityId) == 0x000000, "Member 'Skill_Viessa_Passive_C_RemovePassiveTargetDataOnDeactivation::TargetAbilityId' has a wrong offset!");
static_assert(offsetof(Skill_Viessa_Passive_C_RemovePassiveTargetDataOnDeactivation, OptionalExternalTarget) == 0x000010, "Member 'Skill_Viessa_Passive_C_RemovePassiveTargetDataOnDeactivation::OptionalExternalTarget' has a wrong offset!");

// Function Skill_Viessa_Passive.Skill_Viessa_Passive_C.UpdatePassiveTargetData
// 0x0058 (0x0058 - 0x0000)
struct Skill_Viessa_Passive_C_UpdatePassiveTargetData final
{
public:
	class AActor*                                 UpdateTarget;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         ApplyStack;                                        // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FM1AbilityId                           AbilityId_0;                                       // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	class FName                                   SkillIdentity;                                     // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FViessaPassiveTargetInfo               K2Node_MakeStruct_ViessaPassiveTargetInfo;         // 0x0028(0x0028)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Skill_Viessa_Passive_C_UpdatePassiveTargetData) == 0x000008, "Wrong alignment on Skill_Viessa_Passive_C_UpdatePassiveTargetData");
static_assert(sizeof(Skill_Viessa_Passive_C_UpdatePassiveTargetData) == 0x000058, "Wrong size on Skill_Viessa_Passive_C_UpdatePassiveTargetData");
static_assert(offsetof(Skill_Viessa_Passive_C_UpdatePassiveTargetData, UpdateTarget) == 0x000000, "Member 'Skill_Viessa_Passive_C_UpdatePassiveTargetData::UpdateTarget' has a wrong offset!");
static_assert(offsetof(Skill_Viessa_Passive_C_UpdatePassiveTargetData, ApplyStack) == 0x000008, "Member 'Skill_Viessa_Passive_C_UpdatePassiveTargetData::ApplyStack' has a wrong offset!");
static_assert(offsetof(Skill_Viessa_Passive_C_UpdatePassiveTargetData, AbilityId_0) == 0x000010, "Member 'Skill_Viessa_Passive_C_UpdatePassiveTargetData::AbilityId_0' has a wrong offset!");
static_assert(offsetof(Skill_Viessa_Passive_C_UpdatePassiveTargetData, SkillIdentity) == 0x000020, "Member 'Skill_Viessa_Passive_C_UpdatePassiveTargetData::SkillIdentity' has a wrong offset!");
static_assert(offsetof(Skill_Viessa_Passive_C_UpdatePassiveTargetData, K2Node_MakeStruct_ViessaPassiveTargetInfo) == 0x000028, "Member 'Skill_Viessa_Passive_C_UpdatePassiveTargetData::K2Node_MakeStruct_ViessaPassiveTargetInfo' has a wrong offset!");
static_assert(offsetof(Skill_Viessa_Passive_C_UpdatePassiveTargetData, CallFunc_Array_Add_ReturnValue) == 0x000050, "Member 'Skill_Viessa_Passive_C_UpdatePassiveTargetData::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

}

