#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Spica

#include "Basic.hpp"

#include "Spica_classes.hpp"
#include "Spica_parameters.hpp"


namespace SDK
{

// Function Spica.SpicaGameEngine.GetOnPawnControllerChanged
// (Final, Native, Private)
// Parameters:
// class APawn*                            InPawn                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AController*                      InController                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USpicaGameEngine::GetOnPawnControllerChanged(class APawn* InPawn, class AController* InController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SpicaGameEngine", "GetOnPawnControllerChanged");

	Params::SpicaGameEngine_GetOnPawnControllerChanged Parms{};

	Parms.InPawn = InPawn;
	Parms.InController = InController;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function Spica.SpicaRPCHelperComponent.ServerNotifyRemoteFunctionCalled
// (Net, NetReliable, Native, Event, Public, NetServer)
// Parameters:
// class AActor*                           Actor                                                  (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   PacketId                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void USpicaRPCHelperComponent::ServerNotifyRemoteFunctionCalled(class AActor* Actor, int32 PacketId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SpicaRPCHelperComponent", "ServerNotifyRemoteFunctionCalled");

	Params::SpicaRPCHelperComponent_ServerNotifyRemoteFunctionCalled Parms{};

	Parms.Actor = Actor;
	Parms.PacketId = PacketId;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}

}

