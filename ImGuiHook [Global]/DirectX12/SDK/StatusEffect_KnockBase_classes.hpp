#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: StatusEffect_KnockBase

#include "Basic.hpp"

#include "M1_structs.hpp"
#include "M1_classes.hpp"
#include "GameplayTags_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass StatusEffect_KnockBase.StatusEffect_KnockBase_C
// 0x00D0 (0x0450 - 0x0380)
class UStatusEffect_KnockBase_C : public UM1SimpleStatusEffect
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0380(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	double                                        VelocityX;                                         // 0x0388(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        VelocityZ;                                         // 0x0390(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MoveDuration;                                      // 0x0398(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        TestHitYaw;                                        // 0x03A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   AnimStateMachine;                                  // 0x03A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   AnimLayerGroup;                                    // 0x03B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   MainAnimStateMachineState;                         // 0x03B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   RecoveryAnimStateMachineState;                     // 0x03C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   MonsterMainAnim;                                   // 0x03C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   MonsterRecoveryAnim;                               // 0x03D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           StatusEffectTag;                                   // 0x03D8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UCurveVector*                           MoveVectorCurve;                                   // 0x03E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            MoveFloatCurve;                                    // 0x03E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FVector                                DestLocation;                                      // 0x03F0(0x000C)(Edit, BlueprintVisible, Net, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FC[0x4];                                      // 0x03FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        HitDirYaw;                                         // 0x0400(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UClass*>                         StatusEffectLayers;                                // 0x0408(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<float>                                 MonsterRecoveryAnimLengthes;                       // 0x0418(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	int32                                         MonsterRecoveryAnimIndex;                          // 0x0428(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42C[0x4];                                      // 0x042C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<float>                                 MonsterMainAnimLengthes;                           // 0x0430(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	int32                                         MonsterMainAnimIndex;                              // 0x0440(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_444[0x4];                                      // 0x0444(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        PlayerRecoveryAnimRate;                            // 0x0448(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void PrintDebugString();
	void OnMoveEnded();
	void OnFinished_EE89DF93440C9829428C249811A431CA(bool DestinationReached, bool TimedOut, const struct FVector& FinalTargetLocation);
	void GetVelocityZ(double* VelocityZ_0);
	void GetVelocityX(double* VelocityX_0);
	void GetMoveVectorCurve(class UCurveVector** MoveCurve);
	void GetMoveFloatCurve(class UCurveFloat** MoveCurve);
	void ExecuteUbergraph_StatusEffect_KnockBase(int32 EntryPoint);
	void CalcMoveDestination(struct FVector* OutDest);
	void CalcHitYaw(double* OutHitDirYaw);
	void CalcAnimHitDirYaw(double* Yaw);
	void CacheMonsterAnim();
	void BP_OnActivated();

	void GetRecoveryAnimLength(double* AnimLength) const;
	void GetMoveDuration(double* Duration) const;
	void GetMoveAnimLength(double* AnimLength) const;
	void CalcRecoveryAnimPlayRate(double* OutPlayRate) const;
	void CalcMoveAnimPlayRate(double* OutPlayRate) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"StatusEffect_KnockBase_C">();
	}
	static class UStatusEffect_KnockBase_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UStatusEffect_KnockBase_C>();
	}
};
static_assert(alignof(UStatusEffect_KnockBase_C) == 0x000008, "Wrong alignment on UStatusEffect_KnockBase_C");
static_assert(sizeof(UStatusEffect_KnockBase_C) == 0x000450, "Wrong size on UStatusEffect_KnockBase_C");
static_assert(offsetof(UStatusEffect_KnockBase_C, UberGraphFrame) == 0x000380, "Member 'UStatusEffect_KnockBase_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UStatusEffect_KnockBase_C, VelocityX) == 0x000388, "Member 'UStatusEffect_KnockBase_C::VelocityX' has a wrong offset!");
static_assert(offsetof(UStatusEffect_KnockBase_C, VelocityZ) == 0x000390, "Member 'UStatusEffect_KnockBase_C::VelocityZ' has a wrong offset!");
static_assert(offsetof(UStatusEffect_KnockBase_C, MoveDuration) == 0x000398, "Member 'UStatusEffect_KnockBase_C::MoveDuration' has a wrong offset!");
static_assert(offsetof(UStatusEffect_KnockBase_C, TestHitYaw) == 0x0003A0, "Member 'UStatusEffect_KnockBase_C::TestHitYaw' has a wrong offset!");
static_assert(offsetof(UStatusEffect_KnockBase_C, AnimStateMachine) == 0x0003A8, "Member 'UStatusEffect_KnockBase_C::AnimStateMachine' has a wrong offset!");
static_assert(offsetof(UStatusEffect_KnockBase_C, AnimLayerGroup) == 0x0003B0, "Member 'UStatusEffect_KnockBase_C::AnimLayerGroup' has a wrong offset!");
static_assert(offsetof(UStatusEffect_KnockBase_C, MainAnimStateMachineState) == 0x0003B8, "Member 'UStatusEffect_KnockBase_C::MainAnimStateMachineState' has a wrong offset!");
static_assert(offsetof(UStatusEffect_KnockBase_C, RecoveryAnimStateMachineState) == 0x0003C0, "Member 'UStatusEffect_KnockBase_C::RecoveryAnimStateMachineState' has a wrong offset!");
static_assert(offsetof(UStatusEffect_KnockBase_C, MonsterMainAnim) == 0x0003C8, "Member 'UStatusEffect_KnockBase_C::MonsterMainAnim' has a wrong offset!");
static_assert(offsetof(UStatusEffect_KnockBase_C, MonsterRecoveryAnim) == 0x0003D0, "Member 'UStatusEffect_KnockBase_C::MonsterRecoveryAnim' has a wrong offset!");
static_assert(offsetof(UStatusEffect_KnockBase_C, StatusEffectTag) == 0x0003D8, "Member 'UStatusEffect_KnockBase_C::StatusEffectTag' has a wrong offset!");
static_assert(offsetof(UStatusEffect_KnockBase_C, MoveVectorCurve) == 0x0003E0, "Member 'UStatusEffect_KnockBase_C::MoveVectorCurve' has a wrong offset!");
static_assert(offsetof(UStatusEffect_KnockBase_C, MoveFloatCurve) == 0x0003E8, "Member 'UStatusEffect_KnockBase_C::MoveFloatCurve' has a wrong offset!");
static_assert(offsetof(UStatusEffect_KnockBase_C, DestLocation) == 0x0003F0, "Member 'UStatusEffect_KnockBase_C::DestLocation' has a wrong offset!");
static_assert(offsetof(UStatusEffect_KnockBase_C, HitDirYaw) == 0x000400, "Member 'UStatusEffect_KnockBase_C::HitDirYaw' has a wrong offset!");
static_assert(offsetof(UStatusEffect_KnockBase_C, StatusEffectLayers) == 0x000408, "Member 'UStatusEffect_KnockBase_C::StatusEffectLayers' has a wrong offset!");
static_assert(offsetof(UStatusEffect_KnockBase_C, MonsterRecoveryAnimLengthes) == 0x000418, "Member 'UStatusEffect_KnockBase_C::MonsterRecoveryAnimLengthes' has a wrong offset!");
static_assert(offsetof(UStatusEffect_KnockBase_C, MonsterRecoveryAnimIndex) == 0x000428, "Member 'UStatusEffect_KnockBase_C::MonsterRecoveryAnimIndex' has a wrong offset!");
static_assert(offsetof(UStatusEffect_KnockBase_C, MonsterMainAnimLengthes) == 0x000430, "Member 'UStatusEffect_KnockBase_C::MonsterMainAnimLengthes' has a wrong offset!");
static_assert(offsetof(UStatusEffect_KnockBase_C, MonsterMainAnimIndex) == 0x000440, "Member 'UStatusEffect_KnockBase_C::MonsterMainAnimIndex' has a wrong offset!");
static_assert(offsetof(UStatusEffect_KnockBase_C, PlayerRecoveryAnimRate) == 0x000448, "Member 'UStatusEffect_KnockBase_C::PlayerRecoveryAnimRate' has a wrong offset!");

}

