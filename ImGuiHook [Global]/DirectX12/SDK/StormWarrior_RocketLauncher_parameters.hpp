#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: StormWarrior_RocketLauncher

#include "Basic.hpp"

#include "M1_structs.hpp"
#include "M1Data_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function StormWarrior_RocketLauncher.StormWarrior_RocketLauncher_C.OnEventReceived_FA8E44774F6E6C136E6B94B6ED6CEB35
// 0x0040 (0x0040 - 0x0000)
struct StormWarrior_RocketLauncher_C_OnEventReceived_FA8E44774F6E6C136E6B94B6ED6CEB35 final
{
public:
	struct FM1AbilityEvent                        Event;                                             // 0x0000(0x0040)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(StormWarrior_RocketLauncher_C_OnEventReceived_FA8E44774F6E6C136E6B94B6ED6CEB35) == 0x000008, "Wrong alignment on StormWarrior_RocketLauncher_C_OnEventReceived_FA8E44774F6E6C136E6B94B6ED6CEB35");
static_assert(sizeof(StormWarrior_RocketLauncher_C_OnEventReceived_FA8E44774F6E6C136E6B94B6ED6CEB35) == 0x000040, "Wrong size on StormWarrior_RocketLauncher_C_OnEventReceived_FA8E44774F6E6C136E6B94B6ED6CEB35");
static_assert(offsetof(StormWarrior_RocketLauncher_C_OnEventReceived_FA8E44774F6E6C136E6B94B6ED6CEB35, Event) == 0x000000, "Member 'StormWarrior_RocketLauncher_C_OnEventReceived_FA8E44774F6E6C136E6B94B6ED6CEB35::Event' has a wrong offset!");

// Function StormWarrior_RocketLauncher.StormWarrior_RocketLauncher_C.OnCompleted_FA8E44774F6E6C136E6B94B6ED6CEB35
// 0x0040 (0x0040 - 0x0000)
struct StormWarrior_RocketLauncher_C_OnCompleted_FA8E44774F6E6C136E6B94B6ED6CEB35 final
{
public:
	struct FM1AbilityEvent                        Event;                                             // 0x0000(0x0040)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(StormWarrior_RocketLauncher_C_OnCompleted_FA8E44774F6E6C136E6B94B6ED6CEB35) == 0x000008, "Wrong alignment on StormWarrior_RocketLauncher_C_OnCompleted_FA8E44774F6E6C136E6B94B6ED6CEB35");
static_assert(sizeof(StormWarrior_RocketLauncher_C_OnCompleted_FA8E44774F6E6C136E6B94B6ED6CEB35) == 0x000040, "Wrong size on StormWarrior_RocketLauncher_C_OnCompleted_FA8E44774F6E6C136E6B94B6ED6CEB35");
static_assert(offsetof(StormWarrior_RocketLauncher_C_OnCompleted_FA8E44774F6E6C136E6B94B6ED6CEB35, Event) == 0x000000, "Member 'StormWarrior_RocketLauncher_C_OnCompleted_FA8E44774F6E6C136E6B94B6ED6CEB35::Event' has a wrong offset!");

// Function StormWarrior_RocketLauncher.StormWarrior_RocketLauncher_C.OnBlendOut_FA8E44774F6E6C136E6B94B6ED6CEB35
// 0x0040 (0x0040 - 0x0000)
struct StormWarrior_RocketLauncher_C_OnBlendOut_FA8E44774F6E6C136E6B94B6ED6CEB35 final
{
public:
	struct FM1AbilityEvent                        Event;                                             // 0x0000(0x0040)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(StormWarrior_RocketLauncher_C_OnBlendOut_FA8E44774F6E6C136E6B94B6ED6CEB35) == 0x000008, "Wrong alignment on StormWarrior_RocketLauncher_C_OnBlendOut_FA8E44774F6E6C136E6B94B6ED6CEB35");
static_assert(sizeof(StormWarrior_RocketLauncher_C_OnBlendOut_FA8E44774F6E6C136E6B94B6ED6CEB35) == 0x000040, "Wrong size on StormWarrior_RocketLauncher_C_OnBlendOut_FA8E44774F6E6C136E6B94B6ED6CEB35");
static_assert(offsetof(StormWarrior_RocketLauncher_C_OnBlendOut_FA8E44774F6E6C136E6B94B6ED6CEB35, Event) == 0x000000, "Member 'StormWarrior_RocketLauncher_C_OnBlendOut_FA8E44774F6E6C136E6B94B6ED6CEB35::Event' has a wrong offset!");

// Function StormWarrior_RocketLauncher.StormWarrior_RocketLauncher_C.ExecuteUbergraph_StormWarrior_RocketLauncher
// 0x01D0 (0x01D0 - 0x0000)
struct StormWarrior_RocketLauncher_C_ExecuteUbergraph_StormWarrior_RocketLauncher final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetFirstTargetActor_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(struct FM1AbilityEvent& Event)> K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FM1AbilityEvent                        K2Node_CustomEvent_Event_2;                        // 0x0030(0x0040)(ConstParm)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0070(0x0030)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FM1AbilityEvent                        K2Node_CustomEvent_Event_1;                        // 0x00A0(0x0040)(ConstParm)
	TDelegate<void(struct FM1AbilityEvent& Event)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x00E0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FM1AbilityEvent                        K2Node_CustomEvent_Event;                          // 0x00F0(0x0040)(ConstParm)
	TDelegate<void(struct FM1AbilityEvent& Event)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x0130(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FM1AbilityEvent                        Temp_struct_Variable;                              // 0x0140(0x0040)()
	TArray<struct FM1TaggedAbilityParamData>      Temp_struct_Variable_1;                            // 0x0180(0x0010)(ConstParm, ReferenceParm)
	TArray<class FName>                           Temp_name_Variable;                                // 0x0190(0x0010)(ConstParm, ReferenceParm)
	struct FM1AbilityContextHandle                CallFunc_BP_MakeForwardingContext_ReturnValue;     // 0x01A0(0x0010)()
	class UM1AbilityTask_PlayMontageAndWait*      CallFunc_PlayMontageAndWaitForEvent_ReturnValue;   // 0x01B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AM1AbilityActor*                        CallFunc_SpawnFirstAbilityActorByTag_ReturnValue;  // 0x01B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TryCommitCooltime_ReturnValue;            // 0x01C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(StormWarrior_RocketLauncher_C_ExecuteUbergraph_StormWarrior_RocketLauncher) == 0x000010, "Wrong alignment on StormWarrior_RocketLauncher_C_ExecuteUbergraph_StormWarrior_RocketLauncher");
static_assert(sizeof(StormWarrior_RocketLauncher_C_ExecuteUbergraph_StormWarrior_RocketLauncher) == 0x0001D0, "Wrong size on StormWarrior_RocketLauncher_C_ExecuteUbergraph_StormWarrior_RocketLauncher");
static_assert(offsetof(StormWarrior_RocketLauncher_C_ExecuteUbergraph_StormWarrior_RocketLauncher, EntryPoint) == 0x000000, "Member 'StormWarrior_RocketLauncher_C_ExecuteUbergraph_StormWarrior_RocketLauncher::EntryPoint' has a wrong offset!");
static_assert(offsetof(StormWarrior_RocketLauncher_C_ExecuteUbergraph_StormWarrior_RocketLauncher, CallFunc_GetFirstTargetActor_ReturnValue) == 0x000008, "Member 'StormWarrior_RocketLauncher_C_ExecuteUbergraph_StormWarrior_RocketLauncher::CallFunc_GetFirstTargetActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(StormWarrior_RocketLauncher_C_ExecuteUbergraph_StormWarrior_RocketLauncher, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'StormWarrior_RocketLauncher_C_ExecuteUbergraph_StormWarrior_RocketLauncher::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(StormWarrior_RocketLauncher_C_ExecuteUbergraph_StormWarrior_RocketLauncher, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000020, "Member 'StormWarrior_RocketLauncher_C_ExecuteUbergraph_StormWarrior_RocketLauncher::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(StormWarrior_RocketLauncher_C_ExecuteUbergraph_StormWarrior_RocketLauncher, K2Node_CustomEvent_Event_2) == 0x000030, "Member 'StormWarrior_RocketLauncher_C_ExecuteUbergraph_StormWarrior_RocketLauncher::K2Node_CustomEvent_Event_2' has a wrong offset!");
static_assert(offsetof(StormWarrior_RocketLauncher_C_ExecuteUbergraph_StormWarrior_RocketLauncher, CallFunc_MakeTransform_ReturnValue) == 0x000070, "Member 'StormWarrior_RocketLauncher_C_ExecuteUbergraph_StormWarrior_RocketLauncher::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(StormWarrior_RocketLauncher_C_ExecuteUbergraph_StormWarrior_RocketLauncher, K2Node_CustomEvent_Event_1) == 0x0000A0, "Member 'StormWarrior_RocketLauncher_C_ExecuteUbergraph_StormWarrior_RocketLauncher::K2Node_CustomEvent_Event_1' has a wrong offset!");
static_assert(offsetof(StormWarrior_RocketLauncher_C_ExecuteUbergraph_StormWarrior_RocketLauncher, K2Node_CreateDelegate_OutputDelegate_1) == 0x0000E0, "Member 'StormWarrior_RocketLauncher_C_ExecuteUbergraph_StormWarrior_RocketLauncher::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(StormWarrior_RocketLauncher_C_ExecuteUbergraph_StormWarrior_RocketLauncher, K2Node_CustomEvent_Event) == 0x0000F0, "Member 'StormWarrior_RocketLauncher_C_ExecuteUbergraph_StormWarrior_RocketLauncher::K2Node_CustomEvent_Event' has a wrong offset!");
static_assert(offsetof(StormWarrior_RocketLauncher_C_ExecuteUbergraph_StormWarrior_RocketLauncher, K2Node_CreateDelegate_OutputDelegate_2) == 0x000130, "Member 'StormWarrior_RocketLauncher_C_ExecuteUbergraph_StormWarrior_RocketLauncher::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(StormWarrior_RocketLauncher_C_ExecuteUbergraph_StormWarrior_RocketLauncher, Temp_struct_Variable) == 0x000140, "Member 'StormWarrior_RocketLauncher_C_ExecuteUbergraph_StormWarrior_RocketLauncher::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(StormWarrior_RocketLauncher_C_ExecuteUbergraph_StormWarrior_RocketLauncher, Temp_struct_Variable_1) == 0x000180, "Member 'StormWarrior_RocketLauncher_C_ExecuteUbergraph_StormWarrior_RocketLauncher::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(StormWarrior_RocketLauncher_C_ExecuteUbergraph_StormWarrior_RocketLauncher, Temp_name_Variable) == 0x000190, "Member 'StormWarrior_RocketLauncher_C_ExecuteUbergraph_StormWarrior_RocketLauncher::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(StormWarrior_RocketLauncher_C_ExecuteUbergraph_StormWarrior_RocketLauncher, CallFunc_BP_MakeForwardingContext_ReturnValue) == 0x0001A0, "Member 'StormWarrior_RocketLauncher_C_ExecuteUbergraph_StormWarrior_RocketLauncher::CallFunc_BP_MakeForwardingContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(StormWarrior_RocketLauncher_C_ExecuteUbergraph_StormWarrior_RocketLauncher, CallFunc_PlayMontageAndWaitForEvent_ReturnValue) == 0x0001B0, "Member 'StormWarrior_RocketLauncher_C_ExecuteUbergraph_StormWarrior_RocketLauncher::CallFunc_PlayMontageAndWaitForEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(StormWarrior_RocketLauncher_C_ExecuteUbergraph_StormWarrior_RocketLauncher, CallFunc_SpawnFirstAbilityActorByTag_ReturnValue) == 0x0001B8, "Member 'StormWarrior_RocketLauncher_C_ExecuteUbergraph_StormWarrior_RocketLauncher::CallFunc_SpawnFirstAbilityActorByTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(StormWarrior_RocketLauncher_C_ExecuteUbergraph_StormWarrior_RocketLauncher, CallFunc_IsValid_ReturnValue) == 0x0001C0, "Member 'StormWarrior_RocketLauncher_C_ExecuteUbergraph_StormWarrior_RocketLauncher::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(StormWarrior_RocketLauncher_C_ExecuteUbergraph_StormWarrior_RocketLauncher, CallFunc_TryCommitCooltime_ReturnValue) == 0x0001C1, "Member 'StormWarrior_RocketLauncher_C_ExecuteUbergraph_StormWarrior_RocketLauncher::CallFunc_TryCommitCooltime_ReturnValue' has a wrong offset!");

}

