#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_ActionIcon

#include "Basic.hpp"

#include "M1_structs.hpp"
#include "M1_classes.hpp"
#include "Engine_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass UI_ActionIcon.UI_ActionIcon_C
// 0x0128 (0x08D8 - 0x07B0)
class UUI_ActionIcon_C : public UM1UIActionIcon
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x07B0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       UIAnim_KeyPress;                                   // 0x07B8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       UIAnim_UnalbeSkill;                                // 0x07C0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       ANIM_Active;                                       // 0x07C8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UOverlay*                               CustomPanel_Front;                                 // 0x07D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               CustomPanel_Mid;                                   // 0x07D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_283;                                         // 0x07E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UM1SpriteImage*                         Image_Cooldown;                                    // 0x07E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UM1SpriteImage*                         Image_NoStack;                                     // 0x07F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UM1SpriteImage*                         Image_RmainingDuration;                            // 0x07F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UM1SpriteImage*                         Image_StackCoolDown;                               // 0x0800(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UInvalidationBox*                       InvalidationBox_2;                                 // 0x0808(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         Panel_SkillLevel;                                  // 0x0810(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScaleBox*                              ScaleBox_0;                                        // 0x0818(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 SkillLevel1;                                       // 0x0820(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 SkillLevel2;                                       // 0x0828(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 SkillLevel3;                                       // 0x0830(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 SkillLevel4;                                       // 0x0838(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               StackInfo;                                         // 0x0840(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_ActionIconBase_C*                   UI_Icon;                                           // 0x0848(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_KeySymbol_Dual_C*                   UI_KeySymbol;                                      // 0x0850(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_ActionIcon_Stack_C*                 UI_Stack;                                          // 0x0858(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        WS_Disable;                                        // 0x0860(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        WS_State;                                          // 0x0868(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	TSoftObjectPtr<class UTexture2D>              ActiveTexture;                                     // 0x0870(0x0030)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TSoftObjectPtr<class UTexture2D>              NormalTexture;                                     // 0x08A0(0x0030)(Edit, BlueprintVisible, HasGetValueTypeHash)
	int32                                         SkillType;                                         // 0x08D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void BP_ChangedCooldownRatio(const float Ratio);
	void BP_ChangedIconState(const EM1UIActionState State);
	void BP_ChangedRemainingDurationRatio(const float Ratio);
	void BP_ChangedStackChargingTimeRatio(const float Ratio, const int32 StackCount);
	void BP_OnSkillInput(const EM1SkillActivateFailReason InFailReason);
	void BP_UpdateDisableType(const EM1UIActionDisableType State);
	void BP_UpdateIcon(const TSoftObjectPtr<class UTexture2D>& NormalIcon, const TSoftObjectPtr<class UTexture2D>& ActiveIcon);
	void ExecuteUbergraph_UI_ActionIcon(int32 EntryPoint);
	void PreConstruct(bool IsDesignTime);
	void SetDataImpl(class UM1UIData* InData);
	void SetUISkillLayout();
	void SetUISkillLevel(int32 InLevel);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"UI_ActionIcon_C">();
	}
	static class UUI_ActionIcon_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUI_ActionIcon_C>();
	}
};
static_assert(alignof(UUI_ActionIcon_C) == 0x000008, "Wrong alignment on UUI_ActionIcon_C");
static_assert(sizeof(UUI_ActionIcon_C) == 0x0008D8, "Wrong size on UUI_ActionIcon_C");
static_assert(offsetof(UUI_ActionIcon_C, UberGraphFrame) == 0x0007B0, "Member 'UUI_ActionIcon_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UUI_ActionIcon_C, UIAnim_KeyPress) == 0x0007B8, "Member 'UUI_ActionIcon_C::UIAnim_KeyPress' has a wrong offset!");
static_assert(offsetof(UUI_ActionIcon_C, UIAnim_UnalbeSkill) == 0x0007C0, "Member 'UUI_ActionIcon_C::UIAnim_UnalbeSkill' has a wrong offset!");
static_assert(offsetof(UUI_ActionIcon_C, ANIM_Active) == 0x0007C8, "Member 'UUI_ActionIcon_C::ANIM_Active' has a wrong offset!");
static_assert(offsetof(UUI_ActionIcon_C, CustomPanel_Front) == 0x0007D0, "Member 'UUI_ActionIcon_C::CustomPanel_Front' has a wrong offset!");
static_assert(offsetof(UUI_ActionIcon_C, CustomPanel_Mid) == 0x0007D8, "Member 'UUI_ActionIcon_C::CustomPanel_Mid' has a wrong offset!");
static_assert(offsetof(UUI_ActionIcon_C, Image_283) == 0x0007E0, "Member 'UUI_ActionIcon_C::Image_283' has a wrong offset!");
static_assert(offsetof(UUI_ActionIcon_C, Image_Cooldown) == 0x0007E8, "Member 'UUI_ActionIcon_C::Image_Cooldown' has a wrong offset!");
static_assert(offsetof(UUI_ActionIcon_C, Image_NoStack) == 0x0007F0, "Member 'UUI_ActionIcon_C::Image_NoStack' has a wrong offset!");
static_assert(offsetof(UUI_ActionIcon_C, Image_RmainingDuration) == 0x0007F8, "Member 'UUI_ActionIcon_C::Image_RmainingDuration' has a wrong offset!");
static_assert(offsetof(UUI_ActionIcon_C, Image_StackCoolDown) == 0x000800, "Member 'UUI_ActionIcon_C::Image_StackCoolDown' has a wrong offset!");
static_assert(offsetof(UUI_ActionIcon_C, InvalidationBox_2) == 0x000808, "Member 'UUI_ActionIcon_C::InvalidationBox_2' has a wrong offset!");
static_assert(offsetof(UUI_ActionIcon_C, Panel_SkillLevel) == 0x000810, "Member 'UUI_ActionIcon_C::Panel_SkillLevel' has a wrong offset!");
static_assert(offsetof(UUI_ActionIcon_C, ScaleBox_0) == 0x000818, "Member 'UUI_ActionIcon_C::ScaleBox_0' has a wrong offset!");
static_assert(offsetof(UUI_ActionIcon_C, SkillLevel1) == 0x000820, "Member 'UUI_ActionIcon_C::SkillLevel1' has a wrong offset!");
static_assert(offsetof(UUI_ActionIcon_C, SkillLevel2) == 0x000828, "Member 'UUI_ActionIcon_C::SkillLevel2' has a wrong offset!");
static_assert(offsetof(UUI_ActionIcon_C, SkillLevel3) == 0x000830, "Member 'UUI_ActionIcon_C::SkillLevel3' has a wrong offset!");
static_assert(offsetof(UUI_ActionIcon_C, SkillLevel4) == 0x000838, "Member 'UUI_ActionIcon_C::SkillLevel4' has a wrong offset!");
static_assert(offsetof(UUI_ActionIcon_C, StackInfo) == 0x000840, "Member 'UUI_ActionIcon_C::StackInfo' has a wrong offset!");
static_assert(offsetof(UUI_ActionIcon_C, UI_Icon) == 0x000848, "Member 'UUI_ActionIcon_C::UI_Icon' has a wrong offset!");
static_assert(offsetof(UUI_ActionIcon_C, UI_KeySymbol) == 0x000850, "Member 'UUI_ActionIcon_C::UI_KeySymbol' has a wrong offset!");
static_assert(offsetof(UUI_ActionIcon_C, UI_Stack) == 0x000858, "Member 'UUI_ActionIcon_C::UI_Stack' has a wrong offset!");
static_assert(offsetof(UUI_ActionIcon_C, WS_Disable) == 0x000860, "Member 'UUI_ActionIcon_C::WS_Disable' has a wrong offset!");
static_assert(offsetof(UUI_ActionIcon_C, WS_State) == 0x000868, "Member 'UUI_ActionIcon_C::WS_State' has a wrong offset!");
static_assert(offsetof(UUI_ActionIcon_C, ActiveTexture) == 0x000870, "Member 'UUI_ActionIcon_C::ActiveTexture' has a wrong offset!");
static_assert(offsetof(UUI_ActionIcon_C, NormalTexture) == 0x0008A0, "Member 'UUI_ActionIcon_C::NormalTexture' has a wrong offset!");
static_assert(offsetof(UUI_ActionIcon_C, SkillType) == 0x0008D0, "Member 'UUI_ActionIcon_C::SkillType' has a wrong offset!");

}

