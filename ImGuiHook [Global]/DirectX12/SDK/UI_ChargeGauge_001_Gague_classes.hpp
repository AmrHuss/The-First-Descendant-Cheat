#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_ChargeGauge_001_Gague

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass UI_ChargeGauge_001_Gague.UI_ChargeGauge_001_Gague_C
// 0x0058 (0x02A8 - 0x0250)
class UUI_ChargeGauge_001_Gague_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0250(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Anim_Close;                                        // 0x0258(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       ANIM_Max;                                          // 0x0260(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Anim_Open;                                         // 0x0268(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 ChargingStep_Progress_Bg;                          // 0x0270(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ChargingStep_Progress_Fill;                        // 0x0278(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ChargingStep_Progress_Fx_1;                        // 0x0280(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ChargingStep_Progress_Fx_2;                        // 0x0288(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FVector2D                              OffsetSpacerSize;                                  // 0x0290(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Param_Angle;                                       // 0x0298(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Max;                                               // 0x029C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29D[0x3];                                      // 0x029D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           TimerHandle_CloseAnim;                             // 0x02A0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void ClearCloseTimer();
	void CloseGauge(bool bCloseImmediately);
	void ExecuteUbergraph_UI_ChargeGauge_001_Gague(int32 EntryPoint);
	void OnCloseAnimEnd();
	void OpenGauge();
	void PreConstruct(bool IsDesignTime);
	void UISetColor_Effect(const struct FLinearColor& BaseColor, const struct FLinearColor& MultiplyColor);
	void UISetColor_Max(bool Max_0, const struct FLinearColor& MaxLevelColor);
	void UISetDefault();
	void UISetMaterial(double InAngle);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"UI_ChargeGauge_001_Gague_C">();
	}
	static class UUI_ChargeGauge_001_Gague_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUI_ChargeGauge_001_Gague_C>();
	}
};
static_assert(alignof(UUI_ChargeGauge_001_Gague_C) == 0x000008, "Wrong alignment on UUI_ChargeGauge_001_Gague_C");
static_assert(sizeof(UUI_ChargeGauge_001_Gague_C) == 0x0002A8, "Wrong size on UUI_ChargeGauge_001_Gague_C");
static_assert(offsetof(UUI_ChargeGauge_001_Gague_C, UberGraphFrame) == 0x000250, "Member 'UUI_ChargeGauge_001_Gague_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UUI_ChargeGauge_001_Gague_C, Anim_Close) == 0x000258, "Member 'UUI_ChargeGauge_001_Gague_C::Anim_Close' has a wrong offset!");
static_assert(offsetof(UUI_ChargeGauge_001_Gague_C, ANIM_Max) == 0x000260, "Member 'UUI_ChargeGauge_001_Gague_C::ANIM_Max' has a wrong offset!");
static_assert(offsetof(UUI_ChargeGauge_001_Gague_C, Anim_Open) == 0x000268, "Member 'UUI_ChargeGauge_001_Gague_C::Anim_Open' has a wrong offset!");
static_assert(offsetof(UUI_ChargeGauge_001_Gague_C, ChargingStep_Progress_Bg) == 0x000270, "Member 'UUI_ChargeGauge_001_Gague_C::ChargingStep_Progress_Bg' has a wrong offset!");
static_assert(offsetof(UUI_ChargeGauge_001_Gague_C, ChargingStep_Progress_Fill) == 0x000278, "Member 'UUI_ChargeGauge_001_Gague_C::ChargingStep_Progress_Fill' has a wrong offset!");
static_assert(offsetof(UUI_ChargeGauge_001_Gague_C, ChargingStep_Progress_Fx_1) == 0x000280, "Member 'UUI_ChargeGauge_001_Gague_C::ChargingStep_Progress_Fx_1' has a wrong offset!");
static_assert(offsetof(UUI_ChargeGauge_001_Gague_C, ChargingStep_Progress_Fx_2) == 0x000288, "Member 'UUI_ChargeGauge_001_Gague_C::ChargingStep_Progress_Fx_2' has a wrong offset!");
static_assert(offsetof(UUI_ChargeGauge_001_Gague_C, OffsetSpacerSize) == 0x000290, "Member 'UUI_ChargeGauge_001_Gague_C::OffsetSpacerSize' has a wrong offset!");
static_assert(offsetof(UUI_ChargeGauge_001_Gague_C, Param_Angle) == 0x000298, "Member 'UUI_ChargeGauge_001_Gague_C::Param_Angle' has a wrong offset!");
static_assert(offsetof(UUI_ChargeGauge_001_Gague_C, Max) == 0x00029C, "Member 'UUI_ChargeGauge_001_Gague_C::Max' has a wrong offset!");
static_assert(offsetof(UUI_ChargeGauge_001_Gague_C, TimerHandle_CloseAnim) == 0x0002A0, "Member 'UUI_ChargeGauge_001_Gague_C::TimerHandle_CloseAnim' has a wrong offset!");

}

