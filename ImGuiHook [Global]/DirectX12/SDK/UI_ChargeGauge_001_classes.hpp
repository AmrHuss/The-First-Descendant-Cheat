#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_ChargeGauge_001

#include "Basic.hpp"

#include "M1_classes.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass UI_ChargeGauge_001.UI_ChargeGauge_001_C
// 0x0068 (0x0778 - 0x0710)
class UUI_ChargeGauge_001_C final : public UM1UIGameCenter_WeaponChargeGauge
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0710(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       UIAnim_MaxLevel;                                   // 0x0718(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UM1SpriteImage*                         Charge_Progress;                                   // 0x0720(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           P_ChargeLevels;                                    // 0x0728(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_ChargeGauge_001_Gague_C*            UI_ChargeLevel_1;                                  // 0x0730(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        WS_Level;                                          // 0x0738(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	int32                                         DesignTime_GaugeColorPresetIndex;                  // 0x0740(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         DesignTime_MaxChargeLevel;                         // 0x0744(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MaxGaugeCount;                                     // 0x0748(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           FillColorAtMaxLevel;                               // 0x074C(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_75C[0x4];                                      // 0x075C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UUI_ChargeGauge_001_Gague_C*>    GaugeSlots;                                        // 0x0760(0x0010)(Edit, BlueprintVisible, Transient, DisableEditOnInstance, ContainsInstancedReference)
	int32                                         PrevLevel;                                         // 0x0770(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void BP_ChangedWeaponChargeLevel(int32 CurrentLevel, bool bShowProgress);
	void BP_OnInitChargeGauge(int32 GaugeCount, const struct FM1WeaponChargeGaugeUIColors& GaugeUIColors);
	void BP_StoppedWeaponCharge();
	void ExecuteUbergraph_UI_ChargeGauge_001(int32 EntryPoint);
	void OnChargeLevelDecreased(int32 CurrentLevel);
	void OnChargeLevelIncreased(int32 CurrentLevel);
	void PreConstruct(bool IsDesignTime);
	void SetGaugeColor(const struct FM1WeaponChargeGaugeUIColors& GaugeColors);
	void SetGaugeCount(int32 GaugeCount);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"UI_ChargeGauge_001_C">();
	}
	static class UUI_ChargeGauge_001_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUI_ChargeGauge_001_C>();
	}
};
static_assert(alignof(UUI_ChargeGauge_001_C) == 0x000008, "Wrong alignment on UUI_ChargeGauge_001_C");
static_assert(sizeof(UUI_ChargeGauge_001_C) == 0x000778, "Wrong size on UUI_ChargeGauge_001_C");
static_assert(offsetof(UUI_ChargeGauge_001_C, UberGraphFrame) == 0x000710, "Member 'UUI_ChargeGauge_001_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UUI_ChargeGauge_001_C, UIAnim_MaxLevel) == 0x000718, "Member 'UUI_ChargeGauge_001_C::UIAnim_MaxLevel' has a wrong offset!");
static_assert(offsetof(UUI_ChargeGauge_001_C, Charge_Progress) == 0x000720, "Member 'UUI_ChargeGauge_001_C::Charge_Progress' has a wrong offset!");
static_assert(offsetof(UUI_ChargeGauge_001_C, P_ChargeLevels) == 0x000728, "Member 'UUI_ChargeGauge_001_C::P_ChargeLevels' has a wrong offset!");
static_assert(offsetof(UUI_ChargeGauge_001_C, UI_ChargeLevel_1) == 0x000730, "Member 'UUI_ChargeGauge_001_C::UI_ChargeLevel_1' has a wrong offset!");
static_assert(offsetof(UUI_ChargeGauge_001_C, WS_Level) == 0x000738, "Member 'UUI_ChargeGauge_001_C::WS_Level' has a wrong offset!");
static_assert(offsetof(UUI_ChargeGauge_001_C, DesignTime_GaugeColorPresetIndex) == 0x000740, "Member 'UUI_ChargeGauge_001_C::DesignTime_GaugeColorPresetIndex' has a wrong offset!");
static_assert(offsetof(UUI_ChargeGauge_001_C, DesignTime_MaxChargeLevel) == 0x000744, "Member 'UUI_ChargeGauge_001_C::DesignTime_MaxChargeLevel' has a wrong offset!");
static_assert(offsetof(UUI_ChargeGauge_001_C, MaxGaugeCount) == 0x000748, "Member 'UUI_ChargeGauge_001_C::MaxGaugeCount' has a wrong offset!");
static_assert(offsetof(UUI_ChargeGauge_001_C, FillColorAtMaxLevel) == 0x00074C, "Member 'UUI_ChargeGauge_001_C::FillColorAtMaxLevel' has a wrong offset!");
static_assert(offsetof(UUI_ChargeGauge_001_C, GaugeSlots) == 0x000760, "Member 'UUI_ChargeGauge_001_C::GaugeSlots' has a wrong offset!");
static_assert(offsetof(UUI_ChargeGauge_001_C, PrevLevel) == 0x000770, "Member 'UUI_ChargeGauge_001_C::PrevLevel' has a wrong offset!");

}

