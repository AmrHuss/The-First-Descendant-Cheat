#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_Chatting

#include "Basic.hpp"

#include "M1_structs.hpp"
#include "M1_classes.hpp"
#include "Engine_structs.hpp"
#include "M1Data_structs.hpp"
#include "AkAudio_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass UI_Chatting.UI_Chatting_C
// 0x0078 (0x07F8 - 0x0780)
class UUI_Chatting_C final : public UM1UIChatting
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0780(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBackgroundBlur*                        Blur_01;                                           // 0x0788(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBackgroundBlur*                        Blur_02;                                           // 0x0790(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               ChattingType;                                      // 0x0798(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         HBox_Tab;                                          // 0x07A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Input_BG;                                          // 0x07A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Input_Box;                                         // 0x07B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 List_BG;                                           // 0x07B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 List_Min_BG;                                       // 0x07C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_List;                                      // 0x07C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBox;                                           // 0x07D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_KeyButton_Chatting_C*               UI_KeyButton_Input;                                // 0x07D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FTimerHandle                           TimerHandle_AutoHide;                              // 0x07E0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           TimerHandle_Cooltime;                              // 0x07E8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	int32                                         SendMessageCooltime;                               // 0x07F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bInitializedWidget;                                // 0x07F4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bAfterSendedMessage;                               // 0x07F5(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void BndEvt__Text_Message_K2Node_ComponentBoundEvent_0_OnEditableTextCommittedEvent__DelegateSignature(const class FText& Text, ETextCommit CommitMethod);
	void BndEvt__Text_Message_K2Node_ComponentBoundEvent_1_OnEditableTextChangedEvent__DelegateSignature(const class FText& Text);
	void BP_MinimalUIAutoHideOptionChanged();
	void BP_MinimalUIBackgroundOpacityChanged();
	void BP_NofityDirectMessage();
	void BP_OnActivateChat();
	void BP_OnChattingTabChanged(const EM1ChattingTab InTargetTab);
	void BP_OnDeactivateChat();
	void BP_OnRefreshChattingCooltime(int32 RemainCooltime);
	void BP_PostReceivedChatMessage(bool bDueToShowMinimalUI, bool bWasScrolledToBottom);
	void ChangeUIState(EM1ChattingUIState InState);
	void Construct();
	void ExecuteUbergraph_UI_Chatting(int32 EntryPoint);
	void HideAllWidgets();
	void InitializeWidgets();
	bool IsMinimalUIState();
	void OnAddedToFocusPath(const struct FFocusEvent& InFocusEvent);
	void OnAutoHideWidgets();
	struct FEventReply OnMouseButtonDown(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	void OnRefreshCooltimeText();
	void OnRemovedFromFocusPath(const struct FFocusEvent& InFocusEvent);
	void PlayTextInputAkEvent(bool IsEmpty, class UAkAudioEvent* TypingEvent, class UAkAudioEvent* EmptyEvent);
	void SetMinBGOpacity();
	void ShowMaximalWidgets();
	void ShowMiminalWidgets();
	void TrySetAutoHideTimer();

	class UWidget* GetFocusWidget() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"UI_Chatting_C">();
	}
	static class UUI_Chatting_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUI_Chatting_C>();
	}
};
static_assert(alignof(UUI_Chatting_C) == 0x000008, "Wrong alignment on UUI_Chatting_C");
static_assert(sizeof(UUI_Chatting_C) == 0x0007F8, "Wrong size on UUI_Chatting_C");
static_assert(offsetof(UUI_Chatting_C, UberGraphFrame) == 0x000780, "Member 'UUI_Chatting_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UUI_Chatting_C, Blur_01) == 0x000788, "Member 'UUI_Chatting_C::Blur_01' has a wrong offset!");
static_assert(offsetof(UUI_Chatting_C, Blur_02) == 0x000790, "Member 'UUI_Chatting_C::Blur_02' has a wrong offset!");
static_assert(offsetof(UUI_Chatting_C, ChattingType) == 0x000798, "Member 'UUI_Chatting_C::ChattingType' has a wrong offset!");
static_assert(offsetof(UUI_Chatting_C, HBox_Tab) == 0x0007A0, "Member 'UUI_Chatting_C::HBox_Tab' has a wrong offset!");
static_assert(offsetof(UUI_Chatting_C, Input_BG) == 0x0007A8, "Member 'UUI_Chatting_C::Input_BG' has a wrong offset!");
static_assert(offsetof(UUI_Chatting_C, Input_Box) == 0x0007B0, "Member 'UUI_Chatting_C::Input_Box' has a wrong offset!");
static_assert(offsetof(UUI_Chatting_C, List_BG) == 0x0007B8, "Member 'UUI_Chatting_C::List_BG' has a wrong offset!");
static_assert(offsetof(UUI_Chatting_C, List_Min_BG) == 0x0007C0, "Member 'UUI_Chatting_C::List_Min_BG' has a wrong offset!");
static_assert(offsetof(UUI_Chatting_C, Overlay_List) == 0x0007C8, "Member 'UUI_Chatting_C::Overlay_List' has a wrong offset!");
static_assert(offsetof(UUI_Chatting_C, SizeBox) == 0x0007D0, "Member 'UUI_Chatting_C::SizeBox' has a wrong offset!");
static_assert(offsetof(UUI_Chatting_C, UI_KeyButton_Input) == 0x0007D8, "Member 'UUI_Chatting_C::UI_KeyButton_Input' has a wrong offset!");
static_assert(offsetof(UUI_Chatting_C, TimerHandle_AutoHide) == 0x0007E0, "Member 'UUI_Chatting_C::TimerHandle_AutoHide' has a wrong offset!");
static_assert(offsetof(UUI_Chatting_C, TimerHandle_Cooltime) == 0x0007E8, "Member 'UUI_Chatting_C::TimerHandle_Cooltime' has a wrong offset!");
static_assert(offsetof(UUI_Chatting_C, SendMessageCooltime) == 0x0007F0, "Member 'UUI_Chatting_C::SendMessageCooltime' has a wrong offset!");
static_assert(offsetof(UUI_Chatting_C, bInitializedWidget) == 0x0007F4, "Member 'UUI_Chatting_C::bInitializedWidget' has a wrong offset!");
static_assert(offsetof(UUI_Chatting_C, bAfterSendedMessage) == 0x0007F5, "Member 'UUI_Chatting_C::bAfterSendedMessage' has a wrong offset!");

}

