#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_Chatting

#include "Basic.hpp"

#include "UI_Chatting_classes.hpp"
#include "UI_Chatting_parameters.hpp"


namespace SDK
{

// Function UI_Chatting.UI_Chatting_C.BndEvt__Text_Message_K2Node_ComponentBoundEvent_0_OnEditableTextCommittedEvent__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             Text                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// ETextCommit                             CommitMethod                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_Chatting_C::BndEvt__Text_Message_K2Node_ComponentBoundEvent_0_OnEditableTextCommittedEvent__DelegateSignature(const class FText& Text, ETextCommit CommitMethod)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Chatting_C", "BndEvt__Text_Message_K2Node_ComponentBoundEvent_0_OnEditableTextCommittedEvent__DelegateSignature");

	Params::UI_Chatting_C_BndEvt__Text_Message_K2Node_ComponentBoundEvent_0_OnEditableTextCommittedEvent__DelegateSignature Parms{};

	Parms.Text = std::move(Text);
	Parms.CommitMethod = CommitMethod;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_Chatting.UI_Chatting_C.BndEvt__Text_Message_K2Node_ComponentBoundEvent_1_OnEditableTextChangedEvent__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             Text                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void UUI_Chatting_C::BndEvt__Text_Message_K2Node_ComponentBoundEvent_1_OnEditableTextChangedEvent__DelegateSignature(const class FText& Text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Chatting_C", "BndEvt__Text_Message_K2Node_ComponentBoundEvent_1_OnEditableTextChangedEvent__DelegateSignature");

	Params::UI_Chatting_C_BndEvt__Text_Message_K2Node_ComponentBoundEvent_1_OnEditableTextChangedEvent__DelegateSignature Parms{};

	Parms.Text = std::move(Text);

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_Chatting.UI_Chatting_C.BP_MinimalUIAutoHideOptionChanged
// (Event, Protected, BlueprintEvent)

void UUI_Chatting_C::BP_MinimalUIAutoHideOptionChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Chatting_C", "BP_MinimalUIAutoHideOptionChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_Chatting.UI_Chatting_C.BP_MinimalUIBackgroundOpacityChanged
// (Event, Protected, BlueprintEvent)

void UUI_Chatting_C::BP_MinimalUIBackgroundOpacityChanged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Chatting_C", "BP_MinimalUIBackgroundOpacityChanged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_Chatting.UI_Chatting_C.BP_NofityDirectMessage
// (Event, Protected, BlueprintEvent)

void UUI_Chatting_C::BP_NofityDirectMessage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Chatting_C", "BP_NofityDirectMessage");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_Chatting.UI_Chatting_C.BP_OnActivateChat
// (Event, Protected, BlueprintEvent)

void UUI_Chatting_C::BP_OnActivateChat()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Chatting_C", "BP_OnActivateChat");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_Chatting.UI_Chatting_C.BP_OnChattingTabChanged
// (Event, Protected, BlueprintEvent)
// Parameters:
// EM1ChattingTab                          InTargetTab                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_Chatting_C::BP_OnChattingTabChanged(const EM1ChattingTab InTargetTab)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Chatting_C", "BP_OnChattingTabChanged");

	Params::UI_Chatting_C_BP_OnChattingTabChanged Parms{};

	Parms.InTargetTab = InTargetTab;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_Chatting.UI_Chatting_C.BP_OnDeactivateChat
// (Event, Protected, BlueprintEvent)

void UUI_Chatting_C::BP_OnDeactivateChat()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Chatting_C", "BP_OnDeactivateChat");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_Chatting.UI_Chatting_C.BP_OnRefreshChattingCooltime
// (Event, Protected, BlueprintEvent)
// Parameters:
// int32                                   RemainCooltime                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_Chatting_C::BP_OnRefreshChattingCooltime(int32 RemainCooltime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Chatting_C", "BP_OnRefreshChattingCooltime");

	Params::UI_Chatting_C_BP_OnRefreshChattingCooltime Parms{};

	Parms.RemainCooltime = RemainCooltime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_Chatting.UI_Chatting_C.BP_PostReceivedChatMessage
// (Event, Protected, BlueprintEvent)
// Parameters:
// bool                                    bDueToShowMinimalUI                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bWasScrolledToBottom                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_Chatting_C::BP_PostReceivedChatMessage(bool bDueToShowMinimalUI, bool bWasScrolledToBottom)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Chatting_C", "BP_PostReceivedChatMessage");

	Params::UI_Chatting_C_BP_PostReceivedChatMessage Parms{};

	Parms.bDueToShowMinimalUI = bDueToShowMinimalUI;
	Parms.bWasScrolledToBottom = bWasScrolledToBottom;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_Chatting.UI_Chatting_C.ChangeUIState
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EM1ChattingUIState                      InState                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_Chatting_C::ChangeUIState(EM1ChattingUIState InState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Chatting_C", "ChangeUIState");

	Params::UI_Chatting_C_ChangeUIState Parms{};

	Parms.InState = InState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_Chatting.UI_Chatting_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UUI_Chatting_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Chatting_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_Chatting.UI_Chatting_C.ExecuteUbergraph_UI_Chatting
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_Chatting_C::ExecuteUbergraph_UI_Chatting(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Chatting_C", "ExecuteUbergraph_UI_Chatting");

	Params::UI_Chatting_C_ExecuteUbergraph_UI_Chatting Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_Chatting.UI_Chatting_C.HideAllWidgets
// (Private, BlueprintCallable, BlueprintEvent)

void UUI_Chatting_C::HideAllWidgets()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Chatting_C", "HideAllWidgets");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_Chatting.UI_Chatting_C.InitializeWidgets
// (Public, BlueprintCallable, BlueprintEvent)

void UUI_Chatting_C::InitializeWidgets()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Chatting_C", "InitializeWidgets");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_Chatting.UI_Chatting_C.IsMinimalUIState
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool UUI_Chatting_C::IsMinimalUIState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Chatting_C", "IsMinimalUIState");

	Params::UI_Chatting_C_IsMinimalUIState Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function UI_Chatting.UI_Chatting_C.OnAddedToFocusPath
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// struct FFocusEvent                      InFocusEvent                                           (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)

void UUI_Chatting_C::OnAddedToFocusPath(const struct FFocusEvent& InFocusEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Chatting_C", "OnAddedToFocusPath");

	Params::UI_Chatting_C_OnAddedToFocusPath Parms{};

	Parms.InFocusEvent = std::move(InFocusEvent);

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_Chatting.UI_Chatting_C.OnAutoHideWidgets
// (BlueprintCallable, BlueprintEvent)

void UUI_Chatting_C::OnAutoHideWidgets()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Chatting_C", "OnAutoHideWidgets");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_Chatting.UI_Chatting_C.OnMouseButtonDown
// (BlueprintCosmetic, Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FPointerEvent                    MouseEvent                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply UUI_Chatting_C::OnMouseButtonDown(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Chatting_C", "OnMouseButtonDown");

	Params::UI_Chatting_C_OnMouseButtonDown Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.MouseEvent = std::move(MouseEvent);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function UI_Chatting.UI_Chatting_C.OnRefreshCooltimeText
// (BlueprintCallable, BlueprintEvent)

void UUI_Chatting_C::OnRefreshCooltimeText()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Chatting_C", "OnRefreshCooltimeText");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_Chatting.UI_Chatting_C.OnRemovedFromFocusPath
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// struct FFocusEvent                      InFocusEvent                                           (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)

void UUI_Chatting_C::OnRemovedFromFocusPath(const struct FFocusEvent& InFocusEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Chatting_C", "OnRemovedFromFocusPath");

	Params::UI_Chatting_C_OnRemovedFromFocusPath Parms{};

	Parms.InFocusEvent = std::move(InFocusEvent);

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_Chatting.UI_Chatting_C.PlayTextInputAkEvent
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsEmpty                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UAkAudioEvent*                    TypingEvent                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UAkAudioEvent*                    EmptyEvent                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UUI_Chatting_C::PlayTextInputAkEvent(bool IsEmpty, class UAkAudioEvent* TypingEvent, class UAkAudioEvent* EmptyEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Chatting_C", "PlayTextInputAkEvent");

	Params::UI_Chatting_C_PlayTextInputAkEvent Parms{};

	Parms.IsEmpty = IsEmpty;
	Parms.TypingEvent = TypingEvent;
	Parms.EmptyEvent = EmptyEvent;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_Chatting.UI_Chatting_C.SetMinBGOpacity
// (Public, BlueprintCallable, BlueprintEvent)

void UUI_Chatting_C::SetMinBGOpacity()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Chatting_C", "SetMinBGOpacity");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_Chatting.UI_Chatting_C.ShowMaximalWidgets
// (Private, BlueprintCallable, BlueprintEvent)

void UUI_Chatting_C::ShowMaximalWidgets()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Chatting_C", "ShowMaximalWidgets");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_Chatting.UI_Chatting_C.ShowMiminalWidgets
// (Private, BlueprintCallable, BlueprintEvent)

void UUI_Chatting_C::ShowMiminalWidgets()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Chatting_C", "ShowMiminalWidgets");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_Chatting.UI_Chatting_C.TrySetAutoHideTimer
// (BlueprintCallable, BlueprintEvent)

void UUI_Chatting_C::TrySetAutoHideTimer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Chatting_C", "TrySetAutoHideTimer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_Chatting.UI_Chatting_C.GetFocusWidget
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class UWidget*                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)

class UWidget* UUI_Chatting_C::GetFocusWidget() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_Chatting_C", "GetFocusWidget");

	Params::UI_Chatting_C_GetFocusWidget Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

