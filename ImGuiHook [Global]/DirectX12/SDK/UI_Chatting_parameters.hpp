#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_Chatting

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "M1_structs.hpp"
#include "M1Data_structs.hpp"
#include "AkAudio_structs.hpp"
#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function UI_Chatting.UI_Chatting_C.BndEvt__Text_Message_K2Node_ComponentBoundEvent_0_OnEditableTextCommittedEvent__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct UI_Chatting_C_BndEvt__Text_Message_K2Node_ComponentBoundEvent_0_OnEditableTextCommittedEvent__DelegateSignature final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	ETextCommit                                   CommitMethod;                                      // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Chatting_C_BndEvt__Text_Message_K2Node_ComponentBoundEvent_0_OnEditableTextCommittedEvent__DelegateSignature) == 0x000008, "Wrong alignment on UI_Chatting_C_BndEvt__Text_Message_K2Node_ComponentBoundEvent_0_OnEditableTextCommittedEvent__DelegateSignature");
static_assert(sizeof(UI_Chatting_C_BndEvt__Text_Message_K2Node_ComponentBoundEvent_0_OnEditableTextCommittedEvent__DelegateSignature) == 0x000020, "Wrong size on UI_Chatting_C_BndEvt__Text_Message_K2Node_ComponentBoundEvent_0_OnEditableTextCommittedEvent__DelegateSignature");
static_assert(offsetof(UI_Chatting_C_BndEvt__Text_Message_K2Node_ComponentBoundEvent_0_OnEditableTextCommittedEvent__DelegateSignature, Text) == 0x000000, "Member 'UI_Chatting_C_BndEvt__Text_Message_K2Node_ComponentBoundEvent_0_OnEditableTextCommittedEvent__DelegateSignature::Text' has a wrong offset!");
static_assert(offsetof(UI_Chatting_C_BndEvt__Text_Message_K2Node_ComponentBoundEvent_0_OnEditableTextCommittedEvent__DelegateSignature, CommitMethod) == 0x000018, "Member 'UI_Chatting_C_BndEvt__Text_Message_K2Node_ComponentBoundEvent_0_OnEditableTextCommittedEvent__DelegateSignature::CommitMethod' has a wrong offset!");

// Function UI_Chatting.UI_Chatting_C.BndEvt__Text_Message_K2Node_ComponentBoundEvent_1_OnEditableTextChangedEvent__DelegateSignature
// 0x0018 (0x0018 - 0x0000)
struct UI_Chatting_C_BndEvt__Text_Message_K2Node_ComponentBoundEvent_1_OnEditableTextChangedEvent__DelegateSignature final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(UI_Chatting_C_BndEvt__Text_Message_K2Node_ComponentBoundEvent_1_OnEditableTextChangedEvent__DelegateSignature) == 0x000008, "Wrong alignment on UI_Chatting_C_BndEvt__Text_Message_K2Node_ComponentBoundEvent_1_OnEditableTextChangedEvent__DelegateSignature");
static_assert(sizeof(UI_Chatting_C_BndEvt__Text_Message_K2Node_ComponentBoundEvent_1_OnEditableTextChangedEvent__DelegateSignature) == 0x000018, "Wrong size on UI_Chatting_C_BndEvt__Text_Message_K2Node_ComponentBoundEvent_1_OnEditableTextChangedEvent__DelegateSignature");
static_assert(offsetof(UI_Chatting_C_BndEvt__Text_Message_K2Node_ComponentBoundEvent_1_OnEditableTextChangedEvent__DelegateSignature, Text) == 0x000000, "Member 'UI_Chatting_C_BndEvt__Text_Message_K2Node_ComponentBoundEvent_1_OnEditableTextChangedEvent__DelegateSignature::Text' has a wrong offset!");

// Function UI_Chatting.UI_Chatting_C.BP_OnChattingTabChanged
// 0x0001 (0x0001 - 0x0000)
struct UI_Chatting_C_BP_OnChattingTabChanged final
{
public:
	EM1ChattingTab                                InTargetTab;                                       // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Chatting_C_BP_OnChattingTabChanged) == 0x000001, "Wrong alignment on UI_Chatting_C_BP_OnChattingTabChanged");
static_assert(sizeof(UI_Chatting_C_BP_OnChattingTabChanged) == 0x000001, "Wrong size on UI_Chatting_C_BP_OnChattingTabChanged");
static_assert(offsetof(UI_Chatting_C_BP_OnChattingTabChanged, InTargetTab) == 0x000000, "Member 'UI_Chatting_C_BP_OnChattingTabChanged::InTargetTab' has a wrong offset!");

// Function UI_Chatting.UI_Chatting_C.BP_OnRefreshChattingCooltime
// 0x0004 (0x0004 - 0x0000)
struct UI_Chatting_C_BP_OnRefreshChattingCooltime final
{
public:
	int32                                         RemainCooltime;                                    // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Chatting_C_BP_OnRefreshChattingCooltime) == 0x000004, "Wrong alignment on UI_Chatting_C_BP_OnRefreshChattingCooltime");
static_assert(sizeof(UI_Chatting_C_BP_OnRefreshChattingCooltime) == 0x000004, "Wrong size on UI_Chatting_C_BP_OnRefreshChattingCooltime");
static_assert(offsetof(UI_Chatting_C_BP_OnRefreshChattingCooltime, RemainCooltime) == 0x000000, "Member 'UI_Chatting_C_BP_OnRefreshChattingCooltime::RemainCooltime' has a wrong offset!");

// Function UI_Chatting.UI_Chatting_C.BP_PostReceivedChatMessage
// 0x0002 (0x0002 - 0x0000)
struct UI_Chatting_C_BP_PostReceivedChatMessage final
{
public:
	bool                                          bDueToShowMinimalUI;                               // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bWasScrolledToBottom;                              // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Chatting_C_BP_PostReceivedChatMessage) == 0x000001, "Wrong alignment on UI_Chatting_C_BP_PostReceivedChatMessage");
static_assert(sizeof(UI_Chatting_C_BP_PostReceivedChatMessage) == 0x000002, "Wrong size on UI_Chatting_C_BP_PostReceivedChatMessage");
static_assert(offsetof(UI_Chatting_C_BP_PostReceivedChatMessage, bDueToShowMinimalUI) == 0x000000, "Member 'UI_Chatting_C_BP_PostReceivedChatMessage::bDueToShowMinimalUI' has a wrong offset!");
static_assert(offsetof(UI_Chatting_C_BP_PostReceivedChatMessage, bWasScrolledToBottom) == 0x000001, "Member 'UI_Chatting_C_BP_PostReceivedChatMessage::bWasScrolledToBottom' has a wrong offset!");

// Function UI_Chatting.UI_Chatting_C.ChangeUIState
// 0x0003 (0x0003 - 0x0000)
struct UI_Chatting_C_ChangeUIState final
{
public:
	EM1ChattingUIState                            InState;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Chatting_C_ChangeUIState) == 0x000001, "Wrong alignment on UI_Chatting_C_ChangeUIState");
static_assert(sizeof(UI_Chatting_C_ChangeUIState) == 0x000003, "Wrong size on UI_Chatting_C_ChangeUIState");
static_assert(offsetof(UI_Chatting_C_ChangeUIState, InState) == 0x000000, "Member 'UI_Chatting_C_ChangeUIState::InState' has a wrong offset!");
static_assert(offsetof(UI_Chatting_C_ChangeUIState, K2Node_SwitchEnum_CmpSuccess) == 0x000001, "Member 'UI_Chatting_C_ChangeUIState::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(UI_Chatting_C_ChangeUIState, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000002, "Member 'UI_Chatting_C_ChangeUIState::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function UI_Chatting.UI_Chatting_C.ExecuteUbergraph_UI_Chatting
// 0x00E8 (0x00E8 - 0x0000)
struct UI_Chatting_C_ExecuteUbergraph_UI_Chatting final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMinimalUIState_ReturnValue;             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_ComponentBoundEvent_Text_1;                 // 0x0008(0x0018)(ConstParm)
	ETextCommit                                   K2Node_ComponentBoundEvent_CommitMethod;           // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEmpty_ReturnValue;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B[0x5];                                       // 0x003B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_ComponentBoundEvent_Text;                   // 0x0040(0x0018)(ConstParm)
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFocusEvent                            K2Node_Event_InFocusEvent_1;                       // 0x005C(0x0008)(NoDestructor)
	bool                                          CallFunc_IsUsingMinimalUIAutoHide_ReturnValue;     // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_65[0x3];                                       // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFocusEvent                            K2Node_Event_InFocusEvent;                         // 0x0068(0x0008)(NoDestructor)
	float                                         Temp_real_Variable;                                // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0075(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_76[0x2];                                       // 0x0076(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_RemainCooltime;                       // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x007D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Temp_byte_Variable;                                // 0x007E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7F[0x1];                                       // 0x007F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EM1ChattingTab                                K2Node_Event_InTargetTab;                          // 0x0085(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_86[0x2];                                       // 0x0086(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UUI_Chat_Button_C*                      K2Node_DynamicCast_AsUI_Chat_Button;               // 0x0088(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default;                             // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_92[0x6];                                       // 0x0092(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUI_Chat_Button_C*                      K2Node_DynamicCast_AsUI_Chat_Button_1;             // 0x0098(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1[0x3];                                       // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x00A4(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bDueToShowMinimalUI;                  // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bWasScrolledToBottom;                 // 0x00B5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B6[0x2];                                       // 0x00B6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x00B8(0x0008)(NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C5[0x3];                                       // 0x00C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x00C8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsQuicklyAutoHide_ReturnValue;            // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSetAutoHideCustomTime_ReturnValue;      // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSetAutoHideCustomTime_ReturnValue_1;    // 0x00DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DB[0x1];                                       // 0x00DB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default_1;                           // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_1;        // 0x00E0(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Chatting_C_ExecuteUbergraph_UI_Chatting) == 0x000008, "Wrong alignment on UI_Chatting_C_ExecuteUbergraph_UI_Chatting");
static_assert(sizeof(UI_Chatting_C_ExecuteUbergraph_UI_Chatting) == 0x0000E8, "Wrong size on UI_Chatting_C_ExecuteUbergraph_UI_Chatting");
static_assert(offsetof(UI_Chatting_C_ExecuteUbergraph_UI_Chatting, EntryPoint) == 0x000000, "Member 'UI_Chatting_C_ExecuteUbergraph_UI_Chatting::EntryPoint' has a wrong offset!");
static_assert(offsetof(UI_Chatting_C_ExecuteUbergraph_UI_Chatting, CallFunc_IsMinimalUIState_ReturnValue) == 0x000004, "Member 'UI_Chatting_C_ExecuteUbergraph_UI_Chatting::CallFunc_IsMinimalUIState_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Chatting_C_ExecuteUbergraph_UI_Chatting, K2Node_ComponentBoundEvent_Text_1) == 0x000008, "Member 'UI_Chatting_C_ExecuteUbergraph_UI_Chatting::K2Node_ComponentBoundEvent_Text_1' has a wrong offset!");
static_assert(offsetof(UI_Chatting_C_ExecuteUbergraph_UI_Chatting, K2Node_ComponentBoundEvent_CommitMethod) == 0x000020, "Member 'UI_Chatting_C_ExecuteUbergraph_UI_Chatting::K2Node_ComponentBoundEvent_CommitMethod' has a wrong offset!");
static_assert(offsetof(UI_Chatting_C_ExecuteUbergraph_UI_Chatting, K2Node_SwitchEnum_CmpSuccess) == 0x000021, "Member 'UI_Chatting_C_ExecuteUbergraph_UI_Chatting::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(UI_Chatting_C_ExecuteUbergraph_UI_Chatting, CallFunc_Conv_TextToString_ReturnValue) == 0x000028, "Member 'UI_Chatting_C_ExecuteUbergraph_UI_Chatting::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Chatting_C_ExecuteUbergraph_UI_Chatting, CallFunc_IsEmpty_ReturnValue) == 0x000038, "Member 'UI_Chatting_C_ExecuteUbergraph_UI_Chatting::CallFunc_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Chatting_C_ExecuteUbergraph_UI_Chatting, CallFunc_Not_PreBool_ReturnValue) == 0x000039, "Member 'UI_Chatting_C_ExecuteUbergraph_UI_Chatting::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Chatting_C_ExecuteUbergraph_UI_Chatting, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x00003A, "Member 'UI_Chatting_C_ExecuteUbergraph_UI_Chatting::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Chatting_C_ExecuteUbergraph_UI_Chatting, K2Node_ComponentBoundEvent_Text) == 0x000040, "Member 'UI_Chatting_C_ExecuteUbergraph_UI_Chatting::K2Node_ComponentBoundEvent_Text' has a wrong offset!");
static_assert(offsetof(UI_Chatting_C_ExecuteUbergraph_UI_Chatting, CallFunc_TextIsEmpty_ReturnValue) == 0x000058, "Member 'UI_Chatting_C_ExecuteUbergraph_UI_Chatting::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Chatting_C_ExecuteUbergraph_UI_Chatting, K2Node_Event_InFocusEvent_1) == 0x00005C, "Member 'UI_Chatting_C_ExecuteUbergraph_UI_Chatting::K2Node_Event_InFocusEvent_1' has a wrong offset!");
static_assert(offsetof(UI_Chatting_C_ExecuteUbergraph_UI_Chatting, CallFunc_IsUsingMinimalUIAutoHide_ReturnValue) == 0x000064, "Member 'UI_Chatting_C_ExecuteUbergraph_UI_Chatting::CallFunc_IsUsingMinimalUIAutoHide_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Chatting_C_ExecuteUbergraph_UI_Chatting, K2Node_Event_InFocusEvent) == 0x000068, "Member 'UI_Chatting_C_ExecuteUbergraph_UI_Chatting::K2Node_Event_InFocusEvent' has a wrong offset!");
static_assert(offsetof(UI_Chatting_C_ExecuteUbergraph_UI_Chatting, Temp_real_Variable) == 0x000070, "Member 'UI_Chatting_C_ExecuteUbergraph_UI_Chatting::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(UI_Chatting_C_ExecuteUbergraph_UI_Chatting, Temp_bool_Variable) == 0x000074, "Member 'UI_Chatting_C_ExecuteUbergraph_UI_Chatting::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UI_Chatting_C_ExecuteUbergraph_UI_Chatting, Temp_bool_Variable_1) == 0x000075, "Member 'UI_Chatting_C_ExecuteUbergraph_UI_Chatting::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_Chatting_C_ExecuteUbergraph_UI_Chatting, K2Node_Event_RemainCooltime) == 0x000078, "Member 'UI_Chatting_C_ExecuteUbergraph_UI_Chatting::K2Node_Event_RemainCooltime' has a wrong offset!");
static_assert(offsetof(UI_Chatting_C_ExecuteUbergraph_UI_Chatting, CallFunc_Greater_IntInt_ReturnValue) == 0x00007C, "Member 'UI_Chatting_C_ExecuteUbergraph_UI_Chatting::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Chatting_C_ExecuteUbergraph_UI_Chatting, Temp_bool_Variable_2) == 0x00007D, "Member 'UI_Chatting_C_ExecuteUbergraph_UI_Chatting::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_Chatting_C_ExecuteUbergraph_UI_Chatting, Temp_byte_Variable) == 0x00007E, "Member 'UI_Chatting_C_ExecuteUbergraph_UI_Chatting::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(UI_Chatting_C_ExecuteUbergraph_UI_Chatting, CallFunc_Subtract_IntInt_ReturnValue) == 0x000080, "Member 'UI_Chatting_C_ExecuteUbergraph_UI_Chatting::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Chatting_C_ExecuteUbergraph_UI_Chatting, K2Node_SwitchEnum_CmpSuccess_1) == 0x000084, "Member 'UI_Chatting_C_ExecuteUbergraph_UI_Chatting::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(UI_Chatting_C_ExecuteUbergraph_UI_Chatting, K2Node_Event_InTargetTab) == 0x000085, "Member 'UI_Chatting_C_ExecuteUbergraph_UI_Chatting::K2Node_Event_InTargetTab' has a wrong offset!");
static_assert(offsetof(UI_Chatting_C_ExecuteUbergraph_UI_Chatting, K2Node_DynamicCast_AsUI_Chat_Button) == 0x000088, "Member 'UI_Chatting_C_ExecuteUbergraph_UI_Chatting::K2Node_DynamicCast_AsUI_Chat_Button' has a wrong offset!");
static_assert(offsetof(UI_Chatting_C_ExecuteUbergraph_UI_Chatting, K2Node_DynamicCast_bSuccess) == 0x000090, "Member 'UI_Chatting_C_ExecuteUbergraph_UI_Chatting::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(UI_Chatting_C_ExecuteUbergraph_UI_Chatting, K2Node_Select_Default) == 0x000091, "Member 'UI_Chatting_C_ExecuteUbergraph_UI_Chatting::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UI_Chatting_C_ExecuteUbergraph_UI_Chatting, K2Node_DynamicCast_AsUI_Chat_Button_1) == 0x000098, "Member 'UI_Chatting_C_ExecuteUbergraph_UI_Chatting::K2Node_DynamicCast_AsUI_Chat_Button_1' has a wrong offset!");
static_assert(offsetof(UI_Chatting_C_ExecuteUbergraph_UI_Chatting, K2Node_DynamicCast_bSuccess_1) == 0x0000A0, "Member 'UI_Chatting_C_ExecuteUbergraph_UI_Chatting::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(UI_Chatting_C_ExecuteUbergraph_UI_Chatting, K2Node_CreateDelegate_OutputDelegate) == 0x0000A4, "Member 'UI_Chatting_C_ExecuteUbergraph_UI_Chatting::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(UI_Chatting_C_ExecuteUbergraph_UI_Chatting, K2Node_Event_bDueToShowMinimalUI) == 0x0000B4, "Member 'UI_Chatting_C_ExecuteUbergraph_UI_Chatting::K2Node_Event_bDueToShowMinimalUI' has a wrong offset!");
static_assert(offsetof(UI_Chatting_C_ExecuteUbergraph_UI_Chatting, K2Node_Event_bWasScrolledToBottom) == 0x0000B5, "Member 'UI_Chatting_C_ExecuteUbergraph_UI_Chatting::K2Node_Event_bWasScrolledToBottom' has a wrong offset!");
static_assert(offsetof(UI_Chatting_C_ExecuteUbergraph_UI_Chatting, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x0000B8, "Member 'UI_Chatting_C_ExecuteUbergraph_UI_Chatting::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Chatting_C_ExecuteUbergraph_UI_Chatting, Temp_int_Variable) == 0x0000C0, "Member 'UI_Chatting_C_ExecuteUbergraph_UI_Chatting::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(UI_Chatting_C_ExecuteUbergraph_UI_Chatting, CallFunc_Greater_IntInt_ReturnValue_1) == 0x0000C4, "Member 'UI_Chatting_C_ExecuteUbergraph_UI_Chatting::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_Chatting_C_ExecuteUbergraph_UI_Chatting, K2Node_CreateDelegate_OutputDelegate_1) == 0x0000C8, "Member 'UI_Chatting_C_ExecuteUbergraph_UI_Chatting::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(UI_Chatting_C_ExecuteUbergraph_UI_Chatting, CallFunc_IsQuicklyAutoHide_ReturnValue) == 0x0000D8, "Member 'UI_Chatting_C_ExecuteUbergraph_UI_Chatting::CallFunc_IsQuicklyAutoHide_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Chatting_C_ExecuteUbergraph_UI_Chatting, CallFunc_IsSetAutoHideCustomTime_ReturnValue) == 0x0000D9, "Member 'UI_Chatting_C_ExecuteUbergraph_UI_Chatting::CallFunc_IsSetAutoHideCustomTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Chatting_C_ExecuteUbergraph_UI_Chatting, CallFunc_IsSetAutoHideCustomTime_ReturnValue_1) == 0x0000DA, "Member 'UI_Chatting_C_ExecuteUbergraph_UI_Chatting::CallFunc_IsSetAutoHideCustomTime_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_Chatting_C_ExecuteUbergraph_UI_Chatting, K2Node_Select_Default_1) == 0x0000DC, "Member 'UI_Chatting_C_ExecuteUbergraph_UI_Chatting::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(UI_Chatting_C_ExecuteUbergraph_UI_Chatting, CallFunc_K2_SetTimerDelegate_ReturnValue_1) == 0x0000E0, "Member 'UI_Chatting_C_ExecuteUbergraph_UI_Chatting::CallFunc_K2_SetTimerDelegate_ReturnValue_1' has a wrong offset!");

// Function UI_Chatting.UI_Chatting_C.InitializeWidgets
// 0x0005 (0x0005 - 0x0000)
struct UI_Chatting_C_InitializeWidgets final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EM1ChattingUIState                            Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EM1ChattingUIState                            Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsUsingMinimalUIAutoHide_ReturnValue;     // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EM1ChattingUIState                            K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Chatting_C_InitializeWidgets) == 0x000001, "Wrong alignment on UI_Chatting_C_InitializeWidgets");
static_assert(sizeof(UI_Chatting_C_InitializeWidgets) == 0x000005, "Wrong size on UI_Chatting_C_InitializeWidgets");
static_assert(offsetof(UI_Chatting_C_InitializeWidgets, Temp_bool_Variable) == 0x000000, "Member 'UI_Chatting_C_InitializeWidgets::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UI_Chatting_C_InitializeWidgets, Temp_byte_Variable) == 0x000001, "Member 'UI_Chatting_C_InitializeWidgets::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(UI_Chatting_C_InitializeWidgets, Temp_byte_Variable_1) == 0x000002, "Member 'UI_Chatting_C_InitializeWidgets::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_Chatting_C_InitializeWidgets, CallFunc_IsUsingMinimalUIAutoHide_ReturnValue) == 0x000003, "Member 'UI_Chatting_C_InitializeWidgets::CallFunc_IsUsingMinimalUIAutoHide_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Chatting_C_InitializeWidgets, K2Node_Select_Default) == 0x000004, "Member 'UI_Chatting_C_InitializeWidgets::K2Node_Select_Default' has a wrong offset!");

// Function UI_Chatting.UI_Chatting_C.IsMinimalUIState
// 0x0002 (0x0002 - 0x0000)
struct UI_Chatting_C_IsMinimalUIState final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Chatting_C_IsMinimalUIState) == 0x000001, "Wrong alignment on UI_Chatting_C_IsMinimalUIState");
static_assert(sizeof(UI_Chatting_C_IsMinimalUIState) == 0x000002, "Wrong size on UI_Chatting_C_IsMinimalUIState");
static_assert(offsetof(UI_Chatting_C_IsMinimalUIState, ReturnValue) == 0x000000, "Member 'UI_Chatting_C_IsMinimalUIState::ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Chatting_C_IsMinimalUIState, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000001, "Member 'UI_Chatting_C_IsMinimalUIState::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function UI_Chatting.UI_Chatting_C.OnAddedToFocusPath
// 0x0008 (0x0008 - 0x0000)
struct UI_Chatting_C_OnAddedToFocusPath final
{
public:
	struct FFocusEvent                            InFocusEvent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(UI_Chatting_C_OnAddedToFocusPath) == 0x000004, "Wrong alignment on UI_Chatting_C_OnAddedToFocusPath");
static_assert(sizeof(UI_Chatting_C_OnAddedToFocusPath) == 0x000008, "Wrong size on UI_Chatting_C_OnAddedToFocusPath");
static_assert(offsetof(UI_Chatting_C_OnAddedToFocusPath, InFocusEvent) == 0x000000, "Member 'UI_Chatting_C_OnAddedToFocusPath::InFocusEvent' has a wrong offset!");

// Function UI_Chatting.UI_Chatting_C.OnMouseButtonDown
// 0x0220 (0x0220 - 0x0000)
struct UI_Chatting_C_OnMouseButtonDown final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0078)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x00B0(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0168(0x00B8)()
};
static_assert(alignof(UI_Chatting_C_OnMouseButtonDown) == 0x000008, "Wrong alignment on UI_Chatting_C_OnMouseButtonDown");
static_assert(sizeof(UI_Chatting_C_OnMouseButtonDown) == 0x000220, "Wrong size on UI_Chatting_C_OnMouseButtonDown");
static_assert(offsetof(UI_Chatting_C_OnMouseButtonDown, MyGeometry) == 0x000000, "Member 'UI_Chatting_C_OnMouseButtonDown::MyGeometry' has a wrong offset!");
static_assert(offsetof(UI_Chatting_C_OnMouseButtonDown, MouseEvent) == 0x000038, "Member 'UI_Chatting_C_OnMouseButtonDown::MouseEvent' has a wrong offset!");
static_assert(offsetof(UI_Chatting_C_OnMouseButtonDown, ReturnValue) == 0x0000B0, "Member 'UI_Chatting_C_OnMouseButtonDown::ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Chatting_C_OnMouseButtonDown, CallFunc_Handled_ReturnValue) == 0x000168, "Member 'UI_Chatting_C_OnMouseButtonDown::CallFunc_Handled_ReturnValue' has a wrong offset!");

// Function UI_Chatting.UI_Chatting_C.OnRemovedFromFocusPath
// 0x0008 (0x0008 - 0x0000)
struct UI_Chatting_C_OnRemovedFromFocusPath final
{
public:
	struct FFocusEvent                            InFocusEvent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(UI_Chatting_C_OnRemovedFromFocusPath) == 0x000004, "Wrong alignment on UI_Chatting_C_OnRemovedFromFocusPath");
static_assert(sizeof(UI_Chatting_C_OnRemovedFromFocusPath) == 0x000008, "Wrong size on UI_Chatting_C_OnRemovedFromFocusPath");
static_assert(offsetof(UI_Chatting_C_OnRemovedFromFocusPath, InFocusEvent) == 0x000000, "Member 'UI_Chatting_C_OnRemovedFromFocusPath::InFocusEvent' has a wrong offset!");

// Function UI_Chatting.UI_Chatting_C.PlayTextInputAkEvent
// 0x0070 (0x0070 - 0x0000)
struct UI_Chatting_C_PlayTextInputAkEvent final
{
public:
	bool                                          IsEmpty;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAkAudioEvent*                          TypingEvent;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAkAudioEvent*                          EmptyEvent;                                        // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable;                            // 0x0018(0x0010)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable;                              // 0x0028(0x0010)(ConstParm, ReferenceParm)
	bool                                          Temp_bool_Variable;                                // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AM1PlayerController*                    K2Node_DynamicCast_AsM1Player_Controller;          // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAkAudioEvent*                          K2Node_Select_Default;                             // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UM1AkComponent*                         CallFunc_GetAkComponent_ReturnValue;               // 0x0060(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_PostEvent_ReturnValue;                    // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Chatting_C_PlayTextInputAkEvent) == 0x000008, "Wrong alignment on UI_Chatting_C_PlayTextInputAkEvent");
static_assert(sizeof(UI_Chatting_C_PlayTextInputAkEvent) == 0x000070, "Wrong size on UI_Chatting_C_PlayTextInputAkEvent");
static_assert(offsetof(UI_Chatting_C_PlayTextInputAkEvent, IsEmpty) == 0x000000, "Member 'UI_Chatting_C_PlayTextInputAkEvent::IsEmpty' has a wrong offset!");
static_assert(offsetof(UI_Chatting_C_PlayTextInputAkEvent, TypingEvent) == 0x000008, "Member 'UI_Chatting_C_PlayTextInputAkEvent::TypingEvent' has a wrong offset!");
static_assert(offsetof(UI_Chatting_C_PlayTextInputAkEvent, EmptyEvent) == 0x000010, "Member 'UI_Chatting_C_PlayTextInputAkEvent::EmptyEvent' has a wrong offset!");
static_assert(offsetof(UI_Chatting_C_PlayTextInputAkEvent, Temp_delegate_Variable) == 0x000018, "Member 'UI_Chatting_C_PlayTextInputAkEvent::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(UI_Chatting_C_PlayTextInputAkEvent, Temp_struct_Variable) == 0x000028, "Member 'UI_Chatting_C_PlayTextInputAkEvent::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(UI_Chatting_C_PlayTextInputAkEvent, Temp_bool_Variable) == 0x000038, "Member 'UI_Chatting_C_PlayTextInputAkEvent::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UI_Chatting_C_PlayTextInputAkEvent, CallFunc_GetOwningPlayer_ReturnValue) == 0x000040, "Member 'UI_Chatting_C_PlayTextInputAkEvent::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Chatting_C_PlayTextInputAkEvent, K2Node_DynamicCast_AsM1Player_Controller) == 0x000048, "Member 'UI_Chatting_C_PlayTextInputAkEvent::K2Node_DynamicCast_AsM1Player_Controller' has a wrong offset!");
static_assert(offsetof(UI_Chatting_C_PlayTextInputAkEvent, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'UI_Chatting_C_PlayTextInputAkEvent::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(UI_Chatting_C_PlayTextInputAkEvent, K2Node_Select_Default) == 0x000058, "Member 'UI_Chatting_C_PlayTextInputAkEvent::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UI_Chatting_C_PlayTextInputAkEvent, CallFunc_GetAkComponent_ReturnValue) == 0x000060, "Member 'UI_Chatting_C_PlayTextInputAkEvent::CallFunc_GetAkComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Chatting_C_PlayTextInputAkEvent, CallFunc_PostEvent_ReturnValue) == 0x000068, "Member 'UI_Chatting_C_PlayTextInputAkEvent::CallFunc_PostEvent_ReturnValue' has a wrong offset!");

// Function UI_Chatting.UI_Chatting_C.SetMinBGOpacity
// 0x0004 (0x0004 - 0x0000)
struct UI_Chatting_C_SetMinBGOpacity final
{
public:
	float                                         CallFunc_GetMinimalUIBackgroundOpacity_ReturnValue; // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Chatting_C_SetMinBGOpacity) == 0x000004, "Wrong alignment on UI_Chatting_C_SetMinBGOpacity");
static_assert(sizeof(UI_Chatting_C_SetMinBGOpacity) == 0x000004, "Wrong size on UI_Chatting_C_SetMinBGOpacity");
static_assert(offsetof(UI_Chatting_C_SetMinBGOpacity, CallFunc_GetMinimalUIBackgroundOpacity_ReturnValue) == 0x000000, "Member 'UI_Chatting_C_SetMinBGOpacity::CallFunc_GetMinimalUIBackgroundOpacity_ReturnValue' has a wrong offset!");

// Function UI_Chatting.UI_Chatting_C.GetFocusWidget
// 0x0008 (0x0008 - 0x0000)
struct UI_Chatting_C_GetFocusWidget final
{
public:
	class UWidget*                                ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Chatting_C_GetFocusWidget) == 0x000008, "Wrong alignment on UI_Chatting_C_GetFocusWidget");
static_assert(sizeof(UI_Chatting_C_GetFocusWidget) == 0x000008, "Wrong size on UI_Chatting_C_GetFocusWidget");
static_assert(offsetof(UI_Chatting_C_GetFocusWidget, ReturnValue) == 0x000000, "Member 'UI_Chatting_C_GetFocusWidget::ReturnValue' has a wrong offset!");

}

