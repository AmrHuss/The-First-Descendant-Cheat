#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_Crosshair_Scope_SR_0000

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "WB_CrosshairBase_classes.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass UI_Crosshair_Scope_SR_0000.UI_Crosshair_Scope_SR_0000_C
// 0x0098 (0x07C0 - 0x0728)
class UUI_Crosshair_Scope_SR_0000_C : public UWB_CrosshairBase_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_UI_Crosshair_Scope_SR_0000_C;       // 0x0728(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UImage*                                 Bg_H_01;                                           // 0x0730(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Bg_H_02;                                           // 0x0738(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Bg_V_01;                                           // 0x0740(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Bg_V_02;                                           // 0x0748(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCL_Distance_C*                         CL_Distance;                                       // 0x0750(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         HorizontalBox_0;                                   // 0x0758(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UM1SpriteImage*                         Img_BG;                                            // 0x0760(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UM1SpriteImage*                         Img_Reticle;                                       // 0x0768(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UM1SpriteImage*                         Img_Scope;                                         // 0x0770(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UObject*                                BGImage;                                           // 0x0778(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	double                                        BgOpacity;                                         // 0x0780(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                ScopeImage;                                        // 0x0788(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	struct FVector2D                              ScopeSize;                                         // 0x0790(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ScopeScale;                                        // 0x0798(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                ReticleImage;                                      // 0x07A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          DistanceView;                                      // 0x07A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7A9[0x3];                                      // 0x07A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMargin                                DistancePadding;                                   // 0x07AC(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)

public:
	void ApplyCrosshairGridOpacity(double Opacity);
	void ExecuteUbergraph_UI_Crosshair_Scope_SR_0000(int32 EntryPoint);
	void PreConstruct(bool IsDesignTime);
	void SetUI();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"UI_Crosshair_Scope_SR_0000_C">();
	}
	static class UUI_Crosshair_Scope_SR_0000_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUI_Crosshair_Scope_SR_0000_C>();
	}
};
static_assert(alignof(UUI_Crosshair_Scope_SR_0000_C) == 0x000008, "Wrong alignment on UUI_Crosshair_Scope_SR_0000_C");
static_assert(sizeof(UUI_Crosshair_Scope_SR_0000_C) == 0x0007C0, "Wrong size on UUI_Crosshair_Scope_SR_0000_C");
static_assert(offsetof(UUI_Crosshair_Scope_SR_0000_C, UberGraphFrame_UI_Crosshair_Scope_SR_0000_C) == 0x000728, "Member 'UUI_Crosshair_Scope_SR_0000_C::UberGraphFrame_UI_Crosshair_Scope_SR_0000_C' has a wrong offset!");
static_assert(offsetof(UUI_Crosshair_Scope_SR_0000_C, Bg_H_01) == 0x000730, "Member 'UUI_Crosshair_Scope_SR_0000_C::Bg_H_01' has a wrong offset!");
static_assert(offsetof(UUI_Crosshair_Scope_SR_0000_C, Bg_H_02) == 0x000738, "Member 'UUI_Crosshair_Scope_SR_0000_C::Bg_H_02' has a wrong offset!");
static_assert(offsetof(UUI_Crosshair_Scope_SR_0000_C, Bg_V_01) == 0x000740, "Member 'UUI_Crosshair_Scope_SR_0000_C::Bg_V_01' has a wrong offset!");
static_assert(offsetof(UUI_Crosshair_Scope_SR_0000_C, Bg_V_02) == 0x000748, "Member 'UUI_Crosshair_Scope_SR_0000_C::Bg_V_02' has a wrong offset!");
static_assert(offsetof(UUI_Crosshair_Scope_SR_0000_C, CL_Distance) == 0x000750, "Member 'UUI_Crosshair_Scope_SR_0000_C::CL_Distance' has a wrong offset!");
static_assert(offsetof(UUI_Crosshair_Scope_SR_0000_C, HorizontalBox_0) == 0x000758, "Member 'UUI_Crosshair_Scope_SR_0000_C::HorizontalBox_0' has a wrong offset!");
static_assert(offsetof(UUI_Crosshair_Scope_SR_0000_C, Img_BG) == 0x000760, "Member 'UUI_Crosshair_Scope_SR_0000_C::Img_BG' has a wrong offset!");
static_assert(offsetof(UUI_Crosshair_Scope_SR_0000_C, Img_Reticle) == 0x000768, "Member 'UUI_Crosshair_Scope_SR_0000_C::Img_Reticle' has a wrong offset!");
static_assert(offsetof(UUI_Crosshair_Scope_SR_0000_C, Img_Scope) == 0x000770, "Member 'UUI_Crosshair_Scope_SR_0000_C::Img_Scope' has a wrong offset!");
static_assert(offsetof(UUI_Crosshair_Scope_SR_0000_C, BGImage) == 0x000778, "Member 'UUI_Crosshair_Scope_SR_0000_C::BGImage' has a wrong offset!");
static_assert(offsetof(UUI_Crosshair_Scope_SR_0000_C, BgOpacity) == 0x000780, "Member 'UUI_Crosshair_Scope_SR_0000_C::BgOpacity' has a wrong offset!");
static_assert(offsetof(UUI_Crosshair_Scope_SR_0000_C, ScopeImage) == 0x000788, "Member 'UUI_Crosshair_Scope_SR_0000_C::ScopeImage' has a wrong offset!");
static_assert(offsetof(UUI_Crosshair_Scope_SR_0000_C, ScopeSize) == 0x000790, "Member 'UUI_Crosshair_Scope_SR_0000_C::ScopeSize' has a wrong offset!");
static_assert(offsetof(UUI_Crosshair_Scope_SR_0000_C, ScopeScale) == 0x000798, "Member 'UUI_Crosshair_Scope_SR_0000_C::ScopeScale' has a wrong offset!");
static_assert(offsetof(UUI_Crosshair_Scope_SR_0000_C, ReticleImage) == 0x0007A0, "Member 'UUI_Crosshair_Scope_SR_0000_C::ReticleImage' has a wrong offset!");
static_assert(offsetof(UUI_Crosshair_Scope_SR_0000_C, DistanceView) == 0x0007A8, "Member 'UUI_Crosshair_Scope_SR_0000_C::DistanceView' has a wrong offset!");
static_assert(offsetof(UUI_Crosshair_Scope_SR_0000_C, DistancePadding) == 0x0007AC, "Member 'UUI_Crosshair_Scope_SR_0000_C::DistancePadding' has a wrong offset!");

}

