#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_Currency

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function UI_Currency.UI_Currency_C.BP_SetAmountColor
// 0x0001 (0x0001 - 0x0000)
struct UI_Currency_C_BP_SetAmountColor final
{
public:
	bool                                          bEnough;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Currency_C_BP_SetAmountColor) == 0x000001, "Wrong alignment on UI_Currency_C_BP_SetAmountColor");
static_assert(sizeof(UI_Currency_C_BP_SetAmountColor) == 0x000001, "Wrong size on UI_Currency_C_BP_SetAmountColor");
static_assert(offsetof(UI_Currency_C_BP_SetAmountColor, bEnough) == 0x000000, "Member 'UI_Currency_C_BP_SetAmountColor::bEnough' has a wrong offset!");

// Function UI_Currency.UI_Currency_C.BP_ShowBackgroundImage
// 0x0001 (0x0001 - 0x0000)
struct UI_Currency_C_BP_ShowBackgroundImage final
{
public:
	bool                                          bShouldShow;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Currency_C_BP_ShowBackgroundImage) == 0x000001, "Wrong alignment on UI_Currency_C_BP_ShowBackgroundImage");
static_assert(sizeof(UI_Currency_C_BP_ShowBackgroundImage) == 0x000001, "Wrong size on UI_Currency_C_BP_ShowBackgroundImage");
static_assert(offsetof(UI_Currency_C_BP_ShowBackgroundImage, bShouldShow) == 0x000000, "Member 'UI_Currency_C_BP_ShowBackgroundImage::bShouldShow' has a wrong offset!");

// Function UI_Currency.UI_Currency_C.ExecuteUbergraph_UI_Currency
// 0x0028 (0x0028 - 0x0000)
struct UI_Currency_C_ExecuteUbergraph_UI_Currency final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_4;                              // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_5;                              // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_6;                              // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_7;                              // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bEnough;                              // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UOverlaySlot*                           CallFunc_SlotAsOverlaySlot_ReturnValue;            // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bShouldShow;                          // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_2;                           // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_3;                           // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Currency_C_ExecuteUbergraph_UI_Currency) == 0x000008, "Wrong alignment on UI_Currency_C_ExecuteUbergraph_UI_Currency");
static_assert(sizeof(UI_Currency_C_ExecuteUbergraph_UI_Currency) == 0x000028, "Wrong size on UI_Currency_C_ExecuteUbergraph_UI_Currency");
static_assert(offsetof(UI_Currency_C_ExecuteUbergraph_UI_Currency, EntryPoint) == 0x000000, "Member 'UI_Currency_C_ExecuteUbergraph_UI_Currency::EntryPoint' has a wrong offset!");
static_assert(offsetof(UI_Currency_C_ExecuteUbergraph_UI_Currency, Temp_byte_Variable) == 0x000004, "Member 'UI_Currency_C_ExecuteUbergraph_UI_Currency::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(UI_Currency_C_ExecuteUbergraph_UI_Currency, Temp_byte_Variable_1) == 0x000005, "Member 'UI_Currency_C_ExecuteUbergraph_UI_Currency::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_Currency_C_ExecuteUbergraph_UI_Currency, Temp_bool_Variable) == 0x000006, "Member 'UI_Currency_C_ExecuteUbergraph_UI_Currency::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UI_Currency_C_ExecuteUbergraph_UI_Currency, Temp_byte_Variable_2) == 0x000007, "Member 'UI_Currency_C_ExecuteUbergraph_UI_Currency::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_Currency_C_ExecuteUbergraph_UI_Currency, Temp_byte_Variable_3) == 0x000008, "Member 'UI_Currency_C_ExecuteUbergraph_UI_Currency::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(UI_Currency_C_ExecuteUbergraph_UI_Currency, Temp_bool_Variable_1) == 0x000009, "Member 'UI_Currency_C_ExecuteUbergraph_UI_Currency::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_Currency_C_ExecuteUbergraph_UI_Currency, Temp_byte_Variable_4) == 0x00000A, "Member 'UI_Currency_C_ExecuteUbergraph_UI_Currency::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(UI_Currency_C_ExecuteUbergraph_UI_Currency, Temp_byte_Variable_5) == 0x00000B, "Member 'UI_Currency_C_ExecuteUbergraph_UI_Currency::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(UI_Currency_C_ExecuteUbergraph_UI_Currency, Temp_bool_Variable_2) == 0x00000C, "Member 'UI_Currency_C_ExecuteUbergraph_UI_Currency::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_Currency_C_ExecuteUbergraph_UI_Currency, Temp_byte_Variable_6) == 0x00000D, "Member 'UI_Currency_C_ExecuteUbergraph_UI_Currency::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(UI_Currency_C_ExecuteUbergraph_UI_Currency, Temp_byte_Variable_7) == 0x00000E, "Member 'UI_Currency_C_ExecuteUbergraph_UI_Currency::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(UI_Currency_C_ExecuteUbergraph_UI_Currency, K2Node_Event_IsDesignTime) == 0x00000F, "Member 'UI_Currency_C_ExecuteUbergraph_UI_Currency::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(UI_Currency_C_ExecuteUbergraph_UI_Currency, K2Node_Event_bEnough) == 0x000010, "Member 'UI_Currency_C_ExecuteUbergraph_UI_Currency::K2Node_Event_bEnough' has a wrong offset!");
static_assert(offsetof(UI_Currency_C_ExecuteUbergraph_UI_Currency, Temp_bool_Variable_3) == 0x000011, "Member 'UI_Currency_C_ExecuteUbergraph_UI_Currency::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(UI_Currency_C_ExecuteUbergraph_UI_Currency, CallFunc_SlotAsOverlaySlot_ReturnValue) == 0x000018, "Member 'UI_Currency_C_ExecuteUbergraph_UI_Currency::CallFunc_SlotAsOverlaySlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Currency_C_ExecuteUbergraph_UI_Currency, K2Node_Event_bShouldShow) == 0x000020, "Member 'UI_Currency_C_ExecuteUbergraph_UI_Currency::K2Node_Event_bShouldShow' has a wrong offset!");
static_assert(offsetof(UI_Currency_C_ExecuteUbergraph_UI_Currency, K2Node_Select_Default) == 0x000021, "Member 'UI_Currency_C_ExecuteUbergraph_UI_Currency::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UI_Currency_C_ExecuteUbergraph_UI_Currency, K2Node_Select_Default_1) == 0x000022, "Member 'UI_Currency_C_ExecuteUbergraph_UI_Currency::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(UI_Currency_C_ExecuteUbergraph_UI_Currency, CallFunc_IsValid_ReturnValue) == 0x000023, "Member 'UI_Currency_C_ExecuteUbergraph_UI_Currency::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Currency_C_ExecuteUbergraph_UI_Currency, K2Node_Select_Default_2) == 0x000024, "Member 'UI_Currency_C_ExecuteUbergraph_UI_Currency::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(UI_Currency_C_ExecuteUbergraph_UI_Currency, K2Node_Select_Default_3) == 0x000025, "Member 'UI_Currency_C_ExecuteUbergraph_UI_Currency::K2Node_Select_Default_3' has a wrong offset!");

// Function UI_Currency.UI_Currency_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct UI_Currency_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Currency_C_PreConstruct) == 0x000001, "Wrong alignment on UI_Currency_C_PreConstruct");
static_assert(sizeof(UI_Currency_C_PreConstruct) == 0x000001, "Wrong size on UI_Currency_C_PreConstruct");
static_assert(offsetof(UI_Currency_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'UI_Currency_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function UI_Currency.UI_Currency_C.Set View Img Discount
// 0x0001 (0x0001 - 0x0000)
struct UI_Currency_C_Set_View_Img_Discount final
{
public:
	bool                                          View_Discount;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Currency_C_Set_View_Img_Discount) == 0x000001, "Wrong alignment on UI_Currency_C_Set_View_Img_Discount");
static_assert(sizeof(UI_Currency_C_Set_View_Img_Discount) == 0x000001, "Wrong size on UI_Currency_C_Set_View_Img_Discount");
static_assert(offsetof(UI_Currency_C_Set_View_Img_Discount, View_Discount) == 0x000000, "Member 'UI_Currency_C_Set_View_Img_Discount::View_Discount' has a wrong offset!");

// Function UI_Currency.UI_Currency_C.SetIconSize
// 0x0020 (0x0020 - 0x0000)
struct UI_Currency_C_SetIconSize final
{
public:
	double                                        CallFunc_BreakVector2D_X;                          // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x2];                                       // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SetWidthOverride_InWidthOverride_ImplicitCast; // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetHeightOverride_InHeightOverride_ImplicitCast; // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Currency_C_SetIconSize) == 0x000008, "Wrong alignment on UI_Currency_C_SetIconSize");
static_assert(sizeof(UI_Currency_C_SetIconSize) == 0x000020, "Wrong size on UI_Currency_C_SetIconSize");
static_assert(offsetof(UI_Currency_C_SetIconSize, CallFunc_BreakVector2D_X) == 0x000000, "Member 'UI_Currency_C_SetIconSize::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(UI_Currency_C_SetIconSize, CallFunc_BreakVector2D_Y) == 0x000008, "Member 'UI_Currency_C_SetIconSize::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(UI_Currency_C_SetIconSize, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000010, "Member 'UI_Currency_C_SetIconSize::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Currency_C_SetIconSize, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x000011, "Member 'UI_Currency_C_SetIconSize::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_Currency_C_SetIconSize, CallFunc_SetWidthOverride_InWidthOverride_ImplicitCast) == 0x000014, "Member 'UI_Currency_C_SetIconSize::CallFunc_SetWidthOverride_InWidthOverride_ImplicitCast' has a wrong offset!");
static_assert(offsetof(UI_Currency_C_SetIconSize, CallFunc_SetHeightOverride_InHeightOverride_ImplicitCast) == 0x000018, "Member 'UI_Currency_C_SetIconSize::CallFunc_SetHeightOverride_InHeightOverride_ImplicitCast' has a wrong offset!");

// Function UI_Currency.UI_Currency_C.SetTextColor
// 0x002C (0x002C - 0x0000)
struct UI_Currency_C_SetTextColor final
{
public:
	bool                                          Enough;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0004(0x0014)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x0018(0x0014)()
};
static_assert(alignof(UI_Currency_C_SetTextColor) == 0x000004, "Wrong alignment on UI_Currency_C_SetTextColor");
static_assert(sizeof(UI_Currency_C_SetTextColor) == 0x00002C, "Wrong size on UI_Currency_C_SetTextColor");
static_assert(offsetof(UI_Currency_C_SetTextColor, Enough) == 0x000000, "Member 'UI_Currency_C_SetTextColor::Enough' has a wrong offset!");
static_assert(offsetof(UI_Currency_C_SetTextColor, K2Node_MakeStruct_SlateColor) == 0x000004, "Member 'UI_Currency_C_SetTextColor::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(UI_Currency_C_SetTextColor, K2Node_MakeStruct_SlateColor_1) == 0x000018, "Member 'UI_Currency_C_SetTextColor::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");

}

