#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_EquipmentItemDetails

#include "Basic.hpp"

#include "M1_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "M1Data_structs.hpp"
#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function UI_EquipmentItemDetails.UI_EquipmentItemDetails_C.BP_SetDamageAdvantageType
// 0x0001 (0x0001 - 0x0000)
struct UI_EquipmentItemDetails_C_BP_SetDamageAdvantageType final
{
public:
	EM1DamageAdvantageType                        InDamageAdvantageType;                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_EquipmentItemDetails_C_BP_SetDamageAdvantageType) == 0x000001, "Wrong alignment on UI_EquipmentItemDetails_C_BP_SetDamageAdvantageType");
static_assert(sizeof(UI_EquipmentItemDetails_C_BP_SetDamageAdvantageType) == 0x000001, "Wrong size on UI_EquipmentItemDetails_C_BP_SetDamageAdvantageType");
static_assert(offsetof(UI_EquipmentItemDetails_C_BP_SetDamageAdvantageType, InDamageAdvantageType) == 0x000000, "Member 'UI_EquipmentItemDetails_C_BP_SetDamageAdvantageType::InDamageAdvantageType' has a wrong offset!");

// Function UI_EquipmentItemDetails.UI_EquipmentItemDetails_C.BP_SetDiffStatValue
// 0x0002 (0x0002 - 0x0000)
struct UI_EquipmentItemDetails_C_BP_SetDiffStatValue final
{
public:
	bool                                          bIsZero;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bPositiveNum;                                      // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_EquipmentItemDetails_C_BP_SetDiffStatValue) == 0x000001, "Wrong alignment on UI_EquipmentItemDetails_C_BP_SetDiffStatValue");
static_assert(sizeof(UI_EquipmentItemDetails_C_BP_SetDiffStatValue) == 0x000002, "Wrong size on UI_EquipmentItemDetails_C_BP_SetDiffStatValue");
static_assert(offsetof(UI_EquipmentItemDetails_C_BP_SetDiffStatValue, bIsZero) == 0x000000, "Member 'UI_EquipmentItemDetails_C_BP_SetDiffStatValue::bIsZero' has a wrong offset!");
static_assert(offsetof(UI_EquipmentItemDetails_C_BP_SetDiffStatValue, bPositiveNum) == 0x000001, "Member 'UI_EquipmentItemDetails_C_BP_SetDiffStatValue::bPositiveNum' has a wrong offset!");

// Function UI_EquipmentItemDetails.UI_EquipmentItemDetails_C.BP_SetItemTier
// 0x0001 (0x0001 - 0x0000)
struct UI_EquipmentItemDetails_C_BP_SetItemTier final
{
public:
	EM1ItemTierType                               InItemTier;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_EquipmentItemDetails_C_BP_SetItemTier) == 0x000001, "Wrong alignment on UI_EquipmentItemDetails_C_BP_SetItemTier");
static_assert(sizeof(UI_EquipmentItemDetails_C_BP_SetItemTier) == 0x000001, "Wrong size on UI_EquipmentItemDetails_C_BP_SetItemTier");
static_assert(offsetof(UI_EquipmentItemDetails_C_BP_SetItemTier, InItemTier) == 0x000000, "Member 'UI_EquipmentItemDetails_C_BP_SetItemTier::InItemTier' has a wrong offset!");

// Function UI_EquipmentItemDetails.UI_EquipmentItemDetails_C.BP_SetRoundsType
// 0x0001 (0x0001 - 0x0000)
struct UI_EquipmentItemDetails_C_BP_SetRoundsType final
{
public:
	EM1RoundsType                                 InRoundType;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_EquipmentItemDetails_C_BP_SetRoundsType) == 0x000001, "Wrong alignment on UI_EquipmentItemDetails_C_BP_SetRoundsType");
static_assert(sizeof(UI_EquipmentItemDetails_C_BP_SetRoundsType) == 0x000001, "Wrong size on UI_EquipmentItemDetails_C_BP_SetRoundsType");
static_assert(offsetof(UI_EquipmentItemDetails_C_BP_SetRoundsType, InRoundType) == 0x000000, "Member 'UI_EquipmentItemDetails_C_BP_SetRoundsType::InRoundType' has a wrong offset!");

// Function UI_EquipmentItemDetails.UI_EquipmentItemDetails_C.ExecuteUbergraph_UI_EquipmentItemDetails
// 0x0058 (0x0058 - 0x0000)
struct UI_EquipmentItemDetails_C_ExecuteUbergraph_UI_EquipmentItemDetails final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EM1DamageAdvantageType                        Temp_byte_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UM1UIData*                              K2Node_Event_InData;                               // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsZero;                              // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bPositiveNum;                         // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EM1WidgetAnimDirection                        K2Node_Event_InDirection;                          // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EM1RoundsType                                 K2Node_Event_InRoundType;                          // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayUIAnimation_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EM1ItemTierType                               K2Node_Event_InItemTier;                           // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22[0x2];                                       // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_Get_UI_TierColor_Base_TierColor;          // 0x0024(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0034(0x0014)()
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EM1DamageAdvantageType                        K2Node_Event_InDamageAdvantageType;                // 0x004B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                K2Node_Select_Default_1;                           // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_EquipmentItemDetails_C_ExecuteUbergraph_UI_EquipmentItemDetails) == 0x000008, "Wrong alignment on UI_EquipmentItemDetails_C_ExecuteUbergraph_UI_EquipmentItemDetails");
static_assert(sizeof(UI_EquipmentItemDetails_C_ExecuteUbergraph_UI_EquipmentItemDetails) == 0x000058, "Wrong size on UI_EquipmentItemDetails_C_ExecuteUbergraph_UI_EquipmentItemDetails");
static_assert(offsetof(UI_EquipmentItemDetails_C_ExecuteUbergraph_UI_EquipmentItemDetails, EntryPoint) == 0x000000, "Member 'UI_EquipmentItemDetails_C_ExecuteUbergraph_UI_EquipmentItemDetails::EntryPoint' has a wrong offset!");
static_assert(offsetof(UI_EquipmentItemDetails_C_ExecuteUbergraph_UI_EquipmentItemDetails, Temp_byte_Variable) == 0x000004, "Member 'UI_EquipmentItemDetails_C_ExecuteUbergraph_UI_EquipmentItemDetails::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(UI_EquipmentItemDetails_C_ExecuteUbergraph_UI_EquipmentItemDetails, K2Node_Event_InData) == 0x000008, "Member 'UI_EquipmentItemDetails_C_ExecuteUbergraph_UI_EquipmentItemDetails::K2Node_Event_InData' has a wrong offset!");
static_assert(offsetof(UI_EquipmentItemDetails_C_ExecuteUbergraph_UI_EquipmentItemDetails, K2Node_Event_bIsZero) == 0x000010, "Member 'UI_EquipmentItemDetails_C_ExecuteUbergraph_UI_EquipmentItemDetails::K2Node_Event_bIsZero' has a wrong offset!");
static_assert(offsetof(UI_EquipmentItemDetails_C_ExecuteUbergraph_UI_EquipmentItemDetails, K2Node_Event_bPositiveNum) == 0x000011, "Member 'UI_EquipmentItemDetails_C_ExecuteUbergraph_UI_EquipmentItemDetails::K2Node_Event_bPositiveNum' has a wrong offset!");
static_assert(offsetof(UI_EquipmentItemDetails_C_ExecuteUbergraph_UI_EquipmentItemDetails, Temp_byte_Variable_1) == 0x000012, "Member 'UI_EquipmentItemDetails_C_ExecuteUbergraph_UI_EquipmentItemDetails::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_EquipmentItemDetails_C_ExecuteUbergraph_UI_EquipmentItemDetails, K2Node_Event_InDirection) == 0x000013, "Member 'UI_EquipmentItemDetails_C_ExecuteUbergraph_UI_EquipmentItemDetails::K2Node_Event_InDirection' has a wrong offset!");
static_assert(offsetof(UI_EquipmentItemDetails_C_ExecuteUbergraph_UI_EquipmentItemDetails, K2Node_Event_InRoundType) == 0x000014, "Member 'UI_EquipmentItemDetails_C_ExecuteUbergraph_UI_EquipmentItemDetails::K2Node_Event_InRoundType' has a wrong offset!");
static_assert(offsetof(UI_EquipmentItemDetails_C_ExecuteUbergraph_UI_EquipmentItemDetails, CallFunc_PlayUIAnimation_ReturnValue) == 0x000018, "Member 'UI_EquipmentItemDetails_C_ExecuteUbergraph_UI_EquipmentItemDetails::CallFunc_PlayUIAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_EquipmentItemDetails_C_ExecuteUbergraph_UI_EquipmentItemDetails, K2Node_Event_InItemTier) == 0x000020, "Member 'UI_EquipmentItemDetails_C_ExecuteUbergraph_UI_EquipmentItemDetails::K2Node_Event_InItemTier' has a wrong offset!");
static_assert(offsetof(UI_EquipmentItemDetails_C_ExecuteUbergraph_UI_EquipmentItemDetails, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000021, "Member 'UI_EquipmentItemDetails_C_ExecuteUbergraph_UI_EquipmentItemDetails::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_EquipmentItemDetails_C_ExecuteUbergraph_UI_EquipmentItemDetails, CallFunc_Get_UI_TierColor_Base_TierColor) == 0x000024, "Member 'UI_EquipmentItemDetails_C_ExecuteUbergraph_UI_EquipmentItemDetails::CallFunc_Get_UI_TierColor_Base_TierColor' has a wrong offset!");
static_assert(offsetof(UI_EquipmentItemDetails_C_ExecuteUbergraph_UI_EquipmentItemDetails, K2Node_MakeStruct_SlateColor) == 0x000034, "Member 'UI_EquipmentItemDetails_C_ExecuteUbergraph_UI_EquipmentItemDetails::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(UI_EquipmentItemDetails_C_ExecuteUbergraph_UI_EquipmentItemDetails, Temp_byte_Variable_2) == 0x000048, "Member 'UI_EquipmentItemDetails_C_ExecuteUbergraph_UI_EquipmentItemDetails::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_EquipmentItemDetails_C_ExecuteUbergraph_UI_EquipmentItemDetails, Temp_bool_Variable) == 0x000049, "Member 'UI_EquipmentItemDetails_C_ExecuteUbergraph_UI_EquipmentItemDetails::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UI_EquipmentItemDetails_C_ExecuteUbergraph_UI_EquipmentItemDetails, K2Node_Select_Default) == 0x00004A, "Member 'UI_EquipmentItemDetails_C_ExecuteUbergraph_UI_EquipmentItemDetails::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UI_EquipmentItemDetails_C_ExecuteUbergraph_UI_EquipmentItemDetails, K2Node_Event_InDamageAdvantageType) == 0x00004B, "Member 'UI_EquipmentItemDetails_C_ExecuteUbergraph_UI_EquipmentItemDetails::K2Node_Event_InDamageAdvantageType' has a wrong offset!");
static_assert(offsetof(UI_EquipmentItemDetails_C_ExecuteUbergraph_UI_EquipmentItemDetails, K2Node_Select_Default_1) == 0x000050, "Member 'UI_EquipmentItemDetails_C_ExecuteUbergraph_UI_EquipmentItemDetails::K2Node_Select_Default_1' has a wrong offset!");

// Function UI_EquipmentItemDetails.UI_EquipmentItemDetails_C.OnEventWidgetOpen
// 0x0001 (0x0001 - 0x0000)
struct UI_EquipmentItemDetails_C_OnEventWidgetOpen final
{
public:
	EM1WidgetAnimDirection                        InDirection;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_EquipmentItemDetails_C_OnEventWidgetOpen) == 0x000001, "Wrong alignment on UI_EquipmentItemDetails_C_OnEventWidgetOpen");
static_assert(sizeof(UI_EquipmentItemDetails_C_OnEventWidgetOpen) == 0x000001, "Wrong size on UI_EquipmentItemDetails_C_OnEventWidgetOpen");
static_assert(offsetof(UI_EquipmentItemDetails_C_OnEventWidgetOpen, InDirection) == 0x000000, "Member 'UI_EquipmentItemDetails_C_OnEventWidgetOpen::InDirection' has a wrong offset!");

// Function UI_EquipmentItemDetails.UI_EquipmentItemDetails_C.SetDataImpl
// 0x0008 (0x0008 - 0x0000)
struct UI_EquipmentItemDetails_C_SetDataImpl final
{
public:
	class UM1UIData*                              InData;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_EquipmentItemDetails_C_SetDataImpl) == 0x000008, "Wrong alignment on UI_EquipmentItemDetails_C_SetDataImpl");
static_assert(sizeof(UI_EquipmentItemDetails_C_SetDataImpl) == 0x000008, "Wrong size on UI_EquipmentItemDetails_C_SetDataImpl");
static_assert(offsetof(UI_EquipmentItemDetails_C_SetDataImpl, InData) == 0x000000, "Member 'UI_EquipmentItemDetails_C_SetDataImpl::InData' has a wrong offset!");

}

