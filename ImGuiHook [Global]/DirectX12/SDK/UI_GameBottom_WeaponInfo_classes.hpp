#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_GameBottom_WeaponInfo

#include "Basic.hpp"

#include "M1_structs.hpp"
#include "M1_classes.hpp"
#include "Engine_structs.hpp"
#include "M1Data_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass UI_GameBottom_WeaponInfo.UI_GameBottom_WeaponInfo_C
// 0x0098 (0x0838 - 0x07A0)
class UUI_GameBottom_WeaponInfo_C final : public UM1UIGameBottom_WeaponSlotInfo
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x07A0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       UIAnim_Override;                                   // 0x07A8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       UIAnim_Active;                                     // 0x07B0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       UIAnim_Change;                                     // 0x07B8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       UIAnim_Open;                                       // 0x07C0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 Gain_Bg;                                           // 0x07C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Icon_Infinity;                                     // 0x07D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_RoundsIcon;                                  // 0x07D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_WeaponStat;                                  // 0x07E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Slot_Image1;                                       // 0x07E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Slot_Image2;                                       // 0x07F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Slot_Image3;                                       // 0x07F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_Deco_TitleLine_04_Hor_C*            UI_Deco_TitleLine_04_Hor;                          // 0x0800(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_Deco_TitleLine_04_Hor_C*            UI_Deco_TitleLine_04_Hor_1;                        // 0x0808(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_Deco_TitleLine_04_Hor_C*            UI_Deco_TitleLine_04_Hor_2;                        // 0x0810(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        WidgetSwitcher_0;                                  // 0x0818(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UM1WidgetSwitcher*                      WS_SlotNum_Main;                                   // 0x0820(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FLinearColor                           In_Color_and_Opacity;                              // 0x0828(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void BP_SetActive(bool bActive, bool bWithAltWeapon);
	void BP_SetRoundsIcon(EM1RoundsType InRoundType);
	void BP_SetSlotNumber(EM1EquipmentSlotType InSlotType);
	void BP_SetWeaponStatIcon(int32 InIndex);
	void Construct();
	void ExecuteUbergraph_UI_GameBottom_WeaponInfo(int32 EntryPoint);
	void OnEventWidgetOpen(EM1WidgetAnimDirection InDirection);
	void PlayAkAudio(class UAkAudioEvent* AkEvent);
	void PreConstruct(bool IsDesignTime);
	void SequenceEvent__ENTRYPOINTUI_GameBottom_WeaponInfo();
	void SetActive(bool bActive, bool bWithAltWeapon);
	void Show_WeaponSlot_Image(int32 InIndex);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"UI_GameBottom_WeaponInfo_C">();
	}
	static class UUI_GameBottom_WeaponInfo_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUI_GameBottom_WeaponInfo_C>();
	}
};
static_assert(alignof(UUI_GameBottom_WeaponInfo_C) == 0x000008, "Wrong alignment on UUI_GameBottom_WeaponInfo_C");
static_assert(sizeof(UUI_GameBottom_WeaponInfo_C) == 0x000838, "Wrong size on UUI_GameBottom_WeaponInfo_C");
static_assert(offsetof(UUI_GameBottom_WeaponInfo_C, UberGraphFrame) == 0x0007A0, "Member 'UUI_GameBottom_WeaponInfo_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UUI_GameBottom_WeaponInfo_C, UIAnim_Override) == 0x0007A8, "Member 'UUI_GameBottom_WeaponInfo_C::UIAnim_Override' has a wrong offset!");
static_assert(offsetof(UUI_GameBottom_WeaponInfo_C, UIAnim_Active) == 0x0007B0, "Member 'UUI_GameBottom_WeaponInfo_C::UIAnim_Active' has a wrong offset!");
static_assert(offsetof(UUI_GameBottom_WeaponInfo_C, UIAnim_Change) == 0x0007B8, "Member 'UUI_GameBottom_WeaponInfo_C::UIAnim_Change' has a wrong offset!");
static_assert(offsetof(UUI_GameBottom_WeaponInfo_C, UIAnim_Open) == 0x0007C0, "Member 'UUI_GameBottom_WeaponInfo_C::UIAnim_Open' has a wrong offset!");
static_assert(offsetof(UUI_GameBottom_WeaponInfo_C, Gain_Bg) == 0x0007C8, "Member 'UUI_GameBottom_WeaponInfo_C::Gain_Bg' has a wrong offset!");
static_assert(offsetof(UUI_GameBottom_WeaponInfo_C, Icon_Infinity) == 0x0007D0, "Member 'UUI_GameBottom_WeaponInfo_C::Icon_Infinity' has a wrong offset!");
static_assert(offsetof(UUI_GameBottom_WeaponInfo_C, Image_RoundsIcon) == 0x0007D8, "Member 'UUI_GameBottom_WeaponInfo_C::Image_RoundsIcon' has a wrong offset!");
static_assert(offsetof(UUI_GameBottom_WeaponInfo_C, Image_WeaponStat) == 0x0007E0, "Member 'UUI_GameBottom_WeaponInfo_C::Image_WeaponStat' has a wrong offset!");
static_assert(offsetof(UUI_GameBottom_WeaponInfo_C, Slot_Image1) == 0x0007E8, "Member 'UUI_GameBottom_WeaponInfo_C::Slot_Image1' has a wrong offset!");
static_assert(offsetof(UUI_GameBottom_WeaponInfo_C, Slot_Image2) == 0x0007F0, "Member 'UUI_GameBottom_WeaponInfo_C::Slot_Image2' has a wrong offset!");
static_assert(offsetof(UUI_GameBottom_WeaponInfo_C, Slot_Image3) == 0x0007F8, "Member 'UUI_GameBottom_WeaponInfo_C::Slot_Image3' has a wrong offset!");
static_assert(offsetof(UUI_GameBottom_WeaponInfo_C, UI_Deco_TitleLine_04_Hor) == 0x000800, "Member 'UUI_GameBottom_WeaponInfo_C::UI_Deco_TitleLine_04_Hor' has a wrong offset!");
static_assert(offsetof(UUI_GameBottom_WeaponInfo_C, UI_Deco_TitleLine_04_Hor_1) == 0x000808, "Member 'UUI_GameBottom_WeaponInfo_C::UI_Deco_TitleLine_04_Hor_1' has a wrong offset!");
static_assert(offsetof(UUI_GameBottom_WeaponInfo_C, UI_Deco_TitleLine_04_Hor_2) == 0x000810, "Member 'UUI_GameBottom_WeaponInfo_C::UI_Deco_TitleLine_04_Hor_2' has a wrong offset!");
static_assert(offsetof(UUI_GameBottom_WeaponInfo_C, WidgetSwitcher_0) == 0x000818, "Member 'UUI_GameBottom_WeaponInfo_C::WidgetSwitcher_0' has a wrong offset!");
static_assert(offsetof(UUI_GameBottom_WeaponInfo_C, WS_SlotNum_Main) == 0x000820, "Member 'UUI_GameBottom_WeaponInfo_C::WS_SlotNum_Main' has a wrong offset!");
static_assert(offsetof(UUI_GameBottom_WeaponInfo_C, In_Color_and_Opacity) == 0x000828, "Member 'UUI_GameBottom_WeaponInfo_C::In_Color_and_Opacity' has a wrong offset!");

}

