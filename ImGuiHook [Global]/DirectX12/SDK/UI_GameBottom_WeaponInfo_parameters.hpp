#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_GameBottom_WeaponInfo

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "M1Data_structs.hpp"
#include "M1_structs.hpp"


namespace SDK::Params
{

// Function UI_GameBottom_WeaponInfo.UI_GameBottom_WeaponInfo_C.BP_SetActive
// 0x0002 (0x0002 - 0x0000)
struct UI_GameBottom_WeaponInfo_C_BP_SetActive final
{
public:
	bool                                          bActive;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bWithAltWeapon;                                    // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_GameBottom_WeaponInfo_C_BP_SetActive) == 0x000001, "Wrong alignment on UI_GameBottom_WeaponInfo_C_BP_SetActive");
static_assert(sizeof(UI_GameBottom_WeaponInfo_C_BP_SetActive) == 0x000002, "Wrong size on UI_GameBottom_WeaponInfo_C_BP_SetActive");
static_assert(offsetof(UI_GameBottom_WeaponInfo_C_BP_SetActive, bActive) == 0x000000, "Member 'UI_GameBottom_WeaponInfo_C_BP_SetActive::bActive' has a wrong offset!");
static_assert(offsetof(UI_GameBottom_WeaponInfo_C_BP_SetActive, bWithAltWeapon) == 0x000001, "Member 'UI_GameBottom_WeaponInfo_C_BP_SetActive::bWithAltWeapon' has a wrong offset!");

// Function UI_GameBottom_WeaponInfo.UI_GameBottom_WeaponInfo_C.BP_SetRoundsIcon
// 0x0001 (0x0001 - 0x0000)
struct UI_GameBottom_WeaponInfo_C_BP_SetRoundsIcon final
{
public:
	EM1RoundsType                                 InRoundType;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_GameBottom_WeaponInfo_C_BP_SetRoundsIcon) == 0x000001, "Wrong alignment on UI_GameBottom_WeaponInfo_C_BP_SetRoundsIcon");
static_assert(sizeof(UI_GameBottom_WeaponInfo_C_BP_SetRoundsIcon) == 0x000001, "Wrong size on UI_GameBottom_WeaponInfo_C_BP_SetRoundsIcon");
static_assert(offsetof(UI_GameBottom_WeaponInfo_C_BP_SetRoundsIcon, InRoundType) == 0x000000, "Member 'UI_GameBottom_WeaponInfo_C_BP_SetRoundsIcon::InRoundType' has a wrong offset!");

// Function UI_GameBottom_WeaponInfo.UI_GameBottom_WeaponInfo_C.BP_SetSlotNumber
// 0x0001 (0x0001 - 0x0000)
struct UI_GameBottom_WeaponInfo_C_BP_SetSlotNumber final
{
public:
	EM1EquipmentSlotType                          InSlotType;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_GameBottom_WeaponInfo_C_BP_SetSlotNumber) == 0x000001, "Wrong alignment on UI_GameBottom_WeaponInfo_C_BP_SetSlotNumber");
static_assert(sizeof(UI_GameBottom_WeaponInfo_C_BP_SetSlotNumber) == 0x000001, "Wrong size on UI_GameBottom_WeaponInfo_C_BP_SetSlotNumber");
static_assert(offsetof(UI_GameBottom_WeaponInfo_C_BP_SetSlotNumber, InSlotType) == 0x000000, "Member 'UI_GameBottom_WeaponInfo_C_BP_SetSlotNumber::InSlotType' has a wrong offset!");

// Function UI_GameBottom_WeaponInfo.UI_GameBottom_WeaponInfo_C.BP_SetWeaponStatIcon
// 0x0004 (0x0004 - 0x0000)
struct UI_GameBottom_WeaponInfo_C_BP_SetWeaponStatIcon final
{
public:
	int32                                         InIndex;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_GameBottom_WeaponInfo_C_BP_SetWeaponStatIcon) == 0x000004, "Wrong alignment on UI_GameBottom_WeaponInfo_C_BP_SetWeaponStatIcon");
static_assert(sizeof(UI_GameBottom_WeaponInfo_C_BP_SetWeaponStatIcon) == 0x000004, "Wrong size on UI_GameBottom_WeaponInfo_C_BP_SetWeaponStatIcon");
static_assert(offsetof(UI_GameBottom_WeaponInfo_C_BP_SetWeaponStatIcon, InIndex) == 0x000000, "Member 'UI_GameBottom_WeaponInfo_C_BP_SetWeaponStatIcon::InIndex' has a wrong offset!");

// Function UI_GameBottom_WeaponInfo.UI_GameBottom_WeaponInfo_C.ExecuteUbergraph_UI_GameBottom_WeaponInfo
// 0x0140 (0x0140 - 0x0000)
struct UI_GameBottom_WeaponInfo_C_ExecuteUbergraph_UI_GameBottom_WeaponInfo final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_InIndex;                              // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable;                              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_1;                            // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_2;                            // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EM1RoundsType                                 Temp_byte_Variable;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0024(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x0034(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_2;                            // 0x0044(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_3;                            // 0x0054(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_4;                            // 0x0064(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EM1EquipmentSlotType                          Temp_byte_Variable_1;                              // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_75[0x3];                                       // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_4;                               // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_5;                               // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_6;                               // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_7;                               // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_8;                               // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_9;                               // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_10;                              // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_11;                              // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_12;                              // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_13;                              // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_3;                            // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_4;                            // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_5;                            // 0x00C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_6;                            // 0x00C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             K2Node_Select_Default;                             // 0x00D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EM1RoundsType                                 K2Node_Event_InRoundType;                          // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E2[0x2];                                       // 0x00E2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default_1;                           // 0x00E4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F4[0x4];                                       // 0x00F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             Temp_object_Variable_7;                            // 0x00F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAkAudioEvent*                          K2Node_CustomEvent_AkEvent;                        // 0x0100(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EM1EquipmentSlotType                          K2Node_Event_InSlotType;                           // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0109(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10A[0x2];                                      // 0x010A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default_2;                           // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EM1WidgetAnimDirection                        K2Node_Event_InDirection;                          // 0x0111(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_112[0x6];                                      // 0x0112(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayUIAnimation_ReturnValue;              // 0x0118(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             Temp_object_Variable_8;                            // 0x0120(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EM1RoundsType                                 Temp_byte_Variable_2;                              // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_129[0x7];                                      // 0x0129(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             K2Node_Select_Default_3;                           // 0x0130(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bActive;                              // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bWithAltWeapon;                       // 0x0139(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_GameBottom_WeaponInfo_C_ExecuteUbergraph_UI_GameBottom_WeaponInfo) == 0x000008, "Wrong alignment on UI_GameBottom_WeaponInfo_C_ExecuteUbergraph_UI_GameBottom_WeaponInfo");
static_assert(sizeof(UI_GameBottom_WeaponInfo_C_ExecuteUbergraph_UI_GameBottom_WeaponInfo) == 0x000140, "Wrong size on UI_GameBottom_WeaponInfo_C_ExecuteUbergraph_UI_GameBottom_WeaponInfo");
static_assert(offsetof(UI_GameBottom_WeaponInfo_C_ExecuteUbergraph_UI_GameBottom_WeaponInfo, EntryPoint) == 0x000000, "Member 'UI_GameBottom_WeaponInfo_C_ExecuteUbergraph_UI_GameBottom_WeaponInfo::EntryPoint' has a wrong offset!");
static_assert(offsetof(UI_GameBottom_WeaponInfo_C_ExecuteUbergraph_UI_GameBottom_WeaponInfo, K2Node_Event_InIndex) == 0x000004, "Member 'UI_GameBottom_WeaponInfo_C_ExecuteUbergraph_UI_GameBottom_WeaponInfo::K2Node_Event_InIndex' has a wrong offset!");
static_assert(offsetof(UI_GameBottom_WeaponInfo_C_ExecuteUbergraph_UI_GameBottom_WeaponInfo, Temp_object_Variable) == 0x000008, "Member 'UI_GameBottom_WeaponInfo_C_ExecuteUbergraph_UI_GameBottom_WeaponInfo::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(UI_GameBottom_WeaponInfo_C_ExecuteUbergraph_UI_GameBottom_WeaponInfo, Temp_object_Variable_1) == 0x000010, "Member 'UI_GameBottom_WeaponInfo_C_ExecuteUbergraph_UI_GameBottom_WeaponInfo::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_GameBottom_WeaponInfo_C_ExecuteUbergraph_UI_GameBottom_WeaponInfo, Temp_object_Variable_2) == 0x000018, "Member 'UI_GameBottom_WeaponInfo_C_ExecuteUbergraph_UI_GameBottom_WeaponInfo::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_GameBottom_WeaponInfo_C_ExecuteUbergraph_UI_GameBottom_WeaponInfo, Temp_byte_Variable) == 0x000020, "Member 'UI_GameBottom_WeaponInfo_C_ExecuteUbergraph_UI_GameBottom_WeaponInfo::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(UI_GameBottom_WeaponInfo_C_ExecuteUbergraph_UI_GameBottom_WeaponInfo, Temp_struct_Variable) == 0x000024, "Member 'UI_GameBottom_WeaponInfo_C_ExecuteUbergraph_UI_GameBottom_WeaponInfo::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(UI_GameBottom_WeaponInfo_C_ExecuteUbergraph_UI_GameBottom_WeaponInfo, Temp_struct_Variable_1) == 0x000034, "Member 'UI_GameBottom_WeaponInfo_C_ExecuteUbergraph_UI_GameBottom_WeaponInfo::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_GameBottom_WeaponInfo_C_ExecuteUbergraph_UI_GameBottom_WeaponInfo, Temp_struct_Variable_2) == 0x000044, "Member 'UI_GameBottom_WeaponInfo_C_ExecuteUbergraph_UI_GameBottom_WeaponInfo::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_GameBottom_WeaponInfo_C_ExecuteUbergraph_UI_GameBottom_WeaponInfo, Temp_struct_Variable_3) == 0x000054, "Member 'UI_GameBottom_WeaponInfo_C_ExecuteUbergraph_UI_GameBottom_WeaponInfo::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(UI_GameBottom_WeaponInfo_C_ExecuteUbergraph_UI_GameBottom_WeaponInfo, Temp_struct_Variable_4) == 0x000064, "Member 'UI_GameBottom_WeaponInfo_C_ExecuteUbergraph_UI_GameBottom_WeaponInfo::Temp_struct_Variable_4' has a wrong offset!");
static_assert(offsetof(UI_GameBottom_WeaponInfo_C_ExecuteUbergraph_UI_GameBottom_WeaponInfo, Temp_byte_Variable_1) == 0x000074, "Member 'UI_GameBottom_WeaponInfo_C_ExecuteUbergraph_UI_GameBottom_WeaponInfo::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_GameBottom_WeaponInfo_C_ExecuteUbergraph_UI_GameBottom_WeaponInfo, Temp_int_Variable) == 0x000078, "Member 'UI_GameBottom_WeaponInfo_C_ExecuteUbergraph_UI_GameBottom_WeaponInfo::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(UI_GameBottom_WeaponInfo_C_ExecuteUbergraph_UI_GameBottom_WeaponInfo, Temp_int_Variable_1) == 0x00007C, "Member 'UI_GameBottom_WeaponInfo_C_ExecuteUbergraph_UI_GameBottom_WeaponInfo::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_GameBottom_WeaponInfo_C_ExecuteUbergraph_UI_GameBottom_WeaponInfo, Temp_int_Variable_2) == 0x000080, "Member 'UI_GameBottom_WeaponInfo_C_ExecuteUbergraph_UI_GameBottom_WeaponInfo::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_GameBottom_WeaponInfo_C_ExecuteUbergraph_UI_GameBottom_WeaponInfo, Temp_int_Variable_3) == 0x000084, "Member 'UI_GameBottom_WeaponInfo_C_ExecuteUbergraph_UI_GameBottom_WeaponInfo::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(UI_GameBottom_WeaponInfo_C_ExecuteUbergraph_UI_GameBottom_WeaponInfo, Temp_int_Variable_4) == 0x000088, "Member 'UI_GameBottom_WeaponInfo_C_ExecuteUbergraph_UI_GameBottom_WeaponInfo::Temp_int_Variable_4' has a wrong offset!");
static_assert(offsetof(UI_GameBottom_WeaponInfo_C_ExecuteUbergraph_UI_GameBottom_WeaponInfo, Temp_int_Variable_5) == 0x00008C, "Member 'UI_GameBottom_WeaponInfo_C_ExecuteUbergraph_UI_GameBottom_WeaponInfo::Temp_int_Variable_5' has a wrong offset!");
static_assert(offsetof(UI_GameBottom_WeaponInfo_C_ExecuteUbergraph_UI_GameBottom_WeaponInfo, Temp_int_Variable_6) == 0x000090, "Member 'UI_GameBottom_WeaponInfo_C_ExecuteUbergraph_UI_GameBottom_WeaponInfo::Temp_int_Variable_6' has a wrong offset!");
static_assert(offsetof(UI_GameBottom_WeaponInfo_C_ExecuteUbergraph_UI_GameBottom_WeaponInfo, Temp_int_Variable_7) == 0x000094, "Member 'UI_GameBottom_WeaponInfo_C_ExecuteUbergraph_UI_GameBottom_WeaponInfo::Temp_int_Variable_7' has a wrong offset!");
static_assert(offsetof(UI_GameBottom_WeaponInfo_C_ExecuteUbergraph_UI_GameBottom_WeaponInfo, Temp_int_Variable_8) == 0x000098, "Member 'UI_GameBottom_WeaponInfo_C_ExecuteUbergraph_UI_GameBottom_WeaponInfo::Temp_int_Variable_8' has a wrong offset!");
static_assert(offsetof(UI_GameBottom_WeaponInfo_C_ExecuteUbergraph_UI_GameBottom_WeaponInfo, Temp_int_Variable_9) == 0x00009C, "Member 'UI_GameBottom_WeaponInfo_C_ExecuteUbergraph_UI_GameBottom_WeaponInfo::Temp_int_Variable_9' has a wrong offset!");
static_assert(offsetof(UI_GameBottom_WeaponInfo_C_ExecuteUbergraph_UI_GameBottom_WeaponInfo, Temp_int_Variable_10) == 0x0000A0, "Member 'UI_GameBottom_WeaponInfo_C_ExecuteUbergraph_UI_GameBottom_WeaponInfo::Temp_int_Variable_10' has a wrong offset!");
static_assert(offsetof(UI_GameBottom_WeaponInfo_C_ExecuteUbergraph_UI_GameBottom_WeaponInfo, Temp_int_Variable_11) == 0x0000A4, "Member 'UI_GameBottom_WeaponInfo_C_ExecuteUbergraph_UI_GameBottom_WeaponInfo::Temp_int_Variable_11' has a wrong offset!");
static_assert(offsetof(UI_GameBottom_WeaponInfo_C_ExecuteUbergraph_UI_GameBottom_WeaponInfo, Temp_int_Variable_12) == 0x0000A8, "Member 'UI_GameBottom_WeaponInfo_C_ExecuteUbergraph_UI_GameBottom_WeaponInfo::Temp_int_Variable_12' has a wrong offset!");
static_assert(offsetof(UI_GameBottom_WeaponInfo_C_ExecuteUbergraph_UI_GameBottom_WeaponInfo, Temp_int_Variable_13) == 0x0000AC, "Member 'UI_GameBottom_WeaponInfo_C_ExecuteUbergraph_UI_GameBottom_WeaponInfo::Temp_int_Variable_13' has a wrong offset!");
static_assert(offsetof(UI_GameBottom_WeaponInfo_C_ExecuteUbergraph_UI_GameBottom_WeaponInfo, Temp_object_Variable_3) == 0x0000B0, "Member 'UI_GameBottom_WeaponInfo_C_ExecuteUbergraph_UI_GameBottom_WeaponInfo::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(UI_GameBottom_WeaponInfo_C_ExecuteUbergraph_UI_GameBottom_WeaponInfo, Temp_object_Variable_4) == 0x0000B8, "Member 'UI_GameBottom_WeaponInfo_C_ExecuteUbergraph_UI_GameBottom_WeaponInfo::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(UI_GameBottom_WeaponInfo_C_ExecuteUbergraph_UI_GameBottom_WeaponInfo, Temp_object_Variable_5) == 0x0000C0, "Member 'UI_GameBottom_WeaponInfo_C_ExecuteUbergraph_UI_GameBottom_WeaponInfo::Temp_object_Variable_5' has a wrong offset!");
static_assert(offsetof(UI_GameBottom_WeaponInfo_C_ExecuteUbergraph_UI_GameBottom_WeaponInfo, Temp_object_Variable_6) == 0x0000C8, "Member 'UI_GameBottom_WeaponInfo_C_ExecuteUbergraph_UI_GameBottom_WeaponInfo::Temp_object_Variable_6' has a wrong offset!");
static_assert(offsetof(UI_GameBottom_WeaponInfo_C_ExecuteUbergraph_UI_GameBottom_WeaponInfo, K2Node_Event_IsDesignTime) == 0x0000D0, "Member 'UI_GameBottom_WeaponInfo_C_ExecuteUbergraph_UI_GameBottom_WeaponInfo::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(UI_GameBottom_WeaponInfo_C_ExecuteUbergraph_UI_GameBottom_WeaponInfo, K2Node_Select_Default) == 0x0000D8, "Member 'UI_GameBottom_WeaponInfo_C_ExecuteUbergraph_UI_GameBottom_WeaponInfo::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UI_GameBottom_WeaponInfo_C_ExecuteUbergraph_UI_GameBottom_WeaponInfo, K2Node_Event_InRoundType) == 0x0000E0, "Member 'UI_GameBottom_WeaponInfo_C_ExecuteUbergraph_UI_GameBottom_WeaponInfo::K2Node_Event_InRoundType' has a wrong offset!");
static_assert(offsetof(UI_GameBottom_WeaponInfo_C_ExecuteUbergraph_UI_GameBottom_WeaponInfo, K2Node_SwitchEnum_CmpSuccess) == 0x0000E1, "Member 'UI_GameBottom_WeaponInfo_C_ExecuteUbergraph_UI_GameBottom_WeaponInfo::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(UI_GameBottom_WeaponInfo_C_ExecuteUbergraph_UI_GameBottom_WeaponInfo, K2Node_Select_Default_1) == 0x0000E4, "Member 'UI_GameBottom_WeaponInfo_C_ExecuteUbergraph_UI_GameBottom_WeaponInfo::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(UI_GameBottom_WeaponInfo_C_ExecuteUbergraph_UI_GameBottom_WeaponInfo, Temp_object_Variable_7) == 0x0000F8, "Member 'UI_GameBottom_WeaponInfo_C_ExecuteUbergraph_UI_GameBottom_WeaponInfo::Temp_object_Variable_7' has a wrong offset!");
static_assert(offsetof(UI_GameBottom_WeaponInfo_C_ExecuteUbergraph_UI_GameBottom_WeaponInfo, K2Node_CustomEvent_AkEvent) == 0x000100, "Member 'UI_GameBottom_WeaponInfo_C_ExecuteUbergraph_UI_GameBottom_WeaponInfo::K2Node_CustomEvent_AkEvent' has a wrong offset!");
static_assert(offsetof(UI_GameBottom_WeaponInfo_C_ExecuteUbergraph_UI_GameBottom_WeaponInfo, K2Node_Event_InSlotType) == 0x000108, "Member 'UI_GameBottom_WeaponInfo_C_ExecuteUbergraph_UI_GameBottom_WeaponInfo::K2Node_Event_InSlotType' has a wrong offset!");
static_assert(offsetof(UI_GameBottom_WeaponInfo_C_ExecuteUbergraph_UI_GameBottom_WeaponInfo, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000109, "Member 'UI_GameBottom_WeaponInfo_C_ExecuteUbergraph_UI_GameBottom_WeaponInfo::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GameBottom_WeaponInfo_C_ExecuteUbergraph_UI_GameBottom_WeaponInfo, K2Node_Select_Default_2) == 0x00010C, "Member 'UI_GameBottom_WeaponInfo_C_ExecuteUbergraph_UI_GameBottom_WeaponInfo::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(UI_GameBottom_WeaponInfo_C_ExecuteUbergraph_UI_GameBottom_WeaponInfo, K2Node_SwitchEnum_CmpSuccess_1) == 0x000110, "Member 'UI_GameBottom_WeaponInfo_C_ExecuteUbergraph_UI_GameBottom_WeaponInfo::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(UI_GameBottom_WeaponInfo_C_ExecuteUbergraph_UI_GameBottom_WeaponInfo, K2Node_Event_InDirection) == 0x000111, "Member 'UI_GameBottom_WeaponInfo_C_ExecuteUbergraph_UI_GameBottom_WeaponInfo::K2Node_Event_InDirection' has a wrong offset!");
static_assert(offsetof(UI_GameBottom_WeaponInfo_C_ExecuteUbergraph_UI_GameBottom_WeaponInfo, CallFunc_PlayUIAnimation_ReturnValue) == 0x000118, "Member 'UI_GameBottom_WeaponInfo_C_ExecuteUbergraph_UI_GameBottom_WeaponInfo::CallFunc_PlayUIAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GameBottom_WeaponInfo_C_ExecuteUbergraph_UI_GameBottom_WeaponInfo, Temp_object_Variable_8) == 0x000120, "Member 'UI_GameBottom_WeaponInfo_C_ExecuteUbergraph_UI_GameBottom_WeaponInfo::Temp_object_Variable_8' has a wrong offset!");
static_assert(offsetof(UI_GameBottom_WeaponInfo_C_ExecuteUbergraph_UI_GameBottom_WeaponInfo, Temp_byte_Variable_2) == 0x000128, "Member 'UI_GameBottom_WeaponInfo_C_ExecuteUbergraph_UI_GameBottom_WeaponInfo::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_GameBottom_WeaponInfo_C_ExecuteUbergraph_UI_GameBottom_WeaponInfo, K2Node_Select_Default_3) == 0x000130, "Member 'UI_GameBottom_WeaponInfo_C_ExecuteUbergraph_UI_GameBottom_WeaponInfo::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(UI_GameBottom_WeaponInfo_C_ExecuteUbergraph_UI_GameBottom_WeaponInfo, K2Node_Event_bActive) == 0x000138, "Member 'UI_GameBottom_WeaponInfo_C_ExecuteUbergraph_UI_GameBottom_WeaponInfo::K2Node_Event_bActive' has a wrong offset!");
static_assert(offsetof(UI_GameBottom_WeaponInfo_C_ExecuteUbergraph_UI_GameBottom_WeaponInfo, K2Node_Event_bWithAltWeapon) == 0x000139, "Member 'UI_GameBottom_WeaponInfo_C_ExecuteUbergraph_UI_GameBottom_WeaponInfo::K2Node_Event_bWithAltWeapon' has a wrong offset!");

// Function UI_GameBottom_WeaponInfo.UI_GameBottom_WeaponInfo_C.OnEventWidgetOpen
// 0x0001 (0x0001 - 0x0000)
struct UI_GameBottom_WeaponInfo_C_OnEventWidgetOpen final
{
public:
	EM1WidgetAnimDirection                        InDirection;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_GameBottom_WeaponInfo_C_OnEventWidgetOpen) == 0x000001, "Wrong alignment on UI_GameBottom_WeaponInfo_C_OnEventWidgetOpen");
static_assert(sizeof(UI_GameBottom_WeaponInfo_C_OnEventWidgetOpen) == 0x000001, "Wrong size on UI_GameBottom_WeaponInfo_C_OnEventWidgetOpen");
static_assert(offsetof(UI_GameBottom_WeaponInfo_C_OnEventWidgetOpen, InDirection) == 0x000000, "Member 'UI_GameBottom_WeaponInfo_C_OnEventWidgetOpen::InDirection' has a wrong offset!");

// Function UI_GameBottom_WeaponInfo.UI_GameBottom_WeaponInfo_C.playAkAudio
// 0x0008 (0x0008 - 0x0000)
struct UI_GameBottom_WeaponInfo_C_PlayAkAudio final
{
public:
	class UAkAudioEvent*                          AkEvent;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_GameBottom_WeaponInfo_C_PlayAkAudio) == 0x000008, "Wrong alignment on UI_GameBottom_WeaponInfo_C_PlayAkAudio");
static_assert(sizeof(UI_GameBottom_WeaponInfo_C_PlayAkAudio) == 0x000008, "Wrong size on UI_GameBottom_WeaponInfo_C_PlayAkAudio");
static_assert(offsetof(UI_GameBottom_WeaponInfo_C_PlayAkAudio, AkEvent) == 0x000000, "Member 'UI_GameBottom_WeaponInfo_C_PlayAkAudio::AkEvent' has a wrong offset!");

// Function UI_GameBottom_WeaponInfo.UI_GameBottom_WeaponInfo_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct UI_GameBottom_WeaponInfo_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_GameBottom_WeaponInfo_C_PreConstruct) == 0x000001, "Wrong alignment on UI_GameBottom_WeaponInfo_C_PreConstruct");
static_assert(sizeof(UI_GameBottom_WeaponInfo_C_PreConstruct) == 0x000001, "Wrong size on UI_GameBottom_WeaponInfo_C_PreConstruct");
static_assert(offsetof(UI_GameBottom_WeaponInfo_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'UI_GameBottom_WeaponInfo_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function UI_GameBottom_WeaponInfo.UI_GameBottom_WeaponInfo_C.SetActive
// 0x0020 (0x0020 - 0x0000)
struct UI_GameBottom_WeaponInfo_C_SetActive final
{
public:
	bool                                          bActive;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bWithAltWeapon;                                    // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidgetAnimation*                       K2Node_Select_Default;                             // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue;         // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_GameBottom_WeaponInfo_C_SetActive) == 0x000008, "Wrong alignment on UI_GameBottom_WeaponInfo_C_SetActive");
static_assert(sizeof(UI_GameBottom_WeaponInfo_C_SetActive) == 0x000020, "Wrong size on UI_GameBottom_WeaponInfo_C_SetActive");
static_assert(offsetof(UI_GameBottom_WeaponInfo_C_SetActive, bActive) == 0x000000, "Member 'UI_GameBottom_WeaponInfo_C_SetActive::bActive' has a wrong offset!");
static_assert(offsetof(UI_GameBottom_WeaponInfo_C_SetActive, bWithAltWeapon) == 0x000001, "Member 'UI_GameBottom_WeaponInfo_C_SetActive::bWithAltWeapon' has a wrong offset!");
static_assert(offsetof(UI_GameBottom_WeaponInfo_C_SetActive, Temp_bool_Variable) == 0x000002, "Member 'UI_GameBottom_WeaponInfo_C_SetActive::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UI_GameBottom_WeaponInfo_C_SetActive, K2Node_Select_Default) == 0x000008, "Member 'UI_GameBottom_WeaponInfo_C_SetActive::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UI_GameBottom_WeaponInfo_C_SetActive, CallFunc_PlayAnimationForward_ReturnValue) == 0x000010, "Member 'UI_GameBottom_WeaponInfo_C_SetActive::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GameBottom_WeaponInfo_C_SetActive, CallFunc_PlayAnimationReverse_ReturnValue) == 0x000018, "Member 'UI_GameBottom_WeaponInfo_C_SetActive::CallFunc_PlayAnimationReverse_ReturnValue' has a wrong offset!");

// Function UI_GameBottom_WeaponInfo.UI_GameBottom_WeaponInfo_C.Show WeaponSlot Image
// 0x0058 (0x0058 - 0x0000)
struct UI_GameBottom_WeaponInfo_C_Show_WeaponSlot_Image final
{
public:
	int32                                         InIndex;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<double>                                TempAlphaValues;                                   // 0x0008(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<double>                                K2Node_MakeArray_Array;                            // 0x0028(0x0010)(ReferenceParm)
	double                                        Temp_real_Variable;                                // 0x0038(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SetRenderOpacity_InOpacity_ImplicitCast;  // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetRenderOpacity_InOpacity_ImplicitCast_1; // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetRenderOpacity_InOpacity_ImplicitCast_2; // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_GameBottom_WeaponInfo_C_Show_WeaponSlot_Image) == 0x000008, "Wrong alignment on UI_GameBottom_WeaponInfo_C_Show_WeaponSlot_Image");
static_assert(sizeof(UI_GameBottom_WeaponInfo_C_Show_WeaponSlot_Image) == 0x000058, "Wrong size on UI_GameBottom_WeaponInfo_C_Show_WeaponSlot_Image");
static_assert(offsetof(UI_GameBottom_WeaponInfo_C_Show_WeaponSlot_Image, InIndex) == 0x000000, "Member 'UI_GameBottom_WeaponInfo_C_Show_WeaponSlot_Image::InIndex' has a wrong offset!");
static_assert(offsetof(UI_GameBottom_WeaponInfo_C_Show_WeaponSlot_Image, TempAlphaValues) == 0x000008, "Member 'UI_GameBottom_WeaponInfo_C_Show_WeaponSlot_Image::TempAlphaValues' has a wrong offset!");
static_assert(offsetof(UI_GameBottom_WeaponInfo_C_Show_WeaponSlot_Image, Temp_int_Array_Index_Variable) == 0x000018, "Member 'UI_GameBottom_WeaponInfo_C_Show_WeaponSlot_Image::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(UI_GameBottom_WeaponInfo_C_Show_WeaponSlot_Image, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'UI_GameBottom_WeaponInfo_C_Show_WeaponSlot_Image::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(UI_GameBottom_WeaponInfo_C_Show_WeaponSlot_Image, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000020, "Member 'UI_GameBottom_WeaponInfo_C_Show_WeaponSlot_Image::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GameBottom_WeaponInfo_C_Show_WeaponSlot_Image, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member 'UI_GameBottom_WeaponInfo_C_Show_WeaponSlot_Image::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GameBottom_WeaponInfo_C_Show_WeaponSlot_Image, K2Node_MakeArray_Array) == 0x000028, "Member 'UI_GameBottom_WeaponInfo_C_Show_WeaponSlot_Image::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(UI_GameBottom_WeaponInfo_C_Show_WeaponSlot_Image, Temp_real_Variable) == 0x000038, "Member 'UI_GameBottom_WeaponInfo_C_Show_WeaponSlot_Image::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(UI_GameBottom_WeaponInfo_C_Show_WeaponSlot_Image, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'UI_GameBottom_WeaponInfo_C_Show_WeaponSlot_Image::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GameBottom_WeaponInfo_C_Show_WeaponSlot_Image, CallFunc_Less_IntInt_ReturnValue) == 0x000044, "Member 'UI_GameBottom_WeaponInfo_C_Show_WeaponSlot_Image::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GameBottom_WeaponInfo_C_Show_WeaponSlot_Image, CallFunc_SetRenderOpacity_InOpacity_ImplicitCast) == 0x000048, "Member 'UI_GameBottom_WeaponInfo_C_Show_WeaponSlot_Image::CallFunc_SetRenderOpacity_InOpacity_ImplicitCast' has a wrong offset!");
static_assert(offsetof(UI_GameBottom_WeaponInfo_C_Show_WeaponSlot_Image, CallFunc_SetRenderOpacity_InOpacity_ImplicitCast_1) == 0x00004C, "Member 'UI_GameBottom_WeaponInfo_C_Show_WeaponSlot_Image::CallFunc_SetRenderOpacity_InOpacity_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(UI_GameBottom_WeaponInfo_C_Show_WeaponSlot_Image, CallFunc_SetRenderOpacity_InOpacity_ImplicitCast_2) == 0x000050, "Member 'UI_GameBottom_WeaponInfo_C_Show_WeaponSlot_Image::CallFunc_SetRenderOpacity_InOpacity_ImplicitCast_2' has a wrong offset!");

}

