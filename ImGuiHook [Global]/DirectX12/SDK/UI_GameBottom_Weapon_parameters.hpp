#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_GameBottom_Weapon

#include "Basic.hpp"

#include "M1_structs.hpp"


namespace SDK::Params
{

// Function UI_GameBottom_Weapon.UI_GameBottom_Weapon_C.ExecuteUbergraph_UI_GameBottom_Weapon
// 0x0020 (0x0020 - 0x0000)
struct UI_GameBottom_Weapon_C_ExecuteUbergraph_UI_GameBottom_Weapon final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayUIAnimation_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAkAudioEvent*                          K2Node_CustomEvent_AkEvent;                        // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EM1WidgetAnimDirection                        K2Node_Event_InDirection;                          // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_GameBottom_Weapon_C_ExecuteUbergraph_UI_GameBottom_Weapon) == 0x000008, "Wrong alignment on UI_GameBottom_Weapon_C_ExecuteUbergraph_UI_GameBottom_Weapon");
static_assert(sizeof(UI_GameBottom_Weapon_C_ExecuteUbergraph_UI_GameBottom_Weapon) == 0x000020, "Wrong size on UI_GameBottom_Weapon_C_ExecuteUbergraph_UI_GameBottom_Weapon");
static_assert(offsetof(UI_GameBottom_Weapon_C_ExecuteUbergraph_UI_GameBottom_Weapon, EntryPoint) == 0x000000, "Member 'UI_GameBottom_Weapon_C_ExecuteUbergraph_UI_GameBottom_Weapon::EntryPoint' has a wrong offset!");
static_assert(offsetof(UI_GameBottom_Weapon_C_ExecuteUbergraph_UI_GameBottom_Weapon, CallFunc_PlayUIAnimation_ReturnValue) == 0x000008, "Member 'UI_GameBottom_Weapon_C_ExecuteUbergraph_UI_GameBottom_Weapon::CallFunc_PlayUIAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GameBottom_Weapon_C_ExecuteUbergraph_UI_GameBottom_Weapon, K2Node_CustomEvent_AkEvent) == 0x000010, "Member 'UI_GameBottom_Weapon_C_ExecuteUbergraph_UI_GameBottom_Weapon::K2Node_CustomEvent_AkEvent' has a wrong offset!");
static_assert(offsetof(UI_GameBottom_Weapon_C_ExecuteUbergraph_UI_GameBottom_Weapon, K2Node_Event_IsDesignTime) == 0x000018, "Member 'UI_GameBottom_Weapon_C_ExecuteUbergraph_UI_GameBottom_Weapon::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(UI_GameBottom_Weapon_C_ExecuteUbergraph_UI_GameBottom_Weapon, K2Node_Event_InDirection) == 0x000019, "Member 'UI_GameBottom_Weapon_C_ExecuteUbergraph_UI_GameBottom_Weapon::K2Node_Event_InDirection' has a wrong offset!");

// Function UI_GameBottom_Weapon.UI_GameBottom_Weapon_C.OnEventWidgetOpen
// 0x0001 (0x0001 - 0x0000)
struct UI_GameBottom_Weapon_C_OnEventWidgetOpen final
{
public:
	EM1WidgetAnimDirection                        InDirection;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_GameBottom_Weapon_C_OnEventWidgetOpen) == 0x000001, "Wrong alignment on UI_GameBottom_Weapon_C_OnEventWidgetOpen");
static_assert(sizeof(UI_GameBottom_Weapon_C_OnEventWidgetOpen) == 0x000001, "Wrong size on UI_GameBottom_Weapon_C_OnEventWidgetOpen");
static_assert(offsetof(UI_GameBottom_Weapon_C_OnEventWidgetOpen, InDirection) == 0x000000, "Member 'UI_GameBottom_Weapon_C_OnEventWidgetOpen::InDirection' has a wrong offset!");

// Function UI_GameBottom_Weapon.UI_GameBottom_Weapon_C.playAkAudio
// 0x0008 (0x0008 - 0x0000)
struct UI_GameBottom_Weapon_C_PlayAkAudio final
{
public:
	class UAkAudioEvent*                          AkEvent;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_GameBottom_Weapon_C_PlayAkAudio) == 0x000008, "Wrong alignment on UI_GameBottom_Weapon_C_PlayAkAudio");
static_assert(sizeof(UI_GameBottom_Weapon_C_PlayAkAudio) == 0x000008, "Wrong size on UI_GameBottom_Weapon_C_PlayAkAudio");
static_assert(offsetof(UI_GameBottom_Weapon_C_PlayAkAudio, AkEvent) == 0x000000, "Member 'UI_GameBottom_Weapon_C_PlayAkAudio::AkEvent' has a wrong offset!");

// Function UI_GameBottom_Weapon.UI_GameBottom_Weapon_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct UI_GameBottom_Weapon_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_GameBottom_Weapon_C_PreConstruct) == 0x000001, "Wrong alignment on UI_GameBottom_Weapon_C_PreConstruct");
static_assert(sizeof(UI_GameBottom_Weapon_C_PreConstruct) == 0x000001, "Wrong size on UI_GameBottom_Weapon_C_PreConstruct");
static_assert(offsetof(UI_GameBottom_Weapon_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'UI_GameBottom_Weapon_C_PreConstruct::IsDesignTime' has a wrong offset!");

}

