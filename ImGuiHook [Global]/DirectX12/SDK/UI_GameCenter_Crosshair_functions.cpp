#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_GameCenter_Crosshair

#include "Basic.hpp"

#include "UI_GameCenter_Crosshair_classes.hpp"
#include "UI_GameCenter_Crosshair_parameters.hpp"


namespace SDK
{

// Function UI_GameCenter_Crosshair.UI_GameCenter_Crosshair_C.ApplyZoomState
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    InZoomed                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_GameCenter_Crosshair_C::ApplyZoomState(bool InZoomed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_GameCenter_Crosshair_C", "ApplyZoomState");

	Params::UI_GameCenter_Crosshair_C_ApplyZoomState Parms{};

	Parms.InZoomed = InZoomed;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_GameCenter_Crosshair.UI_GameCenter_Crosshair_C.AttachHitGuideWidget
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           WidgetClass                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UUserWidget*                      WidgetReference                                        (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, NoDestructor, HasGetValueTypeHash)
// class UUserWidget*                      AttachedHitGuideWidget                                 (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UUI_GameCenter_Crosshair_C::AttachHitGuideWidget(class UClass* WidgetClass, class UUserWidget*& WidgetReference, class UUserWidget** AttachedHitGuideWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_GameCenter_Crosshair_C", "AttachHitGuideWidget");

	Params::UI_GameCenter_Crosshair_C_AttachHitGuideWidget Parms{};

	Parms.WidgetClass = WidgetClass;
	Parms.WidgetReference = WidgetReference;

	UObject::ProcessEvent(Func, &Parms);

	WidgetReference = Parms.WidgetReference;

	if (AttachedHitGuideWidget != nullptr)
		*AttachedHitGuideWidget = Parms.AttachedHitGuideWidget;
}


// Function UI_GameCenter_Crosshair.UI_GameCenter_Crosshair_C.BP_ChangedCameraFOV
// (Event, Public, BlueprintEvent)

void UUI_GameCenter_Crosshair_C::BP_ChangedCameraFOV()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_GameCenter_Crosshair_C", "BP_ChangedCameraFOV");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_GameCenter_Crosshair.UI_GameCenter_Crosshair_C.BP_ChangedWeapon
// (Event, Public, BlueprintEvent)
// Parameters:
// TSubclassOf<class UUserWidget>          InCrosshairClass                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
// TSubclassOf<class UUserWidget>          InZoomCrosshairClass                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)

void UUI_GameCenter_Crosshair_C::BP_ChangedWeapon(TSubclassOf<class UUserWidget> InCrosshairClass, TSubclassOf<class UUserWidget> InZoomCrosshairClass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_GameCenter_Crosshair_C", "BP_ChangedWeapon");

	Params::UI_GameCenter_Crosshair_C_BP_ChangedWeapon Parms{};

	Parms.InCrosshairClass = InCrosshairClass;
	Parms.InZoomCrosshairClass = InZoomCrosshairClass;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_GameCenter_Crosshair.UI_GameCenter_Crosshair_C.BP_ChangedWeaponHighReady
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bHighReady                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_GameCenter_Crosshair_C::BP_ChangedWeaponHighReady(const bool bHighReady)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_GameCenter_Crosshair_C", "BP_ChangedWeaponHighReady");

	Params::UI_GameCenter_Crosshair_C_BP_ChangedWeaponHighReady Parms{};

	Parms.bHighReady = bHighReady;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_GameCenter_Crosshair.UI_GameCenter_Crosshair_C.BP_ChangedWeaponSpread
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   Spread                                                 (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_GameCenter_Crosshair_C::BP_ChangedWeaponSpread(const float Spread)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_GameCenter_Crosshair_C", "BP_ChangedWeaponSpread");

	Params::UI_GameCenter_Crosshair_C_BP_ChangedWeaponSpread Parms{};

	Parms.Spread = Spread;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_GameCenter_Crosshair.UI_GameCenter_Crosshair_C.BP_ChangedWeaponZoom
// (Event, Public, BlueprintEvent)
// Parameters:
// bool                                    bZoomed_0                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bIsScopeZoomed_0                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_GameCenter_Crosshair_C::BP_ChangedWeaponZoom(const bool bZoomed_0, bool bIsScopeZoomed_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_GameCenter_Crosshair_C", "BP_ChangedWeaponZoom");

	Params::UI_GameCenter_Crosshair_C_BP_ChangedWeaponZoom Parms{};

	Parms.bZoomed_0 = bZoomed_0;
	Parms.bIsScopeZoomed_0 = bIsScopeZoomed_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_GameCenter_Crosshair.UI_GameCenter_Crosshair_C.BP_EnemyInWeaponRange
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// bool                                    bEnemyInWeaponRange                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FColor                           InAimingNoticeCrosshairColor                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_GameCenter_Crosshair_C::BP_EnemyInWeaponRange(const bool bEnemyInWeaponRange, const struct FColor& InAimingNoticeCrosshairColor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_GameCenter_Crosshair_C", "BP_EnemyInWeaponRange");

	Params::UI_GameCenter_Crosshair_C_BP_EnemyInWeaponRange Parms{};

	Parms.bEnemyInWeaponRange = bEnemyInWeaponRange;
	Parms.InAimingNoticeCrosshairColor = std::move(InAimingNoticeCrosshairColor);

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_GameCenter_Crosshair.UI_GameCenter_Crosshair_C.BP_ResizedViewport
// (Event, Public, BlueprintEvent)

void UUI_GameCenter_Crosshair_C::BP_ResizedViewport()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_GameCenter_Crosshair_C", "BP_ResizedViewport");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_GameCenter_Crosshair.UI_GameCenter_Crosshair_C.BP_UpdateInstantHitGuide
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// bool                                    bShow                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TSubclassOf<class UUserWidget>          WidgetClass                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
// TSubclassOf<class UUserWidget>          ZoomWidgetClass                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
// struct FVector2D                        ScreenPos                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_GameCenter_Crosshair_C::BP_UpdateInstantHitGuide(bool bShow, TSubclassOf<class UUserWidget> WidgetClass, TSubclassOf<class UUserWidget> ZoomWidgetClass, const struct FVector2D& ScreenPos)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_GameCenter_Crosshair_C", "BP_UpdateInstantHitGuide");

	Params::UI_GameCenter_Crosshair_C_BP_UpdateInstantHitGuide Parms{};

	Parms.bShow = bShow;
	Parms.WidgetClass = WidgetClass;
	Parms.ZoomWidgetClass = ZoomWidgetClass;
	Parms.ScreenPos = std::move(ScreenPos);

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_GameCenter_Crosshair.UI_GameCenter_Crosshair_C.BP_UpdateWireGuide
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// struct FVector2D                        ScreenPos                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_GameCenter_Crosshair_C::BP_UpdateWireGuide(const struct FVector2D& ScreenPos)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_GameCenter_Crosshair_C", "BP_UpdateWireGuide");

	Params::UI_GameCenter_Crosshair_C_BP_UpdateWireGuide Parms{};

	Parms.ScreenPos = std::move(ScreenPos);

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_GameCenter_Crosshair.UI_GameCenter_Crosshair_C.BP_WeaponFireBursted
// (Event, Public, BlueprintEvent)

void UUI_GameCenter_Crosshair_C::BP_WeaponFireBursted()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_GameCenter_Crosshair_C", "BP_WeaponFireBursted");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_GameCenter_Crosshair.UI_GameCenter_Crosshair_C.CalcHitGuideWidgetClampedPos
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FVector2D                        InPos                                                  (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bClamp                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector2D                        OutPos                                                 (ConstParm, Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_GameCenter_Crosshair_C::CalcHitGuideWidgetClampedPos(const struct FVector2D& InPos, bool bClamp, const struct FVector2D* OutPos)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_GameCenter_Crosshair_C", "CalcHitGuideWidgetClampedPos");

	Params::UI_GameCenter_Crosshair_C_CalcHitGuideWidgetClampedPos Parms{};

	Parms.InPos = std::move(InPos);
	Parms.bClamp = bClamp;

	UObject::ProcessEvent(Func, &Parms);

	if (OutPos != nullptr)
		*OutPos = std::move(Parms.OutPos);
}


// Function UI_GameCenter_Crosshair.UI_GameCenter_Crosshair_C.ChangeCrosshair
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           CrosshairClass                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UClass*                           ZoomCrosshairClass                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UUI_GameCenter_Crosshair_C::ChangeCrosshair(class UClass* CrosshairClass, class UClass* ZoomCrosshairClass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_GameCenter_Crosshair_C", "ChangeCrosshair");

	Params::UI_GameCenter_Crosshair_C_ChangeCrosshair Parms{};

	Parms.CrosshairClass = CrosshairClass;
	Parms.ZoomCrosshairClass = ZoomCrosshairClass;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_GameCenter_Crosshair.UI_GameCenter_Crosshair_C.CreateCrosshairWidget
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           CrosshairClass                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UUserWidget*                      CurrentWidget                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UPanelWidget*                     ParentWidget                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UUserWidget*                      OutWidget                                              (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UUI_GameCenter_Crosshair_C::CreateCrosshairWidget(class UClass* CrosshairClass, class UUserWidget* CurrentWidget, class UPanelWidget* ParentWidget, class UUserWidget** OutWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_GameCenter_Crosshair_C", "CreateCrosshairWidget");

	Params::UI_GameCenter_Crosshair_C_CreateCrosshairWidget Parms{};

	Parms.CrosshairClass = CrosshairClass;
	Parms.CurrentWidget = CurrentWidget;
	Parms.ParentWidget = ParentWidget;

	UObject::ProcessEvent(Func, &Parms);

	if (OutWidget != nullptr)
		*OutWidget = Parms.OutWidget;
}


// Function UI_GameCenter_Crosshair.UI_GameCenter_Crosshair_C.ExecuteUbergraph_UI_GameCenter_Crosshair
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_GameCenter_Crosshair_C::ExecuteUbergraph_UI_GameCenter_Crosshair(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_GameCenter_Crosshair_C", "ExecuteUbergraph_UI_GameCenter_Crosshair");

	Params::UI_GameCenter_Crosshair_C_ExecuteUbergraph_UI_GameCenter_Crosshair Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_GameCenter_Crosshair.UI_GameCenter_Crosshair_C.ResetHitGuide
// (Public, BlueprintCallable, BlueprintEvent)

void UUI_GameCenter_Crosshair_C::ResetHitGuide()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_GameCenter_Crosshair_C", "ResetHitGuide");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_GameCenter_Crosshair.UI_GameCenter_Crosshair_C.UpdateCrosshairOpacity
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UUI_GameCenter_Crosshair_C::UpdateCrosshairOpacity()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_GameCenter_Crosshair_C", "UpdateCrosshairOpacity");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_GameCenter_Crosshair.UI_GameCenter_Crosshair_C.UpdateCrosshairSpread
// (Public, BlueprintCallable, BlueprintEvent)

void UUI_GameCenter_Crosshair_C::UpdateCrosshairSpread()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_GameCenter_Crosshair_C", "UpdateCrosshairSpread");

	UObject::ProcessEvent(Func, nullptr);
}

}

