#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_GameCenter_Crosshair

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function UI_GameCenter_Crosshair.UI_GameCenter_Crosshair_C.ApplyZoomState
// 0x0030 (0x0030 - 0x0000)
struct UI_GameCenter_Crosshair_C_ApplyZoomState final
{
public:
	bool                                          InZoomed;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13[0x5];                                       // 0x0013(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            K2Node_Select_Default_2;                           // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWB_CrosshairBase_C*                    K2Node_DynamicCast_AsWB_Crosshair_Base;            // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_GameCenter_Crosshair_C_ApplyZoomState) == 0x000008, "Wrong alignment on UI_GameCenter_Crosshair_C_ApplyZoomState");
static_assert(sizeof(UI_GameCenter_Crosshair_C_ApplyZoomState) == 0x000030, "Wrong size on UI_GameCenter_Crosshair_C_ApplyZoomState");
static_assert(offsetof(UI_GameCenter_Crosshair_C_ApplyZoomState, InZoomed) == 0x000000, "Member 'UI_GameCenter_Crosshair_C_ApplyZoomState::InZoomed' has a wrong offset!");
static_assert(offsetof(UI_GameCenter_Crosshair_C_ApplyZoomState, Temp_bool_Variable) == 0x000001, "Member 'UI_GameCenter_Crosshair_C_ApplyZoomState::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UI_GameCenter_Crosshair_C_ApplyZoomState, Temp_byte_Variable) == 0x000002, "Member 'UI_GameCenter_Crosshair_C_ApplyZoomState::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(UI_GameCenter_Crosshair_C_ApplyZoomState, Temp_byte_Variable_1) == 0x000003, "Member 'UI_GameCenter_Crosshair_C_ApplyZoomState::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_GameCenter_Crosshair_C_ApplyZoomState, Temp_bool_Variable_1) == 0x000004, "Member 'UI_GameCenter_Crosshair_C_ApplyZoomState::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_GameCenter_Crosshair_C_ApplyZoomState, CallFunc_IsValid_ReturnValue) == 0x000005, "Member 'UI_GameCenter_Crosshair_C_ApplyZoomState::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GameCenter_Crosshair_C_ApplyZoomState, Temp_bool_Variable_2) == 0x000006, "Member 'UI_GameCenter_Crosshair_C_ApplyZoomState::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_GameCenter_Crosshair_C_ApplyZoomState, CallFunc_IsValid_ReturnValue_1) == 0x000007, "Member 'UI_GameCenter_Crosshair_C_ApplyZoomState::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_GameCenter_Crosshair_C_ApplyZoomState, CallFunc_IsValid_ReturnValue_2) == 0x000008, "Member 'UI_GameCenter_Crosshair_C_ApplyZoomState::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_GameCenter_Crosshair_C_ApplyZoomState, Temp_byte_Variable_2) == 0x000009, "Member 'UI_GameCenter_Crosshair_C_ApplyZoomState::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_GameCenter_Crosshair_C_ApplyZoomState, K2Node_Select_Default) == 0x00000A, "Member 'UI_GameCenter_Crosshair_C_ApplyZoomState::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UI_GameCenter_Crosshair_C_ApplyZoomState, CallFunc_IsValid_ReturnValue_3) == 0x00000B, "Member 'UI_GameCenter_Crosshair_C_ApplyZoomState::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UI_GameCenter_Crosshair_C_ApplyZoomState, CallFunc_Not_PreBool_ReturnValue) == 0x00000C, "Member 'UI_GameCenter_Crosshair_C_ApplyZoomState::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GameCenter_Crosshair_C_ApplyZoomState, Temp_byte_Variable_3) == 0x00000D, "Member 'UI_GameCenter_Crosshair_C_ApplyZoomState::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(UI_GameCenter_Crosshair_C_ApplyZoomState, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x00000E, "Member 'UI_GameCenter_Crosshair_C_ApplyZoomState::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GameCenter_Crosshair_C_ApplyZoomState, K2Node_Select_Default_1) == 0x00000F, "Member 'UI_GameCenter_Crosshair_C_ApplyZoomState::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(UI_GameCenter_Crosshair_C_ApplyZoomState, CallFunc_BooleanOR_ReturnValue) == 0x000010, "Member 'UI_GameCenter_Crosshair_C_ApplyZoomState::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GameCenter_Crosshair_C_ApplyZoomState, CallFunc_IsValid_ReturnValue_4) == 0x000011, "Member 'UI_GameCenter_Crosshair_C_ApplyZoomState::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(UI_GameCenter_Crosshair_C_ApplyZoomState, CallFunc_BooleanAND_ReturnValue) == 0x000012, "Member 'UI_GameCenter_Crosshair_C_ApplyZoomState::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GameCenter_Crosshair_C_ApplyZoomState, K2Node_Select_Default_2) == 0x000018, "Member 'UI_GameCenter_Crosshair_C_ApplyZoomState::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(UI_GameCenter_Crosshair_C_ApplyZoomState, K2Node_DynamicCast_AsWB_Crosshair_Base) == 0x000020, "Member 'UI_GameCenter_Crosshair_C_ApplyZoomState::K2Node_DynamicCast_AsWB_Crosshair_Base' has a wrong offset!");
static_assert(offsetof(UI_GameCenter_Crosshair_C_ApplyZoomState, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'UI_GameCenter_Crosshair_C_ApplyZoomState::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function UI_GameCenter_Crosshair.UI_GameCenter_Crosshair_C.AttachHitGuideWidget
// 0x0060 (0x0060 - 0x0000)
struct UI_GameCenter_Crosshair_C_AttachHitGuideWidget final
{
public:
	class UClass*                                 WidgetClass;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            WidgetReference;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, InstancedReference, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            AttachedHitGuideWidget;                            // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MakeLiteralDouble_ReturnValue;            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UOverlaySlot*                           K2Node_DynamicCast_As_______;                      // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A[0x6];                                       // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_Create_ReturnValue;                       // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWB_CrosshairBase_C*                    K2Node_DynamicCast_AsWB_Crosshair_Base;            // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue;                     // 0x0058(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_GameCenter_Crosshair_C_AttachHitGuideWidget) == 0x000008, "Wrong alignment on UI_GameCenter_Crosshair_C_AttachHitGuideWidget");
static_assert(sizeof(UI_GameCenter_Crosshair_C_AttachHitGuideWidget) == 0x000060, "Wrong size on UI_GameCenter_Crosshair_C_AttachHitGuideWidget");
static_assert(offsetof(UI_GameCenter_Crosshair_C_AttachHitGuideWidget, WidgetClass) == 0x000000, "Member 'UI_GameCenter_Crosshair_C_AttachHitGuideWidget::WidgetClass' has a wrong offset!");
static_assert(offsetof(UI_GameCenter_Crosshair_C_AttachHitGuideWidget, WidgetReference) == 0x000008, "Member 'UI_GameCenter_Crosshair_C_AttachHitGuideWidget::WidgetReference' has a wrong offset!");
static_assert(offsetof(UI_GameCenter_Crosshair_C_AttachHitGuideWidget, AttachedHitGuideWidget) == 0x000010, "Member 'UI_GameCenter_Crosshair_C_AttachHitGuideWidget::AttachedHitGuideWidget' has a wrong offset!");
static_assert(offsetof(UI_GameCenter_Crosshair_C_AttachHitGuideWidget, CallFunc_MakeLiteralDouble_ReturnValue) == 0x000018, "Member 'UI_GameCenter_Crosshair_C_AttachHitGuideWidget::CallFunc_MakeLiteralDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GameCenter_Crosshair_C_AttachHitGuideWidget, CallFunc_MakeVector2D_ReturnValue) == 0x000020, "Member 'UI_GameCenter_Crosshair_C_AttachHitGuideWidget::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GameCenter_Crosshair_C_AttachHitGuideWidget, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'UI_GameCenter_Crosshair_C_AttachHitGuideWidget::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GameCenter_Crosshair_C_AttachHitGuideWidget, K2Node_DynamicCast_As_______) == 0x000030, "Member 'UI_GameCenter_Crosshair_C_AttachHitGuideWidget::K2Node_DynamicCast_As_______' has a wrong offset!");
static_assert(offsetof(UI_GameCenter_Crosshair_C_AttachHitGuideWidget, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'UI_GameCenter_Crosshair_C_AttachHitGuideWidget::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(UI_GameCenter_Crosshair_C_AttachHitGuideWidget, CallFunc_IsValid_ReturnValue_1) == 0x000039, "Member 'UI_GameCenter_Crosshair_C_AttachHitGuideWidget::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_GameCenter_Crosshair_C_AttachHitGuideWidget, CallFunc_Create_ReturnValue) == 0x000040, "Member 'UI_GameCenter_Crosshair_C_AttachHitGuideWidget::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GameCenter_Crosshair_C_AttachHitGuideWidget, K2Node_DynamicCast_AsWB_Crosshair_Base) == 0x000048, "Member 'UI_GameCenter_Crosshair_C_AttachHitGuideWidget::K2Node_DynamicCast_AsWB_Crosshair_Base' has a wrong offset!");
static_assert(offsetof(UI_GameCenter_Crosshair_C_AttachHitGuideWidget, K2Node_DynamicCast_bSuccess_1) == 0x000050, "Member 'UI_GameCenter_Crosshair_C_AttachHitGuideWidget::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(UI_GameCenter_Crosshair_C_AttachHitGuideWidget, CallFunc_AddChild_ReturnValue) == 0x000058, "Member 'UI_GameCenter_Crosshair_C_AttachHitGuideWidget::CallFunc_AddChild_ReturnValue' has a wrong offset!");

// Function UI_GameCenter_Crosshair.UI_GameCenter_Crosshair_C.BP_ChangedWeapon
// 0x0010 (0x0010 - 0x0000)
struct UI_GameCenter_Crosshair_C_BP_ChangedWeapon final
{
public:
	TSubclassOf<class UUserWidget>                InCrosshairClass;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	TSubclassOf<class UUserWidget>                InZoomCrosshairClass;                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
};
static_assert(alignof(UI_GameCenter_Crosshair_C_BP_ChangedWeapon) == 0x000008, "Wrong alignment on UI_GameCenter_Crosshair_C_BP_ChangedWeapon");
static_assert(sizeof(UI_GameCenter_Crosshair_C_BP_ChangedWeapon) == 0x000010, "Wrong size on UI_GameCenter_Crosshair_C_BP_ChangedWeapon");
static_assert(offsetof(UI_GameCenter_Crosshair_C_BP_ChangedWeapon, InCrosshairClass) == 0x000000, "Member 'UI_GameCenter_Crosshair_C_BP_ChangedWeapon::InCrosshairClass' has a wrong offset!");
static_assert(offsetof(UI_GameCenter_Crosshair_C_BP_ChangedWeapon, InZoomCrosshairClass) == 0x000008, "Member 'UI_GameCenter_Crosshair_C_BP_ChangedWeapon::InZoomCrosshairClass' has a wrong offset!");

// Function UI_GameCenter_Crosshair.UI_GameCenter_Crosshair_C.BP_ChangedWeaponHighReady
// 0x0001 (0x0001 - 0x0000)
struct UI_GameCenter_Crosshair_C_BP_ChangedWeaponHighReady final
{
public:
	bool                                          bHighReady;                                        // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_GameCenter_Crosshair_C_BP_ChangedWeaponHighReady) == 0x000001, "Wrong alignment on UI_GameCenter_Crosshair_C_BP_ChangedWeaponHighReady");
static_assert(sizeof(UI_GameCenter_Crosshair_C_BP_ChangedWeaponHighReady) == 0x000001, "Wrong size on UI_GameCenter_Crosshair_C_BP_ChangedWeaponHighReady");
static_assert(offsetof(UI_GameCenter_Crosshair_C_BP_ChangedWeaponHighReady, bHighReady) == 0x000000, "Member 'UI_GameCenter_Crosshair_C_BP_ChangedWeaponHighReady::bHighReady' has a wrong offset!");

// Function UI_GameCenter_Crosshair.UI_GameCenter_Crosshair_C.BP_ChangedWeaponSpread
// 0x0004 (0x0004 - 0x0000)
struct UI_GameCenter_Crosshair_C_BP_ChangedWeaponSpread final
{
public:
	float                                         Spread;                                            // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_GameCenter_Crosshair_C_BP_ChangedWeaponSpread) == 0x000004, "Wrong alignment on UI_GameCenter_Crosshair_C_BP_ChangedWeaponSpread");
static_assert(sizeof(UI_GameCenter_Crosshair_C_BP_ChangedWeaponSpread) == 0x000004, "Wrong size on UI_GameCenter_Crosshair_C_BP_ChangedWeaponSpread");
static_assert(offsetof(UI_GameCenter_Crosshair_C_BP_ChangedWeaponSpread, Spread) == 0x000000, "Member 'UI_GameCenter_Crosshair_C_BP_ChangedWeaponSpread::Spread' has a wrong offset!");

// Function UI_GameCenter_Crosshair.UI_GameCenter_Crosshair_C.BP_ChangedWeaponZoom
// 0x0002 (0x0002 - 0x0000)
struct UI_GameCenter_Crosshair_C_BP_ChangedWeaponZoom final
{
public:
	bool                                          bZoomed_0;                                         // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsScopeZoomed_0;                                  // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_GameCenter_Crosshair_C_BP_ChangedWeaponZoom) == 0x000001, "Wrong alignment on UI_GameCenter_Crosshair_C_BP_ChangedWeaponZoom");
static_assert(sizeof(UI_GameCenter_Crosshair_C_BP_ChangedWeaponZoom) == 0x000002, "Wrong size on UI_GameCenter_Crosshair_C_BP_ChangedWeaponZoom");
static_assert(offsetof(UI_GameCenter_Crosshair_C_BP_ChangedWeaponZoom, bZoomed_0) == 0x000000, "Member 'UI_GameCenter_Crosshair_C_BP_ChangedWeaponZoom::bZoomed_0' has a wrong offset!");
static_assert(offsetof(UI_GameCenter_Crosshair_C_BP_ChangedWeaponZoom, bIsScopeZoomed_0) == 0x000001, "Member 'UI_GameCenter_Crosshair_C_BP_ChangedWeaponZoom::bIsScopeZoomed_0' has a wrong offset!");

// Function UI_GameCenter_Crosshair.UI_GameCenter_Crosshair_C.BP_EnemyInWeaponRange
// 0x0008 (0x0008 - 0x0000)
struct UI_GameCenter_Crosshair_C_BP_EnemyInWeaponRange final
{
public:
	bool                                          bEnemyInWeaponRange;                               // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FColor                                 InAimingNoticeCrosshairColor;                      // 0x0004(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_GameCenter_Crosshair_C_BP_EnemyInWeaponRange) == 0x000004, "Wrong alignment on UI_GameCenter_Crosshair_C_BP_EnemyInWeaponRange");
static_assert(sizeof(UI_GameCenter_Crosshair_C_BP_EnemyInWeaponRange) == 0x000008, "Wrong size on UI_GameCenter_Crosshair_C_BP_EnemyInWeaponRange");
static_assert(offsetof(UI_GameCenter_Crosshair_C_BP_EnemyInWeaponRange, bEnemyInWeaponRange) == 0x000000, "Member 'UI_GameCenter_Crosshair_C_BP_EnemyInWeaponRange::bEnemyInWeaponRange' has a wrong offset!");
static_assert(offsetof(UI_GameCenter_Crosshair_C_BP_EnemyInWeaponRange, InAimingNoticeCrosshairColor) == 0x000004, "Member 'UI_GameCenter_Crosshair_C_BP_EnemyInWeaponRange::InAimingNoticeCrosshairColor' has a wrong offset!");

// Function UI_GameCenter_Crosshair.UI_GameCenter_Crosshair_C.BP_UpdateInstantHitGuide
// 0x0020 (0x0020 - 0x0000)
struct UI_GameCenter_Crosshair_C_BP_UpdateInstantHitGuide final
{
public:
	bool                                          bShow;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UUserWidget>                WidgetClass;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	TSubclassOf<class UUserWidget>                ZoomWidgetClass;                                   // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	struct FVector2D                              ScreenPos;                                         // 0x0018(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_GameCenter_Crosshair_C_BP_UpdateInstantHitGuide) == 0x000008, "Wrong alignment on UI_GameCenter_Crosshair_C_BP_UpdateInstantHitGuide");
static_assert(sizeof(UI_GameCenter_Crosshair_C_BP_UpdateInstantHitGuide) == 0x000020, "Wrong size on UI_GameCenter_Crosshair_C_BP_UpdateInstantHitGuide");
static_assert(offsetof(UI_GameCenter_Crosshair_C_BP_UpdateInstantHitGuide, bShow) == 0x000000, "Member 'UI_GameCenter_Crosshair_C_BP_UpdateInstantHitGuide::bShow' has a wrong offset!");
static_assert(offsetof(UI_GameCenter_Crosshair_C_BP_UpdateInstantHitGuide, WidgetClass) == 0x000008, "Member 'UI_GameCenter_Crosshair_C_BP_UpdateInstantHitGuide::WidgetClass' has a wrong offset!");
static_assert(offsetof(UI_GameCenter_Crosshair_C_BP_UpdateInstantHitGuide, ZoomWidgetClass) == 0x000010, "Member 'UI_GameCenter_Crosshair_C_BP_UpdateInstantHitGuide::ZoomWidgetClass' has a wrong offset!");
static_assert(offsetof(UI_GameCenter_Crosshair_C_BP_UpdateInstantHitGuide, ScreenPos) == 0x000018, "Member 'UI_GameCenter_Crosshair_C_BP_UpdateInstantHitGuide::ScreenPos' has a wrong offset!");

// Function UI_GameCenter_Crosshair.UI_GameCenter_Crosshair_C.BP_UpdateWireGuide
// 0x0008 (0x0008 - 0x0000)
struct UI_GameCenter_Crosshair_C_BP_UpdateWireGuide final
{
public:
	struct FVector2D                              ScreenPos;                                         // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_GameCenter_Crosshair_C_BP_UpdateWireGuide) == 0x000004, "Wrong alignment on UI_GameCenter_Crosshair_C_BP_UpdateWireGuide");
static_assert(sizeof(UI_GameCenter_Crosshair_C_BP_UpdateWireGuide) == 0x000008, "Wrong size on UI_GameCenter_Crosshair_C_BP_UpdateWireGuide");
static_assert(offsetof(UI_GameCenter_Crosshair_C_BP_UpdateWireGuide, ScreenPos) == 0x000000, "Member 'UI_GameCenter_Crosshair_C_BP_UpdateWireGuide::ScreenPos' has a wrong offset!");

// Function UI_GameCenter_Crosshair.UI_GameCenter_Crosshair_C.CalcHitGuideWidgetClampedPos
// 0x0090 (0x0090 - 0x0000)
struct UI_GameCenter_Crosshair_C_CalcHitGuideWidgetClampedPos final
{
public:
	struct FVector2D                              InPos;                                             // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bClamp;                                            // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              OutPos;                                            // 0x000C(0x0008)(ConstParm, Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetViewportSize_ReturnValue;              // 0x0014(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector2D_X;                          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_1;                        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_1;                        // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_1;                     // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_Min_ImplicitCast;                  // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_Min_ImplicitCast_1;                // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_B_ImplicitCast;     // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_B_ImplicitCast_1;   // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_GameCenter_Crosshair_C_CalcHitGuideWidgetClampedPos) == 0x000008, "Wrong alignment on UI_GameCenter_Crosshair_C_CalcHitGuideWidgetClampedPos");
static_assert(sizeof(UI_GameCenter_Crosshair_C_CalcHitGuideWidgetClampedPos) == 0x000090, "Wrong size on UI_GameCenter_Crosshair_C_CalcHitGuideWidgetClampedPos");
static_assert(offsetof(UI_GameCenter_Crosshair_C_CalcHitGuideWidgetClampedPos, InPos) == 0x000000, "Member 'UI_GameCenter_Crosshair_C_CalcHitGuideWidgetClampedPos::InPos' has a wrong offset!");
static_assert(offsetof(UI_GameCenter_Crosshair_C_CalcHitGuideWidgetClampedPos, bClamp) == 0x000008, "Member 'UI_GameCenter_Crosshair_C_CalcHitGuideWidgetClampedPos::bClamp' has a wrong offset!");
static_assert(offsetof(UI_GameCenter_Crosshair_C_CalcHitGuideWidgetClampedPos, OutPos) == 0x00000C, "Member 'UI_GameCenter_Crosshair_C_CalcHitGuideWidgetClampedPos::OutPos' has a wrong offset!");
static_assert(offsetof(UI_GameCenter_Crosshair_C_CalcHitGuideWidgetClampedPos, CallFunc_GetViewportSize_ReturnValue) == 0x000014, "Member 'UI_GameCenter_Crosshair_C_CalcHitGuideWidgetClampedPos::CallFunc_GetViewportSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GameCenter_Crosshair_C_CalcHitGuideWidgetClampedPos, CallFunc_BreakVector2D_X) == 0x000020, "Member 'UI_GameCenter_Crosshair_C_CalcHitGuideWidgetClampedPos::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(UI_GameCenter_Crosshair_C_CalcHitGuideWidgetClampedPos, CallFunc_BreakVector2D_Y) == 0x000028, "Member 'UI_GameCenter_Crosshair_C_CalcHitGuideWidgetClampedPos::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(UI_GameCenter_Crosshair_C_CalcHitGuideWidgetClampedPos, CallFunc_BreakVector2D_X_1) == 0x000030, "Member 'UI_GameCenter_Crosshair_C_CalcHitGuideWidgetClampedPos::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(UI_GameCenter_Crosshair_C_CalcHitGuideWidgetClampedPos, CallFunc_BreakVector2D_Y_1) == 0x000038, "Member 'UI_GameCenter_Crosshair_C_CalcHitGuideWidgetClampedPos::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(UI_GameCenter_Crosshair_C_CalcHitGuideWidgetClampedPos, CallFunc_IsValid_ReturnValue) == 0x000040, "Member 'UI_GameCenter_Crosshair_C_CalcHitGuideWidgetClampedPos::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GameCenter_Crosshair_C_CalcHitGuideWidgetClampedPos, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000048, "Member 'UI_GameCenter_Crosshair_C_CalcHitGuideWidgetClampedPos::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GameCenter_Crosshair_C_CalcHitGuideWidgetClampedPos, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000050, "Member 'UI_GameCenter_Crosshair_C_CalcHitGuideWidgetClampedPos::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_GameCenter_Crosshair_C_CalcHitGuideWidgetClampedPos, CallFunc_FClamp_ReturnValue) == 0x000058, "Member 'UI_GameCenter_Crosshair_C_CalcHitGuideWidgetClampedPos::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GameCenter_Crosshair_C_CalcHitGuideWidgetClampedPos, CallFunc_FClamp_ReturnValue_1) == 0x000060, "Member 'UI_GameCenter_Crosshair_C_CalcHitGuideWidgetClampedPos::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_GameCenter_Crosshair_C_CalcHitGuideWidgetClampedPos, CallFunc_MakeVector2D_ReturnValue) == 0x000068, "Member 'UI_GameCenter_Crosshair_C_CalcHitGuideWidgetClampedPos::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GameCenter_Crosshair_C_CalcHitGuideWidgetClampedPos, CallFunc_FClamp_Min_ImplicitCast) == 0x000070, "Member 'UI_GameCenter_Crosshair_C_CalcHitGuideWidgetClampedPos::CallFunc_FClamp_Min_ImplicitCast' has a wrong offset!");
static_assert(offsetof(UI_GameCenter_Crosshair_C_CalcHitGuideWidgetClampedPos, CallFunc_FClamp_Min_ImplicitCast_1) == 0x000078, "Member 'UI_GameCenter_Crosshair_C_CalcHitGuideWidgetClampedPos::CallFunc_FClamp_Min_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(UI_GameCenter_Crosshair_C_CalcHitGuideWidgetClampedPos, CallFunc_Subtract_DoubleDouble_B_ImplicitCast) == 0x000080, "Member 'UI_GameCenter_Crosshair_C_CalcHitGuideWidgetClampedPos::CallFunc_Subtract_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(UI_GameCenter_Crosshair_C_CalcHitGuideWidgetClampedPos, CallFunc_Subtract_DoubleDouble_B_ImplicitCast_1) == 0x000088, "Member 'UI_GameCenter_Crosshair_C_CalcHitGuideWidgetClampedPos::CallFunc_Subtract_DoubleDouble_B_ImplicitCast_1' has a wrong offset!");

// Function UI_GameCenter_Crosshair.UI_GameCenter_Crosshair_C.ChangeCrosshair
// 0x0020 (0x0020 - 0x0000)
struct UI_GameCenter_Crosshair_C_ChangeCrosshair final
{
public:
	class UClass*                                 CrosshairClass;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 ZoomCrosshairClass;                                // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            CallFunc_CreateCrosshairWidget_OutWidget;          // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            CallFunc_CreateCrosshairWidget_OutWidget_1;        // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_GameCenter_Crosshair_C_ChangeCrosshair) == 0x000008, "Wrong alignment on UI_GameCenter_Crosshair_C_ChangeCrosshair");
static_assert(sizeof(UI_GameCenter_Crosshair_C_ChangeCrosshair) == 0x000020, "Wrong size on UI_GameCenter_Crosshair_C_ChangeCrosshair");
static_assert(offsetof(UI_GameCenter_Crosshair_C_ChangeCrosshair, CrosshairClass) == 0x000000, "Member 'UI_GameCenter_Crosshair_C_ChangeCrosshair::CrosshairClass' has a wrong offset!");
static_assert(offsetof(UI_GameCenter_Crosshair_C_ChangeCrosshair, ZoomCrosshairClass) == 0x000008, "Member 'UI_GameCenter_Crosshair_C_ChangeCrosshair::ZoomCrosshairClass' has a wrong offset!");
static_assert(offsetof(UI_GameCenter_Crosshair_C_ChangeCrosshair, CallFunc_CreateCrosshairWidget_OutWidget) == 0x000010, "Member 'UI_GameCenter_Crosshair_C_ChangeCrosshair::CallFunc_CreateCrosshairWidget_OutWidget' has a wrong offset!");
static_assert(offsetof(UI_GameCenter_Crosshair_C_ChangeCrosshair, CallFunc_CreateCrosshairWidget_OutWidget_1) == 0x000018, "Member 'UI_GameCenter_Crosshair_C_ChangeCrosshair::CallFunc_CreateCrosshairWidget_OutWidget_1' has a wrong offset!");

// Function UI_GameCenter_Crosshair.UI_GameCenter_Crosshair_C.CreateCrosshairWidget
// 0x0058 (0x0058 - 0x0000)
struct UI_GameCenter_Crosshair_C_CreateCrosshairWidget final
{
public:
	class UClass*                                 CrosshairClass;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            CurrentWidget;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPanelWidget*                           ParentWidget;                                      // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            OutWidget;                                         // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            CallFunc_Create_ReturnValue;                       // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue;                     // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UOverlaySlot*                           K2Node_DynamicCast_As_______;                      // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42[0x6];                                       // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ClassClass_ReturnValue;          // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_GameCenter_Crosshair_C_CreateCrosshairWidget) == 0x000008, "Wrong alignment on UI_GameCenter_Crosshair_C_CreateCrosshairWidget");
static_assert(sizeof(UI_GameCenter_Crosshair_C_CreateCrosshairWidget) == 0x000058, "Wrong size on UI_GameCenter_Crosshair_C_CreateCrosshairWidget");
static_assert(offsetof(UI_GameCenter_Crosshair_C_CreateCrosshairWidget, CrosshairClass) == 0x000000, "Member 'UI_GameCenter_Crosshair_C_CreateCrosshairWidget::CrosshairClass' has a wrong offset!");
static_assert(offsetof(UI_GameCenter_Crosshair_C_CreateCrosshairWidget, CurrentWidget) == 0x000008, "Member 'UI_GameCenter_Crosshair_C_CreateCrosshairWidget::CurrentWidget' has a wrong offset!");
static_assert(offsetof(UI_GameCenter_Crosshair_C_CreateCrosshairWidget, ParentWidget) == 0x000010, "Member 'UI_GameCenter_Crosshair_C_CreateCrosshairWidget::ParentWidget' has a wrong offset!");
static_assert(offsetof(UI_GameCenter_Crosshair_C_CreateCrosshairWidget, OutWidget) == 0x000018, "Member 'UI_GameCenter_Crosshair_C_CreateCrosshairWidget::OutWidget' has a wrong offset!");
static_assert(offsetof(UI_GameCenter_Crosshair_C_CreateCrosshairWidget, CallFunc_Create_ReturnValue) == 0x000020, "Member 'UI_GameCenter_Crosshair_C_CreateCrosshairWidget::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GameCenter_Crosshair_C_CreateCrosshairWidget, CallFunc_AddChild_ReturnValue) == 0x000028, "Member 'UI_GameCenter_Crosshair_C_CreateCrosshairWidget::CallFunc_AddChild_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GameCenter_Crosshair_C_CreateCrosshairWidget, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'UI_GameCenter_Crosshair_C_CreateCrosshairWidget::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GameCenter_Crosshair_C_CreateCrosshairWidget, K2Node_DynamicCast_As_______) == 0x000038, "Member 'UI_GameCenter_Crosshair_C_CreateCrosshairWidget::K2Node_DynamicCast_As_______' has a wrong offset!");
static_assert(offsetof(UI_GameCenter_Crosshair_C_CreateCrosshairWidget, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'UI_GameCenter_Crosshair_C_CreateCrosshairWidget::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(UI_GameCenter_Crosshair_C_CreateCrosshairWidget, CallFunc_IsValid_ReturnValue_1) == 0x000041, "Member 'UI_GameCenter_Crosshair_C_CreateCrosshairWidget::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_GameCenter_Crosshair_C_CreateCrosshairWidget, CallFunc_GetObjectClass_ReturnValue) == 0x000048, "Member 'UI_GameCenter_Crosshair_C_CreateCrosshairWidget::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GameCenter_Crosshair_C_CreateCrosshairWidget, CallFunc_NotEqual_ClassClass_ReturnValue) == 0x000050, "Member 'UI_GameCenter_Crosshair_C_CreateCrosshairWidget::CallFunc_NotEqual_ClassClass_ReturnValue' has a wrong offset!");

// Function UI_GameCenter_Crosshair.UI_GameCenter_Crosshair_C.ExecuteUbergraph_UI_GameCenter_Crosshair
// 0x0110 (0x0110 - 0x0000)
struct UI_GameCenter_Crosshair_C_ExecuteUbergraph_UI_GameCenter_Crosshair final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UUserWidget>                K2Node_Event_InCrosshairClass;                     // 0x0008(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	TSubclassOf<class UUserWidget>                K2Node_Event_InZoomCrosshairClass;                 // 0x0010(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          K2Node_Event_bZoomed;                              // 0x0018(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsScopeZoomed;                       // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A[0x2];                                       // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_Spread;                               // 0x001C(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bEnemyInWeaponRange;                  // 0x0021(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22[0x2];                                       // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FColor                                 K2Node_Event_InAimingNoticeCrosshairColor;         // 0x0024(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B[0x1];                                       // 0x002B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              K2Node_Event_ScreenPos_1;                          // 0x002C(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsZero2D_ReturnValue;                     // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       K2Node_DynamicCast_As_________;                    // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetViewportScale_ReturnValue;             // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Conv_DoubleToVector2D_ReturnValue;        // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bHighReady;                           // 0x0050(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_GetViewportSize_ReturnValue;              // 0x0054(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MakeLiteralDouble_ReturnValue;            // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bShow;                                // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSubclassOf<class UUserWidget>                K2Node_Event_WidgetClass;                          // 0x0070(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	TSubclassOf<class UUserWidget>                K2Node_Event_ZoomWidgetClass;                      // 0x0078(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	struct FVector2D                              K2Node_Event_ScreenPos;                            // 0x0080(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Conv_DoubleToVector2D_ReturnValue_1;      // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_CalcHitGuideWidgetClampedPos_OutPos;      // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Divide_Vector2DVector2D_ReturnValue;      // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_Select_Default;                             // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Divide_Vector2DVector2D_ReturnValue_1;    // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       K2Node_DynamicCast_As__________1;                  // 0x00B0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x00BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x00BB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetViewportScale_ReturnValue_1;           // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Conv_DoubleToVector2D_ReturnValue_2;      // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RemoveChild_ReturnValue;                  // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C9[0x3];                                       // 0x00C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Divide_Vector2DVector2D_ReturnValue_2;    // 0x00CC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RemoveChild_ReturnValue_1;                // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x00D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00D6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D7[0x1];                                       // 0x00D7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_Select_Default_2;                           // 0x00D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            K2Node_Select_Default_3;                           // 0x00E0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            CallFunc_AttachHitGuideWidget_AttachedHitGuideWidget; // 0x00E8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F2[0x6];                                       // 0x00F2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_VariableSet_LastSpread_ImplicitCast;        // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_DoubleToVector2D_InDouble_ImplicitCast; // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_DoubleToVector2D_InDouble_ImplicitCast_1; // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_GameCenter_Crosshair_C_ExecuteUbergraph_UI_GameCenter_Crosshair) == 0x000008, "Wrong alignment on UI_GameCenter_Crosshair_C_ExecuteUbergraph_UI_GameCenter_Crosshair");
static_assert(sizeof(UI_GameCenter_Crosshair_C_ExecuteUbergraph_UI_GameCenter_Crosshair) == 0x000110, "Wrong size on UI_GameCenter_Crosshair_C_ExecuteUbergraph_UI_GameCenter_Crosshair");
static_assert(offsetof(UI_GameCenter_Crosshair_C_ExecuteUbergraph_UI_GameCenter_Crosshair, EntryPoint) == 0x000000, "Member 'UI_GameCenter_Crosshair_C_ExecuteUbergraph_UI_GameCenter_Crosshair::EntryPoint' has a wrong offset!");
static_assert(offsetof(UI_GameCenter_Crosshair_C_ExecuteUbergraph_UI_GameCenter_Crosshair, Temp_bool_Variable) == 0x000004, "Member 'UI_GameCenter_Crosshair_C_ExecuteUbergraph_UI_GameCenter_Crosshair::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UI_GameCenter_Crosshair_C_ExecuteUbergraph_UI_GameCenter_Crosshair, Temp_bool_Variable_1) == 0x000005, "Member 'UI_GameCenter_Crosshair_C_ExecuteUbergraph_UI_GameCenter_Crosshair::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_GameCenter_Crosshair_C_ExecuteUbergraph_UI_GameCenter_Crosshair, K2Node_Event_InCrosshairClass) == 0x000008, "Member 'UI_GameCenter_Crosshair_C_ExecuteUbergraph_UI_GameCenter_Crosshair::K2Node_Event_InCrosshairClass' has a wrong offset!");
static_assert(offsetof(UI_GameCenter_Crosshair_C_ExecuteUbergraph_UI_GameCenter_Crosshair, K2Node_Event_InZoomCrosshairClass) == 0x000010, "Member 'UI_GameCenter_Crosshair_C_ExecuteUbergraph_UI_GameCenter_Crosshair::K2Node_Event_InZoomCrosshairClass' has a wrong offset!");
static_assert(offsetof(UI_GameCenter_Crosshair_C_ExecuteUbergraph_UI_GameCenter_Crosshair, K2Node_Event_bZoomed) == 0x000018, "Member 'UI_GameCenter_Crosshair_C_ExecuteUbergraph_UI_GameCenter_Crosshair::K2Node_Event_bZoomed' has a wrong offset!");
static_assert(offsetof(UI_GameCenter_Crosshair_C_ExecuteUbergraph_UI_GameCenter_Crosshair, K2Node_Event_bIsScopeZoomed) == 0x000019, "Member 'UI_GameCenter_Crosshair_C_ExecuteUbergraph_UI_GameCenter_Crosshair::K2Node_Event_bIsScopeZoomed' has a wrong offset!");
static_assert(offsetof(UI_GameCenter_Crosshair_C_ExecuteUbergraph_UI_GameCenter_Crosshair, K2Node_Event_Spread) == 0x00001C, "Member 'UI_GameCenter_Crosshair_C_ExecuteUbergraph_UI_GameCenter_Crosshair::K2Node_Event_Spread' has a wrong offset!");
static_assert(offsetof(UI_GameCenter_Crosshair_C_ExecuteUbergraph_UI_GameCenter_Crosshair, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'UI_GameCenter_Crosshair_C_ExecuteUbergraph_UI_GameCenter_Crosshair::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GameCenter_Crosshair_C_ExecuteUbergraph_UI_GameCenter_Crosshair, K2Node_Event_bEnemyInWeaponRange) == 0x000021, "Member 'UI_GameCenter_Crosshair_C_ExecuteUbergraph_UI_GameCenter_Crosshair::K2Node_Event_bEnemyInWeaponRange' has a wrong offset!");
static_assert(offsetof(UI_GameCenter_Crosshair_C_ExecuteUbergraph_UI_GameCenter_Crosshair, K2Node_Event_InAimingNoticeCrosshairColor) == 0x000024, "Member 'UI_GameCenter_Crosshair_C_ExecuteUbergraph_UI_GameCenter_Crosshair::K2Node_Event_InAimingNoticeCrosshairColor' has a wrong offset!");
static_assert(offsetof(UI_GameCenter_Crosshair_C_ExecuteUbergraph_UI_GameCenter_Crosshair, CallFunc_IsValid_ReturnValue_1) == 0x000028, "Member 'UI_GameCenter_Crosshair_C_ExecuteUbergraph_UI_GameCenter_Crosshair::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_GameCenter_Crosshair_C_ExecuteUbergraph_UI_GameCenter_Crosshair, Temp_byte_Variable) == 0x000029, "Member 'UI_GameCenter_Crosshair_C_ExecuteUbergraph_UI_GameCenter_Crosshair::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(UI_GameCenter_Crosshair_C_ExecuteUbergraph_UI_GameCenter_Crosshair, Temp_byte_Variable_1) == 0x00002A, "Member 'UI_GameCenter_Crosshair_C_ExecuteUbergraph_UI_GameCenter_Crosshair::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_GameCenter_Crosshair_C_ExecuteUbergraph_UI_GameCenter_Crosshair, K2Node_Event_ScreenPos_1) == 0x00002C, "Member 'UI_GameCenter_Crosshair_C_ExecuteUbergraph_UI_GameCenter_Crosshair::K2Node_Event_ScreenPos_1' has a wrong offset!");
static_assert(offsetof(UI_GameCenter_Crosshair_C_ExecuteUbergraph_UI_GameCenter_Crosshair, CallFunc_IsZero2D_ReturnValue) == 0x000034, "Member 'UI_GameCenter_Crosshair_C_ExecuteUbergraph_UI_GameCenter_Crosshair::CallFunc_IsZero2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GameCenter_Crosshair_C_ExecuteUbergraph_UI_GameCenter_Crosshair, K2Node_DynamicCast_As_________) == 0x000038, "Member 'UI_GameCenter_Crosshair_C_ExecuteUbergraph_UI_GameCenter_Crosshair::K2Node_DynamicCast_As_________' has a wrong offset!");
static_assert(offsetof(UI_GameCenter_Crosshair_C_ExecuteUbergraph_UI_GameCenter_Crosshair, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'UI_GameCenter_Crosshair_C_ExecuteUbergraph_UI_GameCenter_Crosshair::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(UI_GameCenter_Crosshair_C_ExecuteUbergraph_UI_GameCenter_Crosshair, CallFunc_GetViewportScale_ReturnValue) == 0x000044, "Member 'UI_GameCenter_Crosshair_C_ExecuteUbergraph_UI_GameCenter_Crosshair::CallFunc_GetViewportScale_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GameCenter_Crosshair_C_ExecuteUbergraph_UI_GameCenter_Crosshair, CallFunc_Conv_DoubleToVector2D_ReturnValue) == 0x000048, "Member 'UI_GameCenter_Crosshair_C_ExecuteUbergraph_UI_GameCenter_Crosshair::CallFunc_Conv_DoubleToVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GameCenter_Crosshair_C_ExecuteUbergraph_UI_GameCenter_Crosshair, K2Node_Event_bHighReady) == 0x000050, "Member 'UI_GameCenter_Crosshair_C_ExecuteUbergraph_UI_GameCenter_Crosshair::K2Node_Event_bHighReady' has a wrong offset!");
static_assert(offsetof(UI_GameCenter_Crosshair_C_ExecuteUbergraph_UI_GameCenter_Crosshair, CallFunc_GetViewportSize_ReturnValue) == 0x000054, "Member 'UI_GameCenter_Crosshair_C_ExecuteUbergraph_UI_GameCenter_Crosshair::CallFunc_GetViewportSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GameCenter_Crosshair_C_ExecuteUbergraph_UI_GameCenter_Crosshair, Temp_bool_Variable_2) == 0x00005C, "Member 'UI_GameCenter_Crosshair_C_ExecuteUbergraph_UI_GameCenter_Crosshair::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_GameCenter_Crosshair_C_ExecuteUbergraph_UI_GameCenter_Crosshair, CallFunc_MakeLiteralDouble_ReturnValue) == 0x000060, "Member 'UI_GameCenter_Crosshair_C_ExecuteUbergraph_UI_GameCenter_Crosshair::CallFunc_MakeLiteralDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GameCenter_Crosshair_C_ExecuteUbergraph_UI_GameCenter_Crosshair, K2Node_Event_bShow) == 0x000068, "Member 'UI_GameCenter_Crosshair_C_ExecuteUbergraph_UI_GameCenter_Crosshair::K2Node_Event_bShow' has a wrong offset!");
static_assert(offsetof(UI_GameCenter_Crosshair_C_ExecuteUbergraph_UI_GameCenter_Crosshair, K2Node_Event_WidgetClass) == 0x000070, "Member 'UI_GameCenter_Crosshair_C_ExecuteUbergraph_UI_GameCenter_Crosshair::K2Node_Event_WidgetClass' has a wrong offset!");
static_assert(offsetof(UI_GameCenter_Crosshair_C_ExecuteUbergraph_UI_GameCenter_Crosshair, K2Node_Event_ZoomWidgetClass) == 0x000078, "Member 'UI_GameCenter_Crosshair_C_ExecuteUbergraph_UI_GameCenter_Crosshair::K2Node_Event_ZoomWidgetClass' has a wrong offset!");
static_assert(offsetof(UI_GameCenter_Crosshair_C_ExecuteUbergraph_UI_GameCenter_Crosshair, K2Node_Event_ScreenPos) == 0x000080, "Member 'UI_GameCenter_Crosshair_C_ExecuteUbergraph_UI_GameCenter_Crosshair::K2Node_Event_ScreenPos' has a wrong offset!");
static_assert(offsetof(UI_GameCenter_Crosshair_C_ExecuteUbergraph_UI_GameCenter_Crosshair, CallFunc_Conv_DoubleToVector2D_ReturnValue_1) == 0x000088, "Member 'UI_GameCenter_Crosshair_C_ExecuteUbergraph_UI_GameCenter_Crosshair::CallFunc_Conv_DoubleToVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_GameCenter_Crosshair_C_ExecuteUbergraph_UI_GameCenter_Crosshair, CallFunc_CalcHitGuideWidgetClampedPos_OutPos) == 0x000090, "Member 'UI_GameCenter_Crosshair_C_ExecuteUbergraph_UI_GameCenter_Crosshair::CallFunc_CalcHitGuideWidgetClampedPos_OutPos' has a wrong offset!");
static_assert(offsetof(UI_GameCenter_Crosshair_C_ExecuteUbergraph_UI_GameCenter_Crosshair, CallFunc_Divide_Vector2DVector2D_ReturnValue) == 0x000098, "Member 'UI_GameCenter_Crosshair_C_ExecuteUbergraph_UI_GameCenter_Crosshair::CallFunc_Divide_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GameCenter_Crosshair_C_ExecuteUbergraph_UI_GameCenter_Crosshair, K2Node_Select_Default) == 0x0000A0, "Member 'UI_GameCenter_Crosshair_C_ExecuteUbergraph_UI_GameCenter_Crosshair::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UI_GameCenter_Crosshair_C_ExecuteUbergraph_UI_GameCenter_Crosshair, CallFunc_Divide_Vector2DVector2D_ReturnValue_1) == 0x0000A8, "Member 'UI_GameCenter_Crosshair_C_ExecuteUbergraph_UI_GameCenter_Crosshair::CallFunc_Divide_Vector2DVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_GameCenter_Crosshair_C_ExecuteUbergraph_UI_GameCenter_Crosshair, K2Node_DynamicCast_As__________1) == 0x0000B0, "Member 'UI_GameCenter_Crosshair_C_ExecuteUbergraph_UI_GameCenter_Crosshair::K2Node_DynamicCast_As__________1' has a wrong offset!");
static_assert(offsetof(UI_GameCenter_Crosshair_C_ExecuteUbergraph_UI_GameCenter_Crosshair, K2Node_DynamicCast_bSuccess_1) == 0x0000B8, "Member 'UI_GameCenter_Crosshair_C_ExecuteUbergraph_UI_GameCenter_Crosshair::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(UI_GameCenter_Crosshair_C_ExecuteUbergraph_UI_GameCenter_Crosshair, CallFunc_IsVisible_ReturnValue) == 0x0000B9, "Member 'UI_GameCenter_Crosshair_C_ExecuteUbergraph_UI_GameCenter_Crosshair::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GameCenter_Crosshair_C_ExecuteUbergraph_UI_GameCenter_Crosshair, Temp_bool_Variable_3) == 0x0000BA, "Member 'UI_GameCenter_Crosshair_C_ExecuteUbergraph_UI_GameCenter_Crosshair::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(UI_GameCenter_Crosshair_C_ExecuteUbergraph_UI_GameCenter_Crosshair, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x0000BB, "Member 'UI_GameCenter_Crosshair_C_ExecuteUbergraph_UI_GameCenter_Crosshair::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GameCenter_Crosshair_C_ExecuteUbergraph_UI_GameCenter_Crosshair, CallFunc_GetViewportScale_ReturnValue_1) == 0x0000BC, "Member 'UI_GameCenter_Crosshair_C_ExecuteUbergraph_UI_GameCenter_Crosshair::CallFunc_GetViewportScale_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_GameCenter_Crosshair_C_ExecuteUbergraph_UI_GameCenter_Crosshair, CallFunc_Conv_DoubleToVector2D_ReturnValue_2) == 0x0000C0, "Member 'UI_GameCenter_Crosshair_C_ExecuteUbergraph_UI_GameCenter_Crosshair::CallFunc_Conv_DoubleToVector2D_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_GameCenter_Crosshair_C_ExecuteUbergraph_UI_GameCenter_Crosshair, CallFunc_RemoveChild_ReturnValue) == 0x0000C8, "Member 'UI_GameCenter_Crosshair_C_ExecuteUbergraph_UI_GameCenter_Crosshair::CallFunc_RemoveChild_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GameCenter_Crosshair_C_ExecuteUbergraph_UI_GameCenter_Crosshair, CallFunc_Divide_Vector2DVector2D_ReturnValue_2) == 0x0000CC, "Member 'UI_GameCenter_Crosshair_C_ExecuteUbergraph_UI_GameCenter_Crosshair::CallFunc_Divide_Vector2DVector2D_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_GameCenter_Crosshair_C_ExecuteUbergraph_UI_GameCenter_Crosshair, CallFunc_RemoveChild_ReturnValue_1) == 0x0000D4, "Member 'UI_GameCenter_Crosshair_C_ExecuteUbergraph_UI_GameCenter_Crosshair::CallFunc_RemoveChild_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_GameCenter_Crosshair_C_ExecuteUbergraph_UI_GameCenter_Crosshair, K2Node_Select_Default_1) == 0x0000D5, "Member 'UI_GameCenter_Crosshair_C_ExecuteUbergraph_UI_GameCenter_Crosshair::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(UI_GameCenter_Crosshair_C_ExecuteUbergraph_UI_GameCenter_Crosshair, CallFunc_IsValid_ReturnValue_2) == 0x0000D6, "Member 'UI_GameCenter_Crosshair_C_ExecuteUbergraph_UI_GameCenter_Crosshair::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_GameCenter_Crosshair_C_ExecuteUbergraph_UI_GameCenter_Crosshair, K2Node_Select_Default_2) == 0x0000D8, "Member 'UI_GameCenter_Crosshair_C_ExecuteUbergraph_UI_GameCenter_Crosshair::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(UI_GameCenter_Crosshair_C_ExecuteUbergraph_UI_GameCenter_Crosshair, K2Node_Select_Default_3) == 0x0000E0, "Member 'UI_GameCenter_Crosshair_C_ExecuteUbergraph_UI_GameCenter_Crosshair::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(UI_GameCenter_Crosshair_C_ExecuteUbergraph_UI_GameCenter_Crosshair, CallFunc_AttachHitGuideWidget_AttachedHitGuideWidget) == 0x0000E8, "Member 'UI_GameCenter_Crosshair_C_ExecuteUbergraph_UI_GameCenter_Crosshair::CallFunc_AttachHitGuideWidget_AttachedHitGuideWidget' has a wrong offset!");
static_assert(offsetof(UI_GameCenter_Crosshair_C_ExecuteUbergraph_UI_GameCenter_Crosshair, CallFunc_IsValid_ReturnValue_3) == 0x0000F0, "Member 'UI_GameCenter_Crosshair_C_ExecuteUbergraph_UI_GameCenter_Crosshair::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UI_GameCenter_Crosshair_C_ExecuteUbergraph_UI_GameCenter_Crosshair, CallFunc_IsValid_ReturnValue_4) == 0x0000F1, "Member 'UI_GameCenter_Crosshair_C_ExecuteUbergraph_UI_GameCenter_Crosshair::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(UI_GameCenter_Crosshair_C_ExecuteUbergraph_UI_GameCenter_Crosshair, K2Node_VariableSet_LastSpread_ImplicitCast) == 0x0000F8, "Member 'UI_GameCenter_Crosshair_C_ExecuteUbergraph_UI_GameCenter_Crosshair::K2Node_VariableSet_LastSpread_ImplicitCast' has a wrong offset!");
static_assert(offsetof(UI_GameCenter_Crosshair_C_ExecuteUbergraph_UI_GameCenter_Crosshair, CallFunc_Conv_DoubleToVector2D_InDouble_ImplicitCast) == 0x000100, "Member 'UI_GameCenter_Crosshair_C_ExecuteUbergraph_UI_GameCenter_Crosshair::CallFunc_Conv_DoubleToVector2D_InDouble_ImplicitCast' has a wrong offset!");
static_assert(offsetof(UI_GameCenter_Crosshair_C_ExecuteUbergraph_UI_GameCenter_Crosshair, CallFunc_Conv_DoubleToVector2D_InDouble_ImplicitCast_1) == 0x000108, "Member 'UI_GameCenter_Crosshair_C_ExecuteUbergraph_UI_GameCenter_Crosshair::CallFunc_Conv_DoubleToVector2D_InDouble_ImplicitCast_1' has a wrong offset!");

// Function UI_GameCenter_Crosshair.UI_GameCenter_Crosshair_C.ResetHitGuide
// 0x0002 (0x0002 - 0x0000)
struct UI_GameCenter_Crosshair_C_ResetHitGuide final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_GameCenter_Crosshair_C_ResetHitGuide) == 0x000001, "Wrong alignment on UI_GameCenter_Crosshair_C_ResetHitGuide");
static_assert(sizeof(UI_GameCenter_Crosshair_C_ResetHitGuide) == 0x000002, "Wrong size on UI_GameCenter_Crosshair_C_ResetHitGuide");
static_assert(offsetof(UI_GameCenter_Crosshair_C_ResetHitGuide, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'UI_GameCenter_Crosshair_C_ResetHitGuide::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GameCenter_Crosshair_C_ResetHitGuide, CallFunc_IsValid_ReturnValue_1) == 0x000001, "Member 'UI_GameCenter_Crosshair_C_ResetHitGuide::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function UI_GameCenter_Crosshair.UI_GameCenter_Crosshair_C.UpdateCrosshairOpacity
// 0x0058 (0x0058 - 0x0000)
struct UI_GameCenter_Crosshair_C_UpdateCrosshairOpacity final
{
public:
	bool                                          bOpaqueCrosshair;                                  // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bOpaquePanel;                                      // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidClass_ReturnValue;                 // 0x0017(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue;               // 0x0020(0x0010)(ReferenceParm, ContainsInstancedReference)
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_CrosshairBase_C*                    K2Node_DynamicCast_AsWB_Crosshair_Base;            // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52[0x2];                                       // 0x0052(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SetRenderOpacity_InOpacity_ImplicitCast;  // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_GameCenter_Crosshair_C_UpdateCrosshairOpacity) == 0x000008, "Wrong alignment on UI_GameCenter_Crosshair_C_UpdateCrosshairOpacity");
static_assert(sizeof(UI_GameCenter_Crosshair_C_UpdateCrosshairOpacity) == 0x000058, "Wrong size on UI_GameCenter_Crosshair_C_UpdateCrosshairOpacity");
static_assert(offsetof(UI_GameCenter_Crosshair_C_UpdateCrosshairOpacity, bOpaqueCrosshair) == 0x000000, "Member 'UI_GameCenter_Crosshair_C_UpdateCrosshairOpacity::bOpaqueCrosshair' has a wrong offset!");
static_assert(offsetof(UI_GameCenter_Crosshair_C_UpdateCrosshairOpacity, bOpaquePanel) == 0x000001, "Member 'UI_GameCenter_Crosshair_C_UpdateCrosshairOpacity::bOpaquePanel' has a wrong offset!");
static_assert(offsetof(UI_GameCenter_Crosshair_C_UpdateCrosshairOpacity, Temp_int_Array_Index_Variable) == 0x000004, "Member 'UI_GameCenter_Crosshair_C_UpdateCrosshairOpacity::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(UI_GameCenter_Crosshair_C_UpdateCrosshairOpacity, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'UI_GameCenter_Crosshair_C_UpdateCrosshairOpacity::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(UI_GameCenter_Crosshair_C_UpdateCrosshairOpacity, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'UI_GameCenter_Crosshair_C_UpdateCrosshairOpacity::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GameCenter_Crosshair_C_UpdateCrosshairOpacity, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'UI_GameCenter_Crosshair_C_UpdateCrosshairOpacity::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GameCenter_Crosshair_C_UpdateCrosshairOpacity, CallFunc_Not_PreBool_ReturnValue) == 0x000011, "Member 'UI_GameCenter_Crosshair_C_UpdateCrosshairOpacity::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GameCenter_Crosshair_C_UpdateCrosshairOpacity, CallFunc_IsValid_ReturnValue_1) == 0x000012, "Member 'UI_GameCenter_Crosshair_C_UpdateCrosshairOpacity::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_GameCenter_Crosshair_C_UpdateCrosshairOpacity, CallFunc_BooleanAND_ReturnValue) == 0x000013, "Member 'UI_GameCenter_Crosshair_C_UpdateCrosshairOpacity::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GameCenter_Crosshair_C_UpdateCrosshairOpacity, CallFunc_BooleanOR_ReturnValue) == 0x000014, "Member 'UI_GameCenter_Crosshair_C_UpdateCrosshairOpacity::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GameCenter_Crosshair_C_UpdateCrosshairOpacity, CallFunc_IsVisible_ReturnValue) == 0x000015, "Member 'UI_GameCenter_Crosshair_C_UpdateCrosshairOpacity::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GameCenter_Crosshair_C_UpdateCrosshairOpacity, CallFunc_BooleanAND_ReturnValue_1) == 0x000016, "Member 'UI_GameCenter_Crosshair_C_UpdateCrosshairOpacity::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_GameCenter_Crosshair_C_UpdateCrosshairOpacity, CallFunc_IsValidClass_ReturnValue) == 0x000017, "Member 'UI_GameCenter_Crosshair_C_UpdateCrosshairOpacity::CallFunc_IsValidClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GameCenter_Crosshair_C_UpdateCrosshairOpacity, CallFunc_SelectFloat_ReturnValue) == 0x000018, "Member 'UI_GameCenter_Crosshair_C_UpdateCrosshairOpacity::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GameCenter_Crosshair_C_UpdateCrosshairOpacity, CallFunc_GetAllChildren_ReturnValue) == 0x000020, "Member 'UI_GameCenter_Crosshair_C_UpdateCrosshairOpacity::CallFunc_GetAllChildren_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GameCenter_Crosshair_C_UpdateCrosshairOpacity, CallFunc_SelectFloat_ReturnValue_1) == 0x000030, "Member 'UI_GameCenter_Crosshair_C_UpdateCrosshairOpacity::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_GameCenter_Crosshair_C_UpdateCrosshairOpacity, CallFunc_Array_Get_Item) == 0x000038, "Member 'UI_GameCenter_Crosshair_C_UpdateCrosshairOpacity::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(UI_GameCenter_Crosshair_C_UpdateCrosshairOpacity, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'UI_GameCenter_Crosshair_C_UpdateCrosshairOpacity::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GameCenter_Crosshair_C_UpdateCrosshairOpacity, K2Node_DynamicCast_AsWB_Crosshair_Base) == 0x000048, "Member 'UI_GameCenter_Crosshair_C_UpdateCrosshairOpacity::K2Node_DynamicCast_AsWB_Crosshair_Base' has a wrong offset!");
static_assert(offsetof(UI_GameCenter_Crosshair_C_UpdateCrosshairOpacity, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'UI_GameCenter_Crosshair_C_UpdateCrosshairOpacity::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(UI_GameCenter_Crosshair_C_UpdateCrosshairOpacity, CallFunc_Less_IntInt_ReturnValue) == 0x000051, "Member 'UI_GameCenter_Crosshair_C_UpdateCrosshairOpacity::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GameCenter_Crosshair_C_UpdateCrosshairOpacity, CallFunc_SetRenderOpacity_InOpacity_ImplicitCast) == 0x000054, "Member 'UI_GameCenter_Crosshair_C_UpdateCrosshairOpacity::CallFunc_SetRenderOpacity_InOpacity_ImplicitCast' has a wrong offset!");

// Function UI_GameCenter_Crosshair.UI_GameCenter_Crosshair_C.UpdateCrosshairSpread
// 0x0020 (0x0020 - 0x0000)
struct UI_GameCenter_Crosshair_C_UpdateCrosshairSpread final
{
public:
	class UWB_CrosshairBase_C*                    K2Node_DynamicCast_AsWB_Crosshair_Base;            // 0x0000(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_GameCenter_Crosshair_C_UpdateCrosshairSpread) == 0x000008, "Wrong alignment on UI_GameCenter_Crosshair_C_UpdateCrosshairSpread");
static_assert(sizeof(UI_GameCenter_Crosshair_C_UpdateCrosshairSpread) == 0x000020, "Wrong size on UI_GameCenter_Crosshair_C_UpdateCrosshairSpread");
static_assert(offsetof(UI_GameCenter_Crosshair_C_UpdateCrosshairSpread, K2Node_DynamicCast_AsWB_Crosshair_Base) == 0x000000, "Member 'UI_GameCenter_Crosshair_C_UpdateCrosshairSpread::K2Node_DynamicCast_AsWB_Crosshair_Base' has a wrong offset!");
static_assert(offsetof(UI_GameCenter_Crosshair_C_UpdateCrosshairSpread, K2Node_DynamicCast_bSuccess) == 0x000008, "Member 'UI_GameCenter_Crosshair_C_UpdateCrosshairSpread::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(UI_GameCenter_Crosshair_C_UpdateCrosshairSpread, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000010, "Member 'UI_GameCenter_Crosshair_C_UpdateCrosshairSpread::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GameCenter_Crosshair_C_UpdateCrosshairSpread, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'UI_GameCenter_Crosshair_C_UpdateCrosshairSpread::CallFunc_IsValid_ReturnValue' has a wrong offset!");

}

