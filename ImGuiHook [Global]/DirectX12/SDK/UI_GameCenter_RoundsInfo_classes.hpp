#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_GameCenter_RoundsInfo

#include "Basic.hpp"

#include "M1_structs.hpp"
#include "M1_classes.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass UI_GameCenter_RoundsInfo.UI_GameCenter_RoundsInfo_C
// 0x0030 (0x0770 - 0x0740)
class UUI_GameCenter_RoundsInfo_C final : public UM1UIGameCenter_RoundsInfo
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0740(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       NewAnimation;                                      // 0x0748(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Anim_Open;                                         // 0x0750(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 IMG_AmmoProgress_BackGround_2;                     // 0x0758(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UM1TextBlock*                           Slash;                                             // 0x0760(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_ReloadMark_C*                       UI_ReloadMark;                                     // 0x0768(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_UI_GameCenter_RoundsInfo(int32 EntryPoint);
	void OnEventWidgetOpen(EM1WidgetAnimDirection InDirection);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"UI_GameCenter_RoundsInfo_C">();
	}
	static class UUI_GameCenter_RoundsInfo_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUI_GameCenter_RoundsInfo_C>();
	}
};
static_assert(alignof(UUI_GameCenter_RoundsInfo_C) == 0x000008, "Wrong alignment on UUI_GameCenter_RoundsInfo_C");
static_assert(sizeof(UUI_GameCenter_RoundsInfo_C) == 0x000770, "Wrong size on UUI_GameCenter_RoundsInfo_C");
static_assert(offsetof(UUI_GameCenter_RoundsInfo_C, UberGraphFrame) == 0x000740, "Member 'UUI_GameCenter_RoundsInfo_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UUI_GameCenter_RoundsInfo_C, NewAnimation) == 0x000748, "Member 'UUI_GameCenter_RoundsInfo_C::NewAnimation' has a wrong offset!");
static_assert(offsetof(UUI_GameCenter_RoundsInfo_C, Anim_Open) == 0x000750, "Member 'UUI_GameCenter_RoundsInfo_C::Anim_Open' has a wrong offset!");
static_assert(offsetof(UUI_GameCenter_RoundsInfo_C, IMG_AmmoProgress_BackGround_2) == 0x000758, "Member 'UUI_GameCenter_RoundsInfo_C::IMG_AmmoProgress_BackGround_2' has a wrong offset!");
static_assert(offsetof(UUI_GameCenter_RoundsInfo_C, Slash) == 0x000760, "Member 'UUI_GameCenter_RoundsInfo_C::Slash' has a wrong offset!");
static_assert(offsetof(UUI_GameCenter_RoundsInfo_C, UI_ReloadMark) == 0x000768, "Member 'UUI_GameCenter_RoundsInfo_C::UI_ReloadMark' has a wrong offset!");

}

