#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_GameGuide_GainItem_mini

#include "Basic.hpp"

#include "M1_classes.hpp"
#include "Engine_structs.hpp"
#include "M1Data_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass UI_GameGuide_GainItem_mini.UI_GameGuide_GainItem_mini_C
// 0x0060 (0x0788 - 0x0728)
class UUI_GameGuide_GainItem_mini_C final : public UM1UIGame_ReceivedItem
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0728(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       AnimOpen_Tier04;                                   // 0x0730(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       AnimOpen_Tier03;                                   // 0x0738(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       AnimOpen_Tier02;                                   // 0x0740(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       AnimOpen_Tier01;                                   // 0x0748(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       AnimOpen_Tier00;                                   // 0x0750(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       AnimStack;                                         // 0x0758(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UBorder*                                Border_Icon;                                       // 0x0760(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Icon;                                              // 0x0768(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UM1WidgetSwitcher*                      IconSlot;                                          // 0x0770(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_Deco_Cube_01_C*                     UI_Deco_Cube_01;                                   // 0x0778(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Weapon;                                            // 0x0780(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	void BP_PlayStackAnim();
	void BP_PlayTierAnim(EM1ItemTierType InTier);
	void BP_SetItemIconType(EM1ItemType InItemType, EM1CurrencyType InCurrecyType, EM1EquipmentCategoryType InEquipCategory, EM1EquipItemClassType InWeaponClassType, EM1ConsumableItemCategoryType InConsumableCategory, EM1RuneClassType InRuneClassType);
	void BP_SetVisibleQuantityOrLevel(bool bIsVisible);
	void BP_widget_playAkEvent();
	void BP_widget_playAkEvent_1();
	void BP_widget_playAkEvent_2();
	void BP_widget_playAkEvent_3();
	void BP_widget_playAkEvent_4();
	void Construct();
	void ExecuteUbergraph_UI_GameGuide_GainItem_mini(int32 EntryPoint);
	void SequenceEvent__ENTRYPOINTUI_GameGuide_GainItem_mini();
	void SequenceEvent__ENTRYPOINTUI_GameGuide_GainItem_mini_0();
	void SequenceEvent__ENTRYPOINTUI_GameGuide_GainItem_mini_1();
	void SequenceEvent__ENTRYPOINTUI_GameGuide_GainItem_mini_2();
	void SequenceEvent__ENTRYPOINTUI_GameGuide_GainItem_mini_3();
	void UISetItemIcon(EM1ItemType InItemType, EM1CurrencyType InCurrencyType, EM1EquipmentCategoryType InEquipCategory, EM1EquipItemClassType InWeaponClass, EM1ConsumableItemCategoryType InConsumableCategoryType, EM1RuneClassType InRuneClassType);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"UI_GameGuide_GainItem_mini_C">();
	}
	static class UUI_GameGuide_GainItem_mini_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUI_GameGuide_GainItem_mini_C>();
	}
};
static_assert(alignof(UUI_GameGuide_GainItem_mini_C) == 0x000008, "Wrong alignment on UUI_GameGuide_GainItem_mini_C");
static_assert(sizeof(UUI_GameGuide_GainItem_mini_C) == 0x000788, "Wrong size on UUI_GameGuide_GainItem_mini_C");
static_assert(offsetof(UUI_GameGuide_GainItem_mini_C, UberGraphFrame) == 0x000728, "Member 'UUI_GameGuide_GainItem_mini_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UUI_GameGuide_GainItem_mini_C, AnimOpen_Tier04) == 0x000730, "Member 'UUI_GameGuide_GainItem_mini_C::AnimOpen_Tier04' has a wrong offset!");
static_assert(offsetof(UUI_GameGuide_GainItem_mini_C, AnimOpen_Tier03) == 0x000738, "Member 'UUI_GameGuide_GainItem_mini_C::AnimOpen_Tier03' has a wrong offset!");
static_assert(offsetof(UUI_GameGuide_GainItem_mini_C, AnimOpen_Tier02) == 0x000740, "Member 'UUI_GameGuide_GainItem_mini_C::AnimOpen_Tier02' has a wrong offset!");
static_assert(offsetof(UUI_GameGuide_GainItem_mini_C, AnimOpen_Tier01) == 0x000748, "Member 'UUI_GameGuide_GainItem_mini_C::AnimOpen_Tier01' has a wrong offset!");
static_assert(offsetof(UUI_GameGuide_GainItem_mini_C, AnimOpen_Tier00) == 0x000750, "Member 'UUI_GameGuide_GainItem_mini_C::AnimOpen_Tier00' has a wrong offset!");
static_assert(offsetof(UUI_GameGuide_GainItem_mini_C, AnimStack) == 0x000758, "Member 'UUI_GameGuide_GainItem_mini_C::AnimStack' has a wrong offset!");
static_assert(offsetof(UUI_GameGuide_GainItem_mini_C, Border_Icon) == 0x000760, "Member 'UUI_GameGuide_GainItem_mini_C::Border_Icon' has a wrong offset!");
static_assert(offsetof(UUI_GameGuide_GainItem_mini_C, Icon) == 0x000768, "Member 'UUI_GameGuide_GainItem_mini_C::Icon' has a wrong offset!");
static_assert(offsetof(UUI_GameGuide_GainItem_mini_C, IconSlot) == 0x000770, "Member 'UUI_GameGuide_GainItem_mini_C::IconSlot' has a wrong offset!");
static_assert(offsetof(UUI_GameGuide_GainItem_mini_C, UI_Deco_Cube_01) == 0x000778, "Member 'UUI_GameGuide_GainItem_mini_C::UI_Deco_Cube_01' has a wrong offset!");
static_assert(offsetof(UUI_GameGuide_GainItem_mini_C, Weapon) == 0x000780, "Member 'UUI_GameGuide_GainItem_mini_C::Weapon' has a wrong offset!");

}

