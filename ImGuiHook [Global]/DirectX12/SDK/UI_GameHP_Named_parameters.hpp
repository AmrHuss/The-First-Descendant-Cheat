#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_GameHP_Named

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "M1Data_structs.hpp"
#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function UI_GameHP_Named.UI_GameHP_Named_C.BP_NotifyTagAdded
// 0x0008 (0x0008 - 0x0000)
struct UI_GameHP_Named_C_BP_NotifyTagAdded final
{
public:
	struct FGameplayTag                           Tag;                                               // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_GameHP_Named_C_BP_NotifyTagAdded) == 0x000004, "Wrong alignment on UI_GameHP_Named_C_BP_NotifyTagAdded");
static_assert(sizeof(UI_GameHP_Named_C_BP_NotifyTagAdded) == 0x000008, "Wrong size on UI_GameHP_Named_C_BP_NotifyTagAdded");
static_assert(offsetof(UI_GameHP_Named_C_BP_NotifyTagAdded, Tag) == 0x000000, "Member 'UI_GameHP_Named_C_BP_NotifyTagAdded::Tag' has a wrong offset!");

// Function UI_GameHP_Named.UI_GameHP_Named_C.BP_NotifyTagRemoved
// 0x0008 (0x0008 - 0x0000)
struct UI_GameHP_Named_C_BP_NotifyTagRemoved final
{
public:
	struct FGameplayTag                           Tag;                                               // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_GameHP_Named_C_BP_NotifyTagRemoved) == 0x000004, "Wrong alignment on UI_GameHP_Named_C_BP_NotifyTagRemoved");
static_assert(sizeof(UI_GameHP_Named_C_BP_NotifyTagRemoved) == 0x000008, "Wrong size on UI_GameHP_Named_C_BP_NotifyTagRemoved");
static_assert(offsetof(UI_GameHP_Named_C_BP_NotifyTagRemoved, Tag) == 0x000000, "Member 'UI_GameHP_Named_C_BP_NotifyTagRemoved::Tag' has a wrong offset!");

// Function UI_GameHP_Named.UI_GameHP_Named_C.BP_OnBerserkGaugeChanged
// 0x0004 (0x0004 - 0x0000)
struct UI_GameHP_Named_C_BP_OnBerserkGaugeChanged final
{
public:
	float                                         GaugeRatio;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_GameHP_Named_C_BP_OnBerserkGaugeChanged) == 0x000004, "Wrong alignment on UI_GameHP_Named_C_BP_OnBerserkGaugeChanged");
static_assert(sizeof(UI_GameHP_Named_C_BP_OnBerserkGaugeChanged) == 0x000004, "Wrong size on UI_GameHP_Named_C_BP_OnBerserkGaugeChanged");
static_assert(offsetof(UI_GameHP_Named_C_BP_OnBerserkGaugeChanged, GaugeRatio) == 0x000000, "Member 'UI_GameHP_Named_C_BP_OnBerserkGaugeChanged::GaugeRatio' has a wrong offset!");

// Function UI_GameHP_Named.UI_GameHP_Named_C.BP_PlayFocusAnim
// 0x0001 (0x0001 - 0x0000)
struct UI_GameHP_Named_C_BP_PlayFocusAnim final
{
public:
	bool                                          bInForwardAnim;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_GameHP_Named_C_BP_PlayFocusAnim) == 0x000001, "Wrong alignment on UI_GameHP_Named_C_BP_PlayFocusAnim");
static_assert(sizeof(UI_GameHP_Named_C_BP_PlayFocusAnim) == 0x000001, "Wrong size on UI_GameHP_Named_C_BP_PlayFocusAnim");
static_assert(offsetof(UI_GameHP_Named_C_BP_PlayFocusAnim, bInForwardAnim) == 0x000000, "Member 'UI_GameHP_Named_C_BP_PlayFocusAnim::bInForwardAnim' has a wrong offset!");

// Function UI_GameHP_Named.UI_GameHP_Named_C.BP_PlayNameAnim
// 0x0001 (0x0001 - 0x0000)
struct UI_GameHP_Named_C_BP_PlayNameAnim final
{
public:
	bool                                          bInForwardAnim;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_GameHP_Named_C_BP_PlayNameAnim) == 0x000001, "Wrong alignment on UI_GameHP_Named_C_BP_PlayNameAnim");
static_assert(sizeof(UI_GameHP_Named_C_BP_PlayNameAnim) == 0x000001, "Wrong size on UI_GameHP_Named_C_BP_PlayNameAnim");
static_assert(offsetof(UI_GameHP_Named_C_BP_PlayNameAnim, bInForwardAnim) == 0x000000, "Member 'UI_GameHP_Named_C_BP_PlayNameAnim::bInForwardAnim' has a wrong offset!");

// Function UI_GameHP_Named.UI_GameHP_Named_C.BP_UpdateWeakAdvantageIcon
// 0x0008 (0x0008 - 0x0000)
struct UI_GameHP_Named_C_BP_UpdateWeakAdvantageIcon final
{
public:
	class UTexture2D*                             WeakAdvantageIcon;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_GameHP_Named_C_BP_UpdateWeakAdvantageIcon) == 0x000008, "Wrong alignment on UI_GameHP_Named_C_BP_UpdateWeakAdvantageIcon");
static_assert(sizeof(UI_GameHP_Named_C_BP_UpdateWeakAdvantageIcon) == 0x000008, "Wrong size on UI_GameHP_Named_C_BP_UpdateWeakAdvantageIcon");
static_assert(offsetof(UI_GameHP_Named_C_BP_UpdateWeakAdvantageIcon, WeakAdvantageIcon) == 0x000000, "Member 'UI_GameHP_Named_C_BP_UpdateWeakAdvantageIcon::WeakAdvantageIcon' has a wrong offset!");

// Function UI_GameHP_Named.UI_GameHP_Named_C.BP_UpdateWeakElementalIcons
// 0x0010 (0x0010 - 0x0000)
struct UI_GameHP_Named_C_BP_UpdateWeakElementalIcons final
{
public:
	TArray<class UTexture2D*>                     WeakElementalIcons;                                // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(UI_GameHP_Named_C_BP_UpdateWeakElementalIcons) == 0x000008, "Wrong alignment on UI_GameHP_Named_C_BP_UpdateWeakElementalIcons");
static_assert(sizeof(UI_GameHP_Named_C_BP_UpdateWeakElementalIcons) == 0x000010, "Wrong size on UI_GameHP_Named_C_BP_UpdateWeakElementalIcons");
static_assert(offsetof(UI_GameHP_Named_C_BP_UpdateWeakElementalIcons, WeakElementalIcons) == 0x000000, "Member 'UI_GameHP_Named_C_BP_UpdateWeakElementalIcons::WeakElementalIcons' has a wrong offset!");

// Function UI_GameHP_Named.UI_GameHP_Named_C.ExecuteUbergraph_UI_GameHP_Named
// 0x01F0 (0x01F0 - 0x0000)
struct UI_GameHP_Named_C_ExecuteUbergraph_UI_GameHP_Named final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UImage*                                 CallFunc_SpawnObject_ReturnValue;                  // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          Temp_byte_Variable;                                // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x2];                                       // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_GaugeRatio;                           // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UTexture2D*>                     K2Node_Event_WeakElementalIcons;                   // 0x0028(0x0010)(ConstParm, ReferenceParm)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue;                     // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_Event_WeakAdvantageIcon;                    // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           K2Node_Event_Tag_1;                                // 0x005C(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_Event_Tag;                                  // 0x0064(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	bool                                          GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess;   // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess_1; // 0x006D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6E[0x2];                                       // 0x006E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             CallFunc_Array_Get_Item;                           // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush;                      // 0x0080(0x00C0)()
	bool                                          K2Node_Event_bInForwardAnim_1;                     // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bInForwardAnim;                       // 0x0141(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          Temp_byte_Variable_1;                              // 0x0142(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          Temp_byte_Variable_2;                              // 0x0143(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0144(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0145(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_146[0x2];                                      // 0x0146(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AM1Character*                           CallFunc_GetInfoOwner_ReturnValue;                 // 0x0148(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          K2Node_Select_Default;                             // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetTaggedBoolVariantFrom_ReturnValue;     // 0x0151(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_152[0x6];                                      // 0x0152(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0158(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AM1Character*                           CallFunc_GetInfoOwner_ReturnValue_1;               // 0x0160(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AM1Character*                           CallFunc_GetInfoOwner_ReturnValue_2;               // 0x0168(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTaggedFloatVariantFrom_ReturnValue;    // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTaggedFloatVariantFrom_ReturnValue_1;  // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          Temp_byte_Variable_3;                              // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_179[0x7];                                      // 0x0179(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          K2Node_Select_Default_1;                           // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0189(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_18A[0x6];                                      // 0x018A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0190(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_DeltaSeconds;                   // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x019C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19D[0x3];                                      // 0x019D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AM1Character*                           CallFunc_GetInfoOwner_ReturnValue_3;               // 0x01A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTaggedFloatVariantFrom_ReturnValue_2;  // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x01AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1AD[0x3];                                      // 0x01AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDeprecateSlateVector2D                K2Node_MakeStruct_ImageSize_ImplicitCast;          // 0x01B4(0x0008)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BC[0x4];                                      // 0x01BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_A_ImplicitCast;       // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast;      // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_B_ImplicitCast;       // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetPercent_InPercent_ImplicitCast;        // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DC[0x4];                                      // 0x01DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_LessEqual_DoubleDouble_A_ImplicitCast;    // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_GameHP_Named_C_ExecuteUbergraph_UI_GameHP_Named) == 0x000010, "Wrong alignment on UI_GameHP_Named_C_ExecuteUbergraph_UI_GameHP_Named");
static_assert(sizeof(UI_GameHP_Named_C_ExecuteUbergraph_UI_GameHP_Named) == 0x0001F0, "Wrong size on UI_GameHP_Named_C_ExecuteUbergraph_UI_GameHP_Named");
static_assert(offsetof(UI_GameHP_Named_C_ExecuteUbergraph_UI_GameHP_Named, EntryPoint) == 0x000000, "Member 'UI_GameHP_Named_C_ExecuteUbergraph_UI_GameHP_Named::EntryPoint' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Named_C_ExecuteUbergraph_UI_GameHP_Named, CallFunc_SpawnObject_ReturnValue) == 0x000008, "Member 'UI_GameHP_Named_C_ExecuteUbergraph_UI_GameHP_Named::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Named_C_ExecuteUbergraph_UI_GameHP_Named, K2Node_Event_IsDesignTime) == 0x000010, "Member 'UI_GameHP_Named_C_ExecuteUbergraph_UI_GameHP_Named::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Named_C_ExecuteUbergraph_UI_GameHP_Named, Temp_byte_Variable) == 0x000011, "Member 'UI_GameHP_Named_C_ExecuteUbergraph_UI_GameHP_Named::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Named_C_ExecuteUbergraph_UI_GameHP_Named, K2Node_Event_GaugeRatio) == 0x000014, "Member 'UI_GameHP_Named_C_ExecuteUbergraph_UI_GameHP_Named::K2Node_Event_GaugeRatio' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Named_C_ExecuteUbergraph_UI_GameHP_Named, Temp_int_Loop_Counter_Variable) == 0x000018, "Member 'UI_GameHP_Named_C_ExecuteUbergraph_UI_GameHP_Named::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Named_C_ExecuteUbergraph_UI_GameHP_Named, Temp_bool_Variable) == 0x00001C, "Member 'UI_GameHP_Named_C_ExecuteUbergraph_UI_GameHP_Named::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Named_C_ExecuteUbergraph_UI_GameHP_Named, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'UI_GameHP_Named_C_ExecuteUbergraph_UI_GameHP_Named::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Named_C_ExecuteUbergraph_UI_GameHP_Named, K2Node_Event_WeakElementalIcons) == 0x000028, "Member 'UI_GameHP_Named_C_ExecuteUbergraph_UI_GameHP_Named::K2Node_Event_WeakElementalIcons' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Named_C_ExecuteUbergraph_UI_GameHP_Named, CallFunc_MakeVector2D_ReturnValue) == 0x000038, "Member 'UI_GameHP_Named_C_ExecuteUbergraph_UI_GameHP_Named::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Named_C_ExecuteUbergraph_UI_GameHP_Named, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'UI_GameHP_Named_C_ExecuteUbergraph_UI_GameHP_Named::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Named_C_ExecuteUbergraph_UI_GameHP_Named, CallFunc_Less_IntInt_ReturnValue) == 0x000044, "Member 'UI_GameHP_Named_C_ExecuteUbergraph_UI_GameHP_Named::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Named_C_ExecuteUbergraph_UI_GameHP_Named, CallFunc_AddChild_ReturnValue) == 0x000048, "Member 'UI_GameHP_Named_C_ExecuteUbergraph_UI_GameHP_Named::CallFunc_AddChild_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Named_C_ExecuteUbergraph_UI_GameHP_Named, K2Node_Event_WeakAdvantageIcon) == 0x000050, "Member 'UI_GameHP_Named_C_ExecuteUbergraph_UI_GameHP_Named::K2Node_Event_WeakAdvantageIcon' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Named_C_ExecuteUbergraph_UI_GameHP_Named, CallFunc_IsValid_ReturnValue) == 0x000058, "Member 'UI_GameHP_Named_C_ExecuteUbergraph_UI_GameHP_Named::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Named_C_ExecuteUbergraph_UI_GameHP_Named, K2Node_Event_Tag_1) == 0x00005C, "Member 'UI_GameHP_Named_C_ExecuteUbergraph_UI_GameHP_Named::K2Node_Event_Tag_1' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Named_C_ExecuteUbergraph_UI_GameHP_Named, K2Node_Event_Tag) == 0x000064, "Member 'UI_GameHP_Named_C_ExecuteUbergraph_UI_GameHP_Named::K2Node_Event_Tag' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Named_C_ExecuteUbergraph_UI_GameHP_Named, GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess) == 0x00006C, "Member 'UI_GameHP_Named_C_ExecuteUbergraph_UI_GameHP_Named::GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Named_C_ExecuteUbergraph_UI_GameHP_Named, GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess_1) == 0x00006D, "Member 'UI_GameHP_Named_C_ExecuteUbergraph_UI_GameHP_Named::GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Named_C_ExecuteUbergraph_UI_GameHP_Named, Temp_int_Array_Index_Variable) == 0x000070, "Member 'UI_GameHP_Named_C_ExecuteUbergraph_UI_GameHP_Named::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Named_C_ExecuteUbergraph_UI_GameHP_Named, CallFunc_Array_Get_Item) == 0x000078, "Member 'UI_GameHP_Named_C_ExecuteUbergraph_UI_GameHP_Named::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Named_C_ExecuteUbergraph_UI_GameHP_Named, K2Node_MakeStruct_SlateBrush) == 0x000080, "Member 'UI_GameHP_Named_C_ExecuteUbergraph_UI_GameHP_Named::K2Node_MakeStruct_SlateBrush' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Named_C_ExecuteUbergraph_UI_GameHP_Named, K2Node_Event_bInForwardAnim_1) == 0x000140, "Member 'UI_GameHP_Named_C_ExecuteUbergraph_UI_GameHP_Named::K2Node_Event_bInForwardAnim_1' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Named_C_ExecuteUbergraph_UI_GameHP_Named, K2Node_Event_bInForwardAnim) == 0x000141, "Member 'UI_GameHP_Named_C_ExecuteUbergraph_UI_GameHP_Named::K2Node_Event_bInForwardAnim' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Named_C_ExecuteUbergraph_UI_GameHP_Named, Temp_byte_Variable_1) == 0x000142, "Member 'UI_GameHP_Named_C_ExecuteUbergraph_UI_GameHP_Named::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Named_C_ExecuteUbergraph_UI_GameHP_Named, Temp_byte_Variable_2) == 0x000143, "Member 'UI_GameHP_Named_C_ExecuteUbergraph_UI_GameHP_Named::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Named_C_ExecuteUbergraph_UI_GameHP_Named, CallFunc_IsValid_ReturnValue_1) == 0x000144, "Member 'UI_GameHP_Named_C_ExecuteUbergraph_UI_GameHP_Named::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Named_C_ExecuteUbergraph_UI_GameHP_Named, Temp_bool_Variable_1) == 0x000145, "Member 'UI_GameHP_Named_C_ExecuteUbergraph_UI_GameHP_Named::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Named_C_ExecuteUbergraph_UI_GameHP_Named, CallFunc_GetInfoOwner_ReturnValue) == 0x000148, "Member 'UI_GameHP_Named_C_ExecuteUbergraph_UI_GameHP_Named::CallFunc_GetInfoOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Named_C_ExecuteUbergraph_UI_GameHP_Named, K2Node_Select_Default) == 0x000150, "Member 'UI_GameHP_Named_C_ExecuteUbergraph_UI_GameHP_Named::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Named_C_ExecuteUbergraph_UI_GameHP_Named, CallFunc_GetTaggedBoolVariantFrom_ReturnValue) == 0x000151, "Member 'UI_GameHP_Named_C_ExecuteUbergraph_UI_GameHP_Named::CallFunc_GetTaggedBoolVariantFrom_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Named_C_ExecuteUbergraph_UI_GameHP_Named, CallFunc_PlayAnimation_ReturnValue) == 0x000158, "Member 'UI_GameHP_Named_C_ExecuteUbergraph_UI_GameHP_Named::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Named_C_ExecuteUbergraph_UI_GameHP_Named, CallFunc_GetInfoOwner_ReturnValue_1) == 0x000160, "Member 'UI_GameHP_Named_C_ExecuteUbergraph_UI_GameHP_Named::CallFunc_GetInfoOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Named_C_ExecuteUbergraph_UI_GameHP_Named, CallFunc_GetInfoOwner_ReturnValue_2) == 0x000168, "Member 'UI_GameHP_Named_C_ExecuteUbergraph_UI_GameHP_Named::CallFunc_GetInfoOwner_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Named_C_ExecuteUbergraph_UI_GameHP_Named, CallFunc_GetTaggedFloatVariantFrom_ReturnValue) == 0x000170, "Member 'UI_GameHP_Named_C_ExecuteUbergraph_UI_GameHP_Named::CallFunc_GetTaggedFloatVariantFrom_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Named_C_ExecuteUbergraph_UI_GameHP_Named, CallFunc_GetTaggedFloatVariantFrom_ReturnValue_1) == 0x000174, "Member 'UI_GameHP_Named_C_ExecuteUbergraph_UI_GameHP_Named::CallFunc_GetTaggedFloatVariantFrom_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Named_C_ExecuteUbergraph_UI_GameHP_Named, Temp_byte_Variable_3) == 0x000178, "Member 'UI_GameHP_Named_C_ExecuteUbergraph_UI_GameHP_Named::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Named_C_ExecuteUbergraph_UI_GameHP_Named, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000180, "Member 'UI_GameHP_Named_C_ExecuteUbergraph_UI_GameHP_Named::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Named_C_ExecuteUbergraph_UI_GameHP_Named, K2Node_Select_Default_1) == 0x000188, "Member 'UI_GameHP_Named_C_ExecuteUbergraph_UI_GameHP_Named::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Named_C_ExecuteUbergraph_UI_GameHP_Named, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000189, "Member 'UI_GameHP_Named_C_ExecuteUbergraph_UI_GameHP_Named::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Named_C_ExecuteUbergraph_UI_GameHP_Named, CallFunc_PlayAnimation_ReturnValue_1) == 0x000190, "Member 'UI_GameHP_Named_C_ExecuteUbergraph_UI_GameHP_Named::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Named_C_ExecuteUbergraph_UI_GameHP_Named, K2Node_CustomEvent_DeltaSeconds) == 0x000198, "Member 'UI_GameHP_Named_C_ExecuteUbergraph_UI_GameHP_Named::K2Node_CustomEvent_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Named_C_ExecuteUbergraph_UI_GameHP_Named, CallFunc_IsValid_ReturnValue_2) == 0x00019C, "Member 'UI_GameHP_Named_C_ExecuteUbergraph_UI_GameHP_Named::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Named_C_ExecuteUbergraph_UI_GameHP_Named, CallFunc_GetInfoOwner_ReturnValue_3) == 0x0001A0, "Member 'UI_GameHP_Named_C_ExecuteUbergraph_UI_GameHP_Named::CallFunc_GetInfoOwner_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Named_C_ExecuteUbergraph_UI_GameHP_Named, CallFunc_GetTaggedFloatVariantFrom_ReturnValue_2) == 0x0001A8, "Member 'UI_GameHP_Named_C_ExecuteUbergraph_UI_GameHP_Named::CallFunc_GetTaggedFloatVariantFrom_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Named_C_ExecuteUbergraph_UI_GameHP_Named, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x0001AC, "Member 'UI_GameHP_Named_C_ExecuteUbergraph_UI_GameHP_Named::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Named_C_ExecuteUbergraph_UI_GameHP_Named, CallFunc_SelectInt_ReturnValue) == 0x0001B0, "Member 'UI_GameHP_Named_C_ExecuteUbergraph_UI_GameHP_Named::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Named_C_ExecuteUbergraph_UI_GameHP_Named, K2Node_MakeStruct_ImageSize_ImplicitCast) == 0x0001B4, "Member 'UI_GameHP_Named_C_ExecuteUbergraph_UI_GameHP_Named::K2Node_MakeStruct_ImageSize_ImplicitCast' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Named_C_ExecuteUbergraph_UI_GameHP_Named, CallFunc_Divide_DoubleDouble_A_ImplicitCast) == 0x0001C0, "Member 'UI_GameHP_Named_C_ExecuteUbergraph_UI_GameHP_Named::CallFunc_Divide_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Named_C_ExecuteUbergraph_UI_GameHP_Named, CallFunc_Greater_DoubleDouble_A_ImplicitCast) == 0x0001C8, "Member 'UI_GameHP_Named_C_ExecuteUbergraph_UI_GameHP_Named::CallFunc_Greater_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Named_C_ExecuteUbergraph_UI_GameHP_Named, CallFunc_Divide_DoubleDouble_B_ImplicitCast) == 0x0001D0, "Member 'UI_GameHP_Named_C_ExecuteUbergraph_UI_GameHP_Named::CallFunc_Divide_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Named_C_ExecuteUbergraph_UI_GameHP_Named, CallFunc_SetPercent_InPercent_ImplicitCast) == 0x0001D8, "Member 'UI_GameHP_Named_C_ExecuteUbergraph_UI_GameHP_Named::CallFunc_SetPercent_InPercent_ImplicitCast' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Named_C_ExecuteUbergraph_UI_GameHP_Named, CallFunc_LessEqual_DoubleDouble_A_ImplicitCast) == 0x0001E0, "Member 'UI_GameHP_Named_C_ExecuteUbergraph_UI_GameHP_Named::CallFunc_LessEqual_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function UI_GameHP_Named.UI_GameHP_Named_C.GetPhasedHP
// 0x0098 (0x0098 - 0x0000)
struct UI_GameHP_Named_C_GetPhasedHP final
{
public:
	struct FM1ScaledInteger                       CurrentHp;                                         // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash)
	float                                         OutRatio;                                          // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CurHP;                                             // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         EndHP;                                             // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TotalHP;                                           // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ScaledIntToInt_ReturnValue;          // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AM1Character*                           CallFunc_GetInfoOwner_ReturnValue;                 // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AM1Character*                           CallFunc_GetInfoOwner_ReturnValue_1;               // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetTaggedIntVariantFrom_ReturnValue;      // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetTaggedBoolVariantFrom_ReturnValue;     // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36[0x2];                                       // 0x0036(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FM1ScaledInteger                       CallFunc_FromInt_ReturnValue;                      // 0x0038(0x0008)(NoDestructor, HasGetValueTypeHash)
	class AM1Character*                           CallFunc_GetInfoOwner_ReturnValue_2;               // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FM1ScaledInteger                       CallFunc_Divide_ScaledIntScaledInt_ReturnValue;    // 0x0048(0x0008)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetTaggedIntVariantFrom_ReturnValue_1;    // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_ScaledIntToFloat_ReturnValue;        // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetTaggedIntVariantFrom_ReturnValue_2;    // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue;                         // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_1;           // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_FunctionResult_OutRatio_ImplicitCast;       // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_GameHP_Named_C_GetPhasedHP) == 0x000008, "Wrong alignment on UI_GameHP_Named_C_GetPhasedHP");
static_assert(sizeof(UI_GameHP_Named_C_GetPhasedHP) == 0x000098, "Wrong size on UI_GameHP_Named_C_GetPhasedHP");
static_assert(offsetof(UI_GameHP_Named_C_GetPhasedHP, CurrentHp) == 0x000000, "Member 'UI_GameHP_Named_C_GetPhasedHP::CurrentHp' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Named_C_GetPhasedHP, OutRatio) == 0x000008, "Member 'UI_GameHP_Named_C_GetPhasedHP::OutRatio' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Named_C_GetPhasedHP, ReturnValue) == 0x00000C, "Member 'UI_GameHP_Named_C_GetPhasedHP::ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Named_C_GetPhasedHP, CurHP) == 0x000010, "Member 'UI_GameHP_Named_C_GetPhasedHP::CurHP' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Named_C_GetPhasedHP, EndHP) == 0x000014, "Member 'UI_GameHP_Named_C_GetPhasedHP::EndHP' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Named_C_GetPhasedHP, TotalHP) == 0x000018, "Member 'UI_GameHP_Named_C_GetPhasedHP::TotalHP' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Named_C_GetPhasedHP, CallFunc_Conv_ScaledIntToInt_ReturnValue) == 0x00001C, "Member 'UI_GameHP_Named_C_GetPhasedHP::CallFunc_Conv_ScaledIntToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Named_C_GetPhasedHP, CallFunc_GetInfoOwner_ReturnValue) == 0x000020, "Member 'UI_GameHP_Named_C_GetPhasedHP::CallFunc_GetInfoOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Named_C_GetPhasedHP, CallFunc_GetInfoOwner_ReturnValue_1) == 0x000028, "Member 'UI_GameHP_Named_C_GetPhasedHP::CallFunc_GetInfoOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Named_C_GetPhasedHP, CallFunc_GetTaggedIntVariantFrom_ReturnValue) == 0x000030, "Member 'UI_GameHP_Named_C_GetPhasedHP::CallFunc_GetTaggedIntVariantFrom_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Named_C_GetPhasedHP, CallFunc_GetTaggedBoolVariantFrom_ReturnValue) == 0x000034, "Member 'UI_GameHP_Named_C_GetPhasedHP::CallFunc_GetTaggedBoolVariantFrom_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Named_C_GetPhasedHP, CallFunc_Greater_IntInt_ReturnValue) == 0x000035, "Member 'UI_GameHP_Named_C_GetPhasedHP::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Named_C_GetPhasedHP, CallFunc_FromInt_ReturnValue) == 0x000038, "Member 'UI_GameHP_Named_C_GetPhasedHP::CallFunc_FromInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Named_C_GetPhasedHP, CallFunc_GetInfoOwner_ReturnValue_2) == 0x000040, "Member 'UI_GameHP_Named_C_GetPhasedHP::CallFunc_GetInfoOwner_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Named_C_GetPhasedHP, CallFunc_Divide_ScaledIntScaledInt_ReturnValue) == 0x000048, "Member 'UI_GameHP_Named_C_GetPhasedHP::CallFunc_Divide_ScaledIntScaledInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Named_C_GetPhasedHP, CallFunc_GetTaggedIntVariantFrom_ReturnValue_1) == 0x000050, "Member 'UI_GameHP_Named_C_GetPhasedHP::CallFunc_GetTaggedIntVariantFrom_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Named_C_GetPhasedHP, CallFunc_Conv_ScaledIntToFloat_ReturnValue) == 0x000054, "Member 'UI_GameHP_Named_C_GetPhasedHP::CallFunc_Conv_ScaledIntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Named_C_GetPhasedHP, CallFunc_GetTaggedIntVariantFrom_ReturnValue_2) == 0x000058, "Member 'UI_GameHP_Named_C_GetPhasedHP::CallFunc_GetTaggedIntVariantFrom_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Named_C_GetPhasedHP, CallFunc_Greater_IntInt_ReturnValue_1) == 0x00005C, "Member 'UI_GameHP_Named_C_GetPhasedHP::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Named_C_GetPhasedHP, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000060, "Member 'UI_GameHP_Named_C_GetPhasedHP::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Named_C_GetPhasedHP, CallFunc_FMax_ReturnValue) == 0x000068, "Member 'UI_GameHP_Named_C_GetPhasedHP::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Named_C_GetPhasedHP, CallFunc_Subtract_IntInt_ReturnValue) == 0x000070, "Member 'UI_GameHP_Named_C_GetPhasedHP::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Named_C_GetPhasedHP, CallFunc_Conv_IntToDouble_ReturnValue_1) == 0x000078, "Member 'UI_GameHP_Named_C_GetPhasedHP::CallFunc_Conv_IntToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Named_C_GetPhasedHP, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000080, "Member 'UI_GameHP_Named_C_GetPhasedHP::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Named_C_GetPhasedHP, CallFunc_FClamp_ReturnValue) == 0x000088, "Member 'UI_GameHP_Named_C_GetPhasedHP::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Named_C_GetPhasedHP, K2Node_FunctionResult_OutRatio_ImplicitCast) == 0x000090, "Member 'UI_GameHP_Named_C_GetPhasedHP::K2Node_FunctionResult_OutRatio_ImplicitCast' has a wrong offset!");

// Function UI_GameHP_Named.UI_GameHP_Named_C.LoopPhaseImmune
// 0x0008 (0x0008 - 0x0000)
struct UI_GameHP_Named_C_LoopPhaseImmune final
{
public:
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_GameHP_Named_C_LoopPhaseImmune) == 0x000008, "Wrong alignment on UI_GameHP_Named_C_LoopPhaseImmune");
static_assert(sizeof(UI_GameHP_Named_C_LoopPhaseImmune) == 0x000008, "Wrong size on UI_GameHP_Named_C_LoopPhaseImmune");
static_assert(offsetof(UI_GameHP_Named_C_LoopPhaseImmune, CallFunc_PlayAnimation_ReturnValue) == 0x000000, "Member 'UI_GameHP_Named_C_LoopPhaseImmune::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function UI_GameHP_Named.UI_GameHP_Named_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct UI_GameHP_Named_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_GameHP_Named_C_PreConstruct) == 0x000001, "Wrong alignment on UI_GameHP_Named_C_PreConstruct");
static_assert(sizeof(UI_GameHP_Named_C_PreConstruct) == 0x000001, "Wrong size on UI_GameHP_Named_C_PreConstruct");
static_assert(offsetof(UI_GameHP_Named_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'UI_GameHP_Named_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function UI_GameHP_Named.UI_GameHP_Named_C.RefreshPhaseImmune
// 0x0038 (0x0038 - 0x0000)
struct UI_GameHP_Named_C_RefreshPhaseImmune final
{
public:
	bool                                          bReset;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AM1Character*                           CallFunc_GetInfoOwner_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsActiveTag_ReturnValue;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0020(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_GameHP_Named_C_RefreshPhaseImmune) == 0x000008, "Wrong alignment on UI_GameHP_Named_C_RefreshPhaseImmune");
static_assert(sizeof(UI_GameHP_Named_C_RefreshPhaseImmune) == 0x000038, "Wrong size on UI_GameHP_Named_C_RefreshPhaseImmune");
static_assert(offsetof(UI_GameHP_Named_C_RefreshPhaseImmune, bReset) == 0x000000, "Member 'UI_GameHP_Named_C_RefreshPhaseImmune::bReset' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Named_C_RefreshPhaseImmune, CallFunc_GetInfoOwner_ReturnValue) == 0x000008, "Member 'UI_GameHP_Named_C_RefreshPhaseImmune::CallFunc_GetInfoOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Named_C_RefreshPhaseImmune, CallFunc_IsActiveTag_ReturnValue) == 0x000010, "Member 'UI_GameHP_Named_C_RefreshPhaseImmune::CallFunc_IsActiveTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Named_C_RefreshPhaseImmune, CallFunc_PlayAnimation_ReturnValue) == 0x000018, "Member 'UI_GameHP_Named_C_RefreshPhaseImmune::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Named_C_RefreshPhaseImmune, K2Node_CreateDelegate_OutputDelegate) == 0x000020, "Member 'UI_GameHP_Named_C_RefreshPhaseImmune::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Named_C_RefreshPhaseImmune, CallFunc_PlayAnimation_ReturnValue_1) == 0x000030, "Member 'UI_GameHP_Named_C_RefreshPhaseImmune::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");

// Function UI_GameHP_Named.UI_GameHP_Named_C.RefreshPhaseProgressBar
// 0x0010 (0x0010 - 0x0000)
struct UI_GameHP_Named_C_RefreshPhaseProgressBar final
{
public:
	class AM1Character*                           CallFunc_GetInfoOwner_ReturnValue;                 // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetTaggedIntVariantFrom_ReturnValue;      // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_GameHP_Named_C_RefreshPhaseProgressBar) == 0x000008, "Wrong alignment on UI_GameHP_Named_C_RefreshPhaseProgressBar");
static_assert(sizeof(UI_GameHP_Named_C_RefreshPhaseProgressBar) == 0x000010, "Wrong size on UI_GameHP_Named_C_RefreshPhaseProgressBar");
static_assert(offsetof(UI_GameHP_Named_C_RefreshPhaseProgressBar, CallFunc_GetInfoOwner_ReturnValue) == 0x000000, "Member 'UI_GameHP_Named_C_RefreshPhaseProgressBar::CallFunc_GetInfoOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Named_C_RefreshPhaseProgressBar, CallFunc_GetTaggedIntVariantFrom_ReturnValue) == 0x000008, "Member 'UI_GameHP_Named_C_RefreshPhaseProgressBar::CallFunc_GetTaggedIntVariantFrom_ReturnValue' has a wrong offset!");

// Function UI_GameHP_Named.UI_GameHP_Named_C.RefreshPhaseState
// 0x0080 (0x0080 - 0x0000)
struct UI_GameHP_Named_C_RefreshPhaseState final
{
public:
	bool                                          bReset;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         PhaseRemainCount;                                  // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PhaseTotalCount;                                   // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_4;                              // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_5;                              // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_6;                              // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_7;                              // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0017(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_8;                              // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_9;                              // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B[0x5];                                       // 0x001B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AM1Character*                           CallFunc_GetInfoOwner_ReturnValue;                 // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetTaggedFloatVariantFrom_ReturnValue;    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_2;             // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_10;                             // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_3;             // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_4;             // 0x0036(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_5;             // 0x0037(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_6;             // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A[0x6];                                       // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AM1Character*                           CallFunc_GetInfoOwner_ReturnValue_1;               // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetTaggedIntVariantFrom_ReturnValue;      // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetTaggedIntVariantFrom_ReturnValue_1;    // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_11;                             // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_5;                              // 0x0055(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_2;                           // 0x0056(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0057(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_InRange_IntInt_ReturnValue;               // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUI_GameHP_Boss_Phase_C*                K2Node_Select_Default_3;                           // 0x0068(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_7;             // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_8;             // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_4;                           // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_5;                           // 0x0073(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_9;             // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_6;                           // 0x0075(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_76[0x2];                                       // 0x0076(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_LessEqual_DoubleDouble_A_ImplicitCast;    // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_GameHP_Named_C_RefreshPhaseState) == 0x000008, "Wrong alignment on UI_GameHP_Named_C_RefreshPhaseState");
static_assert(sizeof(UI_GameHP_Named_C_RefreshPhaseState) == 0x000080, "Wrong size on UI_GameHP_Named_C_RefreshPhaseState");
static_assert(offsetof(UI_GameHP_Named_C_RefreshPhaseState, bReset) == 0x000000, "Member 'UI_GameHP_Named_C_RefreshPhaseState::bReset' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Named_C_RefreshPhaseState, PhaseRemainCount) == 0x000004, "Member 'UI_GameHP_Named_C_RefreshPhaseState::PhaseRemainCount' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Named_C_RefreshPhaseState, PhaseTotalCount) == 0x000008, "Member 'UI_GameHP_Named_C_RefreshPhaseState::PhaseTotalCount' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Named_C_RefreshPhaseState, Temp_byte_Variable) == 0x00000C, "Member 'UI_GameHP_Named_C_RefreshPhaseState::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Named_C_RefreshPhaseState, Temp_byte_Variable_1) == 0x00000D, "Member 'UI_GameHP_Named_C_RefreshPhaseState::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Named_C_RefreshPhaseState, Temp_bool_Variable) == 0x00000E, "Member 'UI_GameHP_Named_C_RefreshPhaseState::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Named_C_RefreshPhaseState, Temp_byte_Variable_2) == 0x00000F, "Member 'UI_GameHP_Named_C_RefreshPhaseState::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Named_C_RefreshPhaseState, Temp_byte_Variable_3) == 0x000010, "Member 'UI_GameHP_Named_C_RefreshPhaseState::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Named_C_RefreshPhaseState, Temp_bool_Variable_1) == 0x000011, "Member 'UI_GameHP_Named_C_RefreshPhaseState::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Named_C_RefreshPhaseState, Temp_byte_Variable_4) == 0x000012, "Member 'UI_GameHP_Named_C_RefreshPhaseState::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Named_C_RefreshPhaseState, Temp_byte_Variable_5) == 0x000013, "Member 'UI_GameHP_Named_C_RefreshPhaseState::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Named_C_RefreshPhaseState, Temp_bool_Variable_2) == 0x000014, "Member 'UI_GameHP_Named_C_RefreshPhaseState::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Named_C_RefreshPhaseState, Temp_byte_Variable_6) == 0x000015, "Member 'UI_GameHP_Named_C_RefreshPhaseState::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Named_C_RefreshPhaseState, Temp_byte_Variable_7) == 0x000016, "Member 'UI_GameHP_Named_C_RefreshPhaseState::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Named_C_RefreshPhaseState, Temp_bool_Variable_3) == 0x000017, "Member 'UI_GameHP_Named_C_RefreshPhaseState::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Named_C_RefreshPhaseState, Temp_byte_Variable_8) == 0x000018, "Member 'UI_GameHP_Named_C_RefreshPhaseState::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Named_C_RefreshPhaseState, Temp_byte_Variable_9) == 0x000019, "Member 'UI_GameHP_Named_C_RefreshPhaseState::Temp_byte_Variable_9' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Named_C_RefreshPhaseState, CallFunc_Greater_IntInt_ReturnValue) == 0x00001A, "Member 'UI_GameHP_Named_C_RefreshPhaseState::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Named_C_RefreshPhaseState, CallFunc_GetInfoOwner_ReturnValue) == 0x000020, "Member 'UI_GameHP_Named_C_RefreshPhaseState::CallFunc_GetInfoOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Named_C_RefreshPhaseState, Temp_bool_Variable_4) == 0x000028, "Member 'UI_GameHP_Named_C_RefreshPhaseState::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Named_C_RefreshPhaseState, CallFunc_GetTaggedFloatVariantFrom_ReturnValue) == 0x00002C, "Member 'UI_GameHP_Named_C_RefreshPhaseState::CallFunc_GetTaggedFloatVariantFrom_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Named_C_RefreshPhaseState, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000030, "Member 'UI_GameHP_Named_C_RefreshPhaseState::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Named_C_RefreshPhaseState, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000031, "Member 'UI_GameHP_Named_C_RefreshPhaseState::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Named_C_RefreshPhaseState, CallFunc_BooleanAND_ReturnValue) == 0x000032, "Member 'UI_GameHP_Named_C_RefreshPhaseState::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Named_C_RefreshPhaseState, CallFunc_Greater_IntInt_ReturnValue_2) == 0x000033, "Member 'UI_GameHP_Named_C_RefreshPhaseState::CallFunc_Greater_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Named_C_RefreshPhaseState, Temp_byte_Variable_10) == 0x000034, "Member 'UI_GameHP_Named_C_RefreshPhaseState::Temp_byte_Variable_10' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Named_C_RefreshPhaseState, CallFunc_Greater_IntInt_ReturnValue_3) == 0x000035, "Member 'UI_GameHP_Named_C_RefreshPhaseState::CallFunc_Greater_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Named_C_RefreshPhaseState, CallFunc_Greater_IntInt_ReturnValue_4) == 0x000036, "Member 'UI_GameHP_Named_C_RefreshPhaseState::CallFunc_Greater_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Named_C_RefreshPhaseState, CallFunc_Greater_IntInt_ReturnValue_5) == 0x000037, "Member 'UI_GameHP_Named_C_RefreshPhaseState::CallFunc_Greater_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Named_C_RefreshPhaseState, CallFunc_Greater_IntInt_ReturnValue_6) == 0x000038, "Member 'UI_GameHP_Named_C_RefreshPhaseState::CallFunc_Greater_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Named_C_RefreshPhaseState, K2Node_Select_Default) == 0x000039, "Member 'UI_GameHP_Named_C_RefreshPhaseState::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Named_C_RefreshPhaseState, CallFunc_GetInfoOwner_ReturnValue_1) == 0x000040, "Member 'UI_GameHP_Named_C_RefreshPhaseState::CallFunc_GetInfoOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Named_C_RefreshPhaseState, K2Node_Select_Default_1) == 0x000048, "Member 'UI_GameHP_Named_C_RefreshPhaseState::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Named_C_RefreshPhaseState, CallFunc_GetTaggedIntVariantFrom_ReturnValue) == 0x00004C, "Member 'UI_GameHP_Named_C_RefreshPhaseState::CallFunc_GetTaggedIntVariantFrom_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Named_C_RefreshPhaseState, CallFunc_GetTaggedIntVariantFrom_ReturnValue_1) == 0x000050, "Member 'UI_GameHP_Named_C_RefreshPhaseState::CallFunc_GetTaggedIntVariantFrom_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Named_C_RefreshPhaseState, Temp_byte_Variable_11) == 0x000054, "Member 'UI_GameHP_Named_C_RefreshPhaseState::Temp_byte_Variable_11' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Named_C_RefreshPhaseState, Temp_bool_Variable_5) == 0x000055, "Member 'UI_GameHP_Named_C_RefreshPhaseState::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Named_C_RefreshPhaseState, K2Node_Select_Default_2) == 0x000056, "Member 'UI_GameHP_Named_C_RefreshPhaseState::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Named_C_RefreshPhaseState, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000057, "Member 'UI_GameHP_Named_C_RefreshPhaseState::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Named_C_RefreshPhaseState, CallFunc_InRange_IntInt_ReturnValue) == 0x000058, "Member 'UI_GameHP_Named_C_RefreshPhaseState::CallFunc_InRange_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Named_C_RefreshPhaseState, Temp_int_Variable) == 0x00005C, "Member 'UI_GameHP_Named_C_RefreshPhaseState::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Named_C_RefreshPhaseState, CallFunc_BooleanAND_ReturnValue_1) == 0x000060, "Member 'UI_GameHP_Named_C_RefreshPhaseState::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Named_C_RefreshPhaseState, K2Node_Select_Default_3) == 0x000068, "Member 'UI_GameHP_Named_C_RefreshPhaseState::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Named_C_RefreshPhaseState, CallFunc_Greater_IntInt_ReturnValue_7) == 0x000070, "Member 'UI_GameHP_Named_C_RefreshPhaseState::CallFunc_Greater_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Named_C_RefreshPhaseState, CallFunc_Greater_IntInt_ReturnValue_8) == 0x000071, "Member 'UI_GameHP_Named_C_RefreshPhaseState::CallFunc_Greater_IntInt_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Named_C_RefreshPhaseState, K2Node_Select_Default_4) == 0x000072, "Member 'UI_GameHP_Named_C_RefreshPhaseState::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Named_C_RefreshPhaseState, K2Node_Select_Default_5) == 0x000073, "Member 'UI_GameHP_Named_C_RefreshPhaseState::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Named_C_RefreshPhaseState, CallFunc_Greater_IntInt_ReturnValue_9) == 0x000074, "Member 'UI_GameHP_Named_C_RefreshPhaseState::CallFunc_Greater_IntInt_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Named_C_RefreshPhaseState, K2Node_Select_Default_6) == 0x000075, "Member 'UI_GameHP_Named_C_RefreshPhaseState::K2Node_Select_Default_6' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Named_C_RefreshPhaseState, CallFunc_LessEqual_DoubleDouble_A_ImplicitCast) == 0x000078, "Member 'UI_GameHP_Named_C_RefreshPhaseState::CallFunc_LessEqual_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function UI_GameHP_Named.UI_GameHP_Named_C.SetPhases
// 0x0110 (0x0110 - 0x0000)
struct UI_GameHP_Named_C_SetPhases final
{
public:
	TArray<double>                                Phases;                                            // 0x0000(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Variable;                                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0020(0x0050)(HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0078(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0088(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AM1Character*                           CallFunc_GetInfoOwner_ReturnValue;                 // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable;                                // 0x00C0(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTaggedFloatVariantFrom_ReturnValue;    // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D4[0x4];                                       // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AM1Character*                           CallFunc_GetInfoOwner_ReturnValue_1;               // 0x00D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AM1Character*                           CallFunc_GetInfoOwner_ReturnValue_2;               // 0x00E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetTaggedIntVariantFrom_ReturnValue;      // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetTaggedBoolVariantFrom_ReturnValue;     // 0x00EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_ED[0x3];                                       // 0x00ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x00F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F5[0x3];                                       // 0x00F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<float>                                 CallFunc_SetPhases_InPhases_ImplicitCast;          // 0x00F8(0x0010)(ConstParm, ReferenceParm)
	double                                        CallFunc_Array_Add_NewItem_ImplicitCast;           // 0x0108(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_GameHP_Named_C_SetPhases) == 0x000008, "Wrong alignment on UI_GameHP_Named_C_SetPhases");
static_assert(sizeof(UI_GameHP_Named_C_SetPhases) == 0x000110, "Wrong size on UI_GameHP_Named_C_SetPhases");
static_assert(offsetof(UI_GameHP_Named_C_SetPhases, Phases) == 0x000000, "Member 'UI_GameHP_Named_C_SetPhases::Phases' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Named_C_SetPhases, Temp_int_Variable) == 0x000010, "Member 'UI_GameHP_Named_C_SetPhases::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Named_C_SetPhases, CallFunc_Conv_IntToInt64_ReturnValue) == 0x000018, "Member 'UI_GameHP_Named_C_SetPhases::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Named_C_SetPhases, K2Node_MakeStruct_FormatArgumentData) == 0x000020, "Member 'UI_GameHP_Named_C_SetPhases::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Named_C_SetPhases, CallFunc_Add_IntInt_ReturnValue) == 0x000070, "Member 'UI_GameHP_Named_C_SetPhases::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Named_C_SetPhases, K2Node_MakeArray_Array) == 0x000078, "Member 'UI_GameHP_Named_C_SetPhases::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Named_C_SetPhases, CallFunc_Format_ReturnValue) == 0x000088, "Member 'UI_GameHP_Named_C_SetPhases::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Named_C_SetPhases, CallFunc_Conv_TextToString_ReturnValue) == 0x0000A0, "Member 'UI_GameHP_Named_C_SetPhases::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Named_C_SetPhases, CallFunc_Conv_StringToName_ReturnValue) == 0x0000B0, "Member 'UI_GameHP_Named_C_SetPhases::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Named_C_SetPhases, CallFunc_GetInfoOwner_ReturnValue) == 0x0000B8, "Member 'UI_GameHP_Named_C_SetPhases::CallFunc_GetInfoOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Named_C_SetPhases, Temp_real_Variable) == 0x0000C0, "Member 'UI_GameHP_Named_C_SetPhases::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Named_C_SetPhases, CallFunc_GetTaggedFloatVariantFrom_ReturnValue) == 0x0000C8, "Member 'UI_GameHP_Named_C_SetPhases::CallFunc_GetTaggedFloatVariantFrom_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Named_C_SetPhases, CallFunc_Array_Add_ReturnValue) == 0x0000CC, "Member 'UI_GameHP_Named_C_SetPhases::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Named_C_SetPhases, CallFunc_Array_Add_ReturnValue_1) == 0x0000D0, "Member 'UI_GameHP_Named_C_SetPhases::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Named_C_SetPhases, CallFunc_GetInfoOwner_ReturnValue_1) == 0x0000D8, "Member 'UI_GameHP_Named_C_SetPhases::CallFunc_GetInfoOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Named_C_SetPhases, CallFunc_GetInfoOwner_ReturnValue_2) == 0x0000E0, "Member 'UI_GameHP_Named_C_SetPhases::CallFunc_GetInfoOwner_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Named_C_SetPhases, CallFunc_GetTaggedIntVariantFrom_ReturnValue) == 0x0000E8, "Member 'UI_GameHP_Named_C_SetPhases::CallFunc_GetTaggedIntVariantFrom_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Named_C_SetPhases, CallFunc_GetTaggedBoolVariantFrom_ReturnValue) == 0x0000EC, "Member 'UI_GameHP_Named_C_SetPhases::CallFunc_GetTaggedBoolVariantFrom_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Named_C_SetPhases, CallFunc_Subtract_IntInt_ReturnValue) == 0x0000F0, "Member 'UI_GameHP_Named_C_SetPhases::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Named_C_SetPhases, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0000F4, "Member 'UI_GameHP_Named_C_SetPhases::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Named_C_SetPhases, CallFunc_SetPhases_InPhases_ImplicitCast) == 0x0000F8, "Member 'UI_GameHP_Named_C_SetPhases::CallFunc_SetPhases_InPhases_ImplicitCast' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Named_C_SetPhases, CallFunc_Array_Add_NewItem_ImplicitCast) == 0x000108, "Member 'UI_GameHP_Named_C_SetPhases::CallFunc_Array_Add_NewItem_ImplicitCast' has a wrong offset!");

// Function UI_GameHP_Named.UI_GameHP_Named_C.SetUIPhaseView
// 0x0001 (0x0001 - 0x0000)
struct UI_GameHP_Named_C_SetUIPhaseView final
{
public:
	bool                                          In_Phase;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_GameHP_Named_C_SetUIPhaseView) == 0x000001, "Wrong alignment on UI_GameHP_Named_C_SetUIPhaseView");
static_assert(sizeof(UI_GameHP_Named_C_SetUIPhaseView) == 0x000001, "Wrong size on UI_GameHP_Named_C_SetUIPhaseView");
static_assert(offsetof(UI_GameHP_Named_C_SetUIPhaseView, In_Phase) == 0x000000, "Member 'UI_GameHP_Named_C_SetUIPhaseView::In_Phase' has a wrong offset!");

// Function UI_GameHP_Named.UI_GameHP_Named_C.StartUpdateRemainTimeGuage
// 0x0030 (0x0030 - 0x0000)
struct UI_GameHP_Named_C_StartUpdateRemainTimeGuage final
{
public:
	int32                                         PhaseTotalCount;                                   // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PhaseRemainCount;                                  // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AM1Character*                           CallFunc_GetInfoOwner_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(float DeltaSeconds)>           K2Node_CreateDelegate_OutputDelegate;              // 0x0010(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetTaggedIntVariantFrom_ReturnValue;      // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_GameHP_Named_C_StartUpdateRemainTimeGuage) == 0x000008, "Wrong alignment on UI_GameHP_Named_C_StartUpdateRemainTimeGuage");
static_assert(sizeof(UI_GameHP_Named_C_StartUpdateRemainTimeGuage) == 0x000030, "Wrong size on UI_GameHP_Named_C_StartUpdateRemainTimeGuage");
static_assert(offsetof(UI_GameHP_Named_C_StartUpdateRemainTimeGuage, PhaseTotalCount) == 0x000000, "Member 'UI_GameHP_Named_C_StartUpdateRemainTimeGuage::PhaseTotalCount' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Named_C_StartUpdateRemainTimeGuage, PhaseRemainCount) == 0x000004, "Member 'UI_GameHP_Named_C_StartUpdateRemainTimeGuage::PhaseRemainCount' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Named_C_StartUpdateRemainTimeGuage, CallFunc_GetInfoOwner_ReturnValue) == 0x000008, "Member 'UI_GameHP_Named_C_StartUpdateRemainTimeGuage::CallFunc_GetInfoOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Named_C_StartUpdateRemainTimeGuage, K2Node_CreateDelegate_OutputDelegate) == 0x000010, "Member 'UI_GameHP_Named_C_StartUpdateRemainTimeGuage::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Named_C_StartUpdateRemainTimeGuage, CallFunc_GetTaggedIntVariantFrom_ReturnValue) == 0x000020, "Member 'UI_GameHP_Named_C_StartUpdateRemainTimeGuage::CallFunc_GetTaggedIntVariantFrom_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Named_C_StartUpdateRemainTimeGuage, CallFunc_Subtract_IntInt_ReturnValue) == 0x000024, "Member 'UI_GameHP_Named_C_StartUpdateRemainTimeGuage::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Named_C_StartUpdateRemainTimeGuage, CallFunc_Greater_IntInt_ReturnValue) == 0x000028, "Member 'UI_GameHP_Named_C_StartUpdateRemainTimeGuage::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function UI_GameHP_Named.UI_GameHP_Named_C.StopPhaseImmune
// 0x0008 (0x0008 - 0x0000)
struct UI_GameHP_Named_C_StopPhaseImmune final
{
public:
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_GameHP_Named_C_StopPhaseImmune) == 0x000008, "Wrong alignment on UI_GameHP_Named_C_StopPhaseImmune");
static_assert(sizeof(UI_GameHP_Named_C_StopPhaseImmune) == 0x000008, "Wrong size on UI_GameHP_Named_C_StopPhaseImmune");
static_assert(offsetof(UI_GameHP_Named_C_StopPhaseImmune, CallFunc_PlayAnimation_ReturnValue) == 0x000000, "Member 'UI_GameHP_Named_C_StopPhaseImmune::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function UI_GameHP_Named.UI_GameHP_Named_C.StopUpdateRemainTimeGuage
// 0x0010 (0x0010 - 0x0000)
struct UI_GameHP_Named_C_StopUpdateRemainTimeGuage final
{
public:
	TDelegate<void(float DeltaSeconds)>           K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_GameHP_Named_C_StopUpdateRemainTimeGuage) == 0x000004, "Wrong alignment on UI_GameHP_Named_C_StopUpdateRemainTimeGuage");
static_assert(sizeof(UI_GameHP_Named_C_StopUpdateRemainTimeGuage) == 0x000010, "Wrong size on UI_GameHP_Named_C_StopUpdateRemainTimeGuage");
static_assert(offsetof(UI_GameHP_Named_C_StopUpdateRemainTimeGuage, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'UI_GameHP_Named_C_StopUpdateRemainTimeGuage::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");

// Function UI_GameHP_Named.UI_GameHP_Named_C.UpdateRemainTimeGuage
// 0x0004 (0x0004 - 0x0000)
struct UI_GameHP_Named_C_UpdateRemainTimeGuage final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_GameHP_Named_C_UpdateRemainTimeGuage) == 0x000004, "Wrong alignment on UI_GameHP_Named_C_UpdateRemainTimeGuage");
static_assert(sizeof(UI_GameHP_Named_C_UpdateRemainTimeGuage) == 0x000004, "Wrong size on UI_GameHP_Named_C_UpdateRemainTimeGuage");
static_assert(offsetof(UI_GameHP_Named_C_UpdateRemainTimeGuage, DeltaSeconds) == 0x000000, "Member 'UI_GameHP_Named_C_UpdateRemainTimeGuage::DeltaSeconds' has a wrong offset!");

}

