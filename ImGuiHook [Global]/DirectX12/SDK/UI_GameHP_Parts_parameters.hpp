#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_GameHP_Parts

#include "Basic.hpp"


namespace SDK::Params
{

// Function UI_GameHP_Parts.UI_GameHP_Parts_C.ExecuteUbergraph_UI_GameHP_Parts
// 0x0010 (0x0010 - 0x0000)
struct UI_GameHP_Parts_C_ExecuteUbergraph_UI_GameHP_Parts final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_GameHP_Parts_C_ExecuteUbergraph_UI_GameHP_Parts) == 0x000008, "Wrong alignment on UI_GameHP_Parts_C_ExecuteUbergraph_UI_GameHP_Parts");
static_assert(sizeof(UI_GameHP_Parts_C_ExecuteUbergraph_UI_GameHP_Parts) == 0x000010, "Wrong size on UI_GameHP_Parts_C_ExecuteUbergraph_UI_GameHP_Parts");
static_assert(offsetof(UI_GameHP_Parts_C_ExecuteUbergraph_UI_GameHP_Parts, EntryPoint) == 0x000000, "Member 'UI_GameHP_Parts_C_ExecuteUbergraph_UI_GameHP_Parts::EntryPoint' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Parts_C_ExecuteUbergraph_UI_GameHP_Parts, CallFunc_PlayAnimationForward_ReturnValue) == 0x000008, "Member 'UI_GameHP_Parts_C_ExecuteUbergraph_UI_GameHP_Parts::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");

// Function UI_GameHP_Parts.UI_GameHP_Parts_C.UpdateHPGauge
// 0x0028 (0x0028 - 0x0000)
struct UI_GameHP_Parts_C_UpdateHPGauge final
{
public:
	double                                        HPRate;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationTimeRange_ReturnValue;       // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PlayAnimationTimeRange_StartAtTime_ImplicitCast; // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PlayAnimationTimeRange_EndAtTime_ImplicitCast; // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_GameHP_Parts_C_UpdateHPGauge) == 0x000008, "Wrong alignment on UI_GameHP_Parts_C_UpdateHPGauge");
static_assert(sizeof(UI_GameHP_Parts_C_UpdateHPGauge) == 0x000028, "Wrong size on UI_GameHP_Parts_C_UpdateHPGauge");
static_assert(offsetof(UI_GameHP_Parts_C_UpdateHPGauge, HPRate) == 0x000000, "Member 'UI_GameHP_Parts_C_UpdateHPGauge::HPRate' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Parts_C_UpdateHPGauge, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000008, "Member 'UI_GameHP_Parts_C_UpdateHPGauge::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Parts_C_UpdateHPGauge, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000010, "Member 'UI_GameHP_Parts_C_UpdateHPGauge::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Parts_C_UpdateHPGauge, CallFunc_PlayAnimationTimeRange_ReturnValue) == 0x000018, "Member 'UI_GameHP_Parts_C_UpdateHPGauge::CallFunc_PlayAnimationTimeRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Parts_C_UpdateHPGauge, CallFunc_PlayAnimationTimeRange_StartAtTime_ImplicitCast) == 0x000020, "Member 'UI_GameHP_Parts_C_UpdateHPGauge::CallFunc_PlayAnimationTimeRange_StartAtTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Parts_C_UpdateHPGauge, CallFunc_PlayAnimationTimeRange_EndAtTime_ImplicitCast) == 0x000024, "Member 'UI_GameHP_Parts_C_UpdateHPGauge::CallFunc_PlayAnimationTimeRange_EndAtTime_ImplicitCast' has a wrong offset!");

}

