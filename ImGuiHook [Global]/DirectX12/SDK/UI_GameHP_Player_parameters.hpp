#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_GameHP_Player

#include "Basic.hpp"

#include "M1_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function UI_GameHP_Player.UI_GameHP_Player_C.BP_OnDBNORescueStateChanged
// 0x0001 (0x0001 - 0x0000)
struct UI_GameHP_Player_C_BP_OnDBNORescueStateChanged final
{
public:
	bool                                          bStartRescue;                                      // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_GameHP_Player_C_BP_OnDBNORescueStateChanged) == 0x000001, "Wrong alignment on UI_GameHP_Player_C_BP_OnDBNORescueStateChanged");
static_assert(sizeof(UI_GameHP_Player_C_BP_OnDBNORescueStateChanged) == 0x000001, "Wrong size on UI_GameHP_Player_C_BP_OnDBNORescueStateChanged");
static_assert(offsetof(UI_GameHP_Player_C_BP_OnDBNORescueStateChanged, bStartRescue) == 0x000000, "Member 'UI_GameHP_Player_C_BP_OnDBNORescueStateChanged::bStartRescue' has a wrong offset!");

// Function UI_GameHP_Player.UI_GameHP_Player_C.BP_SetDBNOInteractionTime
// 0x0004 (0x0004 - 0x0000)
struct UI_GameHP_Player_C_BP_SetDBNOInteractionTime final
{
public:
	float                                         InteractionDuration;                               // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_GameHP_Player_C_BP_SetDBNOInteractionTime) == 0x000004, "Wrong alignment on UI_GameHP_Player_C_BP_SetDBNOInteractionTime");
static_assert(sizeof(UI_GameHP_Player_C_BP_SetDBNOInteractionTime) == 0x000004, "Wrong size on UI_GameHP_Player_C_BP_SetDBNOInteractionTime");
static_assert(offsetof(UI_GameHP_Player_C_BP_SetDBNOInteractionTime, InteractionDuration) == 0x000000, "Member 'UI_GameHP_Player_C_BP_SetDBNOInteractionTime::InteractionDuration' has a wrong offset!");

// Function UI_GameHP_Player.UI_GameHP_Player_C.BP_SetVisibleDBNOInteractionUI
// 0x0001 (0x0001 - 0x0000)
struct UI_GameHP_Player_C_BP_SetVisibleDBNOInteractionUI final
{
public:
	bool                                          bVisible;                                          // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_GameHP_Player_C_BP_SetVisibleDBNOInteractionUI) == 0x000001, "Wrong alignment on UI_GameHP_Player_C_BP_SetVisibleDBNOInteractionUI");
static_assert(sizeof(UI_GameHP_Player_C_BP_SetVisibleDBNOInteractionUI) == 0x000001, "Wrong size on UI_GameHP_Player_C_BP_SetVisibleDBNOInteractionUI");
static_assert(offsetof(UI_GameHP_Player_C_BP_SetVisibleDBNOInteractionUI, bVisible) == 0x000000, "Member 'UI_GameHP_Player_C_BP_SetVisibleDBNOInteractionUI::bVisible' has a wrong offset!");

// Function UI_GameHP_Player.UI_GameHP_Player_C.BP_SetVisibleDBNOUI
// 0x0003 (0x0003 - 0x0000)
struct UI_GameHP_Player_C_BP_SetVisibleDBNOUI final
{
public:
	bool                                          bIsDBNO;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EM1DBNOType                                   InDBNOType;                                        // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bInfiniteDuration;                                 // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_GameHP_Player_C_BP_SetVisibleDBNOUI) == 0x000001, "Wrong alignment on UI_GameHP_Player_C_BP_SetVisibleDBNOUI");
static_assert(sizeof(UI_GameHP_Player_C_BP_SetVisibleDBNOUI) == 0x000003, "Wrong size on UI_GameHP_Player_C_BP_SetVisibleDBNOUI");
static_assert(offsetof(UI_GameHP_Player_C_BP_SetVisibleDBNOUI, bIsDBNO) == 0x000000, "Member 'UI_GameHP_Player_C_BP_SetVisibleDBNOUI::bIsDBNO' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Player_C_BP_SetVisibleDBNOUI, InDBNOType) == 0x000001, "Member 'UI_GameHP_Player_C_BP_SetVisibleDBNOUI::InDBNOType' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Player_C_BP_SetVisibleDBNOUI, bInfiniteDuration) == 0x000002, "Member 'UI_GameHP_Player_C_BP_SetVisibleDBNOUI::bInfiniteDuration' has a wrong offset!");

// Function UI_GameHP_Player.UI_GameHP_Player_C.BP_UpdateDBNOUI
// 0x0008 (0x0008 - 0x0000)
struct UI_GameHP_Player_C_BP_UpdateDBNOUI final
{
public:
	float                                         DBNORatio;                                         // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         InteractionRatio;                                  // 0x0004(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_GameHP_Player_C_BP_UpdateDBNOUI) == 0x000004, "Wrong alignment on UI_GameHP_Player_C_BP_UpdateDBNOUI");
static_assert(sizeof(UI_GameHP_Player_C_BP_UpdateDBNOUI) == 0x000008, "Wrong size on UI_GameHP_Player_C_BP_UpdateDBNOUI");
static_assert(offsetof(UI_GameHP_Player_C_BP_UpdateDBNOUI, DBNORatio) == 0x000000, "Member 'UI_GameHP_Player_C_BP_UpdateDBNOUI::DBNORatio' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Player_C_BP_UpdateDBNOUI, InteractionRatio) == 0x000004, "Member 'UI_GameHP_Player_C_BP_UpdateDBNOUI::InteractionRatio' has a wrong offset!");

// Function UI_GameHP_Player.UI_GameHP_Player_C.BP_UpdatePartyState
// 0x0001 (0x0001 - 0x0000)
struct UI_GameHP_Player_C_BP_UpdatePartyState final
{
public:
	bool                                          bIsPartyMember;                                    // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_GameHP_Player_C_BP_UpdatePartyState) == 0x000001, "Wrong alignment on UI_GameHP_Player_C_BP_UpdatePartyState");
static_assert(sizeof(UI_GameHP_Player_C_BP_UpdatePartyState) == 0x000001, "Wrong size on UI_GameHP_Player_C_BP_UpdatePartyState");
static_assert(offsetof(UI_GameHP_Player_C_BP_UpdatePartyState, bIsPartyMember) == 0x000000, "Member 'UI_GameHP_Player_C_BP_UpdatePartyState::bIsPartyMember' has a wrong offset!");

// Function UI_GameHP_Player.UI_GameHP_Player_C.BP_UpdateVisibility
// 0x0001 (0x0001 - 0x0000)
struct UI_GameHP_Player_C_BP_UpdateVisibility final
{
public:
	bool                                          bIsVisible;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_GameHP_Player_C_BP_UpdateVisibility) == 0x000001, "Wrong alignment on UI_GameHP_Player_C_BP_UpdateVisibility");
static_assert(sizeof(UI_GameHP_Player_C_BP_UpdateVisibility) == 0x000001, "Wrong size on UI_GameHP_Player_C_BP_UpdateVisibility");
static_assert(offsetof(UI_GameHP_Player_C_BP_UpdateVisibility, bIsVisible) == 0x000000, "Member 'UI_GameHP_Player_C_BP_UpdateVisibility::bIsVisible' has a wrong offset!");

// Function UI_GameHP_Player.UI_GameHP_Player_C.ExecuteUbergraph_UI_GameHP_Player
// 0x00C8 (0x00C8 - 0x0000)
struct UI_GameHP_Player_C_ExecuteUbergraph_UI_GameHP_Player final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_4;                              // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_5;                              // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EM1DBNOType                                   Temp_byte_Variable_6;                              // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x2];                                       // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_4;                               // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsDBNO;                              // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EM1DBNOType                                   K2Node_Event_InDBNOType;                           // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bInfiniteDuration;                    // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0027(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default_1;                           // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DBNORatio;                            // 0x002C(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_InteractionRatio;                     // 0x0030(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_5;                               // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsVisible;                           // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsPartyMember;                       // 0x0039(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B[0x1];                                       // 0x003B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_InteractionDuration;                  // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bVisible;                             // 0x0040(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default_2;                           // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_3;                           // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUI_KeyButton_Symbol1_C*                K2Node_DynamicCast_AsUI_Key_Button_Symbol_1;       // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_7;                              // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A[0x6];                                       // 0x005A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUI_KeyButton_Symbol1_C*                K2Node_DynamicCast_AsUI_Key_Button_Symbol_1_1;     // 0x0060(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_8;                              // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x006A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6B[0x1];                                       // 0x006B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_6;                               // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_4;                           // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUI_KeyButton_Symbol1_C*                K2Node_DynamicCast_AsUI_Key_Button_Symbol_1_2;     // 0x0078(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUI_KeyButton_Symbol1_C*                K2Node_DynamicCast_AsUI_Key_Button_Symbol_1_3;     // 0x0088(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x3];                                       // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_7;                               // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_5;                              // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x3];                                       // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default_5;                           // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bStartRescue;                         // 0x00A0(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1[0x3];                                       // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_6;                           // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_UpdateProgress_InRatio_ImplicitCast;      // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_UpdateProgress_Ratio_ImplicitCast;        // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SetPlayTime_InPlayTime_ImplicitCast;      // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_GameHP_Player_C_ExecuteUbergraph_UI_GameHP_Player) == 0x000008, "Wrong alignment on UI_GameHP_Player_C_ExecuteUbergraph_UI_GameHP_Player");
static_assert(sizeof(UI_GameHP_Player_C_ExecuteUbergraph_UI_GameHP_Player) == 0x0000C8, "Wrong size on UI_GameHP_Player_C_ExecuteUbergraph_UI_GameHP_Player");
static_assert(offsetof(UI_GameHP_Player_C_ExecuteUbergraph_UI_GameHP_Player, EntryPoint) == 0x000000, "Member 'UI_GameHP_Player_C_ExecuteUbergraph_UI_GameHP_Player::EntryPoint' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Player_C_ExecuteUbergraph_UI_GameHP_Player, Temp_int_Variable) == 0x000004, "Member 'UI_GameHP_Player_C_ExecuteUbergraph_UI_GameHP_Player::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Player_C_ExecuteUbergraph_UI_GameHP_Player, Temp_bool_Variable) == 0x000008, "Member 'UI_GameHP_Player_C_ExecuteUbergraph_UI_GameHP_Player::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Player_C_ExecuteUbergraph_UI_GameHP_Player, Temp_byte_Variable) == 0x000009, "Member 'UI_GameHP_Player_C_ExecuteUbergraph_UI_GameHP_Player::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Player_C_ExecuteUbergraph_UI_GameHP_Player, Temp_byte_Variable_1) == 0x00000A, "Member 'UI_GameHP_Player_C_ExecuteUbergraph_UI_GameHP_Player::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Player_C_ExecuteUbergraph_UI_GameHP_Player, Temp_bool_Variable_1) == 0x00000B, "Member 'UI_GameHP_Player_C_ExecuteUbergraph_UI_GameHP_Player::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Player_C_ExecuteUbergraph_UI_GameHP_Player, Temp_byte_Variable_2) == 0x00000C, "Member 'UI_GameHP_Player_C_ExecuteUbergraph_UI_GameHP_Player::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Player_C_ExecuteUbergraph_UI_GameHP_Player, Temp_byte_Variable_3) == 0x00000D, "Member 'UI_GameHP_Player_C_ExecuteUbergraph_UI_GameHP_Player::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Player_C_ExecuteUbergraph_UI_GameHP_Player, Temp_bool_Variable_2) == 0x00000E, "Member 'UI_GameHP_Player_C_ExecuteUbergraph_UI_GameHP_Player::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Player_C_ExecuteUbergraph_UI_GameHP_Player, Temp_byte_Variable_4) == 0x00000F, "Member 'UI_GameHP_Player_C_ExecuteUbergraph_UI_GameHP_Player::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Player_C_ExecuteUbergraph_UI_GameHP_Player, Temp_byte_Variable_5) == 0x000010, "Member 'UI_GameHP_Player_C_ExecuteUbergraph_UI_GameHP_Player::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Player_C_ExecuteUbergraph_UI_GameHP_Player, Temp_byte_Variable_6) == 0x000011, "Member 'UI_GameHP_Player_C_ExecuteUbergraph_UI_GameHP_Player::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Player_C_ExecuteUbergraph_UI_GameHP_Player, Temp_int_Variable_1) == 0x000014, "Member 'UI_GameHP_Player_C_ExecuteUbergraph_UI_GameHP_Player::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Player_C_ExecuteUbergraph_UI_GameHP_Player, Temp_int_Variable_2) == 0x000018, "Member 'UI_GameHP_Player_C_ExecuteUbergraph_UI_GameHP_Player::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Player_C_ExecuteUbergraph_UI_GameHP_Player, Temp_int_Variable_3) == 0x00001C, "Member 'UI_GameHP_Player_C_ExecuteUbergraph_UI_GameHP_Player::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Player_C_ExecuteUbergraph_UI_GameHP_Player, Temp_int_Variable_4) == 0x000020, "Member 'UI_GameHP_Player_C_ExecuteUbergraph_UI_GameHP_Player::Temp_int_Variable_4' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Player_C_ExecuteUbergraph_UI_GameHP_Player, K2Node_Event_bIsDBNO) == 0x000024, "Member 'UI_GameHP_Player_C_ExecuteUbergraph_UI_GameHP_Player::K2Node_Event_bIsDBNO' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Player_C_ExecuteUbergraph_UI_GameHP_Player, K2Node_Event_InDBNOType) == 0x000025, "Member 'UI_GameHP_Player_C_ExecuteUbergraph_UI_GameHP_Player::K2Node_Event_InDBNOType' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Player_C_ExecuteUbergraph_UI_GameHP_Player, K2Node_Event_bInfiniteDuration) == 0x000026, "Member 'UI_GameHP_Player_C_ExecuteUbergraph_UI_GameHP_Player::K2Node_Event_bInfiniteDuration' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Player_C_ExecuteUbergraph_UI_GameHP_Player, K2Node_Select_Default) == 0x000027, "Member 'UI_GameHP_Player_C_ExecuteUbergraph_UI_GameHP_Player::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Player_C_ExecuteUbergraph_UI_GameHP_Player, K2Node_Select_Default_1) == 0x000028, "Member 'UI_GameHP_Player_C_ExecuteUbergraph_UI_GameHP_Player::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Player_C_ExecuteUbergraph_UI_GameHP_Player, K2Node_Event_DBNORatio) == 0x00002C, "Member 'UI_GameHP_Player_C_ExecuteUbergraph_UI_GameHP_Player::K2Node_Event_DBNORatio' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Player_C_ExecuteUbergraph_UI_GameHP_Player, K2Node_Event_InteractionRatio) == 0x000030, "Member 'UI_GameHP_Player_C_ExecuteUbergraph_UI_GameHP_Player::K2Node_Event_InteractionRatio' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Player_C_ExecuteUbergraph_UI_GameHP_Player, Temp_int_Variable_5) == 0x000034, "Member 'UI_GameHP_Player_C_ExecuteUbergraph_UI_GameHP_Player::Temp_int_Variable_5' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Player_C_ExecuteUbergraph_UI_GameHP_Player, K2Node_Event_bIsVisible) == 0x000038, "Member 'UI_GameHP_Player_C_ExecuteUbergraph_UI_GameHP_Player::K2Node_Event_bIsVisible' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Player_C_ExecuteUbergraph_UI_GameHP_Player, K2Node_Event_bIsPartyMember) == 0x000039, "Member 'UI_GameHP_Player_C_ExecuteUbergraph_UI_GameHP_Player::K2Node_Event_bIsPartyMember' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Player_C_ExecuteUbergraph_UI_GameHP_Player, Temp_bool_Variable_3) == 0x00003A, "Member 'UI_GameHP_Player_C_ExecuteUbergraph_UI_GameHP_Player::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Player_C_ExecuteUbergraph_UI_GameHP_Player, K2Node_Event_InteractionDuration) == 0x00003C, "Member 'UI_GameHP_Player_C_ExecuteUbergraph_UI_GameHP_Player::K2Node_Event_InteractionDuration' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Player_C_ExecuteUbergraph_UI_GameHP_Player, K2Node_Event_bVisible) == 0x000040, "Member 'UI_GameHP_Player_C_ExecuteUbergraph_UI_GameHP_Player::K2Node_Event_bVisible' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Player_C_ExecuteUbergraph_UI_GameHP_Player, K2Node_Select_Default_2) == 0x000044, "Member 'UI_GameHP_Player_C_ExecuteUbergraph_UI_GameHP_Player::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Player_C_ExecuteUbergraph_UI_GameHP_Player, K2Node_Select_Default_3) == 0x000048, "Member 'UI_GameHP_Player_C_ExecuteUbergraph_UI_GameHP_Player::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Player_C_ExecuteUbergraph_UI_GameHP_Player, K2Node_DynamicCast_AsUI_Key_Button_Symbol_1) == 0x000050, "Member 'UI_GameHP_Player_C_ExecuteUbergraph_UI_GameHP_Player::K2Node_DynamicCast_AsUI_Key_Button_Symbol_1' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Player_C_ExecuteUbergraph_UI_GameHP_Player, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'UI_GameHP_Player_C_ExecuteUbergraph_UI_GameHP_Player::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Player_C_ExecuteUbergraph_UI_GameHP_Player, Temp_byte_Variable_7) == 0x000059, "Member 'UI_GameHP_Player_C_ExecuteUbergraph_UI_GameHP_Player::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Player_C_ExecuteUbergraph_UI_GameHP_Player, K2Node_DynamicCast_AsUI_Key_Button_Symbol_1_1) == 0x000060, "Member 'UI_GameHP_Player_C_ExecuteUbergraph_UI_GameHP_Player::K2Node_DynamicCast_AsUI_Key_Button_Symbol_1_1' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Player_C_ExecuteUbergraph_UI_GameHP_Player, K2Node_DynamicCast_bSuccess_1) == 0x000068, "Member 'UI_GameHP_Player_C_ExecuteUbergraph_UI_GameHP_Player::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Player_C_ExecuteUbergraph_UI_GameHP_Player, Temp_byte_Variable_8) == 0x000069, "Member 'UI_GameHP_Player_C_ExecuteUbergraph_UI_GameHP_Player::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Player_C_ExecuteUbergraph_UI_GameHP_Player, Temp_bool_Variable_4) == 0x00006A, "Member 'UI_GameHP_Player_C_ExecuteUbergraph_UI_GameHP_Player::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Player_C_ExecuteUbergraph_UI_GameHP_Player, Temp_int_Variable_6) == 0x00006C, "Member 'UI_GameHP_Player_C_ExecuteUbergraph_UI_GameHP_Player::Temp_int_Variable_6' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Player_C_ExecuteUbergraph_UI_GameHP_Player, K2Node_Select_Default_4) == 0x000070, "Member 'UI_GameHP_Player_C_ExecuteUbergraph_UI_GameHP_Player::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Player_C_ExecuteUbergraph_UI_GameHP_Player, K2Node_DynamicCast_AsUI_Key_Button_Symbol_1_2) == 0x000078, "Member 'UI_GameHP_Player_C_ExecuteUbergraph_UI_GameHP_Player::K2Node_DynamicCast_AsUI_Key_Button_Symbol_1_2' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Player_C_ExecuteUbergraph_UI_GameHP_Player, K2Node_DynamicCast_bSuccess_2) == 0x000080, "Member 'UI_GameHP_Player_C_ExecuteUbergraph_UI_GameHP_Player::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Player_C_ExecuteUbergraph_UI_GameHP_Player, K2Node_DynamicCast_AsUI_Key_Button_Symbol_1_3) == 0x000088, "Member 'UI_GameHP_Player_C_ExecuteUbergraph_UI_GameHP_Player::K2Node_DynamicCast_AsUI_Key_Button_Symbol_1_3' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Player_C_ExecuteUbergraph_UI_GameHP_Player, K2Node_DynamicCast_bSuccess_3) == 0x000090, "Member 'UI_GameHP_Player_C_ExecuteUbergraph_UI_GameHP_Player::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Player_C_ExecuteUbergraph_UI_GameHP_Player, Temp_int_Variable_7) == 0x000094, "Member 'UI_GameHP_Player_C_ExecuteUbergraph_UI_GameHP_Player::Temp_int_Variable_7' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Player_C_ExecuteUbergraph_UI_GameHP_Player, Temp_bool_Variable_5) == 0x000098, "Member 'UI_GameHP_Player_C_ExecuteUbergraph_UI_GameHP_Player::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Player_C_ExecuteUbergraph_UI_GameHP_Player, K2Node_Select_Default_5) == 0x00009C, "Member 'UI_GameHP_Player_C_ExecuteUbergraph_UI_GameHP_Player::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Player_C_ExecuteUbergraph_UI_GameHP_Player, K2Node_Event_bStartRescue) == 0x0000A0, "Member 'UI_GameHP_Player_C_ExecuteUbergraph_UI_GameHP_Player::K2Node_Event_bStartRescue' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Player_C_ExecuteUbergraph_UI_GameHP_Player, CallFunc_SelectInt_ReturnValue) == 0x0000A4, "Member 'UI_GameHP_Player_C_ExecuteUbergraph_UI_GameHP_Player::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Player_C_ExecuteUbergraph_UI_GameHP_Player, K2Node_Select_Default_6) == 0x0000A8, "Member 'UI_GameHP_Player_C_ExecuteUbergraph_UI_GameHP_Player::K2Node_Select_Default_6' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Player_C_ExecuteUbergraph_UI_GameHP_Player, CallFunc_UpdateProgress_InRatio_ImplicitCast) == 0x0000B0, "Member 'UI_GameHP_Player_C_ExecuteUbergraph_UI_GameHP_Player::CallFunc_UpdateProgress_InRatio_ImplicitCast' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Player_C_ExecuteUbergraph_UI_GameHP_Player, CallFunc_UpdateProgress_Ratio_ImplicitCast) == 0x0000B8, "Member 'UI_GameHP_Player_C_ExecuteUbergraph_UI_GameHP_Player::CallFunc_UpdateProgress_Ratio_ImplicitCast' has a wrong offset!");
static_assert(offsetof(UI_GameHP_Player_C_ExecuteUbergraph_UI_GameHP_Player, CallFunc_SetPlayTime_InPlayTime_ImplicitCast) == 0x0000C0, "Member 'UI_GameHP_Player_C_ExecuteUbergraph_UI_GameHP_Player::CallFunc_SetPlayTime_InPlayTime_ImplicitCast' has a wrong offset!");

}

