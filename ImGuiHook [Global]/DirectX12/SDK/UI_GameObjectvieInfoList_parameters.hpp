#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_GameObjectvieInfoList

#include "Basic.hpp"


namespace SDK::Params
{

// Function UI_GameObjectvieInfoList.UI_GameObjectvieInfoList_C.ExecuteUbergraph_UI_GameObjectvieInfoList
// 0x0058 (0x0058 - 0x0000)
struct UI_GameObjectvieInfoList_C_ExecuteUbergraph_UI_GameObjectvieInfoList final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRenderOpacity_ReturnValue;             // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRenderOpacity_ReturnValue_1;           // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue_1;     // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E[0x2];                                       // 0x001E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_2;              // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_3;              // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_4;              // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue;           // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_NearlyEqual_FloatFloat_A_ImplicitCast;    // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_NearlyEqual_FloatFloat_A_ImplicitCast_1;  // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_GameObjectvieInfoList_C_ExecuteUbergraph_UI_GameObjectvieInfoList) == 0x000008, "Wrong alignment on UI_GameObjectvieInfoList_C_ExecuteUbergraph_UI_GameObjectvieInfoList");
static_assert(sizeof(UI_GameObjectvieInfoList_C_ExecuteUbergraph_UI_GameObjectvieInfoList) == 0x000058, "Wrong size on UI_GameObjectvieInfoList_C_ExecuteUbergraph_UI_GameObjectvieInfoList");
static_assert(offsetof(UI_GameObjectvieInfoList_C_ExecuteUbergraph_UI_GameObjectvieInfoList, EntryPoint) == 0x000000, "Member 'UI_GameObjectvieInfoList_C_ExecuteUbergraph_UI_GameObjectvieInfoList::EntryPoint' has a wrong offset!");
static_assert(offsetof(UI_GameObjectvieInfoList_C_ExecuteUbergraph_UI_GameObjectvieInfoList, CallFunc_PlayAnimation_ReturnValue) == 0x000008, "Member 'UI_GameObjectvieInfoList_C_ExecuteUbergraph_UI_GameObjectvieInfoList::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GameObjectvieInfoList_C_ExecuteUbergraph_UI_GameObjectvieInfoList, K2Node_Event_IsDesignTime) == 0x000010, "Member 'UI_GameObjectvieInfoList_C_ExecuteUbergraph_UI_GameObjectvieInfoList::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(UI_GameObjectvieInfoList_C_ExecuteUbergraph_UI_GameObjectvieInfoList, CallFunc_GetRenderOpacity_ReturnValue) == 0x000014, "Member 'UI_GameObjectvieInfoList_C_ExecuteUbergraph_UI_GameObjectvieInfoList::CallFunc_GetRenderOpacity_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GameObjectvieInfoList_C_ExecuteUbergraph_UI_GameObjectvieInfoList, CallFunc_GetRenderOpacity_ReturnValue_1) == 0x000018, "Member 'UI_GameObjectvieInfoList_C_ExecuteUbergraph_UI_GameObjectvieInfoList::CallFunc_GetRenderOpacity_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_GameObjectvieInfoList_C_ExecuteUbergraph_UI_GameObjectvieInfoList, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x00001C, "Member 'UI_GameObjectvieInfoList_C_ExecuteUbergraph_UI_GameObjectvieInfoList::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GameObjectvieInfoList_C_ExecuteUbergraph_UI_GameObjectvieInfoList, CallFunc_NearlyEqual_FloatFloat_ReturnValue_1) == 0x00001D, "Member 'UI_GameObjectvieInfoList_C_ExecuteUbergraph_UI_GameObjectvieInfoList::CallFunc_NearlyEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_GameObjectvieInfoList_C_ExecuteUbergraph_UI_GameObjectvieInfoList, CallFunc_PlayAnimation_ReturnValue_1) == 0x000020, "Member 'UI_GameObjectvieInfoList_C_ExecuteUbergraph_UI_GameObjectvieInfoList::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_GameObjectvieInfoList_C_ExecuteUbergraph_UI_GameObjectvieInfoList, CallFunc_PlayAnimation_ReturnValue_2) == 0x000028, "Member 'UI_GameObjectvieInfoList_C_ExecuteUbergraph_UI_GameObjectvieInfoList::CallFunc_PlayAnimation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UI_GameObjectvieInfoList_C_ExecuteUbergraph_UI_GameObjectvieInfoList, CallFunc_PlayAnimation_ReturnValue_3) == 0x000030, "Member 'UI_GameObjectvieInfoList_C_ExecuteUbergraph_UI_GameObjectvieInfoList::CallFunc_PlayAnimation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UI_GameObjectvieInfoList_C_ExecuteUbergraph_UI_GameObjectvieInfoList, CallFunc_PlayAnimation_ReturnValue_4) == 0x000038, "Member 'UI_GameObjectvieInfoList_C_ExecuteUbergraph_UI_GameObjectvieInfoList::CallFunc_PlayAnimation_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(UI_GameObjectvieInfoList_C_ExecuteUbergraph_UI_GameObjectvieInfoList, CallFunc_IsAnimationPlaying_ReturnValue) == 0x000040, "Member 'UI_GameObjectvieInfoList_C_ExecuteUbergraph_UI_GameObjectvieInfoList::CallFunc_IsAnimationPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_GameObjectvieInfoList_C_ExecuteUbergraph_UI_GameObjectvieInfoList, CallFunc_NearlyEqual_FloatFloat_A_ImplicitCast) == 0x000048, "Member 'UI_GameObjectvieInfoList_C_ExecuteUbergraph_UI_GameObjectvieInfoList::CallFunc_NearlyEqual_FloatFloat_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(UI_GameObjectvieInfoList_C_ExecuteUbergraph_UI_GameObjectvieInfoList, CallFunc_NearlyEqual_FloatFloat_A_ImplicitCast_1) == 0x000050, "Member 'UI_GameObjectvieInfoList_C_ExecuteUbergraph_UI_GameObjectvieInfoList::CallFunc_NearlyEqual_FloatFloat_A_ImplicitCast_1' has a wrong offset!");

// Function UI_GameObjectvieInfoList.UI_GameObjectvieInfoList_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct UI_GameObjectvieInfoList_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_GameObjectvieInfoList_C_PreConstruct) == 0x000001, "Wrong alignment on UI_GameObjectvieInfoList_C_PreConstruct");
static_assert(sizeof(UI_GameObjectvieInfoList_C_PreConstruct) == 0x000001, "Wrong size on UI_GameObjectvieInfoList_C_PreConstruct");
static_assert(offsetof(UI_GameObjectvieInfoList_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'UI_GameObjectvieInfoList_C_PreConstruct::IsDesignTime' has a wrong offset!");

}

