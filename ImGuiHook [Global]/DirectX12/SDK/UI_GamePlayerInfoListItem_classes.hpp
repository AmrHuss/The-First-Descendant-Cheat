#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_GamePlayerInfoListItem

#include "Basic.hpp"

#include "M1_structs.hpp"
#include "M1_classes.hpp"
#include "Engine_structs.hpp"
#include "M1Data_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass UI_GamePlayerInfoListItem.UI_GamePlayerInfoListItem_C
// 0x0078 (0x07E0 - 0x0768)
class UUI_GamePlayerInfoListItem_C final : public UM1UIGamePlayerListSlot
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0768(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       UIAnim_Dbno;                                       // 0x0770(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UOverlay*                               Bg_Dbno;                                           // 0x0778(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 BG_VoidBattleRetry;                                // 0x0780(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                Border_Level;                                      // 0x0788(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                Border_Name;                                       // 0x0790(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Circle;                                            // 0x0798(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UM1SpriteImage*                         Icon_Leader;                                       // 0x07A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Icon_VoidBattleRetry;                              // 0x07A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_72;                                          // 0x07B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class URetainerBox*                           RetainerBox_0;                                     // 0x07B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SB_Dbno;                                           // 0x07C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_Player_Overhaul_C*                  UI_Player_Overhaul;                                // 0x07C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUI_Social_Platform_Icon_C*             UI_Social_Platform_Icon;                           // 0x07D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          MaxLevel;                                          // 0x07D8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Condition;                                         // 0x07D9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void BP_MarkedRestart(bool bMarked);
	void BP_OnChangedPlayerDBNOState(bool bDBNO);
	void BP_SetPlatformIcon(EM1LoginPlatformTypes InLocalPlatformType, EM1LoginPlatformTypes InPlayerPlatformType);
	void BP_UpdateAppearanceByLevel(bool bIsMaxLevel);
	void BP_UpdateAwayFromGameplay(bool bAway);
	void BP_UpdateIsSameParty(bool bIsSamePartyWithLocalPlayer);
	void BP_UpdatePartyLeader(bool bIsPartyLeader);
	void Cha_Thumbmail();
	void ExecuteUbergraph_UI_GamePlayerInfoListItem(int32 EntryPoint);
	void OnEventWidgetClose(EM1WidgetAnimDirection InDirection);
	void OnEventWidgetOpen(EM1WidgetAnimDirection InDirection);
	void PreConstruct(bool IsDesignTime);
	void SetUIMaxLevel();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"UI_GamePlayerInfoListItem_C">();
	}
	static class UUI_GamePlayerInfoListItem_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUI_GamePlayerInfoListItem_C>();
	}
};
static_assert(alignof(UUI_GamePlayerInfoListItem_C) == 0x000008, "Wrong alignment on UUI_GamePlayerInfoListItem_C");
static_assert(sizeof(UUI_GamePlayerInfoListItem_C) == 0x0007E0, "Wrong size on UUI_GamePlayerInfoListItem_C");
static_assert(offsetof(UUI_GamePlayerInfoListItem_C, UberGraphFrame) == 0x000768, "Member 'UUI_GamePlayerInfoListItem_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UUI_GamePlayerInfoListItem_C, UIAnim_Dbno) == 0x000770, "Member 'UUI_GamePlayerInfoListItem_C::UIAnim_Dbno' has a wrong offset!");
static_assert(offsetof(UUI_GamePlayerInfoListItem_C, Bg_Dbno) == 0x000778, "Member 'UUI_GamePlayerInfoListItem_C::Bg_Dbno' has a wrong offset!");
static_assert(offsetof(UUI_GamePlayerInfoListItem_C, BG_VoidBattleRetry) == 0x000780, "Member 'UUI_GamePlayerInfoListItem_C::BG_VoidBattleRetry' has a wrong offset!");
static_assert(offsetof(UUI_GamePlayerInfoListItem_C, Border_Level) == 0x000788, "Member 'UUI_GamePlayerInfoListItem_C::Border_Level' has a wrong offset!");
static_assert(offsetof(UUI_GamePlayerInfoListItem_C, Border_Name) == 0x000790, "Member 'UUI_GamePlayerInfoListItem_C::Border_Name' has a wrong offset!");
static_assert(offsetof(UUI_GamePlayerInfoListItem_C, Circle) == 0x000798, "Member 'UUI_GamePlayerInfoListItem_C::Circle' has a wrong offset!");
static_assert(offsetof(UUI_GamePlayerInfoListItem_C, Icon_Leader) == 0x0007A0, "Member 'UUI_GamePlayerInfoListItem_C::Icon_Leader' has a wrong offset!");
static_assert(offsetof(UUI_GamePlayerInfoListItem_C, Icon_VoidBattleRetry) == 0x0007A8, "Member 'UUI_GamePlayerInfoListItem_C::Icon_VoidBattleRetry' has a wrong offset!");
static_assert(offsetof(UUI_GamePlayerInfoListItem_C, Image_72) == 0x0007B0, "Member 'UUI_GamePlayerInfoListItem_C::Image_72' has a wrong offset!");
static_assert(offsetof(UUI_GamePlayerInfoListItem_C, RetainerBox_0) == 0x0007B8, "Member 'UUI_GamePlayerInfoListItem_C::RetainerBox_0' has a wrong offset!");
static_assert(offsetof(UUI_GamePlayerInfoListItem_C, SB_Dbno) == 0x0007C0, "Member 'UUI_GamePlayerInfoListItem_C::SB_Dbno' has a wrong offset!");
static_assert(offsetof(UUI_GamePlayerInfoListItem_C, UI_Player_Overhaul) == 0x0007C8, "Member 'UUI_GamePlayerInfoListItem_C::UI_Player_Overhaul' has a wrong offset!");
static_assert(offsetof(UUI_GamePlayerInfoListItem_C, UI_Social_Platform_Icon) == 0x0007D0, "Member 'UUI_GamePlayerInfoListItem_C::UI_Social_Platform_Icon' has a wrong offset!");
static_assert(offsetof(UUI_GamePlayerInfoListItem_C, MaxLevel) == 0x0007D8, "Member 'UUI_GamePlayerInfoListItem_C::MaxLevel' has a wrong offset!");
static_assert(offsetof(UUI_GamePlayerInfoListItem_C, Condition) == 0x0007D9, "Member 'UUI_GamePlayerInfoListItem_C::Condition' has a wrong offset!");

}

