#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_Game_CharLevel

#include "Basic.hpp"

#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function UI_Game_CharLevel.UI_Game_CharLevel_C.BP_SetCharacterLevelExp
// 0x0004 (0x0004 - 0x0000)
struct UI_Game_CharLevel_C_BP_SetCharacterLevelExp final
{
public:
	float                                         InRatio;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Game_CharLevel_C_BP_SetCharacterLevelExp) == 0x000004, "Wrong alignment on UI_Game_CharLevel_C_BP_SetCharacterLevelExp");
static_assert(sizeof(UI_Game_CharLevel_C_BP_SetCharacterLevelExp) == 0x000004, "Wrong size on UI_Game_CharLevel_C_BP_SetCharacterLevelExp");
static_assert(offsetof(UI_Game_CharLevel_C_BP_SetCharacterLevelExp, InRatio) == 0x000000, "Member 'UI_Game_CharLevel_C_BP_SetCharacterLevelExp::InRatio' has a wrong offset!");

// Function UI_Game_CharLevel.UI_Game_CharLevel_C.BP_SetMasteryExp
// 0x0004 (0x0004 - 0x0000)
struct UI_Game_CharLevel_C_BP_SetMasteryExp final
{
public:
	float                                         InRatio;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Game_CharLevel_C_BP_SetMasteryExp) == 0x000004, "Wrong alignment on UI_Game_CharLevel_C_BP_SetMasteryExp");
static_assert(sizeof(UI_Game_CharLevel_C_BP_SetMasteryExp) == 0x000004, "Wrong size on UI_Game_CharLevel_C_BP_SetMasteryExp");
static_assert(offsetof(UI_Game_CharLevel_C_BP_SetMasteryExp, InRatio) == 0x000000, "Member 'UI_Game_CharLevel_C_BP_SetMasteryExp::InRatio' has a wrong offset!");

// Function UI_Game_CharLevel.UI_Game_CharLevel_C.BP_UpdateAppearanceByCharacterLevel
// 0x0001 (0x0001 - 0x0000)
struct UI_Game_CharLevel_C_BP_UpdateAppearanceByCharacterLevel final
{
public:
	bool                                          bIsMax;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Game_CharLevel_C_BP_UpdateAppearanceByCharacterLevel) == 0x000001, "Wrong alignment on UI_Game_CharLevel_C_BP_UpdateAppearanceByCharacterLevel");
static_assert(sizeof(UI_Game_CharLevel_C_BP_UpdateAppearanceByCharacterLevel) == 0x000001, "Wrong size on UI_Game_CharLevel_C_BP_UpdateAppearanceByCharacterLevel");
static_assert(offsetof(UI_Game_CharLevel_C_BP_UpdateAppearanceByCharacterLevel, bIsMax) == 0x000000, "Member 'UI_Game_CharLevel_C_BP_UpdateAppearanceByCharacterLevel::bIsMax' has a wrong offset!");

// Function UI_Game_CharLevel.UI_Game_CharLevel_C.BP_UpdateAppearanceByMasteryRank
// 0x0001 (0x0001 - 0x0000)
struct UI_Game_CharLevel_C_BP_UpdateAppearanceByMasteryRank final
{
public:
	bool                                          bIsMax;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Game_CharLevel_C_BP_UpdateAppearanceByMasteryRank) == 0x000001, "Wrong alignment on UI_Game_CharLevel_C_BP_UpdateAppearanceByMasteryRank");
static_assert(sizeof(UI_Game_CharLevel_C_BP_UpdateAppearanceByMasteryRank) == 0x000001, "Wrong size on UI_Game_CharLevel_C_BP_UpdateAppearanceByMasteryRank");
static_assert(offsetof(UI_Game_CharLevel_C_BP_UpdateAppearanceByMasteryRank, bIsMax) == 0x000000, "Member 'UI_Game_CharLevel_C_BP_UpdateAppearanceByMasteryRank::bIsMax' has a wrong offset!");

// Function UI_Game_CharLevel.UI_Game_CharLevel_C.ExecuteUbergraph_UI_Game_CharLevel
// 0x0048 (0x0048 - 0x0000)
struct UI_Game_CharLevel_C_ExecuteUbergraph_UI_Game_CharLevel final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_InRatio_1;                            // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_InRatio;                              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetEndTime_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue;         // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsMax;                               // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetEndTime_ReturnValue_1;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue_1;       // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsMax_1;                             // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationReverse_ReturnValue_1;       // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Game_CharLevel_C_ExecuteUbergraph_UI_Game_CharLevel) == 0x000008, "Wrong alignment on UI_Game_CharLevel_C_ExecuteUbergraph_UI_Game_CharLevel");
static_assert(sizeof(UI_Game_CharLevel_C_ExecuteUbergraph_UI_Game_CharLevel) == 0x000048, "Wrong size on UI_Game_CharLevel_C_ExecuteUbergraph_UI_Game_CharLevel");
static_assert(offsetof(UI_Game_CharLevel_C_ExecuteUbergraph_UI_Game_CharLevel, EntryPoint) == 0x000000, "Member 'UI_Game_CharLevel_C_ExecuteUbergraph_UI_Game_CharLevel::EntryPoint' has a wrong offset!");
static_assert(offsetof(UI_Game_CharLevel_C_ExecuteUbergraph_UI_Game_CharLevel, K2Node_Event_IsDesignTime) == 0x000004, "Member 'UI_Game_CharLevel_C_ExecuteUbergraph_UI_Game_CharLevel::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(UI_Game_CharLevel_C_ExecuteUbergraph_UI_Game_CharLevel, K2Node_Event_InRatio_1) == 0x000008, "Member 'UI_Game_CharLevel_C_ExecuteUbergraph_UI_Game_CharLevel::K2Node_Event_InRatio_1' has a wrong offset!");
static_assert(offsetof(UI_Game_CharLevel_C_ExecuteUbergraph_UI_Game_CharLevel, K2Node_Event_InRatio) == 0x00000C, "Member 'UI_Game_CharLevel_C_ExecuteUbergraph_UI_Game_CharLevel::K2Node_Event_InRatio' has a wrong offset!");
static_assert(offsetof(UI_Game_CharLevel_C_ExecuteUbergraph_UI_Game_CharLevel, CallFunc_GetEndTime_ReturnValue) == 0x000010, "Member 'UI_Game_CharLevel_C_ExecuteUbergraph_UI_Game_CharLevel::CallFunc_GetEndTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Game_CharLevel_C_ExecuteUbergraph_UI_Game_CharLevel, CallFunc_PlayAnimationForward_ReturnValue) == 0x000018, "Member 'UI_Game_CharLevel_C_ExecuteUbergraph_UI_Game_CharLevel::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Game_CharLevel_C_ExecuteUbergraph_UI_Game_CharLevel, CallFunc_PlayAnimationReverse_ReturnValue) == 0x000020, "Member 'UI_Game_CharLevel_C_ExecuteUbergraph_UI_Game_CharLevel::CallFunc_PlayAnimationReverse_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Game_CharLevel_C_ExecuteUbergraph_UI_Game_CharLevel, K2Node_Event_bIsMax) == 0x000028, "Member 'UI_Game_CharLevel_C_ExecuteUbergraph_UI_Game_CharLevel::K2Node_Event_bIsMax' has a wrong offset!");
static_assert(offsetof(UI_Game_CharLevel_C_ExecuteUbergraph_UI_Game_CharLevel, CallFunc_GetEndTime_ReturnValue_1) == 0x00002C, "Member 'UI_Game_CharLevel_C_ExecuteUbergraph_UI_Game_CharLevel::CallFunc_GetEndTime_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_Game_CharLevel_C_ExecuteUbergraph_UI_Game_CharLevel, CallFunc_PlayAnimationForward_ReturnValue_1) == 0x000030, "Member 'UI_Game_CharLevel_C_ExecuteUbergraph_UI_Game_CharLevel::CallFunc_PlayAnimationForward_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_Game_CharLevel_C_ExecuteUbergraph_UI_Game_CharLevel, K2Node_Event_bIsMax_1) == 0x000038, "Member 'UI_Game_CharLevel_C_ExecuteUbergraph_UI_Game_CharLevel::K2Node_Event_bIsMax_1' has a wrong offset!");
static_assert(offsetof(UI_Game_CharLevel_C_ExecuteUbergraph_UI_Game_CharLevel, CallFunc_PlayAnimationReverse_ReturnValue_1) == 0x000040, "Member 'UI_Game_CharLevel_C_ExecuteUbergraph_UI_Game_CharLevel::CallFunc_PlayAnimationReverse_ReturnValue_1' has a wrong offset!");

// Function UI_Game_CharLevel.UI_Game_CharLevel_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct UI_Game_CharLevel_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Game_CharLevel_C_PreConstruct) == 0x000001, "Wrong alignment on UI_Game_CharLevel_C_PreConstruct");
static_assert(sizeof(UI_Game_CharLevel_C_PreConstruct) == 0x000001, "Wrong size on UI_Game_CharLevel_C_PreConstruct");
static_assert(offsetof(UI_Game_CharLevel_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'UI_Game_CharLevel_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function UI_Game_CharLevel.UI_Game_CharLevel_C.SetCharacterMaxLevel
// 0x0014 (0x0014 - 0x0000)
struct UI_Game_CharLevel_C_SetCharacterMaxLevel final
{
public:
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0000(0x0014)()
};
static_assert(alignof(UI_Game_CharLevel_C_SetCharacterMaxLevel) == 0x000004, "Wrong alignment on UI_Game_CharLevel_C_SetCharacterMaxLevel");
static_assert(sizeof(UI_Game_CharLevel_C_SetCharacterMaxLevel) == 0x000014, "Wrong size on UI_Game_CharLevel_C_SetCharacterMaxLevel");
static_assert(offsetof(UI_Game_CharLevel_C_SetCharacterMaxLevel, K2Node_MakeStruct_SlateColor) == 0x000000, "Member 'UI_Game_CharLevel_C_SetCharacterMaxLevel::K2Node_MakeStruct_SlateColor' has a wrong offset!");

// Function UI_Game_CharLevel.UI_Game_CharLevel_C.SetMasteryMaxRank
// 0x0014 (0x0014 - 0x0000)
struct UI_Game_CharLevel_C_SetMasteryMaxRank final
{
public:
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0000(0x0014)()
};
static_assert(alignof(UI_Game_CharLevel_C_SetMasteryMaxRank) == 0x000004, "Wrong alignment on UI_Game_CharLevel_C_SetMasteryMaxRank");
static_assert(sizeof(UI_Game_CharLevel_C_SetMasteryMaxRank) == 0x000014, "Wrong size on UI_Game_CharLevel_C_SetMasteryMaxRank");
static_assert(offsetof(UI_Game_CharLevel_C_SetMasteryMaxRank, K2Node_MakeStruct_SlateColor) == 0x000000, "Member 'UI_Game_CharLevel_C_SetMasteryMaxRank::K2Node_MakeStruct_SlateColor' has a wrong offset!");

}

