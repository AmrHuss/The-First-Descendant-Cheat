#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_Game

#include "Basic.hpp"

#include "M1Data_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function UI_Game.UI_Game_C.BP_GetWidgetsToHideForPlayerCustomHUDOnly
// 0x0020 (0x0020 - 0x0000)
struct UI_Game_C_BP_GetWidgetsToHideForPlayerCustomHUDOnly final
{
public:
	TArray<class UWidget*>                        ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ReturnParm, ContainsInstancedReference)
	TArray<class UWidget*>                        K2Node_MakeArray_Array;                            // 0x0010(0x0010)(ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(UI_Game_C_BP_GetWidgetsToHideForPlayerCustomHUDOnly) == 0x000008, "Wrong alignment on UI_Game_C_BP_GetWidgetsToHideForPlayerCustomHUDOnly");
static_assert(sizeof(UI_Game_C_BP_GetWidgetsToHideForPlayerCustomHUDOnly) == 0x000020, "Wrong size on UI_Game_C_BP_GetWidgetsToHideForPlayerCustomHUDOnly");
static_assert(offsetof(UI_Game_C_BP_GetWidgetsToHideForPlayerCustomHUDOnly, ReturnValue) == 0x000000, "Member 'UI_Game_C_BP_GetWidgetsToHideForPlayerCustomHUDOnly::ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Game_C_BP_GetWidgetsToHideForPlayerCustomHUDOnly, K2Node_MakeArray_Array) == 0x000010, "Member 'UI_Game_C_BP_GetWidgetsToHideForPlayerCustomHUDOnly::K2Node_MakeArray_Array' has a wrong offset!");

// Function UI_Game.UI_Game_C.BP_SetButtonsVisibility
// 0x0001 (0x0001 - 0x0000)
struct UI_Game_C_BP_SetButtonsVisibility final
{
public:
	EM1MapType                                    InMapType;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Game_C_BP_SetButtonsVisibility) == 0x000001, "Wrong alignment on UI_Game_C_BP_SetButtonsVisibility");
static_assert(sizeof(UI_Game_C_BP_SetButtonsVisibility) == 0x000001, "Wrong size on UI_Game_C_BP_SetButtonsVisibility");
static_assert(offsetof(UI_Game_C_BP_SetButtonsVisibility, InMapType) == 0x000000, "Member 'UI_Game_C_BP_SetButtonsVisibility::InMapType' has a wrong offset!");

// Function UI_Game.UI_Game_C.ExecuteUbergraph_UI_Game
// 0x0010 (0x0010 - 0x0000)
struct UI_Game_C_ExecuteUbergraph_UI_Game final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EM1MapType                                    Temp_byte_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_4;                              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_5;                              // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_6;                              // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EM1MapType                                    K2Node_Event_InMapType;                            // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Game_C_ExecuteUbergraph_UI_Game) == 0x000004, "Wrong alignment on UI_Game_C_ExecuteUbergraph_UI_Game");
static_assert(sizeof(UI_Game_C_ExecuteUbergraph_UI_Game) == 0x000010, "Wrong size on UI_Game_C_ExecuteUbergraph_UI_Game");
static_assert(offsetof(UI_Game_C_ExecuteUbergraph_UI_Game, EntryPoint) == 0x000000, "Member 'UI_Game_C_ExecuteUbergraph_UI_Game::EntryPoint' has a wrong offset!");
static_assert(offsetof(UI_Game_C_ExecuteUbergraph_UI_Game, Temp_byte_Variable) == 0x000004, "Member 'UI_Game_C_ExecuteUbergraph_UI_Game::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(UI_Game_C_ExecuteUbergraph_UI_Game, Temp_byte_Variable_1) == 0x000005, "Member 'UI_Game_C_ExecuteUbergraph_UI_Game::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_Game_C_ExecuteUbergraph_UI_Game, Temp_byte_Variable_2) == 0x000006, "Member 'UI_Game_C_ExecuteUbergraph_UI_Game::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_Game_C_ExecuteUbergraph_UI_Game, Temp_byte_Variable_3) == 0x000007, "Member 'UI_Game_C_ExecuteUbergraph_UI_Game::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(UI_Game_C_ExecuteUbergraph_UI_Game, Temp_byte_Variable_4) == 0x000008, "Member 'UI_Game_C_ExecuteUbergraph_UI_Game::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(UI_Game_C_ExecuteUbergraph_UI_Game, K2Node_Event_IsDesignTime) == 0x000009, "Member 'UI_Game_C_ExecuteUbergraph_UI_Game::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(UI_Game_C_ExecuteUbergraph_UI_Game, Temp_byte_Variable_5) == 0x00000A, "Member 'UI_Game_C_ExecuteUbergraph_UI_Game::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(UI_Game_C_ExecuteUbergraph_UI_Game, Temp_byte_Variable_6) == 0x00000B, "Member 'UI_Game_C_ExecuteUbergraph_UI_Game::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(UI_Game_C_ExecuteUbergraph_UI_Game, K2Node_Event_InMapType) == 0x00000C, "Member 'UI_Game_C_ExecuteUbergraph_UI_Game::K2Node_Event_InMapType' has a wrong offset!");
static_assert(offsetof(UI_Game_C_ExecuteUbergraph_UI_Game, K2Node_Select_Default) == 0x00000D, "Member 'UI_Game_C_ExecuteUbergraph_UI_Game::K2Node_Select_Default' has a wrong offset!");

// Function UI_Game.UI_Game_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct UI_Game_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Game_C_PreConstruct) == 0x000001, "Wrong alignment on UI_Game_C_PreConstruct");
static_assert(sizeof(UI_Game_C_PreConstruct) == 0x000001, "Wrong size on UI_Game_C_PreConstruct");
static_assert(offsetof(UI_Game_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'UI_Game_C_PreConstruct::IsDesignTime' has a wrong offset!");

}

