#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_ItemIcon_Perk_Node

#include "Basic.hpp"

#include "M1_classes.hpp"
#include "Engine_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass UI_ItemIcon_Perk_Node.UI_ItemIcon_Perk_Node_C
// 0x0048 (0x0750 - 0x0708)
class UUI_ItemIcon_Perk_Node_C final : public UM1UIItemLevelIcon
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0708(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetSwitcher*                        BG;                                                // 0x0710(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Fill;                                              // 0x0718(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Fill_Enchant;                                      // 0x0720(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_Fill_1;                                      // 0x0728(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_Fill_ef;                                     // 0x0730(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_Fill_ef_Ench;                                // 0x0738(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_Fill_Ench;                                   // 0x0740(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBox_0;                                         // 0x0748(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	void BP_ShowGlowingEffect(const bool bShow);
	void BP_TurnOff();
	void BP_TurnOn(const bool bIsMaxLevel);
	void Construct();
	void ExecuteUbergraph_UI_ItemIcon_Perk_Node(int32 EntryPoint);
	void PreConstruct(bool IsDesignTime);
	void Set_Effect(bool ViewEffect);
	void SetBgStyle(bool ViewBgDeco);
	void SetEnchantPreview(bool InEnchantPreview);
	void SetFill(bool Fill_0);
	void SetMax(bool Max);
	void SetSize(const struct FVector2D& Size);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"UI_ItemIcon_Perk_Node_C">();
	}
	static class UUI_ItemIcon_Perk_Node_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUI_ItemIcon_Perk_Node_C>();
	}
};
static_assert(alignof(UUI_ItemIcon_Perk_Node_C) == 0x000008, "Wrong alignment on UUI_ItemIcon_Perk_Node_C");
static_assert(sizeof(UUI_ItemIcon_Perk_Node_C) == 0x000750, "Wrong size on UUI_ItemIcon_Perk_Node_C");
static_assert(offsetof(UUI_ItemIcon_Perk_Node_C, UberGraphFrame) == 0x000708, "Member 'UUI_ItemIcon_Perk_Node_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UUI_ItemIcon_Perk_Node_C, BG) == 0x000710, "Member 'UUI_ItemIcon_Perk_Node_C::BG' has a wrong offset!");
static_assert(offsetof(UUI_ItemIcon_Perk_Node_C, Fill) == 0x000718, "Member 'UUI_ItemIcon_Perk_Node_C::Fill' has a wrong offset!");
static_assert(offsetof(UUI_ItemIcon_Perk_Node_C, Fill_Enchant) == 0x000720, "Member 'UUI_ItemIcon_Perk_Node_C::Fill_Enchant' has a wrong offset!");
static_assert(offsetof(UUI_ItemIcon_Perk_Node_C, Image_Fill_1) == 0x000728, "Member 'UUI_ItemIcon_Perk_Node_C::Image_Fill_1' has a wrong offset!");
static_assert(offsetof(UUI_ItemIcon_Perk_Node_C, Image_Fill_ef) == 0x000730, "Member 'UUI_ItemIcon_Perk_Node_C::Image_Fill_ef' has a wrong offset!");
static_assert(offsetof(UUI_ItemIcon_Perk_Node_C, Image_Fill_ef_Ench) == 0x000738, "Member 'UUI_ItemIcon_Perk_Node_C::Image_Fill_ef_Ench' has a wrong offset!");
static_assert(offsetof(UUI_ItemIcon_Perk_Node_C, Image_Fill_Ench) == 0x000740, "Member 'UUI_ItemIcon_Perk_Node_C::Image_Fill_Ench' has a wrong offset!");
static_assert(offsetof(UUI_ItemIcon_Perk_Node_C, SizeBox_0) == 0x000748, "Member 'UUI_ItemIcon_Perk_Node_C::SizeBox_0' has a wrong offset!");

}

