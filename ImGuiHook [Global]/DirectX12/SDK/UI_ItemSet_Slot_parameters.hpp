#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_ItemSet_Slot

#include "Basic.hpp"

#include "M1Data_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function UI_ItemSet_Slot.UI_ItemSet_Slot_C.BP_SetEquipStatus
// 0x0034 (0x0034 - 0x0000)
struct UI_ItemSet_Slot_C_BP_SetEquipStatus final
{
public:
	bool                                          bIsEquipped;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0004(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x0014(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default;                             // 0x0024(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_ItemSet_Slot_C_BP_SetEquipStatus) == 0x000004, "Wrong alignment on UI_ItemSet_Slot_C_BP_SetEquipStatus");
static_assert(sizeof(UI_ItemSet_Slot_C_BP_SetEquipStatus) == 0x000034, "Wrong size on UI_ItemSet_Slot_C_BP_SetEquipStatus");
static_assert(offsetof(UI_ItemSet_Slot_C_BP_SetEquipStatus, bIsEquipped) == 0x000000, "Member 'UI_ItemSet_Slot_C_BP_SetEquipStatus::bIsEquipped' has a wrong offset!");
static_assert(offsetof(UI_ItemSet_Slot_C_BP_SetEquipStatus, Temp_bool_Variable) == 0x000001, "Member 'UI_ItemSet_Slot_C_BP_SetEquipStatus::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UI_ItemSet_Slot_C_BP_SetEquipStatus, Temp_struct_Variable) == 0x000004, "Member 'UI_ItemSet_Slot_C_BP_SetEquipStatus::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(UI_ItemSet_Slot_C_BP_SetEquipStatus, Temp_struct_Variable_1) == 0x000014, "Member 'UI_ItemSet_Slot_C_BP_SetEquipStatus::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_ItemSet_Slot_C_BP_SetEquipStatus, K2Node_Select_Default) == 0x000024, "Member 'UI_ItemSet_Slot_C_BP_SetEquipStatus::K2Node_Select_Default' has a wrong offset!");

// Function UI_ItemSet_Slot.UI_ItemSet_Slot_C.ExecuteUbergraph_UI_ItemSet_Slot
// 0x0008 (0x0008 - 0x0000)
struct UI_ItemSet_Slot_C_ExecuteUbergraph_UI_ItemSet_Slot final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_ItemSet_Slot_C_ExecuteUbergraph_UI_ItemSet_Slot) == 0x000004, "Wrong alignment on UI_ItemSet_Slot_C_ExecuteUbergraph_UI_ItemSet_Slot");
static_assert(sizeof(UI_ItemSet_Slot_C_ExecuteUbergraph_UI_ItemSet_Slot) == 0x000008, "Wrong size on UI_ItemSet_Slot_C_ExecuteUbergraph_UI_ItemSet_Slot");
static_assert(offsetof(UI_ItemSet_Slot_C_ExecuteUbergraph_UI_ItemSet_Slot, EntryPoint) == 0x000000, "Member 'UI_ItemSet_Slot_C_ExecuteUbergraph_UI_ItemSet_Slot::EntryPoint' has a wrong offset!");
static_assert(offsetof(UI_ItemSet_Slot_C_ExecuteUbergraph_UI_ItemSet_Slot, K2Node_Event_IsDesignTime) == 0x000004, "Member 'UI_ItemSet_Slot_C_ExecuteUbergraph_UI_ItemSet_Slot::K2Node_Event_IsDesignTime' has a wrong offset!");

// Function UI_ItemSet_Slot.UI_ItemSet_Slot_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct UI_ItemSet_Slot_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_ItemSet_Slot_C_PreConstruct) == 0x000001, "Wrong alignment on UI_ItemSet_Slot_C_PreConstruct");
static_assert(sizeof(UI_ItemSet_Slot_C_PreConstruct) == 0x000001, "Wrong size on UI_ItemSet_Slot_C_PreConstruct");
static_assert(offsetof(UI_ItemSet_Slot_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'UI_ItemSet_Slot_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function UI_ItemSet_Slot.UI_ItemSet_Slot_C.SetUISlotType
// 0x02A8 (0x02A8 - 0x0000)
struct UI_ItemSet_Slot_C_SetUISlotType final
{
public:
	EM1EquipmentSlotType                          Temp_byte_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UTexture2D>              Temp_softobject_Variable;                          // 0x0008(0x0030)(UObjectWrapper, HasGetValueTypeHash)
	TSoftObjectPtr<class UTexture2D>              Temp_softobject_Variable_1;                        // 0x0038(0x0030)(UObjectWrapper, HasGetValueTypeHash)
	TSoftObjectPtr<class UTexture2D>              Temp_softobject_Variable_2;                        // 0x0068(0x0030)(UObjectWrapper, HasGetValueTypeHash)
	TSoftObjectPtr<class UTexture2D>              Temp_softobject_Variable_3;                        // 0x0098(0x0030)(UObjectWrapper, HasGetValueTypeHash)
	TSoftObjectPtr<class UTexture2D>              Temp_softobject_Variable_4;                        // 0x00C8(0x0030)(UObjectWrapper, HasGetValueTypeHash)
	TSoftObjectPtr<class UTexture2D>              Temp_softobject_Variable_5;                        // 0x00F8(0x0030)(UObjectWrapper, HasGetValueTypeHash)
	TSoftObjectPtr<class UTexture2D>              Temp_softobject_Variable_6;                        // 0x0128(0x0030)(UObjectWrapper, HasGetValueTypeHash)
	TSoftObjectPtr<class UTexture2D>              Temp_softobject_Variable_7;                        // 0x0158(0x0030)(UObjectWrapper, HasGetValueTypeHash)
	TSoftObjectPtr<class UTexture2D>              Temp_softobject_Variable_8;                        // 0x0188(0x0030)(UObjectWrapper, HasGetValueTypeHash)
	TSoftObjectPtr<class UTexture2D>              Temp_softobject_Variable_9;                        // 0x01B8(0x0030)(UObjectWrapper, HasGetValueTypeHash)
	TSoftObjectPtr<class UTexture2D>              Temp_softobject_Variable_10;                       // 0x01E8(0x0030)(UObjectWrapper, HasGetValueTypeHash)
	TSoftObjectPtr<class UTexture2D>              Temp_softobject_Variable_11;                       // 0x0218(0x0030)(UObjectWrapper, HasGetValueTypeHash)
	TSoftObjectPtr<class UTexture2D>              Temp_softobject_Variable_12;                       // 0x0248(0x0030)(UObjectWrapper, HasGetValueTypeHash)
	TSoftObjectPtr<class UTexture2D>              K2Node_Select_Default;                             // 0x0278(0x0030)(UObjectWrapper, HasGetValueTypeHash)
};
static_assert(alignof(UI_ItemSet_Slot_C_SetUISlotType) == 0x000008, "Wrong alignment on UI_ItemSet_Slot_C_SetUISlotType");
static_assert(sizeof(UI_ItemSet_Slot_C_SetUISlotType) == 0x0002A8, "Wrong size on UI_ItemSet_Slot_C_SetUISlotType");
static_assert(offsetof(UI_ItemSet_Slot_C_SetUISlotType, Temp_byte_Variable) == 0x000000, "Member 'UI_ItemSet_Slot_C_SetUISlotType::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(UI_ItemSet_Slot_C_SetUISlotType, Temp_softobject_Variable) == 0x000008, "Member 'UI_ItemSet_Slot_C_SetUISlotType::Temp_softobject_Variable' has a wrong offset!");
static_assert(offsetof(UI_ItemSet_Slot_C_SetUISlotType, Temp_softobject_Variable_1) == 0x000038, "Member 'UI_ItemSet_Slot_C_SetUISlotType::Temp_softobject_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_ItemSet_Slot_C_SetUISlotType, Temp_softobject_Variable_2) == 0x000068, "Member 'UI_ItemSet_Slot_C_SetUISlotType::Temp_softobject_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_ItemSet_Slot_C_SetUISlotType, Temp_softobject_Variable_3) == 0x000098, "Member 'UI_ItemSet_Slot_C_SetUISlotType::Temp_softobject_Variable_3' has a wrong offset!");
static_assert(offsetof(UI_ItemSet_Slot_C_SetUISlotType, Temp_softobject_Variable_4) == 0x0000C8, "Member 'UI_ItemSet_Slot_C_SetUISlotType::Temp_softobject_Variable_4' has a wrong offset!");
static_assert(offsetof(UI_ItemSet_Slot_C_SetUISlotType, Temp_softobject_Variable_5) == 0x0000F8, "Member 'UI_ItemSet_Slot_C_SetUISlotType::Temp_softobject_Variable_5' has a wrong offset!");
static_assert(offsetof(UI_ItemSet_Slot_C_SetUISlotType, Temp_softobject_Variable_6) == 0x000128, "Member 'UI_ItemSet_Slot_C_SetUISlotType::Temp_softobject_Variable_6' has a wrong offset!");
static_assert(offsetof(UI_ItemSet_Slot_C_SetUISlotType, Temp_softobject_Variable_7) == 0x000158, "Member 'UI_ItemSet_Slot_C_SetUISlotType::Temp_softobject_Variable_7' has a wrong offset!");
static_assert(offsetof(UI_ItemSet_Slot_C_SetUISlotType, Temp_softobject_Variable_8) == 0x000188, "Member 'UI_ItemSet_Slot_C_SetUISlotType::Temp_softobject_Variable_8' has a wrong offset!");
static_assert(offsetof(UI_ItemSet_Slot_C_SetUISlotType, Temp_softobject_Variable_9) == 0x0001B8, "Member 'UI_ItemSet_Slot_C_SetUISlotType::Temp_softobject_Variable_9' has a wrong offset!");
static_assert(offsetof(UI_ItemSet_Slot_C_SetUISlotType, Temp_softobject_Variable_10) == 0x0001E8, "Member 'UI_ItemSet_Slot_C_SetUISlotType::Temp_softobject_Variable_10' has a wrong offset!");
static_assert(offsetof(UI_ItemSet_Slot_C_SetUISlotType, Temp_softobject_Variable_11) == 0x000218, "Member 'UI_ItemSet_Slot_C_SetUISlotType::Temp_softobject_Variable_11' has a wrong offset!");
static_assert(offsetof(UI_ItemSet_Slot_C_SetUISlotType, Temp_softobject_Variable_12) == 0x000248, "Member 'UI_ItemSet_Slot_C_SetUISlotType::Temp_softobject_Variable_12' has a wrong offset!");
static_assert(offsetof(UI_ItemSet_Slot_C_SetUISlotType, K2Node_Select_Default) == 0x000278, "Member 'UI_ItemSet_Slot_C_SetUISlotType::K2Node_Select_Default' has a wrong offset!");

}

