#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_ItemStat_A

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "M1Data_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function UI_ItemStat_A.UI_ItemStat_A_C.BP_SetDiffRatio
// 0x0008 (0x0008 - 0x0000)
struct UI_ItemStat_A_C_BP_SetDiffRatio final
{
public:
	float                                         InOwnRatio;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         InToCompareRatio;                                  // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_ItemStat_A_C_BP_SetDiffRatio) == 0x000004, "Wrong alignment on UI_ItemStat_A_C_BP_SetDiffRatio");
static_assert(sizeof(UI_ItemStat_A_C_BP_SetDiffRatio) == 0x000008, "Wrong size on UI_ItemStat_A_C_BP_SetDiffRatio");
static_assert(offsetof(UI_ItemStat_A_C_BP_SetDiffRatio, InOwnRatio) == 0x000000, "Member 'UI_ItemStat_A_C_BP_SetDiffRatio::InOwnRatio' has a wrong offset!");
static_assert(offsetof(UI_ItemStat_A_C_BP_SetDiffRatio, InToCompareRatio) == 0x000004, "Member 'UI_ItemStat_A_C_BP_SetDiffRatio::InToCompareRatio' has a wrong offset!");

// Function UI_ItemStat_A.UI_ItemStat_A_C.BP_SetDiffStatValue
// 0x0002 (0x0002 - 0x0000)
struct UI_ItemStat_A_C_BP_SetDiffStatValue final
{
public:
	bool                                          bIsZero;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bPositiveNum;                                      // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_ItemStat_A_C_BP_SetDiffStatValue) == 0x000001, "Wrong alignment on UI_ItemStat_A_C_BP_SetDiffStatValue");
static_assert(sizeof(UI_ItemStat_A_C_BP_SetDiffStatValue) == 0x000002, "Wrong size on UI_ItemStat_A_C_BP_SetDiffStatValue");
static_assert(offsetof(UI_ItemStat_A_C_BP_SetDiffStatValue, bIsZero) == 0x000000, "Member 'UI_ItemStat_A_C_BP_SetDiffStatValue::bIsZero' has a wrong offset!");
static_assert(offsetof(UI_ItemStat_A_C_BP_SetDiffStatValue, bPositiveNum) == 0x000001, "Member 'UI_ItemStat_A_C_BP_SetDiffStatValue::bPositiveNum' has a wrong offset!");

// Function UI_ItemStat_A.UI_ItemStat_A_C.BP_SetEffectiveSkilll
// 0x0001 (0x0001 - 0x0000)
struct UI_ItemStat_A_C_BP_SetEffectiveSkilll final
{
public:
	bool                                          bIsEffective;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_ItemStat_A_C_BP_SetEffectiveSkilll) == 0x000001, "Wrong alignment on UI_ItemStat_A_C_BP_SetEffectiveSkilll");
static_assert(sizeof(UI_ItemStat_A_C_BP_SetEffectiveSkilll) == 0x000001, "Wrong size on UI_ItemStat_A_C_BP_SetEffectiveSkilll");
static_assert(offsetof(UI_ItemStat_A_C_BP_SetEffectiveSkilll, bIsEffective) == 0x000000, "Member 'UI_ItemStat_A_C_BP_SetEffectiveSkilll::bIsEffective' has a wrong offset!");

// Function UI_ItemStat_A.UI_ItemStat_A_C.ExecuteUbergraph_UI_ItemStat_A
// 0x0080 (0x0080 - 0x0000)
struct UI_ItemStat_A_C_ExecuteUbergraph_UI_ItemStat_A final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EM1StatType                                   CallFunc_GetStatType_ReturnValue;                  // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Does_Stat_Increase_Has_Positive_Effect_HasPositiveEffect; // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue_1;                // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_InOwnRatio;                           // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_InToCompareRatio;                     // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue;      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsZero;                              // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bPositiveNum;                         // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0034(0x0014)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x0048(0x0014)()
	bool                                          K2Node_Event_IsDesignTime;                         // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsEffective;                         // 0x005D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5E[0x2];                                       // 0x005E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast;      // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast;   // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_B_ImplicitCast;      // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_EqualEqual_DoubleDouble_B_ImplicitCast;   // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_ItemStat_A_C_ExecuteUbergraph_UI_ItemStat_A) == 0x000008, "Wrong alignment on UI_ItemStat_A_C_ExecuteUbergraph_UI_ItemStat_A");
static_assert(sizeof(UI_ItemStat_A_C_ExecuteUbergraph_UI_ItemStat_A) == 0x000080, "Wrong size on UI_ItemStat_A_C_ExecuteUbergraph_UI_ItemStat_A");
static_assert(offsetof(UI_ItemStat_A_C_ExecuteUbergraph_UI_ItemStat_A, EntryPoint) == 0x000000, "Member 'UI_ItemStat_A_C_ExecuteUbergraph_UI_ItemStat_A::EntryPoint' has a wrong offset!");
static_assert(offsetof(UI_ItemStat_A_C_ExecuteUbergraph_UI_ItemStat_A, CallFunc_GetStatType_ReturnValue) == 0x000004, "Member 'UI_ItemStat_A_C_ExecuteUbergraph_UI_ItemStat_A::CallFunc_GetStatType_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ItemStat_A_C_ExecuteUbergraph_UI_ItemStat_A, CallFunc_Does_Stat_Increase_Has_Positive_Effect_HasPositiveEffect) == 0x000005, "Member 'UI_ItemStat_A_C_ExecuteUbergraph_UI_ItemStat_A::CallFunc_Does_Stat_Increase_Has_Positive_Effect_HasPositiveEffect' has a wrong offset!");
static_assert(offsetof(UI_ItemStat_A_C_ExecuteUbergraph_UI_ItemStat_A, CallFunc_SelectColor_ReturnValue) == 0x000008, "Member 'UI_ItemStat_A_C_ExecuteUbergraph_UI_ItemStat_A::CallFunc_SelectColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ItemStat_A_C_ExecuteUbergraph_UI_ItemStat_A, CallFunc_SelectColor_ReturnValue_1) == 0x000018, "Member 'UI_ItemStat_A_C_ExecuteUbergraph_UI_ItemStat_A::CallFunc_SelectColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_ItemStat_A_C_ExecuteUbergraph_UI_ItemStat_A, K2Node_Event_InOwnRatio) == 0x000028, "Member 'UI_ItemStat_A_C_ExecuteUbergraph_UI_ItemStat_A::K2Node_Event_InOwnRatio' has a wrong offset!");
static_assert(offsetof(UI_ItemStat_A_C_ExecuteUbergraph_UI_ItemStat_A, K2Node_Event_InToCompareRatio) == 0x00002C, "Member 'UI_ItemStat_A_C_ExecuteUbergraph_UI_ItemStat_A::K2Node_Event_InToCompareRatio' has a wrong offset!");
static_assert(offsetof(UI_ItemStat_A_C_ExecuteUbergraph_UI_ItemStat_A, CallFunc_EqualEqual_DoubleDouble_ReturnValue) == 0x000030, "Member 'UI_ItemStat_A_C_ExecuteUbergraph_UI_ItemStat_A::CallFunc_EqualEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ItemStat_A_C_ExecuteUbergraph_UI_ItemStat_A, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000031, "Member 'UI_ItemStat_A_C_ExecuteUbergraph_UI_ItemStat_A::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ItemStat_A_C_ExecuteUbergraph_UI_ItemStat_A, K2Node_Event_bIsZero) == 0x000032, "Member 'UI_ItemStat_A_C_ExecuteUbergraph_UI_ItemStat_A::K2Node_Event_bIsZero' has a wrong offset!");
static_assert(offsetof(UI_ItemStat_A_C_ExecuteUbergraph_UI_ItemStat_A, K2Node_Event_bPositiveNum) == 0x000033, "Member 'UI_ItemStat_A_C_ExecuteUbergraph_UI_ItemStat_A::K2Node_Event_bPositiveNum' has a wrong offset!");
static_assert(offsetof(UI_ItemStat_A_C_ExecuteUbergraph_UI_ItemStat_A, K2Node_MakeStruct_SlateColor) == 0x000034, "Member 'UI_ItemStat_A_C_ExecuteUbergraph_UI_ItemStat_A::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(UI_ItemStat_A_C_ExecuteUbergraph_UI_ItemStat_A, K2Node_MakeStruct_SlateColor_1) == 0x000048, "Member 'UI_ItemStat_A_C_ExecuteUbergraph_UI_ItemStat_A::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");
static_assert(offsetof(UI_ItemStat_A_C_ExecuteUbergraph_UI_ItemStat_A, K2Node_Event_IsDesignTime) == 0x00005C, "Member 'UI_ItemStat_A_C_ExecuteUbergraph_UI_ItemStat_A::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(UI_ItemStat_A_C_ExecuteUbergraph_UI_ItemStat_A, K2Node_Event_bIsEffective) == 0x00005D, "Member 'UI_ItemStat_A_C_ExecuteUbergraph_UI_ItemStat_A::K2Node_Event_bIsEffective' has a wrong offset!");
static_assert(offsetof(UI_ItemStat_A_C_ExecuteUbergraph_UI_ItemStat_A, CallFunc_Greater_DoubleDouble_A_ImplicitCast) == 0x000060, "Member 'UI_ItemStat_A_C_ExecuteUbergraph_UI_ItemStat_A::CallFunc_Greater_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(UI_ItemStat_A_C_ExecuteUbergraph_UI_ItemStat_A, CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast) == 0x000068, "Member 'UI_ItemStat_A_C_ExecuteUbergraph_UI_ItemStat_A::CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(UI_ItemStat_A_C_ExecuteUbergraph_UI_ItemStat_A, CallFunc_Greater_DoubleDouble_B_ImplicitCast) == 0x000070, "Member 'UI_ItemStat_A_C_ExecuteUbergraph_UI_ItemStat_A::CallFunc_Greater_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(UI_ItemStat_A_C_ExecuteUbergraph_UI_ItemStat_A, CallFunc_EqualEqual_DoubleDouble_B_ImplicitCast) == 0x000078, "Member 'UI_ItemStat_A_C_ExecuteUbergraph_UI_ItemStat_A::CallFunc_EqualEqual_DoubleDouble_B_ImplicitCast' has a wrong offset!");

// Function UI_ItemStat_A.UI_ItemStat_A_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct UI_ItemStat_A_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_ItemStat_A_C_PreConstruct) == 0x000001, "Wrong alignment on UI_ItemStat_A_C_PreConstruct");
static_assert(sizeof(UI_ItemStat_A_C_PreConstruct) == 0x000001, "Wrong size on UI_ItemStat_A_C_PreConstruct");
static_assert(offsetof(UI_ItemStat_A_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'UI_ItemStat_A_C_PreConstruct::IsDesignTime' has a wrong offset!");

}

