#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_Mission_VoidPiece_item

#include "Basic.hpp"

#include "M1_classes.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass UI_Mission_VoidPiece_item.UI_Mission_VoidPiece_item_C
// 0x0028 (0x0730 - 0x0708)
class UUI_Mission_VoidPiece_item_C final : public UM1UIRequiredVoidPieceEntryWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0708(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UImage*                                 Image_Icon;                                        // 0x0710(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         Itme;                                              // 0x0718(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UM1TextBlock*                           TB_Amount;                                         // 0x0720(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UM1TextBlock*                           TB_Name;                                           // 0x0728(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	void BP_SetAmount(int32 InOwnedCount, int32 InRequiredCount);
	void ExecuteUbergraph_UI_Mission_VoidPiece_item(int32 EntryPoint);
	void SetDataImpl(class UM1UIData* InData);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"UI_Mission_VoidPiece_item_C">();
	}
	static class UUI_Mission_VoidPiece_item_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUI_Mission_VoidPiece_item_C>();
	}
};
static_assert(alignof(UUI_Mission_VoidPiece_item_C) == 0x000008, "Wrong alignment on UUI_Mission_VoidPiece_item_C");
static_assert(sizeof(UUI_Mission_VoidPiece_item_C) == 0x000730, "Wrong size on UUI_Mission_VoidPiece_item_C");
static_assert(offsetof(UUI_Mission_VoidPiece_item_C, UberGraphFrame) == 0x000708, "Member 'UUI_Mission_VoidPiece_item_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UUI_Mission_VoidPiece_item_C, Image_Icon) == 0x000710, "Member 'UUI_Mission_VoidPiece_item_C::Image_Icon' has a wrong offset!");
static_assert(offsetof(UUI_Mission_VoidPiece_item_C, Itme) == 0x000718, "Member 'UUI_Mission_VoidPiece_item_C::Itme' has a wrong offset!");
static_assert(offsetof(UUI_Mission_VoidPiece_item_C, TB_Amount) == 0x000720, "Member 'UUI_Mission_VoidPiece_item_C::TB_Amount' has a wrong offset!");
static_assert(offsetof(UUI_Mission_VoidPiece_item_C, TB_Name) == 0x000728, "Member 'UUI_Mission_VoidPiece_item_C::TB_Name' has a wrong offset!");

}

