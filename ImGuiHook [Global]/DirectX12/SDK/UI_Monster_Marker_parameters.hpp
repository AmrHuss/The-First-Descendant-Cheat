#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_Monster_Marker

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "M1_structs.hpp"


namespace SDK::Params
{

// Function UI_Monster_Marker.UI_Monster_Marker_C.BP_ChangeMonsterMarker
// 0x0001 (0x0001 - 0x0000)
struct UI_Monster_Marker_C_BP_ChangeMonsterMarker final
{
public:
	EM1MissionDerivativeMarkerType                InNewMarkerType;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Monster_Marker_C_BP_ChangeMonsterMarker) == 0x000001, "Wrong alignment on UI_Monster_Marker_C_BP_ChangeMonsterMarker");
static_assert(sizeof(UI_Monster_Marker_C_BP_ChangeMonsterMarker) == 0x000001, "Wrong size on UI_Monster_Marker_C_BP_ChangeMonsterMarker");
static_assert(offsetof(UI_Monster_Marker_C_BP_ChangeMonsterMarker, InNewMarkerType) == 0x000000, "Member 'UI_Monster_Marker_C_BP_ChangeMonsterMarker::InNewMarkerType' has a wrong offset!");

// Function UI_Monster_Marker.UI_Monster_Marker_C.ExecuteUbergraph_UI_Monster_Marker
// 0x0018 (0x0018 - 0x0000)
struct UI_Monster_Marker_C_ExecuteUbergraph_UI_Monster_Marker final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayUIAnimation_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EM1MissionDerivativeMarkerType                K2Node_Event_InNewMarkerType;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Monster_Marker_C_ExecuteUbergraph_UI_Monster_Marker) == 0x000008, "Wrong alignment on UI_Monster_Marker_C_ExecuteUbergraph_UI_Monster_Marker");
static_assert(sizeof(UI_Monster_Marker_C_ExecuteUbergraph_UI_Monster_Marker) == 0x000018, "Wrong size on UI_Monster_Marker_C_ExecuteUbergraph_UI_Monster_Marker");
static_assert(offsetof(UI_Monster_Marker_C_ExecuteUbergraph_UI_Monster_Marker, EntryPoint) == 0x000000, "Member 'UI_Monster_Marker_C_ExecuteUbergraph_UI_Monster_Marker::EntryPoint' has a wrong offset!");
static_assert(offsetof(UI_Monster_Marker_C_ExecuteUbergraph_UI_Monster_Marker, CallFunc_PlayUIAnimation_ReturnValue) == 0x000008, "Member 'UI_Monster_Marker_C_ExecuteUbergraph_UI_Monster_Marker::CallFunc_PlayUIAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Monster_Marker_C_ExecuteUbergraph_UI_Monster_Marker, K2Node_Event_InNewMarkerType) == 0x000010, "Member 'UI_Monster_Marker_C_ExecuteUbergraph_UI_Monster_Marker::K2Node_Event_InNewMarkerType' has a wrong offset!");
static_assert(offsetof(UI_Monster_Marker_C_ExecuteUbergraph_UI_Monster_Marker, K2Node_SwitchEnum_CmpSuccess) == 0x000011, "Member 'UI_Monster_Marker_C_ExecuteUbergraph_UI_Monster_Marker::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(UI_Monster_Marker_C_ExecuteUbergraph_UI_Monster_Marker, K2Node_Event_IsDesignTime) == 0x000012, "Member 'UI_Monster_Marker_C_ExecuteUbergraph_UI_Monster_Marker::K2Node_Event_IsDesignTime' has a wrong offset!");

// Function UI_Monster_Marker.UI_Monster_Marker_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct UI_Monster_Marker_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Monster_Marker_C_PreConstruct) == 0x000001, "Wrong alignment on UI_Monster_Marker_C_PreConstruct");
static_assert(sizeof(UI_Monster_Marker_C_PreConstruct) == 0x000001, "Wrong size on UI_Monster_Marker_C_PreConstruct");
static_assert(offsetof(UI_Monster_Marker_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'UI_Monster_Marker_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function UI_Monster_Marker.UI_Monster_Marker_C.UISetMarkColor
// 0x0038 (0x0038 - 0x0000)
struct UI_Monster_Marker_C_UISetMarkColor final
{
public:
	int32                                         InIconType;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable;                              // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Temp_struct_Variable_1;                            // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Select_Default;                             // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Monster_Marker_C_UISetMarkColor) == 0x000004, "Wrong alignment on UI_Monster_Marker_C_UISetMarkColor");
static_assert(sizeof(UI_Monster_Marker_C_UISetMarkColor) == 0x000038, "Wrong size on UI_Monster_Marker_C_UISetMarkColor");
static_assert(offsetof(UI_Monster_Marker_C_UISetMarkColor, InIconType) == 0x000000, "Member 'UI_Monster_Marker_C_UISetMarkColor::InIconType' has a wrong offset!");
static_assert(offsetof(UI_Monster_Marker_C_UISetMarkColor, Temp_int_Variable) == 0x000004, "Member 'UI_Monster_Marker_C_UISetMarkColor::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(UI_Monster_Marker_C_UISetMarkColor, Temp_struct_Variable) == 0x000008, "Member 'UI_Monster_Marker_C_UISetMarkColor::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(UI_Monster_Marker_C_UISetMarkColor, Temp_struct_Variable_1) == 0x000018, "Member 'UI_Monster_Marker_C_UISetMarkColor::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_Monster_Marker_C_UISetMarkColor, K2Node_Select_Default) == 0x000028, "Member 'UI_Monster_Marker_C_UISetMarkColor::K2Node_Select_Default' has a wrong offset!");

}

