#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_Popup

#include "Basic.hpp"

#include "M1_structs.hpp"


namespace SDK::Params
{

// Function UI_Popup.UI_Popup_C.BP_playakEvent
// 0x0008 (0x0008 - 0x0000)
struct UI_Popup_C_BP_playakEvent final
{
public:
	class UAkAudioEvent*                          AkEvent;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Popup_C_BP_playakEvent) == 0x000008, "Wrong alignment on UI_Popup_C_BP_playakEvent");
static_assert(sizeof(UI_Popup_C_BP_playakEvent) == 0x000008, "Wrong size on UI_Popup_C_BP_playakEvent");
static_assert(offsetof(UI_Popup_C_BP_playakEvent, AkEvent) == 0x000000, "Member 'UI_Popup_C_BP_playakEvent::AkEvent' has a wrong offset!");

// Function UI_Popup.UI_Popup_C.BP_SetButtonCountImpl
// 0x0004 (0x0004 - 0x0000)
struct UI_Popup_C_BP_SetButtonCountImpl final
{
public:
	int32                                         InCount;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Popup_C_BP_SetButtonCountImpl) == 0x000004, "Wrong alignment on UI_Popup_C_BP_SetButtonCountImpl");
static_assert(sizeof(UI_Popup_C_BP_SetButtonCountImpl) == 0x000004, "Wrong size on UI_Popup_C_BP_SetButtonCountImpl");
static_assert(offsetof(UI_Popup_C_BP_SetButtonCountImpl, InCount) == 0x000000, "Member 'UI_Popup_C_BP_SetButtonCountImpl::InCount' has a wrong offset!");

// Function UI_Popup.UI_Popup_C.ExecuteUbergraph_UI_Popup
// 0x0028 (0x0028 - 0x0000)
struct UI_Popup_C_ExecuteUbergraph_UI_Popup final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAkAudioEvent*                          K2Node_CustomEvent_AkEvent;                        // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_InCount;                              // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EM1WidgetAnimDirection                        K2Node_Event_InDirection_1;                        // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EM1WidgetAnimDirection                        K2Node_Event_InDirection;                          // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Popup_C_ExecuteUbergraph_UI_Popup) == 0x000008, "Wrong alignment on UI_Popup_C_ExecuteUbergraph_UI_Popup");
static_assert(sizeof(UI_Popup_C_ExecuteUbergraph_UI_Popup) == 0x000028, "Wrong size on UI_Popup_C_ExecuteUbergraph_UI_Popup");
static_assert(offsetof(UI_Popup_C_ExecuteUbergraph_UI_Popup, EntryPoint) == 0x000000, "Member 'UI_Popup_C_ExecuteUbergraph_UI_Popup::EntryPoint' has a wrong offset!");
static_assert(offsetof(UI_Popup_C_ExecuteUbergraph_UI_Popup, CallFunc_PlayAnimation_ReturnValue) == 0x000008, "Member 'UI_Popup_C_ExecuteUbergraph_UI_Popup::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Popup_C_ExecuteUbergraph_UI_Popup, K2Node_CustomEvent_AkEvent) == 0x000010, "Member 'UI_Popup_C_ExecuteUbergraph_UI_Popup::K2Node_CustomEvent_AkEvent' has a wrong offset!");
static_assert(offsetof(UI_Popup_C_ExecuteUbergraph_UI_Popup, CallFunc_PlayAnimation_ReturnValue_1) == 0x000018, "Member 'UI_Popup_C_ExecuteUbergraph_UI_Popup::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UI_Popup_C_ExecuteUbergraph_UI_Popup, K2Node_Event_InCount) == 0x000020, "Member 'UI_Popup_C_ExecuteUbergraph_UI_Popup::K2Node_Event_InCount' has a wrong offset!");
static_assert(offsetof(UI_Popup_C_ExecuteUbergraph_UI_Popup, K2Node_SwitchInteger_CmpSuccess) == 0x000024, "Member 'UI_Popup_C_ExecuteUbergraph_UI_Popup::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(UI_Popup_C_ExecuteUbergraph_UI_Popup, K2Node_Event_InDirection_1) == 0x000025, "Member 'UI_Popup_C_ExecuteUbergraph_UI_Popup::K2Node_Event_InDirection_1' has a wrong offset!");
static_assert(offsetof(UI_Popup_C_ExecuteUbergraph_UI_Popup, K2Node_Event_InDirection) == 0x000026, "Member 'UI_Popup_C_ExecuteUbergraph_UI_Popup::K2Node_Event_InDirection' has a wrong offset!");

// Function UI_Popup.UI_Popup_C.OnEventWidgetClose
// 0x0001 (0x0001 - 0x0000)
struct UI_Popup_C_OnEventWidgetClose final
{
public:
	EM1WidgetAnimDirection                        InDirection;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Popup_C_OnEventWidgetClose) == 0x000001, "Wrong alignment on UI_Popup_C_OnEventWidgetClose");
static_assert(sizeof(UI_Popup_C_OnEventWidgetClose) == 0x000001, "Wrong size on UI_Popup_C_OnEventWidgetClose");
static_assert(offsetof(UI_Popup_C_OnEventWidgetClose, InDirection) == 0x000000, "Member 'UI_Popup_C_OnEventWidgetClose::InDirection' has a wrong offset!");

// Function UI_Popup.UI_Popup_C.OnEventWidgetOpen
// 0x0001 (0x0001 - 0x0000)
struct UI_Popup_C_OnEventWidgetOpen final
{
public:
	EM1WidgetAnimDirection                        InDirection;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Popup_C_OnEventWidgetOpen) == 0x000001, "Wrong alignment on UI_Popup_C_OnEventWidgetOpen");
static_assert(sizeof(UI_Popup_C_OnEventWidgetOpen) == 0x000001, "Wrong size on UI_Popup_C_OnEventWidgetOpen");
static_assert(offsetof(UI_Popup_C_OnEventWidgetOpen, InDirection) == 0x000000, "Member 'UI_Popup_C_OnEventWidgetOpen::InDirection' has a wrong offset!");

}

