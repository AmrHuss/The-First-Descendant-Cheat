#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_SkillPowerDetail

#include "Basic.hpp"

#include "M1Data_structs.hpp"


namespace SDK::Params
{

// Function UI_SkillPowerDetail.UI_SkillPowerDetail_C.BP_SetArcheType
// 0x0002 (0x0002 - 0x0000)
struct UI_SkillPowerDetail_C_BP_SetArcheType final
{
public:
	EM1SkillArcheType                             InArcheType;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsAfffected;                                      // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_SkillPowerDetail_C_BP_SetArcheType) == 0x000001, "Wrong alignment on UI_SkillPowerDetail_C_BP_SetArcheType");
static_assert(sizeof(UI_SkillPowerDetail_C_BP_SetArcheType) == 0x000002, "Wrong size on UI_SkillPowerDetail_C_BP_SetArcheType");
static_assert(offsetof(UI_SkillPowerDetail_C_BP_SetArcheType, InArcheType) == 0x000000, "Member 'UI_SkillPowerDetail_C_BP_SetArcheType::InArcheType' has a wrong offset!");
static_assert(offsetof(UI_SkillPowerDetail_C_BP_SetArcheType, bIsAfffected) == 0x000001, "Member 'UI_SkillPowerDetail_C_BP_SetArcheType::bIsAfffected' has a wrong offset!");

// Function UI_SkillPowerDetail.UI_SkillPowerDetail_C.BP_SetElemantalType
// 0x0002 (0x0002 - 0x0000)
struct UI_SkillPowerDetail_C_BP_SetElemantalType final
{
public:
	EM1ElementalDamageChannel                     InElementalType;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsAfffected;                                      // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_SkillPowerDetail_C_BP_SetElemantalType) == 0x000001, "Wrong alignment on UI_SkillPowerDetail_C_BP_SetElemantalType");
static_assert(sizeof(UI_SkillPowerDetail_C_BP_SetElemantalType) == 0x000002, "Wrong size on UI_SkillPowerDetail_C_BP_SetElemantalType");
static_assert(offsetof(UI_SkillPowerDetail_C_BP_SetElemantalType, InElementalType) == 0x000000, "Member 'UI_SkillPowerDetail_C_BP_SetElemantalType::InElementalType' has a wrong offset!");
static_assert(offsetof(UI_SkillPowerDetail_C_BP_SetElemantalType, bIsAfffected) == 0x000001, "Member 'UI_SkillPowerDetail_C_BP_SetElemantalType::bIsAfffected' has a wrong offset!");

// Function UI_SkillPowerDetail.UI_SkillPowerDetail_C.ExecuteUbergraph_UI_SkillPowerDetail
// 0x000C (0x000C - 0x0000)
struct UI_SkillPowerDetail_C_ExecuteUbergraph_UI_SkillPowerDetail final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EM1ElementalDamageChannel                     K2Node_Event_InElementalType;                      // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsAfffected_1;                       // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EM1SkillArcheType                             K2Node_Event_InArcheType;                          // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bIsAfffected;                         // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_SkillPowerDetail_C_ExecuteUbergraph_UI_SkillPowerDetail) == 0x000004, "Wrong alignment on UI_SkillPowerDetail_C_ExecuteUbergraph_UI_SkillPowerDetail");
static_assert(sizeof(UI_SkillPowerDetail_C_ExecuteUbergraph_UI_SkillPowerDetail) == 0x00000C, "Wrong size on UI_SkillPowerDetail_C_ExecuteUbergraph_UI_SkillPowerDetail");
static_assert(offsetof(UI_SkillPowerDetail_C_ExecuteUbergraph_UI_SkillPowerDetail, EntryPoint) == 0x000000, "Member 'UI_SkillPowerDetail_C_ExecuteUbergraph_UI_SkillPowerDetail::EntryPoint' has a wrong offset!");
static_assert(offsetof(UI_SkillPowerDetail_C_ExecuteUbergraph_UI_SkillPowerDetail, K2Node_Event_IsDesignTime) == 0x000004, "Member 'UI_SkillPowerDetail_C_ExecuteUbergraph_UI_SkillPowerDetail::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(UI_SkillPowerDetail_C_ExecuteUbergraph_UI_SkillPowerDetail, K2Node_Event_InElementalType) == 0x000005, "Member 'UI_SkillPowerDetail_C_ExecuteUbergraph_UI_SkillPowerDetail::K2Node_Event_InElementalType' has a wrong offset!");
static_assert(offsetof(UI_SkillPowerDetail_C_ExecuteUbergraph_UI_SkillPowerDetail, K2Node_Event_bIsAfffected_1) == 0x000006, "Member 'UI_SkillPowerDetail_C_ExecuteUbergraph_UI_SkillPowerDetail::K2Node_Event_bIsAfffected_1' has a wrong offset!");
static_assert(offsetof(UI_SkillPowerDetail_C_ExecuteUbergraph_UI_SkillPowerDetail, K2Node_Event_InArcheType) == 0x000007, "Member 'UI_SkillPowerDetail_C_ExecuteUbergraph_UI_SkillPowerDetail::K2Node_Event_InArcheType' has a wrong offset!");
static_assert(offsetof(UI_SkillPowerDetail_C_ExecuteUbergraph_UI_SkillPowerDetail, K2Node_Event_bIsAfffected) == 0x000008, "Member 'UI_SkillPowerDetail_C_ExecuteUbergraph_UI_SkillPowerDetail::K2Node_Event_bIsAfffected' has a wrong offset!");

// Function UI_SkillPowerDetail.UI_SkillPowerDetail_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct UI_SkillPowerDetail_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_SkillPowerDetail_C_PreConstruct) == 0x000001, "Wrong alignment on UI_SkillPowerDetail_C_PreConstruct");
static_assert(sizeof(UI_SkillPowerDetail_C_PreConstruct) == 0x000001, "Wrong size on UI_SkillPowerDetail_C_PreConstruct");
static_assert(offsetof(UI_SkillPowerDetail_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'UI_SkillPowerDetail_C_PreConstruct::IsDesignTime' has a wrong offset!");

}

