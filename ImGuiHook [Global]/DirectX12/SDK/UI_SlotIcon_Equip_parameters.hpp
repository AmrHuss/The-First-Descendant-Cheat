#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_SlotIcon_Equip

#include "Basic.hpp"

#include "M1Data_structs.hpp"


namespace SDK::Params
{

// Function UI_SlotIcon_Equip.UI_SlotIcon_Equip_C.ExecuteUbergraph_UI_SlotIcon_Equip
// 0x0004 (0x0004 - 0x0000)
struct UI_SlotIcon_Equip_C_ExecuteUbergraph_UI_SlotIcon_Equip final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_SlotIcon_Equip_C_ExecuteUbergraph_UI_SlotIcon_Equip) == 0x000004, "Wrong alignment on UI_SlotIcon_Equip_C_ExecuteUbergraph_UI_SlotIcon_Equip");
static_assert(sizeof(UI_SlotIcon_Equip_C_ExecuteUbergraph_UI_SlotIcon_Equip) == 0x000004, "Wrong size on UI_SlotIcon_Equip_C_ExecuteUbergraph_UI_SlotIcon_Equip");
static_assert(offsetof(UI_SlotIcon_Equip_C_ExecuteUbergraph_UI_SlotIcon_Equip, EntryPoint) == 0x000000, "Member 'UI_SlotIcon_Equip_C_ExecuteUbergraph_UI_SlotIcon_Equip::EntryPoint' has a wrong offset!");

// Function UI_SlotIcon_Equip.UI_SlotIcon_Equip_C.SetEquipType
// 0x0198 (0x0198 - 0x0000)
struct UI_SlotIcon_Equip_C_SetEquipType final
{
public:
	bool                                          IsEquipped;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EM1EquipmentSlotType                          InSlotType;                                        // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Temp_text_Variable;                                // 0x0008(0x0018)()
	class FText                                   Temp_text_Variable_1;                              // 0x0020(0x0018)()
	class FText                                   Temp_text_Variable_2;                              // 0x0038(0x0018)()
	class FText                                   Temp_text_Variable_3;                              // 0x0050(0x0018)()
	class FText                                   Temp_text_Variable_4;                              // 0x0068(0x0018)()
	class FText                                   Temp_text_Variable_5;                              // 0x0080(0x0018)()
	class FText                                   Temp_text_Variable_6;                              // 0x0098(0x0018)()
	class FText                                   Temp_text_Variable_7;                              // 0x00B0(0x0018)()
	class FText                                   Temp_text_Variable_8;                              // 0x00C8(0x0018)()
	class FText                                   Temp_text_Variable_9;                              // 0x00E0(0x0018)()
	class FText                                   Temp_text_Variable_10;                             // 0x00F8(0x0018)()
	class FText                                   Temp_text_Variable_11;                             // 0x0110(0x0018)()
	class FText                                   Temp_text_Variable_12;                             // 0x0128(0x0018)()
	EM1EquipmentSlotType                          Temp_byte_Variable;                                // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_141[0x3];                                      // 0x0141(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_4;                               // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_5;                               // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_6;                               // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_7;                               // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_8;                               // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_9;                               // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_10;                              // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_11;                              // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_12;                              // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EM1EquipmentSlotType                          Temp_byte_Variable_1;                              // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_179[0x3];                                      // 0x0179(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   K2Node_Select_Default_1;                           // 0x0180(0x0018)()
};
static_assert(alignof(UI_SlotIcon_Equip_C_SetEquipType) == 0x000008, "Wrong alignment on UI_SlotIcon_Equip_C_SetEquipType");
static_assert(sizeof(UI_SlotIcon_Equip_C_SetEquipType) == 0x000198, "Wrong size on UI_SlotIcon_Equip_C_SetEquipType");
static_assert(offsetof(UI_SlotIcon_Equip_C_SetEquipType, IsEquipped) == 0x000000, "Member 'UI_SlotIcon_Equip_C_SetEquipType::IsEquipped' has a wrong offset!");
static_assert(offsetof(UI_SlotIcon_Equip_C_SetEquipType, InSlotType) == 0x000001, "Member 'UI_SlotIcon_Equip_C_SetEquipType::InSlotType' has a wrong offset!");
static_assert(offsetof(UI_SlotIcon_Equip_C_SetEquipType, Temp_text_Variable) == 0x000008, "Member 'UI_SlotIcon_Equip_C_SetEquipType::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(UI_SlotIcon_Equip_C_SetEquipType, Temp_text_Variable_1) == 0x000020, "Member 'UI_SlotIcon_Equip_C_SetEquipType::Temp_text_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_SlotIcon_Equip_C_SetEquipType, Temp_text_Variable_2) == 0x000038, "Member 'UI_SlotIcon_Equip_C_SetEquipType::Temp_text_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_SlotIcon_Equip_C_SetEquipType, Temp_text_Variable_3) == 0x000050, "Member 'UI_SlotIcon_Equip_C_SetEquipType::Temp_text_Variable_3' has a wrong offset!");
static_assert(offsetof(UI_SlotIcon_Equip_C_SetEquipType, Temp_text_Variable_4) == 0x000068, "Member 'UI_SlotIcon_Equip_C_SetEquipType::Temp_text_Variable_4' has a wrong offset!");
static_assert(offsetof(UI_SlotIcon_Equip_C_SetEquipType, Temp_text_Variable_5) == 0x000080, "Member 'UI_SlotIcon_Equip_C_SetEquipType::Temp_text_Variable_5' has a wrong offset!");
static_assert(offsetof(UI_SlotIcon_Equip_C_SetEquipType, Temp_text_Variable_6) == 0x000098, "Member 'UI_SlotIcon_Equip_C_SetEquipType::Temp_text_Variable_6' has a wrong offset!");
static_assert(offsetof(UI_SlotIcon_Equip_C_SetEquipType, Temp_text_Variable_7) == 0x0000B0, "Member 'UI_SlotIcon_Equip_C_SetEquipType::Temp_text_Variable_7' has a wrong offset!");
static_assert(offsetof(UI_SlotIcon_Equip_C_SetEquipType, Temp_text_Variable_8) == 0x0000C8, "Member 'UI_SlotIcon_Equip_C_SetEquipType::Temp_text_Variable_8' has a wrong offset!");
static_assert(offsetof(UI_SlotIcon_Equip_C_SetEquipType, Temp_text_Variable_9) == 0x0000E0, "Member 'UI_SlotIcon_Equip_C_SetEquipType::Temp_text_Variable_9' has a wrong offset!");
static_assert(offsetof(UI_SlotIcon_Equip_C_SetEquipType, Temp_text_Variable_10) == 0x0000F8, "Member 'UI_SlotIcon_Equip_C_SetEquipType::Temp_text_Variable_10' has a wrong offset!");
static_assert(offsetof(UI_SlotIcon_Equip_C_SetEquipType, Temp_text_Variable_11) == 0x000110, "Member 'UI_SlotIcon_Equip_C_SetEquipType::Temp_text_Variable_11' has a wrong offset!");
static_assert(offsetof(UI_SlotIcon_Equip_C_SetEquipType, Temp_text_Variable_12) == 0x000128, "Member 'UI_SlotIcon_Equip_C_SetEquipType::Temp_text_Variable_12' has a wrong offset!");
static_assert(offsetof(UI_SlotIcon_Equip_C_SetEquipType, Temp_byte_Variable) == 0x000140, "Member 'UI_SlotIcon_Equip_C_SetEquipType::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(UI_SlotIcon_Equip_C_SetEquipType, Temp_int_Variable) == 0x000144, "Member 'UI_SlotIcon_Equip_C_SetEquipType::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(UI_SlotIcon_Equip_C_SetEquipType, Temp_int_Variable_1) == 0x000148, "Member 'UI_SlotIcon_Equip_C_SetEquipType::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_SlotIcon_Equip_C_SetEquipType, Temp_int_Variable_2) == 0x00014C, "Member 'UI_SlotIcon_Equip_C_SetEquipType::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_SlotIcon_Equip_C_SetEquipType, Temp_int_Variable_3) == 0x000150, "Member 'UI_SlotIcon_Equip_C_SetEquipType::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(UI_SlotIcon_Equip_C_SetEquipType, Temp_int_Variable_4) == 0x000154, "Member 'UI_SlotIcon_Equip_C_SetEquipType::Temp_int_Variable_4' has a wrong offset!");
static_assert(offsetof(UI_SlotIcon_Equip_C_SetEquipType, Temp_int_Variable_5) == 0x000158, "Member 'UI_SlotIcon_Equip_C_SetEquipType::Temp_int_Variable_5' has a wrong offset!");
static_assert(offsetof(UI_SlotIcon_Equip_C_SetEquipType, Temp_int_Variable_6) == 0x00015C, "Member 'UI_SlotIcon_Equip_C_SetEquipType::Temp_int_Variable_6' has a wrong offset!");
static_assert(offsetof(UI_SlotIcon_Equip_C_SetEquipType, Temp_int_Variable_7) == 0x000160, "Member 'UI_SlotIcon_Equip_C_SetEquipType::Temp_int_Variable_7' has a wrong offset!");
static_assert(offsetof(UI_SlotIcon_Equip_C_SetEquipType, Temp_int_Variable_8) == 0x000164, "Member 'UI_SlotIcon_Equip_C_SetEquipType::Temp_int_Variable_8' has a wrong offset!");
static_assert(offsetof(UI_SlotIcon_Equip_C_SetEquipType, Temp_int_Variable_9) == 0x000168, "Member 'UI_SlotIcon_Equip_C_SetEquipType::Temp_int_Variable_9' has a wrong offset!");
static_assert(offsetof(UI_SlotIcon_Equip_C_SetEquipType, Temp_int_Variable_10) == 0x00016C, "Member 'UI_SlotIcon_Equip_C_SetEquipType::Temp_int_Variable_10' has a wrong offset!");
static_assert(offsetof(UI_SlotIcon_Equip_C_SetEquipType, Temp_int_Variable_11) == 0x000170, "Member 'UI_SlotIcon_Equip_C_SetEquipType::Temp_int_Variable_11' has a wrong offset!");
static_assert(offsetof(UI_SlotIcon_Equip_C_SetEquipType, Temp_int_Variable_12) == 0x000174, "Member 'UI_SlotIcon_Equip_C_SetEquipType::Temp_int_Variable_12' has a wrong offset!");
static_assert(offsetof(UI_SlotIcon_Equip_C_SetEquipType, Temp_byte_Variable_1) == 0x000178, "Member 'UI_SlotIcon_Equip_C_SetEquipType::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_SlotIcon_Equip_C_SetEquipType, K2Node_Select_Default) == 0x00017C, "Member 'UI_SlotIcon_Equip_C_SetEquipType::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UI_SlotIcon_Equip_C_SetEquipType, K2Node_Select_Default_1) == 0x000180, "Member 'UI_SlotIcon_Equip_C_SetEquipType::K2Node_Select_Default_1' has a wrong offset!");

}

