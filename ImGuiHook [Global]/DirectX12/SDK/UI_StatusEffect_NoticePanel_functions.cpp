#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_StatusEffect_NoticePanel

#include "Basic.hpp"

#include "UI_StatusEffect_NoticePanel_classes.hpp"
#include "UI_StatusEffect_NoticePanel_parameters.hpp"


namespace SDK
{

// Function UI_StatusEffect_NoticePanel.UI_StatusEffect_NoticePanel_C.BP_OnAddedStatusEffectNotice
// (Event, Protected, BlueprintEvent)
// Parameters:
// class UM1UIWidget*                      InNoticeWidget                                         (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UUI_StatusEffect_NoticePanel_C::BP_OnAddedStatusEffectNotice(const class UM1UIWidget* InNoticeWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_StatusEffect_NoticePanel_C", "BP_OnAddedStatusEffectNotice");

	Params::UI_StatusEffect_NoticePanel_C_BP_OnAddedStatusEffectNotice Parms{};

	Parms.InNoticeWidget = InNoticeWidget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_StatusEffect_NoticePanel.UI_StatusEffect_NoticePanel_C.BP_SetupForReuse
// (Event, Public, BlueprintEvent)

void UUI_StatusEffect_NoticePanel_C::BP_SetupForReuse()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_StatusEffect_NoticePanel_C", "BP_SetupForReuse");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_StatusEffect_NoticePanel.UI_StatusEffect_NoticePanel_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UUI_StatusEffect_NoticePanel_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_StatusEffect_NoticePanel_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function UI_StatusEffect_NoticePanel.UI_StatusEffect_NoticePanel_C.ExecuteUbergraph_UI_StatusEffect_NoticePanel
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_StatusEffect_NoticePanel_C::ExecuteUbergraph_UI_StatusEffect_NoticePanel(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_StatusEffect_NoticePanel_C", "ExecuteUbergraph_UI_StatusEffect_NoticePanel");

	Params::UI_StatusEffect_NoticePanel_C_ExecuteUbergraph_UI_StatusEffect_NoticePanel Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_StatusEffect_NoticePanel.UI_StatusEffect_NoticePanel_C.PreConstruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    IsDesignTime                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_StatusEffect_NoticePanel_C::PreConstruct(bool IsDesignTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_StatusEffect_NoticePanel_C", "PreConstruct");

	Params::UI_StatusEffect_NoticePanel_C_PreConstruct Parms{};

	Parms.IsDesignTime = IsDesignTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function UI_StatusEffect_NoticePanel.UI_StatusEffect_NoticePanel_C.SetUIAlign
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// EVerticalAlignment                      InVerticalAling                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UUI_StatusEffect_NoticePanel_C::SetUIAlign(EVerticalAlignment InVerticalAling)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("UI_StatusEffect_NoticePanel_C", "SetUIAlign");

	Params::UI_StatusEffect_NoticePanel_C_SetUIAlign Parms{};

	Parms.InVerticalAling = InVerticalAling;

	UObject::ProcessEvent(Func, &Parms);
}

}

