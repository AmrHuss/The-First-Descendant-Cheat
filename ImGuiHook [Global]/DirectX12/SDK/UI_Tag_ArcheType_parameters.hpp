#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_Tag_ArcheType

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "M1Data_structs.hpp"


namespace SDK::Params
{

// Function UI_Tag_ArcheType.UI_Tag_ArcheType_C.ExecuteUbergraph_UI_Tag_ArcheType
// 0x0008 (0x0008 - 0x0000)
struct UI_Tag_ArcheType_C_ExecuteUbergraph_UI_Tag_ArcheType final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Tag_ArcheType_C_ExecuteUbergraph_UI_Tag_ArcheType) == 0x000004, "Wrong alignment on UI_Tag_ArcheType_C_ExecuteUbergraph_UI_Tag_ArcheType");
static_assert(sizeof(UI_Tag_ArcheType_C_ExecuteUbergraph_UI_Tag_ArcheType) == 0x000008, "Wrong size on UI_Tag_ArcheType_C_ExecuteUbergraph_UI_Tag_ArcheType");
static_assert(offsetof(UI_Tag_ArcheType_C_ExecuteUbergraph_UI_Tag_ArcheType, EntryPoint) == 0x000000, "Member 'UI_Tag_ArcheType_C_ExecuteUbergraph_UI_Tag_ArcheType::EntryPoint' has a wrong offset!");
static_assert(offsetof(UI_Tag_ArcheType_C_ExecuteUbergraph_UI_Tag_ArcheType, K2Node_Event_IsDesignTime) == 0x000004, "Member 'UI_Tag_ArcheType_C_ExecuteUbergraph_UI_Tag_ArcheType::K2Node_Event_IsDesignTime' has a wrong offset!");

// Function UI_Tag_ArcheType.UI_Tag_ArcheType_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct UI_Tag_ArcheType_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Tag_ArcheType_C_PreConstruct) == 0x000001, "Wrong alignment on UI_Tag_ArcheType_C_PreConstruct");
static_assert(sizeof(UI_Tag_ArcheType_C_PreConstruct) == 0x000001, "Wrong size on UI_Tag_ArcheType_C_PreConstruct");
static_assert(offsetof(UI_Tag_ArcheType_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'UI_Tag_ArcheType_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function UI_Tag_ArcheType.UI_Tag_ArcheType_C.SetUIArcheType
// 0x01D8 (0x01D8 - 0x0000)
struct UI_Tag_ArcheType_C_SetUIArcheType final
{
public:
	EM1SkillArcheType                             ArcheType;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EM1SkillArcheType                             Temp_byte_Variable_2;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable;                              // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_1;                            // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_2;                            // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_3;                            // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_4;                            // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_5;                            // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	EM1SkillArcheType                             Temp_byte_Variable_3;                              // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Select_Default;                             // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UTexture2D>              Temp_softobject_Variable;                          // 0x0080(0x0030)(UObjectWrapper, HasGetValueTypeHash)
	TSoftObjectPtr<class UTexture2D>              Temp_softobject_Variable_1;                        // 0x00B0(0x0030)(UObjectWrapper, HasGetValueTypeHash)
	TSoftObjectPtr<class UTexture2D>              Temp_softobject_Variable_2;                        // 0x00E0(0x0030)(UObjectWrapper, HasGetValueTypeHash)
	TSoftObjectPtr<class UTexture2D>              Temp_softobject_Variable_3;                        // 0x0110(0x0030)(UObjectWrapper, HasGetValueTypeHash)
	TSoftObjectPtr<class UTexture2D>              Temp_softobject_Variable_4;                        // 0x0140(0x0030)(UObjectWrapper, HasGetValueTypeHash)
	TSoftObjectPtr<class UTexture2D>              Temp_softobject_Variable_5;                        // 0x0170(0x0030)(UObjectWrapper, HasGetValueTypeHash)
	TSoftObjectPtr<class UTexture2D>              K2Node_Select_Default_1;                           // 0x01A0(0x0030)(UObjectWrapper, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_2;                           // 0x01D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Tag_ArcheType_C_SetUIArcheType) == 0x000008, "Wrong alignment on UI_Tag_ArcheType_C_SetUIArcheType");
static_assert(sizeof(UI_Tag_ArcheType_C_SetUIArcheType) == 0x0001D8, "Wrong size on UI_Tag_ArcheType_C_SetUIArcheType");
static_assert(offsetof(UI_Tag_ArcheType_C_SetUIArcheType, ArcheType) == 0x000000, "Member 'UI_Tag_ArcheType_C_SetUIArcheType::ArcheType' has a wrong offset!");
static_assert(offsetof(UI_Tag_ArcheType_C_SetUIArcheType, Temp_byte_Variable) == 0x000001, "Member 'UI_Tag_ArcheType_C_SetUIArcheType::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(UI_Tag_ArcheType_C_SetUIArcheType, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000002, "Member 'UI_Tag_ArcheType_C_SetUIArcheType::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Tag_ArcheType_C_SetUIArcheType, Temp_byte_Variable_1) == 0x000003, "Member 'UI_Tag_ArcheType_C_SetUIArcheType::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_Tag_ArcheType_C_SetUIArcheType, Temp_byte_Variable_2) == 0x000004, "Member 'UI_Tag_ArcheType_C_SetUIArcheType::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_Tag_ArcheType_C_SetUIArcheType, Temp_string_Variable) == 0x000008, "Member 'UI_Tag_ArcheType_C_SetUIArcheType::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(UI_Tag_ArcheType_C_SetUIArcheType, Temp_string_Variable_1) == 0x000018, "Member 'UI_Tag_ArcheType_C_SetUIArcheType::Temp_string_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_Tag_ArcheType_C_SetUIArcheType, Temp_string_Variable_2) == 0x000028, "Member 'UI_Tag_ArcheType_C_SetUIArcheType::Temp_string_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_Tag_ArcheType_C_SetUIArcheType, Temp_string_Variable_3) == 0x000038, "Member 'UI_Tag_ArcheType_C_SetUIArcheType::Temp_string_Variable_3' has a wrong offset!");
static_assert(offsetof(UI_Tag_ArcheType_C_SetUIArcheType, Temp_string_Variable_4) == 0x000048, "Member 'UI_Tag_ArcheType_C_SetUIArcheType::Temp_string_Variable_4' has a wrong offset!");
static_assert(offsetof(UI_Tag_ArcheType_C_SetUIArcheType, Temp_string_Variable_5) == 0x000058, "Member 'UI_Tag_ArcheType_C_SetUIArcheType::Temp_string_Variable_5' has a wrong offset!");
static_assert(offsetof(UI_Tag_ArcheType_C_SetUIArcheType, Temp_byte_Variable_3) == 0x000068, "Member 'UI_Tag_ArcheType_C_SetUIArcheType::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(UI_Tag_ArcheType_C_SetUIArcheType, K2Node_Select_Default) == 0x000070, "Member 'UI_Tag_ArcheType_C_SetUIArcheType::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UI_Tag_ArcheType_C_SetUIArcheType, Temp_softobject_Variable) == 0x000080, "Member 'UI_Tag_ArcheType_C_SetUIArcheType::Temp_softobject_Variable' has a wrong offset!");
static_assert(offsetof(UI_Tag_ArcheType_C_SetUIArcheType, Temp_softobject_Variable_1) == 0x0000B0, "Member 'UI_Tag_ArcheType_C_SetUIArcheType::Temp_softobject_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_Tag_ArcheType_C_SetUIArcheType, Temp_softobject_Variable_2) == 0x0000E0, "Member 'UI_Tag_ArcheType_C_SetUIArcheType::Temp_softobject_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_Tag_ArcheType_C_SetUIArcheType, Temp_softobject_Variable_3) == 0x000110, "Member 'UI_Tag_ArcheType_C_SetUIArcheType::Temp_softobject_Variable_3' has a wrong offset!");
static_assert(offsetof(UI_Tag_ArcheType_C_SetUIArcheType, Temp_softobject_Variable_4) == 0x000140, "Member 'UI_Tag_ArcheType_C_SetUIArcheType::Temp_softobject_Variable_4' has a wrong offset!");
static_assert(offsetof(UI_Tag_ArcheType_C_SetUIArcheType, Temp_softobject_Variable_5) == 0x000170, "Member 'UI_Tag_ArcheType_C_SetUIArcheType::Temp_softobject_Variable_5' has a wrong offset!");
static_assert(offsetof(UI_Tag_ArcheType_C_SetUIArcheType, K2Node_Select_Default_1) == 0x0001A0, "Member 'UI_Tag_ArcheType_C_SetUIArcheType::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(UI_Tag_ArcheType_C_SetUIArcheType, Temp_bool_Variable) == 0x0001D0, "Member 'UI_Tag_ArcheType_C_SetUIArcheType::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UI_Tag_ArcheType_C_SetUIArcheType, K2Node_Select_Default_2) == 0x0001D1, "Member 'UI_Tag_ArcheType_C_SetUIArcheType::K2Node_Select_Default_2' has a wrong offset!");

// Function UI_Tag_ArcheType.UI_Tag_ArcheType_C.SetUICondition
// 0x0001 (0x0001 - 0x0000)
struct UI_Tag_ArcheType_C_SetUICondition final
{
public:
	bool                                          Condition;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Tag_ArcheType_C_SetUICondition) == 0x000001, "Wrong alignment on UI_Tag_ArcheType_C_SetUICondition");
static_assert(sizeof(UI_Tag_ArcheType_C_SetUICondition) == 0x000001, "Wrong size on UI_Tag_ArcheType_C_SetUICondition");
static_assert(offsetof(UI_Tag_ArcheType_C_SetUICondition, Condition) == 0x000000, "Member 'UI_Tag_ArcheType_C_SetUICondition::Condition' has a wrong offset!");

}

