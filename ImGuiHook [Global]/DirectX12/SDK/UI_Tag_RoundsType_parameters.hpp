#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_Tag_RoundsType

#include "Basic.hpp"

#include "M1Data_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function UI_Tag_RoundsType.UI_Tag_RoundsType_C.SetUIRoundsType
// 0x0058 (0x0058 - 0x0000)
struct UI_Tag_RoundsType_C_SetUIRoundsType final
{
public:
	EM1RoundsType                                 InRoundsType;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Get_UI_RoundsType_Text_ElementalTypeText; // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UTexture2D*                             CallFunc_Get_UI_RoundsType_Icon_ElementalTypeIcon; // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UTexture2D>              CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue; // 0x0020(0x0030)(UObjectWrapper, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Tag_RoundsType_C_SetUIRoundsType) == 0x000008, "Wrong alignment on UI_Tag_RoundsType_C_SetUIRoundsType");
static_assert(sizeof(UI_Tag_RoundsType_C_SetUIRoundsType) == 0x000058, "Wrong size on UI_Tag_RoundsType_C_SetUIRoundsType");
static_assert(offsetof(UI_Tag_RoundsType_C_SetUIRoundsType, InRoundsType) == 0x000000, "Member 'UI_Tag_RoundsType_C_SetUIRoundsType::InRoundsType' has a wrong offset!");
static_assert(offsetof(UI_Tag_RoundsType_C_SetUIRoundsType, Temp_byte_Variable) == 0x000001, "Member 'UI_Tag_RoundsType_C_SetUIRoundsType::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(UI_Tag_RoundsType_C_SetUIRoundsType, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000002, "Member 'UI_Tag_RoundsType_C_SetUIRoundsType::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Tag_RoundsType_C_SetUIRoundsType, CallFunc_Get_UI_RoundsType_Text_ElementalTypeText) == 0x000008, "Member 'UI_Tag_RoundsType_C_SetUIRoundsType::CallFunc_Get_UI_RoundsType_Text_ElementalTypeText' has a wrong offset!");
static_assert(offsetof(UI_Tag_RoundsType_C_SetUIRoundsType, CallFunc_Get_UI_RoundsType_Icon_ElementalTypeIcon) == 0x000018, "Member 'UI_Tag_RoundsType_C_SetUIRoundsType::CallFunc_Get_UI_RoundsType_Icon_ElementalTypeIcon' has a wrong offset!");
static_assert(offsetof(UI_Tag_RoundsType_C_SetUIRoundsType, CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue) == 0x000020, "Member 'UI_Tag_RoundsType_C_SetUIRoundsType::CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Tag_RoundsType_C_SetUIRoundsType, Temp_byte_Variable_1) == 0x000050, "Member 'UI_Tag_RoundsType_C_SetUIRoundsType::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_Tag_RoundsType_C_SetUIRoundsType, Temp_bool_Variable) == 0x000051, "Member 'UI_Tag_RoundsType_C_SetUIRoundsType::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UI_Tag_RoundsType_C_SetUIRoundsType, K2Node_Select_Default) == 0x000052, "Member 'UI_Tag_RoundsType_C_SetUIRoundsType::K2Node_Select_Default' has a wrong offset!");

}

