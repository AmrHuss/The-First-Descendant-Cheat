#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_Timer

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function UI_Timer.UI_Timer_C.ExecuteUbergraph_UI_Timer
// 0x0058 (0x0058 - 0x0000)
struct UI_Timer_C_ExecuteUbergraph_UI_Timer final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7[0x1];                                        // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FMargin                                K2Node_MakeStruct_Margin_1;                        // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UOverlaySlot*                           CallFunc_SlotAsOverlaySlot_ReturnValue;            // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FMargin                                K2Node_Select_Default;                             // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_1;                              // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A[0x6];                                       // 0x004A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UScaleBoxSlot*                          CallFunc_SlotAsScaleBoxSlot_ReturnValue;           // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Timer_C_ExecuteUbergraph_UI_Timer) == 0x000008, "Wrong alignment on UI_Timer_C_ExecuteUbergraph_UI_Timer");
static_assert(sizeof(UI_Timer_C_ExecuteUbergraph_UI_Timer) == 0x000058, "Wrong size on UI_Timer_C_ExecuteUbergraph_UI_Timer");
static_assert(offsetof(UI_Timer_C_ExecuteUbergraph_UI_Timer, EntryPoint) == 0x000000, "Member 'UI_Timer_C_ExecuteUbergraph_UI_Timer::EntryPoint' has a wrong offset!");
static_assert(offsetof(UI_Timer_C_ExecuteUbergraph_UI_Timer, Temp_byte_Variable) == 0x000004, "Member 'UI_Timer_C_ExecuteUbergraph_UI_Timer::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(UI_Timer_C_ExecuteUbergraph_UI_Timer, Temp_byte_Variable_1) == 0x000005, "Member 'UI_Timer_C_ExecuteUbergraph_UI_Timer::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_Timer_C_ExecuteUbergraph_UI_Timer, Temp_bool_Variable) == 0x000006, "Member 'UI_Timer_C_ExecuteUbergraph_UI_Timer::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UI_Timer_C_ExecuteUbergraph_UI_Timer, K2Node_MakeStruct_Margin) == 0x000008, "Member 'UI_Timer_C_ExecuteUbergraph_UI_Timer::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(UI_Timer_C_ExecuteUbergraph_UI_Timer, K2Node_MakeStruct_Margin_1) == 0x000018, "Member 'UI_Timer_C_ExecuteUbergraph_UI_Timer::K2Node_MakeStruct_Margin_1' has a wrong offset!");
static_assert(offsetof(UI_Timer_C_ExecuteUbergraph_UI_Timer, K2Node_Event_IsDesignTime) == 0x000028, "Member 'UI_Timer_C_ExecuteUbergraph_UI_Timer::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(UI_Timer_C_ExecuteUbergraph_UI_Timer, CallFunc_SlotAsOverlaySlot_ReturnValue) == 0x000030, "Member 'UI_Timer_C_ExecuteUbergraph_UI_Timer::CallFunc_SlotAsOverlaySlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_Timer_C_ExecuteUbergraph_UI_Timer, K2Node_Select_Default) == 0x000038, "Member 'UI_Timer_C_ExecuteUbergraph_UI_Timer::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UI_Timer_C_ExecuteUbergraph_UI_Timer, Temp_bool_Variable_1) == 0x000048, "Member 'UI_Timer_C_ExecuteUbergraph_UI_Timer::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_Timer_C_ExecuteUbergraph_UI_Timer, K2Node_Select_Default_1) == 0x000049, "Member 'UI_Timer_C_ExecuteUbergraph_UI_Timer::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(UI_Timer_C_ExecuteUbergraph_UI_Timer, CallFunc_SlotAsScaleBoxSlot_ReturnValue) == 0x000050, "Member 'UI_Timer_C_ExecuteUbergraph_UI_Timer::CallFunc_SlotAsScaleBoxSlot_ReturnValue' has a wrong offset!");

// Function UI_Timer.UI_Timer_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct UI_Timer_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_Timer_C_PreConstruct) == 0x000001, "Wrong alignment on UI_Timer_C_PreConstruct");
static_assert(sizeof(UI_Timer_C_PreConstruct) == 0x000001, "Wrong size on UI_Timer_C_PreConstruct");
static_assert(offsetof(UI_Timer_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'UI_Timer_C_PreConstruct::IsDesignTime' has a wrong offset!");

}

