#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_WaitingForNetwork

#include "Basic.hpp"

#include "M1_classes.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass UI_WaitingForNetwork.UI_WaitingForNetwork_C
// 0x0018 (0x0748 - 0x0730)
class UUI_WaitingForNetwork_C final : public UM1UIWaitingForNetwork
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0730(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       UI_ANIM_Open;                                      // 0x0738(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 Image_89;                                          // 0x0740(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	void Construct();
	void ExecuteUbergraph_UI_WaitingForNetwork(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"UI_WaitingForNetwork_C">();
	}
	static class UUI_WaitingForNetwork_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUI_WaitingForNetwork_C>();
	}
};
static_assert(alignof(UUI_WaitingForNetwork_C) == 0x000008, "Wrong alignment on UUI_WaitingForNetwork_C");
static_assert(sizeof(UUI_WaitingForNetwork_C) == 0x000748, "Wrong size on UUI_WaitingForNetwork_C");
static_assert(offsetof(UUI_WaitingForNetwork_C, UberGraphFrame) == 0x000730, "Member 'UUI_WaitingForNetwork_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UUI_WaitingForNetwork_C, UI_ANIM_Open) == 0x000738, "Member 'UUI_WaitingForNetwork_C::UI_ANIM_Open' has a wrong offset!");
static_assert(offsetof(UUI_WaitingForNetwork_C, Image_89) == 0x000740, "Member 'UUI_WaitingForNetwork_C::Image_89' has a wrong offset!");

}

