#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Viessa_AbilityActor_IceSphere2

#include "Basic.hpp"

#include "M1Data_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "M1_structs.hpp"
#include "Engine_structs.hpp"
#include "Viessa_IceSphereData_structs.hpp"


namespace SDK::Params
{

// Function Viessa_AbilityActor_IceSphere2.Viessa_AbilityActor_IceSphere2_C.TickUpdateShoot
// 0x00F0 (0x00F0 - 0x0000)
struct Viessa_AbilityActor_IceSphere2_C_TickUpdateShoot final
{
public:
	double                                        DeltaSeconds;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 CallFunc_FindNearestIceSphere_Result;              // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_FindNearestIceSphere_ResultIceSphereName; // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           Temp_name_Variable;                                // 0x0030(0x0010)(ConstParm, ReferenceParm)
	bool                                          CallFunc_RotateTarget_FinishedRotation;            // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0xF];                                       // 0x0041(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue;           // 0x0050(0x0030)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FM1TaggedAbilityParamData>      Temp_struct_Variable;                              // 0x0080(0x0010)(ConstParm, ReferenceParm)
	struct FM1AbilityContextHandle                CallFunc_BP_MakeForwardingContext_ReturnValue;     // 0x0090(0x0010)()
	class AM1AbilityActor*                        CallFunc_SpawnFirstAbilityActorByTag_ReturnValue;  // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanShoot_Result;                          // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_1;               // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UABP_PC_003_A0101_C*                    K2Node_DynamicCast_AsABP_PC_003_A0101;             // 0x00C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C9[0x7];                                       // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AM1Monster*                             CallFunc_FindNearestTarget_Target;                 // 0x00D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D9[0x7];                                       // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast;          // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Viessa_AbilityActor_IceSphere2_C_TickUpdateShoot) == 0x000010, "Wrong alignment on Viessa_AbilityActor_IceSphere2_C_TickUpdateShoot");
static_assert(sizeof(Viessa_AbilityActor_IceSphere2_C_TickUpdateShoot) == 0x0000F0, "Wrong size on Viessa_AbilityActor_IceSphere2_C_TickUpdateShoot");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_TickUpdateShoot, DeltaSeconds) == 0x000000, "Member 'Viessa_AbilityActor_IceSphere2_C_TickUpdateShoot::DeltaSeconds' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_TickUpdateShoot, CallFunc_HasAuthority_ReturnValue) == 0x000008, "Member 'Viessa_AbilityActor_IceSphere2_C_TickUpdateShoot::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_TickUpdateShoot, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000010, "Member 'Viessa_AbilityActor_IceSphere2_C_TickUpdateShoot::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_TickUpdateShoot, CallFunc_FindNearestIceSphere_Result) == 0x000018, "Member 'Viessa_AbilityActor_IceSphere2_C_TickUpdateShoot::CallFunc_FindNearestIceSphere_Result' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_TickUpdateShoot, CallFunc_FindNearestIceSphere_ResultIceSphereName) == 0x000020, "Member 'Viessa_AbilityActor_IceSphere2_C_TickUpdateShoot::CallFunc_FindNearestIceSphere_ResultIceSphereName' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_TickUpdateShoot, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'Viessa_AbilityActor_IceSphere2_C_TickUpdateShoot::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_TickUpdateShoot, Temp_name_Variable) == 0x000030, "Member 'Viessa_AbilityActor_IceSphere2_C_TickUpdateShoot::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_TickUpdateShoot, CallFunc_RotateTarget_FinishedRotation) == 0x000040, "Member 'Viessa_AbilityActor_IceSphere2_C_TickUpdateShoot::CallFunc_RotateTarget_FinishedRotation' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_TickUpdateShoot, CallFunc_GetSocketTransform_ReturnValue) == 0x000050, "Member 'Viessa_AbilityActor_IceSphere2_C_TickUpdateShoot::CallFunc_GetSocketTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_TickUpdateShoot, Temp_struct_Variable) == 0x000080, "Member 'Viessa_AbilityActor_IceSphere2_C_TickUpdateShoot::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_TickUpdateShoot, CallFunc_BP_MakeForwardingContext_ReturnValue) == 0x000090, "Member 'Viessa_AbilityActor_IceSphere2_C_TickUpdateShoot::CallFunc_BP_MakeForwardingContext_ReturnValue' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_TickUpdateShoot, CallFunc_SpawnFirstAbilityActorByTag_ReturnValue) == 0x0000A0, "Member 'Viessa_AbilityActor_IceSphere2_C_TickUpdateShoot::CallFunc_SpawnFirstAbilityActorByTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_TickUpdateShoot, CallFunc_CanShoot_Result) == 0x0000A8, "Member 'Viessa_AbilityActor_IceSphere2_C_TickUpdateShoot::CallFunc_CanShoot_Result' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_TickUpdateShoot, CallFunc_GetAnimInstance_ReturnValue) == 0x0000B0, "Member 'Viessa_AbilityActor_IceSphere2_C_TickUpdateShoot::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_TickUpdateShoot, CallFunc_HasAuthority_ReturnValue_1) == 0x0000B8, "Member 'Viessa_AbilityActor_IceSphere2_C_TickUpdateShoot::CallFunc_HasAuthority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_TickUpdateShoot, K2Node_DynamicCast_AsABP_PC_003_A0101) == 0x0000C0, "Member 'Viessa_AbilityActor_IceSphere2_C_TickUpdateShoot::K2Node_DynamicCast_AsABP_PC_003_A0101' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_TickUpdateShoot, K2Node_DynamicCast_bSuccess) == 0x0000C8, "Member 'Viessa_AbilityActor_IceSphere2_C_TickUpdateShoot::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_TickUpdateShoot, CallFunc_FindNearestTarget_Target) == 0x0000D0, "Member 'Viessa_AbilityActor_IceSphere2_C_TickUpdateShoot::CallFunc_FindNearestTarget_Target' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_TickUpdateShoot, CallFunc_IsValid_ReturnValue_1) == 0x0000D8, "Member 'Viessa_AbilityActor_IceSphere2_C_TickUpdateShoot::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_TickUpdateShoot, CallFunc_Add_DoubleDouble_A_ImplicitCast) == 0x0000E0, "Member 'Viessa_AbilityActor_IceSphere2_C_TickUpdateShoot::CallFunc_Add_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function Viessa_AbilityActor_IceSphere2.Viessa_AbilityActor_IceSphere2_C.TickUpdateRedetection
// 0x0068 (0x0068 - 0x0000)
struct Viessa_AbilityActor_IceSphere2_C_TickUpdateRedetection final
{
public:
	double                                        DeltaSeconds;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FViessa_IceSphereData                  CallFunc_Array_Get_Item;                           // 0x0020(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FViessa_IceSphereData                  K2Node_SetFieldsInStruct_StructOut;                // 0x0048(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast;          // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_SetFieldsInStruct_ElapsedTime_4_26422914423840FDE32598AE8AED35AA_ImplicitCast; // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Viessa_AbilityActor_IceSphere2_C_TickUpdateRedetection) == 0x000008, "Wrong alignment on Viessa_AbilityActor_IceSphere2_C_TickUpdateRedetection");
static_assert(sizeof(Viessa_AbilityActor_IceSphere2_C_TickUpdateRedetection) == 0x000068, "Wrong size on Viessa_AbilityActor_IceSphere2_C_TickUpdateRedetection");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_TickUpdateRedetection, DeltaSeconds) == 0x000000, "Member 'Viessa_AbilityActor_IceSphere2_C_TickUpdateRedetection::DeltaSeconds' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_TickUpdateRedetection, Temp_int_Array_Index_Variable) == 0x000008, "Member 'Viessa_AbilityActor_IceSphere2_C_TickUpdateRedetection::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_TickUpdateRedetection, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'Viessa_AbilityActor_IceSphere2_C_TickUpdateRedetection::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_TickUpdateRedetection, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'Viessa_AbilityActor_IceSphere2_C_TickUpdateRedetection::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_TickUpdateRedetection, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000018, "Member 'Viessa_AbilityActor_IceSphere2_C_TickUpdateRedetection::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_TickUpdateRedetection, CallFunc_Array_Get_Item) == 0x000020, "Member 'Viessa_AbilityActor_IceSphere2_C_TickUpdateRedetection::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_TickUpdateRedetection, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'Viessa_AbilityActor_IceSphere2_C_TickUpdateRedetection::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_TickUpdateRedetection, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000038, "Member 'Viessa_AbilityActor_IceSphere2_C_TickUpdateRedetection::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_TickUpdateRedetection, CallFunc_Less_IntInt_ReturnValue) == 0x000040, "Member 'Viessa_AbilityActor_IceSphere2_C_TickUpdateRedetection::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_TickUpdateRedetection, K2Node_SetFieldsInStruct_StructOut) == 0x000048, "Member 'Viessa_AbilityActor_IceSphere2_C_TickUpdateRedetection::K2Node_SetFieldsInStruct_StructOut' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_TickUpdateRedetection, CallFunc_Add_DoubleDouble_A_ImplicitCast) == 0x000058, "Member 'Viessa_AbilityActor_IceSphere2_C_TickUpdateRedetection::CallFunc_Add_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_TickUpdateRedetection, K2Node_SetFieldsInStruct_ElapsedTime_4_26422914423840FDE32598AE8AED35AA_ImplicitCast) == 0x000060, "Member 'Viessa_AbilityActor_IceSphere2_C_TickUpdateRedetection::K2Node_SetFieldsInStruct_ElapsedTime_4_26422914423840FDE32598AE8AED35AA_ImplicitCast' has a wrong offset!");

// Function Viessa_AbilityActor_IceSphere2.Viessa_AbilityActor_IceSphere2_C.RotateTarget
// 0x0118 (0x0118 - 0x0000)
struct Viessa_AbilityActor_IceSphere2_C_RotateTarget final
{
public:
	double                                        DeltaSeconds;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          FinishedRotation;                                  // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue;      // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorAttackBoneLocation_ReturnValue;   // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMin_ReturnValue;                         // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue;           // 0x0054(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_RLerp_ReturnValue;                        // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6D[0x3];                                       // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetWorldRotation_SweepHitResult;       // 0x0070(0x009C)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x010C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10D[0x3];                                      // 0x010D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_RLerp_Alpha_ImplicitCast;                 // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Viessa_AbilityActor_IceSphere2_C_RotateTarget) == 0x000008, "Wrong alignment on Viessa_AbilityActor_IceSphere2_C_RotateTarget");
static_assert(sizeof(Viessa_AbilityActor_IceSphere2_C_RotateTarget) == 0x000118, "Wrong size on Viessa_AbilityActor_IceSphere2_C_RotateTarget");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_RotateTarget, DeltaSeconds) == 0x000000, "Member 'Viessa_AbilityActor_IceSphere2_C_RotateTarget::DeltaSeconds' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_RotateTarget, FinishedRotation) == 0x000008, "Member 'Viessa_AbilityActor_IceSphere2_C_RotateTarget::FinishedRotation' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_RotateTarget, CallFunc_K2_GetComponentRotation_ReturnValue) == 0x00000C, "Member 'Viessa_AbilityActor_IceSphere2_C_RotateTarget::CallFunc_K2_GetComponentRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_RotateTarget, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x000018, "Member 'Viessa_AbilityActor_IceSphere2_C_RotateTarget::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_RotateTarget, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000020, "Member 'Viessa_AbilityActor_IceSphere2_C_RotateTarget::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_RotateTarget, CallFunc_GetActorAttackBoneLocation_ReturnValue) == 0x000028, "Member 'Viessa_AbilityActor_IceSphere2_C_RotateTarget::CallFunc_GetActorAttackBoneLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_RotateTarget, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000038, "Member 'Viessa_AbilityActor_IceSphere2_C_RotateTarget::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_RotateTarget, CallFunc_FMin_ReturnValue) == 0x000040, "Member 'Viessa_AbilityActor_IceSphere2_C_RotateTarget::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_RotateTarget, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000048, "Member 'Viessa_AbilityActor_IceSphere2_C_RotateTarget::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_RotateTarget, CallFunc_FindLookAtRotation_ReturnValue) == 0x000054, "Member 'Viessa_AbilityActor_IceSphere2_C_RotateTarget::CallFunc_FindLookAtRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_RotateTarget, CallFunc_RLerp_ReturnValue) == 0x000060, "Member 'Viessa_AbilityActor_IceSphere2_C_RotateTarget::CallFunc_RLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_RotateTarget, CallFunc_IsValid_ReturnValue) == 0x00006C, "Member 'Viessa_AbilityActor_IceSphere2_C_RotateTarget::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_RotateTarget, CallFunc_K2_SetWorldRotation_SweepHitResult) == 0x000070, "Member 'Viessa_AbilityActor_IceSphere2_C_RotateTarget::CallFunc_K2_SetWorldRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_RotateTarget, CallFunc_IsValid_ReturnValue_1) == 0x00010C, "Member 'Viessa_AbilityActor_IceSphere2_C_RotateTarget::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_RotateTarget, CallFunc_RLerp_Alpha_ImplicitCast) == 0x000110, "Member 'Viessa_AbilityActor_IceSphere2_C_RotateTarget::CallFunc_RLerp_Alpha_ImplicitCast' has a wrong offset!");

// Function Viessa_AbilityActor_IceSphere2.Viessa_AbilityActor_IceSphere2_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct Viessa_AbilityActor_IceSphere2_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Viessa_AbilityActor_IceSphere2_C_ReceiveTick) == 0x000004, "Wrong alignment on Viessa_AbilityActor_IceSphere2_C_ReceiveTick");
static_assert(sizeof(Viessa_AbilityActor_IceSphere2_C_ReceiveTick) == 0x000004, "Wrong size on Viessa_AbilityActor_IceSphere2_C_ReceiveTick");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'Viessa_AbilityActor_IceSphere2_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function Viessa_AbilityActor_IceSphere2.Viessa_AbilityActor_IceSphere2_C.OnRep_IceSphereName
// 0x0028 (0x0028 - 0x0000)
struct Viessa_AbilityActor_IceSphere2_C_OnRep_IceSphereName final
{
public:
	class USkeletalMeshComponent*                 CallFunc_Map_Find_Value;                           // 0x0000(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UABP_PC_003_A0101_C*                    K2Node_DynamicCast_AsABP_PC_003_A0101;             // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Viessa_AbilityActor_IceSphere2_C_OnRep_IceSphereName) == 0x000008, "Wrong alignment on Viessa_AbilityActor_IceSphere2_C_OnRep_IceSphereName");
static_assert(sizeof(Viessa_AbilityActor_IceSphere2_C_OnRep_IceSphereName) == 0x000028, "Wrong size on Viessa_AbilityActor_IceSphere2_C_OnRep_IceSphereName");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_OnRep_IceSphereName, CallFunc_Map_Find_Value) == 0x000000, "Member 'Viessa_AbilityActor_IceSphere2_C_OnRep_IceSphereName::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_OnRep_IceSphereName, CallFunc_Map_Find_ReturnValue) == 0x000008, "Member 'Viessa_AbilityActor_IceSphere2_C_OnRep_IceSphereName::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_OnRep_IceSphereName, CallFunc_GetAnimInstance_ReturnValue) == 0x000010, "Member 'Viessa_AbilityActor_IceSphere2_C_OnRep_IceSphereName::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_OnRep_IceSphereName, K2Node_DynamicCast_AsABP_PC_003_A0101) == 0x000018, "Member 'Viessa_AbilityActor_IceSphere2_C_OnRep_IceSphereName::K2Node_DynamicCast_AsABP_PC_003_A0101' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_OnRep_IceSphereName, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'Viessa_AbilityActor_IceSphere2_C_OnRep_IceSphereName::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_OnRep_IceSphereName, CallFunc_IsValid_ReturnValue) == 0x000021, "Member 'Viessa_AbilityActor_IceSphere2_C_OnRep_IceSphereName::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function Viessa_AbilityActor_IceSphere2.Viessa_AbilityActor_IceSphere2_C.OnEndOverlap_12C639954662F9343796309174B8162C
// 0x0020 (0x0020 - 0x0000)
struct Viessa_AbilityActor_IceSphere2_C_OnEndOverlap_12C639954662F9343796309174B8162C final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Viessa_AbilityActor_IceSphere2_C_OnEndOverlap_12C639954662F9343796309174B8162C) == 0x000008, "Wrong alignment on Viessa_AbilityActor_IceSphere2_C_OnEndOverlap_12C639954662F9343796309174B8162C");
static_assert(sizeof(Viessa_AbilityActor_IceSphere2_C_OnEndOverlap_12C639954662F9343796309174B8162C) == 0x000020, "Wrong size on Viessa_AbilityActor_IceSphere2_C_OnEndOverlap_12C639954662F9343796309174B8162C");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_OnEndOverlap_12C639954662F9343796309174B8162C, OverlappedComponent) == 0x000000, "Member 'Viessa_AbilityActor_IceSphere2_C_OnEndOverlap_12C639954662F9343796309174B8162C::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_OnEndOverlap_12C639954662F9343796309174B8162C, OtherActor) == 0x000008, "Member 'Viessa_AbilityActor_IceSphere2_C_OnEndOverlap_12C639954662F9343796309174B8162C::OtherActor' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_OnEndOverlap_12C639954662F9343796309174B8162C, OtherComp) == 0x000010, "Member 'Viessa_AbilityActor_IceSphere2_C_OnEndOverlap_12C639954662F9343796309174B8162C::OtherComp' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_OnEndOverlap_12C639954662F9343796309174B8162C, OtherBodyIndex) == 0x000018, "Member 'Viessa_AbilityActor_IceSphere2_C_OnEndOverlap_12C639954662F9343796309174B8162C::OtherBodyIndex' has a wrong offset!");

// Function Viessa_AbilityActor_IceSphere2.Viessa_AbilityActor_IceSphere2_C.OnEndDetect
// 0x0030 (0x0030 - 0x0000)
struct Viessa_AbilityActor_IceSphere2_C_OnEndDetect final
{
public:
	class AActor*                                 Target_0;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FViessa_IceSphereData                  CallFunc_Array_Get_Item;                           // 0x0010(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_27[0x1];                                       // 0x0027(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Viessa_AbilityActor_IceSphere2_C_OnEndDetect) == 0x000008, "Wrong alignment on Viessa_AbilityActor_IceSphere2_C_OnEndDetect");
static_assert(sizeof(Viessa_AbilityActor_IceSphere2_C_OnEndDetect) == 0x000030, "Wrong size on Viessa_AbilityActor_IceSphere2_C_OnEndDetect");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_OnEndDetect, Target_0) == 0x000000, "Member 'Viessa_AbilityActor_IceSphere2_C_OnEndDetect::Target_0' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_OnEndDetect, Temp_int_Array_Index_Variable) == 0x000008, "Member 'Viessa_AbilityActor_IceSphere2_C_OnEndDetect::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_OnEndDetect, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'Viessa_AbilityActor_IceSphere2_C_OnEndDetect::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_OnEndDetect, CallFunc_Array_Get_Item) == 0x000010, "Member 'Viessa_AbilityActor_IceSphere2_C_OnEndDetect::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_OnEndDetect, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'Viessa_AbilityActor_IceSphere2_C_OnEndDetect::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_OnEndDetect, CallFunc_Array_RemoveItem_ReturnValue) == 0x000024, "Member 'Viessa_AbilityActor_IceSphere2_C_OnEndDetect::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_OnEndDetect, CallFunc_Less_IntInt_ReturnValue) == 0x000025, "Member 'Viessa_AbilityActor_IceSphere2_C_OnEndDetect::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_OnEndDetect, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000026, "Member 'Viessa_AbilityActor_IceSphere2_C_OnEndDetect::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_OnEndDetect, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'Viessa_AbilityActor_IceSphere2_C_OnEndDetect::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function Viessa_AbilityActor_IceSphere2.Viessa_AbilityActor_IceSphere2_C.OnBeginOverlap_12C639954662F9343796309174B8162C
// 0x0020 (0x0020 - 0x0000)
struct Viessa_AbilityActor_IceSphere2_C_OnBeginOverlap_12C639954662F9343796309174B8162C final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Viessa_AbilityActor_IceSphere2_C_OnBeginOverlap_12C639954662F9343796309174B8162C) == 0x000008, "Wrong alignment on Viessa_AbilityActor_IceSphere2_C_OnBeginOverlap_12C639954662F9343796309174B8162C");
static_assert(sizeof(Viessa_AbilityActor_IceSphere2_C_OnBeginOverlap_12C639954662F9343796309174B8162C) == 0x000020, "Wrong size on Viessa_AbilityActor_IceSphere2_C_OnBeginOverlap_12C639954662F9343796309174B8162C");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_OnBeginOverlap_12C639954662F9343796309174B8162C, OverlappedComponent) == 0x000000, "Member 'Viessa_AbilityActor_IceSphere2_C_OnBeginOverlap_12C639954662F9343796309174B8162C::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_OnBeginOverlap_12C639954662F9343796309174B8162C, OtherActor) == 0x000008, "Member 'Viessa_AbilityActor_IceSphere2_C_OnBeginOverlap_12C639954662F9343796309174B8162C::OtherActor' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_OnBeginOverlap_12C639954662F9343796309174B8162C, OtherComp) == 0x000010, "Member 'Viessa_AbilityActor_IceSphere2_C_OnBeginOverlap_12C639954662F9343796309174B8162C::OtherComp' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_OnBeginOverlap_12C639954662F9343796309174B8162C, OtherBodyIndex) == 0x000018, "Member 'Viessa_AbilityActor_IceSphere2_C_OnBeginOverlap_12C639954662F9343796309174B8162C::OtherBodyIndex' has a wrong offset!");

// Function Viessa_AbilityActor_IceSphere2.Viessa_AbilityActor_IceSphere2_C.OnBeginDetect
// 0x0050 (0x0050 - 0x0000)
struct Viessa_AbilityActor_IceSphere2_C_OnBeginDetect final
{
public:
	class AActor*                                 Target_0;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AM1Monster*                             K2Node_DynamicCast_AsM1Monster;                    // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FViessa_IceSphereData                  K2Node_MakeStruct_Viessa_IceSphereData;            // 0x0018(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FViessa_IceSphereData                  CallFunc_Array_Get_Item;                           // 0x0030(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_46[0x2];                                       // 0x0046(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_ElapsedTime_4_26422914423840FDE32598AE8AED35AA_ImplicitCast; // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Viessa_AbilityActor_IceSphere2_C_OnBeginDetect) == 0x000008, "Wrong alignment on Viessa_AbilityActor_IceSphere2_C_OnBeginDetect");
static_assert(sizeof(Viessa_AbilityActor_IceSphere2_C_OnBeginDetect) == 0x000050, "Wrong size on Viessa_AbilityActor_IceSphere2_C_OnBeginDetect");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_OnBeginDetect, Target_0) == 0x000000, "Member 'Viessa_AbilityActor_IceSphere2_C_OnBeginDetect::Target_0' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_OnBeginDetect, K2Node_DynamicCast_AsM1Monster) == 0x000008, "Member 'Viessa_AbilityActor_IceSphere2_C_OnBeginDetect::K2Node_DynamicCast_AsM1Monster' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_OnBeginDetect, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'Viessa_AbilityActor_IceSphere2_C_OnBeginDetect::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_OnBeginDetect, Temp_int_Array_Index_Variable) == 0x000014, "Member 'Viessa_AbilityActor_IceSphere2_C_OnBeginDetect::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_OnBeginDetect, K2Node_MakeStruct_Viessa_IceSphereData) == 0x000018, "Member 'Viessa_AbilityActor_IceSphere2_C_OnBeginDetect::K2Node_MakeStruct_Viessa_IceSphereData' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_OnBeginDetect, CallFunc_Array_Add_ReturnValue) == 0x000028, "Member 'Viessa_AbilityActor_IceSphere2_C_OnBeginDetect::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_OnBeginDetect, Temp_int_Loop_Counter_Variable) == 0x00002C, "Member 'Viessa_AbilityActor_IceSphere2_C_OnBeginDetect::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_OnBeginDetect, CallFunc_Array_Get_Item) == 0x000030, "Member 'Viessa_AbilityActor_IceSphere2_C_OnBeginDetect::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_OnBeginDetect, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'Viessa_AbilityActor_IceSphere2_C_OnBeginDetect::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_OnBeginDetect, CallFunc_Less_IntInt_ReturnValue) == 0x000044, "Member 'Viessa_AbilityActor_IceSphere2_C_OnBeginDetect::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_OnBeginDetect, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000045, "Member 'Viessa_AbilityActor_IceSphere2_C_OnBeginDetect::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_OnBeginDetect, CallFunc_Add_IntInt_ReturnValue) == 0x000048, "Member 'Viessa_AbilityActor_IceSphere2_C_OnBeginDetect::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_OnBeginDetect, K2Node_MakeStruct_ElapsedTime_4_26422914423840FDE32598AE8AED35AA_ImplicitCast) == 0x00004C, "Member 'Viessa_AbilityActor_IceSphere2_C_OnBeginDetect::K2Node_MakeStruct_ElapsedTime_4_26422914423840FDE32598AE8AED35AA_ImplicitCast' has a wrong offset!");

// Function Viessa_AbilityActor_IceSphere2.Viessa_AbilityActor_IceSphere2_C.IsNearest
// 0x0068 (0x0068 - 0x0000)
struct Viessa_AbilityActor_IceSphere2_C_IsNearest final
{
public:
	class AM1Monster*                             Standarad;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 OriginTarget;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 ComparisonTarget;                                  // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue_1;    // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0034(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Vector_Distance_ReturnValue;              // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Vector_Distance_ReturnValue_1;            // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0063(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Viessa_AbilityActor_IceSphere2_C_IsNearest) == 0x000008, "Wrong alignment on Viessa_AbilityActor_IceSphere2_C_IsNearest");
static_assert(sizeof(Viessa_AbilityActor_IceSphere2_C_IsNearest) == 0x000068, "Wrong size on Viessa_AbilityActor_IceSphere2_C_IsNearest");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_IsNearest, Standarad) == 0x000000, "Member 'Viessa_AbilityActor_IceSphere2_C_IsNearest::Standarad' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_IsNearest, OriginTarget) == 0x000008, "Member 'Viessa_AbilityActor_IceSphere2_C_IsNearest::OriginTarget' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_IsNearest, ComparisonTarget) == 0x000010, "Member 'Viessa_AbilityActor_IceSphere2_C_IsNearest::ComparisonTarget' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_IsNearest, Result) == 0x000018, "Member 'Viessa_AbilityActor_IceSphere2_C_IsNearest::Result' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_IsNearest, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x00001C, "Member 'Viessa_AbilityActor_IceSphere2_C_IsNearest::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_IsNearest, CallFunc_K2_GetComponentLocation_ReturnValue_1) == 0x000028, "Member 'Viessa_AbilityActor_IceSphere2_C_IsNearest::CallFunc_K2_GetComponentLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_IsNearest, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000034, "Member 'Viessa_AbilityActor_IceSphere2_C_IsNearest::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_IsNearest, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000040, "Member 'Viessa_AbilityActor_IceSphere2_C_IsNearest::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_IsNearest, CallFunc_Vector_Distance_ReturnValue) == 0x000050, "Member 'Viessa_AbilityActor_IceSphere2_C_IsNearest::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_IsNearest, CallFunc_Vector_Distance_ReturnValue_1) == 0x000058, "Member 'Viessa_AbilityActor_IceSphere2_C_IsNearest::CallFunc_Vector_Distance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_IsNearest, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000060, "Member 'Viessa_AbilityActor_IceSphere2_C_IsNearest::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_IsNearest, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000061, "Member 'Viessa_AbilityActor_IceSphere2_C_IsNearest::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_IsNearest, CallFunc_IsValid_ReturnValue) == 0x000062, "Member 'Viessa_AbilityActor_IceSphere2_C_IsNearest::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_IsNearest, CallFunc_IsValid_ReturnValue_1) == 0x000063, "Member 'Viessa_AbilityActor_IceSphere2_C_IsNearest::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function Viessa_AbilityActor_IceSphere2.Viessa_AbilityActor_IceSphere2_C.FindNearestTarget
// 0x00C8 (0x00C8 - 0x0000)
struct Viessa_AbilityActor_IceSphere2_C_FindNearestTarget final
{
public:
	class AM1Monster*                             Target_0;                                          // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AM1Monster*                             NearestTarget;                                     // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FViessa_IceSphereData                  CallFunc_Array_Get_Item;                           // 0x0028(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FViessa_IceSphereData                  K2Node_SetFieldsInStruct_StructOut;                // 0x0038(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0070(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7D[0x3];                                       // 0x007D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Vector_Distance_ReturnValue;              // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FViessa_IceSphereData                  CallFunc_Array_Get_Item_1;                         // 0x0090(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A3[0x1];                                       // 0x00A3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_2;        // 0x00A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Vector_Distance_ReturnValue_1;            // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDead_ReturnValue;                       // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BA[0x6];                                       // 0x00BA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GreaterEqual_DoubleDouble_A_ImplicitCast; // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Viessa_AbilityActor_IceSphere2_C_FindNearestTarget) == 0x000008, "Wrong alignment on Viessa_AbilityActor_IceSphere2_C_FindNearestTarget");
static_assert(sizeof(Viessa_AbilityActor_IceSphere2_C_FindNearestTarget) == 0x0000C8, "Wrong size on Viessa_AbilityActor_IceSphere2_C_FindNearestTarget");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_FindNearestTarget, Target_0) == 0x000000, "Member 'Viessa_AbilityActor_IceSphere2_C_FindNearestTarget::Target_0' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_FindNearestTarget, NearestTarget) == 0x000008, "Member 'Viessa_AbilityActor_IceSphere2_C_FindNearestTarget::NearestTarget' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_FindNearestTarget, Temp_int_Array_Index_Variable) == 0x000010, "Member 'Viessa_AbilityActor_IceSphere2_C_FindNearestTarget::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_FindNearestTarget, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'Viessa_AbilityActor_IceSphere2_C_FindNearestTarget::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_FindNearestTarget, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'Viessa_AbilityActor_IceSphere2_C_FindNearestTarget::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_FindNearestTarget, Temp_int_Array_Index_Variable_1) == 0x00001C, "Member 'Viessa_AbilityActor_IceSphere2_C_FindNearestTarget::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_FindNearestTarget, Temp_int_Loop_Counter_Variable_1) == 0x000020, "Member 'Viessa_AbilityActor_IceSphere2_C_FindNearestTarget::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_FindNearestTarget, CallFunc_Array_Get_Item) == 0x000028, "Member 'Viessa_AbilityActor_IceSphere2_C_FindNearestTarget::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_FindNearestTarget, K2Node_SetFieldsInStruct_StructOut) == 0x000038, "Member 'Viessa_AbilityActor_IceSphere2_C_FindNearestTarget::K2Node_SetFieldsInStruct_StructOut' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_FindNearestTarget, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000048, "Member 'Viessa_AbilityActor_IceSphere2_C_FindNearestTarget::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_FindNearestTarget, CallFunc_Add_IntInt_ReturnValue_1) == 0x00004C, "Member 'Viessa_AbilityActor_IceSphere2_C_FindNearestTarget::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_FindNearestTarget, CallFunc_Array_Length_ReturnValue) == 0x000050, "Member 'Viessa_AbilityActor_IceSphere2_C_FindNearestTarget::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_FindNearestTarget, CallFunc_Less_IntInt_ReturnValue) == 0x000054, "Member 'Viessa_AbilityActor_IceSphere2_C_FindNearestTarget::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_FindNearestTarget, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000058, "Member 'Viessa_AbilityActor_IceSphere2_C_FindNearestTarget::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_FindNearestTarget, CallFunc_GetOwner_ReturnValue) == 0x000068, "Member 'Viessa_AbilityActor_IceSphere2_C_FindNearestTarget::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_FindNearestTarget, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000070, "Member 'Viessa_AbilityActor_IceSphere2_C_FindNearestTarget::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_FindNearestTarget, CallFunc_IsValid_ReturnValue) == 0x00007C, "Member 'Viessa_AbilityActor_IceSphere2_C_FindNearestTarget::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_FindNearestTarget, CallFunc_Vector_Distance_ReturnValue) == 0x000080, "Member 'Viessa_AbilityActor_IceSphere2_C_FindNearestTarget::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_FindNearestTarget, CallFunc_Array_Length_ReturnValue_1) == 0x000088, "Member 'Viessa_AbilityActor_IceSphere2_C_FindNearestTarget::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_FindNearestTarget, CallFunc_Array_Get_Item_1) == 0x000090, "Member 'Viessa_AbilityActor_IceSphere2_C_FindNearestTarget::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_FindNearestTarget, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000A0, "Member 'Viessa_AbilityActor_IceSphere2_C_FindNearestTarget::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_FindNearestTarget, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x0000A1, "Member 'Viessa_AbilityActor_IceSphere2_C_FindNearestTarget::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_FindNearestTarget, CallFunc_IsValid_ReturnValue_1) == 0x0000A2, "Member 'Viessa_AbilityActor_IceSphere2_C_FindNearestTarget::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_FindNearestTarget, CallFunc_K2_GetActorLocation_ReturnValue_2) == 0x0000A4, "Member 'Viessa_AbilityActor_IceSphere2_C_FindNearestTarget::CallFunc_K2_GetActorLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_FindNearestTarget, CallFunc_Vector_Distance_ReturnValue_1) == 0x0000B0, "Member 'Viessa_AbilityActor_IceSphere2_C_FindNearestTarget::CallFunc_Vector_Distance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_FindNearestTarget, CallFunc_IsDead_ReturnValue) == 0x0000B8, "Member 'Viessa_AbilityActor_IceSphere2_C_FindNearestTarget::CallFunc_IsDead_ReturnValue' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_FindNearestTarget, CallFunc_Less_DoubleDouble_ReturnValue) == 0x0000B9, "Member 'Viessa_AbilityActor_IceSphere2_C_FindNearestTarget::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_FindNearestTarget, CallFunc_GreaterEqual_DoubleDouble_A_ImplicitCast) == 0x0000C0, "Member 'Viessa_AbilityActor_IceSphere2_C_FindNearestTarget::CallFunc_GreaterEqual_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function Viessa_AbilityActor_IceSphere2.Viessa_AbilityActor_IceSphere2_C.FindNearestIceSphere
// 0x0090 (0x0090 - 0x0000)
struct Viessa_AbilityActor_IceSphere2_C_FindNearestIceSphere final
{
public:
	class AM1Monster*                             Target_0;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Result;                                            // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   ResultIceSphereName;                               // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   LocalIceSphereName;                                // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 NearestIceSphere;                                  // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable_1;        // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E[0x2];                                       // 0x003E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4E[0x2];                                       // 0x004E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0054(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CallFunc_Map_Find_Value;                           // 0x0060(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsNearest_Result;                         // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6A[0x2];                                       // 0x006A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Array_Get_Item_1;                         // 0x006C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CallFunc_Map_Find_Value_1;                         // 0x0080(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x008A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Viessa_AbilityActor_IceSphere2_C_FindNearestIceSphere) == 0x000008, "Wrong alignment on Viessa_AbilityActor_IceSphere2_C_FindNearestIceSphere");
static_assert(sizeof(Viessa_AbilityActor_IceSphere2_C_FindNearestIceSphere) == 0x000090, "Wrong size on Viessa_AbilityActor_IceSphere2_C_FindNearestIceSphere");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_FindNearestIceSphere, Target_0) == 0x000000, "Member 'Viessa_AbilityActor_IceSphere2_C_FindNearestIceSphere::Target_0' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_FindNearestIceSphere, Result) == 0x000008, "Member 'Viessa_AbilityActor_IceSphere2_C_FindNearestIceSphere::Result' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_FindNearestIceSphere, ResultIceSphereName) == 0x000010, "Member 'Viessa_AbilityActor_IceSphere2_C_FindNearestIceSphere::ResultIceSphereName' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_FindNearestIceSphere, LocalIceSphereName) == 0x000018, "Member 'Viessa_AbilityActor_IceSphere2_C_FindNearestIceSphere::LocalIceSphereName' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_FindNearestIceSphere, NearestIceSphere) == 0x000020, "Member 'Viessa_AbilityActor_IceSphere2_C_FindNearestIceSphere::NearestIceSphere' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_FindNearestIceSphere, Temp_bool_True_if_break_was_hit_Variable) == 0x000028, "Member 'Viessa_AbilityActor_IceSphere2_C_FindNearestIceSphere::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_FindNearestIceSphere, Temp_int_Array_Index_Variable) == 0x00002C, "Member 'Viessa_AbilityActor_IceSphere2_C_FindNearestIceSphere::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_FindNearestIceSphere, CallFunc_Not_PreBool_ReturnValue) == 0x000030, "Member 'Viessa_AbilityActor_IceSphere2_C_FindNearestIceSphere::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_FindNearestIceSphere, Temp_int_Loop_Counter_Variable) == 0x000034, "Member 'Viessa_AbilityActor_IceSphere2_C_FindNearestIceSphere::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_FindNearestIceSphere, CallFunc_Add_IntInt_ReturnValue) == 0x000038, "Member 'Viessa_AbilityActor_IceSphere2_C_FindNearestIceSphere::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_FindNearestIceSphere, Temp_bool_True_if_break_was_hit_Variable_1) == 0x00003C, "Member 'Viessa_AbilityActor_IceSphere2_C_FindNearestIceSphere::Temp_bool_True_if_break_was_hit_Variable_1' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_FindNearestIceSphere, CallFunc_Not_PreBool_ReturnValue_1) == 0x00003D, "Member 'Viessa_AbilityActor_IceSphere2_C_FindNearestIceSphere::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_FindNearestIceSphere, Temp_int_Loop_Counter_Variable_1) == 0x000040, "Member 'Viessa_AbilityActor_IceSphere2_C_FindNearestIceSphere::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_FindNearestIceSphere, CallFunc_Array_Length_ReturnValue) == 0x000044, "Member 'Viessa_AbilityActor_IceSphere2_C_FindNearestIceSphere::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_FindNearestIceSphere, CallFunc_Add_IntInt_ReturnValue_1) == 0x000048, "Member 'Viessa_AbilityActor_IceSphere2_C_FindNearestIceSphere::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_FindNearestIceSphere, CallFunc_Less_IntInt_ReturnValue) == 0x00004C, "Member 'Viessa_AbilityActor_IceSphere2_C_FindNearestIceSphere::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_FindNearestIceSphere, CallFunc_BooleanAND_ReturnValue) == 0x00004D, "Member 'Viessa_AbilityActor_IceSphere2_C_FindNearestIceSphere::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_FindNearestIceSphere, Temp_int_Array_Index_Variable_1) == 0x000050, "Member 'Viessa_AbilityActor_IceSphere2_C_FindNearestIceSphere::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_FindNearestIceSphere, CallFunc_Array_Get_Item) == 0x000054, "Member 'Viessa_AbilityActor_IceSphere2_C_FindNearestIceSphere::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_FindNearestIceSphere, CallFunc_Map_Find_Value) == 0x000060, "Member 'Viessa_AbilityActor_IceSphere2_C_FindNearestIceSphere::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_FindNearestIceSphere, CallFunc_Map_Find_ReturnValue) == 0x000068, "Member 'Viessa_AbilityActor_IceSphere2_C_FindNearestIceSphere::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_FindNearestIceSphere, CallFunc_IsNearest_Result) == 0x000069, "Member 'Viessa_AbilityActor_IceSphere2_C_FindNearestIceSphere::CallFunc_IsNearest_Result' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_FindNearestIceSphere, CallFunc_Array_Get_Item_1) == 0x00006C, "Member 'Viessa_AbilityActor_IceSphere2_C_FindNearestIceSphere::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_FindNearestIceSphere, CallFunc_Array_Length_ReturnValue_1) == 0x000074, "Member 'Viessa_AbilityActor_IceSphere2_C_FindNearestIceSphere::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_FindNearestIceSphere, CallFunc_Less_IntInt_ReturnValue_1) == 0x000078, "Member 'Viessa_AbilityActor_IceSphere2_C_FindNearestIceSphere::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_FindNearestIceSphere, CallFunc_Map_Find_Value_1) == 0x000080, "Member 'Viessa_AbilityActor_IceSphere2_C_FindNearestIceSphere::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_FindNearestIceSphere, CallFunc_Map_Find_ReturnValue_1) == 0x000088, "Member 'Viessa_AbilityActor_IceSphere2_C_FindNearestIceSphere::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_FindNearestIceSphere, CallFunc_BooleanAND_ReturnValue_1) == 0x000089, "Member 'Viessa_AbilityActor_IceSphere2_C_FindNearestIceSphere::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_FindNearestIceSphere, CallFunc_IsValid_ReturnValue) == 0x00008A, "Member 'Viessa_AbilityActor_IceSphere2_C_FindNearestIceSphere::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function Viessa_AbilityActor_IceSphere2.Viessa_AbilityActor_IceSphere2_C.ExecuteUbergraph_Viessa_AbilityActor_IceSphere2
// 0x00C0 (0x00C0 - 0x0000)
struct Viessa_AbilityActor_IceSphere2_C_ExecuteUbergraph_Viessa_AbilityActor_IceSphere2 final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_CustomEvent_OverlappedComponent_1;          // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_OtherActor_1;                   // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_CustomEvent_OtherComp_1;                    // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_OtherBodyIndex_1;               // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)> K2Node_CreateDelegate_OutputDelegate;              // 0x0024(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_CustomEvent_OverlappedComponent;            // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_OtherActor;                     // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_CustomEvent_OtherComp;                      // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_OtherBodyIndex;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0054(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    Temp_object_Variable;                              // 0x0068(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Temp_object_Variable_1;                            // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    Temp_object_Variable_2;                            // 0x0078(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UM1AbilityAsync_WaitOverlapEvent*       CallFunc_WaitOverlapEvent_ReturnValue;             // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_CustomEvent_InDelay;                        // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_InIceSphereName;                // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_TickUpdateRedetection_DeltaSeconds_ImplicitCast; // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_TickUpdateShoot_DeltaSeconds_ImplicitCast; // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Delay_Duration_ImplicitCast;              // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Delay_Duration_ImplicitCast_1;            // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Viessa_AbilityActor_IceSphere2_C_ExecuteUbergraph_Viessa_AbilityActor_IceSphere2) == 0x000008, "Wrong alignment on Viessa_AbilityActor_IceSphere2_C_ExecuteUbergraph_Viessa_AbilityActor_IceSphere2");
static_assert(sizeof(Viessa_AbilityActor_IceSphere2_C_ExecuteUbergraph_Viessa_AbilityActor_IceSphere2) == 0x0000C0, "Wrong size on Viessa_AbilityActor_IceSphere2_C_ExecuteUbergraph_Viessa_AbilityActor_IceSphere2");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_ExecuteUbergraph_Viessa_AbilityActor_IceSphere2, EntryPoint) == 0x000000, "Member 'Viessa_AbilityActor_IceSphere2_C_ExecuteUbergraph_Viessa_AbilityActor_IceSphere2::EntryPoint' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_ExecuteUbergraph_Viessa_AbilityActor_IceSphere2, K2Node_CustomEvent_OverlappedComponent_1) == 0x000008, "Member 'Viessa_AbilityActor_IceSphere2_C_ExecuteUbergraph_Viessa_AbilityActor_IceSphere2::K2Node_CustomEvent_OverlappedComponent_1' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_ExecuteUbergraph_Viessa_AbilityActor_IceSphere2, K2Node_CustomEvent_OtherActor_1) == 0x000010, "Member 'Viessa_AbilityActor_IceSphere2_C_ExecuteUbergraph_Viessa_AbilityActor_IceSphere2::K2Node_CustomEvent_OtherActor_1' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_ExecuteUbergraph_Viessa_AbilityActor_IceSphere2, K2Node_CustomEvent_OtherComp_1) == 0x000018, "Member 'Viessa_AbilityActor_IceSphere2_C_ExecuteUbergraph_Viessa_AbilityActor_IceSphere2::K2Node_CustomEvent_OtherComp_1' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_ExecuteUbergraph_Viessa_AbilityActor_IceSphere2, K2Node_CustomEvent_OtherBodyIndex_1) == 0x000020, "Member 'Viessa_AbilityActor_IceSphere2_C_ExecuteUbergraph_Viessa_AbilityActor_IceSphere2::K2Node_CustomEvent_OtherBodyIndex_1' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_ExecuteUbergraph_Viessa_AbilityActor_IceSphere2, K2Node_CreateDelegate_OutputDelegate) == 0x000024, "Member 'Viessa_AbilityActor_IceSphere2_C_ExecuteUbergraph_Viessa_AbilityActor_IceSphere2::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_ExecuteUbergraph_Viessa_AbilityActor_IceSphere2, K2Node_CustomEvent_OverlappedComponent) == 0x000038, "Member 'Viessa_AbilityActor_IceSphere2_C_ExecuteUbergraph_Viessa_AbilityActor_IceSphere2::K2Node_CustomEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_ExecuteUbergraph_Viessa_AbilityActor_IceSphere2, K2Node_CustomEvent_OtherActor) == 0x000040, "Member 'Viessa_AbilityActor_IceSphere2_C_ExecuteUbergraph_Viessa_AbilityActor_IceSphere2::K2Node_CustomEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_ExecuteUbergraph_Viessa_AbilityActor_IceSphere2, K2Node_CustomEvent_OtherComp) == 0x000048, "Member 'Viessa_AbilityActor_IceSphere2_C_ExecuteUbergraph_Viessa_AbilityActor_IceSphere2::K2Node_CustomEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_ExecuteUbergraph_Viessa_AbilityActor_IceSphere2, K2Node_CustomEvent_OtherBodyIndex) == 0x000050, "Member 'Viessa_AbilityActor_IceSphere2_C_ExecuteUbergraph_Viessa_AbilityActor_IceSphere2::K2Node_CustomEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_ExecuteUbergraph_Viessa_AbilityActor_IceSphere2, K2Node_CreateDelegate_OutputDelegate_1) == 0x000054, "Member 'Viessa_AbilityActor_IceSphere2_C_ExecuteUbergraph_Viessa_AbilityActor_IceSphere2::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_ExecuteUbergraph_Viessa_AbilityActor_IceSphere2, Temp_int_Variable) == 0x000064, "Member 'Viessa_AbilityActor_IceSphere2_C_ExecuteUbergraph_Viessa_AbilityActor_IceSphere2::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_ExecuteUbergraph_Viessa_AbilityActor_IceSphere2, Temp_object_Variable) == 0x000068, "Member 'Viessa_AbilityActor_IceSphere2_C_ExecuteUbergraph_Viessa_AbilityActor_IceSphere2::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_ExecuteUbergraph_Viessa_AbilityActor_IceSphere2, Temp_object_Variable_1) == 0x000070, "Member 'Viessa_AbilityActor_IceSphere2_C_ExecuteUbergraph_Viessa_AbilityActor_IceSphere2::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_ExecuteUbergraph_Viessa_AbilityActor_IceSphere2, Temp_object_Variable_2) == 0x000078, "Member 'Viessa_AbilityActor_IceSphere2_C_ExecuteUbergraph_Viessa_AbilityActor_IceSphere2::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_ExecuteUbergraph_Viessa_AbilityActor_IceSphere2, K2Node_Event_DeltaSeconds) == 0x000080, "Member 'Viessa_AbilityActor_IceSphere2_C_ExecuteUbergraph_Viessa_AbilityActor_IceSphere2::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_ExecuteUbergraph_Viessa_AbilityActor_IceSphere2, CallFunc_WaitOverlapEvent_ReturnValue) == 0x000088, "Member 'Viessa_AbilityActor_IceSphere2_C_ExecuteUbergraph_Viessa_AbilityActor_IceSphere2::CallFunc_WaitOverlapEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_ExecuteUbergraph_Viessa_AbilityActor_IceSphere2, CallFunc_IsValid_ReturnValue) == 0x000090, "Member 'Viessa_AbilityActor_IceSphere2_C_ExecuteUbergraph_Viessa_AbilityActor_IceSphere2::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_ExecuteUbergraph_Viessa_AbilityActor_IceSphere2, K2Node_CustomEvent_InDelay) == 0x000098, "Member 'Viessa_AbilityActor_IceSphere2_C_ExecuteUbergraph_Viessa_AbilityActor_IceSphere2::K2Node_CustomEvent_InDelay' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_ExecuteUbergraph_Viessa_AbilityActor_IceSphere2, K2Node_CustomEvent_InIceSphereName) == 0x0000A0, "Member 'Viessa_AbilityActor_IceSphere2_C_ExecuteUbergraph_Viessa_AbilityActor_IceSphere2::K2Node_CustomEvent_InIceSphereName' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_ExecuteUbergraph_Viessa_AbilityActor_IceSphere2, CallFunc_TickUpdateRedetection_DeltaSeconds_ImplicitCast) == 0x0000A8, "Member 'Viessa_AbilityActor_IceSphere2_C_ExecuteUbergraph_Viessa_AbilityActor_IceSphere2::CallFunc_TickUpdateRedetection_DeltaSeconds_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_ExecuteUbergraph_Viessa_AbilityActor_IceSphere2, CallFunc_TickUpdateShoot_DeltaSeconds_ImplicitCast) == 0x0000B0, "Member 'Viessa_AbilityActor_IceSphere2_C_ExecuteUbergraph_Viessa_AbilityActor_IceSphere2::CallFunc_TickUpdateShoot_DeltaSeconds_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_ExecuteUbergraph_Viessa_AbilityActor_IceSphere2, CallFunc_Delay_Duration_ImplicitCast) == 0x0000B8, "Member 'Viessa_AbilityActor_IceSphere2_C_ExecuteUbergraph_Viessa_AbilityActor_IceSphere2::CallFunc_Delay_Duration_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_ExecuteUbergraph_Viessa_AbilityActor_IceSphere2, CallFunc_Delay_Duration_ImplicitCast_1) == 0x0000BC, "Member 'Viessa_AbilityActor_IceSphere2_C_ExecuteUbergraph_Viessa_AbilityActor_IceSphere2::CallFunc_Delay_Duration_ImplicitCast_1' has a wrong offset!");

// Function Viessa_AbilityActor_IceSphere2.Viessa_AbilityActor_IceSphere2_C.DestroyIceSphereAfterDelay
// 0x0010 (0x0010 - 0x0000)
struct Viessa_AbilityActor_IceSphere2_C_DestroyIceSphereAfterDelay final
{
public:
	double                                        InDelay;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   InIceSphereName;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Viessa_AbilityActor_IceSphere2_C_DestroyIceSphereAfterDelay) == 0x000008, "Wrong alignment on Viessa_AbilityActor_IceSphere2_C_DestroyIceSphereAfterDelay");
static_assert(sizeof(Viessa_AbilityActor_IceSphere2_C_DestroyIceSphereAfterDelay) == 0x000010, "Wrong size on Viessa_AbilityActor_IceSphere2_C_DestroyIceSphereAfterDelay");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_DestroyIceSphereAfterDelay, InDelay) == 0x000000, "Member 'Viessa_AbilityActor_IceSphere2_C_DestroyIceSphereAfterDelay::InDelay' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_DestroyIceSphereAfterDelay, InIceSphereName) == 0x000008, "Member 'Viessa_AbilityActor_IceSphere2_C_DestroyIceSphereAfterDelay::InIceSphereName' has a wrong offset!");

// Function Viessa_AbilityActor_IceSphere2.Viessa_AbilityActor_IceSphere2_C.DestroyIceSphere
// 0x0040 (0x0040 - 0x0000)
struct Viessa_AbilityActor_IceSphere2_C_DestroyIceSphere final
{
public:
	class FName                                   InIceSphereName;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DestroyedAll;                                      // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13[0x1];                                       // 0x0013(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 CallFunc_Map_Find_Value;                           // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Viessa_AbilityActor_IceSphere2_C_DestroyIceSphere) == 0x000008, "Wrong alignment on Viessa_AbilityActor_IceSphere2_C_DestroyIceSphere");
static_assert(sizeof(Viessa_AbilityActor_IceSphere2_C_DestroyIceSphere) == 0x000040, "Wrong size on Viessa_AbilityActor_IceSphere2_C_DestroyIceSphere");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_DestroyIceSphere, InIceSphereName) == 0x000000, "Member 'Viessa_AbilityActor_IceSphere2_C_DestroyIceSphere::InIceSphereName' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_DestroyIceSphere, DestroyedAll) == 0x000008, "Member 'Viessa_AbilityActor_IceSphere2_C_DestroyIceSphere::DestroyedAll' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_DestroyIceSphere, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'Viessa_AbilityActor_IceSphere2_C_DestroyIceSphere::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_DestroyIceSphere, CallFunc_HasAuthority_ReturnValue) == 0x000010, "Member 'Viessa_AbilityActor_IceSphere2_C_DestroyIceSphere::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_DestroyIceSphere, Temp_bool_True_if_break_was_hit_Variable) == 0x000011, "Member 'Viessa_AbilityActor_IceSphere2_C_DestroyIceSphere::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_DestroyIceSphere, CallFunc_Not_PreBool_ReturnValue) == 0x000012, "Member 'Viessa_AbilityActor_IceSphere2_C_DestroyIceSphere::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_DestroyIceSphere, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'Viessa_AbilityActor_IceSphere2_C_DestroyIceSphere::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_DestroyIceSphere, CallFunc_Array_Get_Item) == 0x000018, "Member 'Viessa_AbilityActor_IceSphere2_C_DestroyIceSphere::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_DestroyIceSphere, CallFunc_Map_Find_Value) == 0x000020, "Member 'Viessa_AbilityActor_IceSphere2_C_DestroyIceSphere::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_DestroyIceSphere, CallFunc_Map_Find_ReturnValue) == 0x000028, "Member 'Viessa_AbilityActor_IceSphere2_C_DestroyIceSphere::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_DestroyIceSphere, CallFunc_Add_IntInt_ReturnValue) == 0x00002C, "Member 'Viessa_AbilityActor_IceSphere2_C_DestroyIceSphere::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_DestroyIceSphere, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'Viessa_AbilityActor_IceSphere2_C_DestroyIceSphere::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_DestroyIceSphere, CallFunc_Array_Length_ReturnValue) == 0x000034, "Member 'Viessa_AbilityActor_IceSphere2_C_DestroyIceSphere::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_DestroyIceSphere, CallFunc_Less_IntInt_ReturnValue) == 0x000038, "Member 'Viessa_AbilityActor_IceSphere2_C_DestroyIceSphere::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_DestroyIceSphere, CallFunc_BooleanAND_ReturnValue) == 0x000039, "Member 'Viessa_AbilityActor_IceSphere2_C_DestroyIceSphere::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function Viessa_AbilityActor_IceSphere2.Viessa_AbilityActor_IceSphere2_C.DestroyFiredIceSphere
// 0x0020 (0x0020 - 0x0000)
struct Viessa_AbilityActor_IceSphere2_C_DestroyFiredIceSphere final
{
public:
	class FName                                   InIceSphereName;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Remove_ReturnValue;                   // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CallFunc_Map_Find_Value;                           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Viessa_AbilityActor_IceSphere2_C_DestroyFiredIceSphere) == 0x000008, "Wrong alignment on Viessa_AbilityActor_IceSphere2_C_DestroyFiredIceSphere");
static_assert(sizeof(Viessa_AbilityActor_IceSphere2_C_DestroyFiredIceSphere) == 0x000020, "Wrong size on Viessa_AbilityActor_IceSphere2_C_DestroyFiredIceSphere");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_DestroyFiredIceSphere, InIceSphereName) == 0x000000, "Member 'Viessa_AbilityActor_IceSphere2_C_DestroyFiredIceSphere::InIceSphereName' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_DestroyFiredIceSphere, CallFunc_Map_Remove_ReturnValue) == 0x000008, "Member 'Viessa_AbilityActor_IceSphere2_C_DestroyFiredIceSphere::CallFunc_Map_Remove_ReturnValue' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_DestroyFiredIceSphere, CallFunc_Map_Find_Value) == 0x000010, "Member 'Viessa_AbilityActor_IceSphere2_C_DestroyFiredIceSphere::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_DestroyFiredIceSphere, CallFunc_Map_Find_ReturnValue) == 0x000018, "Member 'Viessa_AbilityActor_IceSphere2_C_DestroyFiredIceSphere::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_DestroyFiredIceSphere, CallFunc_IsValid_ReturnValue) == 0x000019, "Member 'Viessa_AbilityActor_IceSphere2_C_DestroyFiredIceSphere::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function Viessa_AbilityActor_IceSphere2.Viessa_AbilityActor_IceSphere2_C.CanShoot
// 0x0003 (0x0003 - 0x0000)
struct Viessa_AbilityActor_IceSphere2_C_CanShoot final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Viessa_AbilityActor_IceSphere2_C_CanShoot) == 0x000001, "Wrong alignment on Viessa_AbilityActor_IceSphere2_C_CanShoot");
static_assert(sizeof(Viessa_AbilityActor_IceSphere2_C_CanShoot) == 0x000003, "Wrong size on Viessa_AbilityActor_IceSphere2_C_CanShoot");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_CanShoot, Result) == 0x000000, "Member 'Viessa_AbilityActor_IceSphere2_C_CanShoot::Result' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_CanShoot, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'Viessa_AbilityActor_IceSphere2_C_CanShoot::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_CanShoot, CallFunc_IsValid_ReturnValue_1) == 0x000002, "Member 'Viessa_AbilityActor_IceSphere2_C_CanShoot::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function Viessa_AbilityActor_IceSphere2.Viessa_AbilityActor_IceSphere2_C.AddSkeletalMeshControl
// 0x0048 (0x0048 - 0x0000)
struct Viessa_AbilityActor_IceSphere2_C_AddSkeletalMeshControl final
{
public:
	class USkeletalMeshComponent*                 OwnedSkeletalMeshComp;                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   ControlTag;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   BaseSocketName;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsCosmetic;                                       // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FM1ActorFollowParams                   K2Node_MakeStruct_M1ActorFollowParams;             // 0x001C(0x000C)(NoDestructor)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AddControl_ReturnValue;                   // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UABP_PC_003_A0101_C*                    K2Node_DynamicCast_AsABP_PC_003_A0101;             // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Viessa_AbilityActor_IceSphere2_C_AddSkeletalMeshControl) == 0x000008, "Wrong alignment on Viessa_AbilityActor_IceSphere2_C_AddSkeletalMeshControl");
static_assert(sizeof(Viessa_AbilityActor_IceSphere2_C_AddSkeletalMeshControl) == 0x000048, "Wrong size on Viessa_AbilityActor_IceSphere2_C_AddSkeletalMeshControl");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_AddSkeletalMeshControl, OwnedSkeletalMeshComp) == 0x000000, "Member 'Viessa_AbilityActor_IceSphere2_C_AddSkeletalMeshControl::OwnedSkeletalMeshComp' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_AddSkeletalMeshControl, ControlTag) == 0x000008, "Member 'Viessa_AbilityActor_IceSphere2_C_AddSkeletalMeshControl::ControlTag' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_AddSkeletalMeshControl, BaseSocketName) == 0x000010, "Member 'Viessa_AbilityActor_IceSphere2_C_AddSkeletalMeshControl::BaseSocketName' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_AddSkeletalMeshControl, bIsCosmetic) == 0x000018, "Member 'Viessa_AbilityActor_IceSphere2_C_AddSkeletalMeshControl::bIsCosmetic' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_AddSkeletalMeshControl, K2Node_MakeStruct_M1ActorFollowParams) == 0x00001C, "Member 'Viessa_AbilityActor_IceSphere2_C_AddSkeletalMeshControl::K2Node_MakeStruct_M1ActorFollowParams' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_AddSkeletalMeshControl, CallFunc_GetAnimInstance_ReturnValue) == 0x000028, "Member 'Viessa_AbilityActor_IceSphere2_C_AddSkeletalMeshControl::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_AddSkeletalMeshControl, CallFunc_AddControl_ReturnValue) == 0x000030, "Member 'Viessa_AbilityActor_IceSphere2_C_AddSkeletalMeshControl::CallFunc_AddControl_ReturnValue' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_AddSkeletalMeshControl, K2Node_DynamicCast_AsABP_PC_003_A0101) == 0x000038, "Member 'Viessa_AbilityActor_IceSphere2_C_AddSkeletalMeshControl::K2Node_DynamicCast_AsABP_PC_003_A0101' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_AddSkeletalMeshControl, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'Viessa_AbilityActor_IceSphere2_C_AddSkeletalMeshControl::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_AddSkeletalMeshControl, CallFunc_Array_Add_ReturnValue) == 0x000044, "Member 'Viessa_AbilityActor_IceSphere2_C_AddSkeletalMeshControl::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function Viessa_AbilityActor_IceSphere2.Viessa_AbilityActor_IceSphere2_C.AddIceSphereControls
// 0x001C (0x001C - 0x0000)
struct Viessa_AbilityActor_IceSphere2_C_AddIceSphereControls final
{
public:
	bool                                          CallFunc_MakeLiteralBool_ReturnValue;              // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_MakeLiteralName_ReturnValue;              // 0x0004(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_MakeLiteralName_ReturnValue_1;            // 0x000C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_MakeLiteralName_ReturnValue_2;            // 0x0014(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Viessa_AbilityActor_IceSphere2_C_AddIceSphereControls) == 0x000004, "Wrong alignment on Viessa_AbilityActor_IceSphere2_C_AddIceSphereControls");
static_assert(sizeof(Viessa_AbilityActor_IceSphere2_C_AddIceSphereControls) == 0x00001C, "Wrong size on Viessa_AbilityActor_IceSphere2_C_AddIceSphereControls");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_AddIceSphereControls, CallFunc_MakeLiteralBool_ReturnValue) == 0x000000, "Member 'Viessa_AbilityActor_IceSphere2_C_AddIceSphereControls::CallFunc_MakeLiteralBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_AddIceSphereControls, CallFunc_MakeLiteralName_ReturnValue) == 0x000004, "Member 'Viessa_AbilityActor_IceSphere2_C_AddIceSphereControls::CallFunc_MakeLiteralName_ReturnValue' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_AddIceSphereControls, CallFunc_MakeLiteralName_ReturnValue_1) == 0x00000C, "Member 'Viessa_AbilityActor_IceSphere2_C_AddIceSphereControls::CallFunc_MakeLiteralName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Viessa_AbilityActor_IceSphere2_C_AddIceSphereControls, CallFunc_MakeLiteralName_ReturnValue_2) == 0x000014, "Member 'Viessa_AbilityActor_IceSphere2_C_AddIceSphereControls::CallFunc_MakeLiteralName_ReturnValue_2' has a wrong offset!");

}

