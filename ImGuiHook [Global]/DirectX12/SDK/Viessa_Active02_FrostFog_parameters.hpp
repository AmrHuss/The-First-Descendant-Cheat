#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Viessa_Active02_FrostFog

#include "Basic.hpp"


namespace SDK::Params
{

// Function Viessa_Active02_FrostFog.Viessa_Active02_FrostFog_C.OnEvaluateCondition
// 0x0009 (0x0009 - 0x0000)
struct Viessa_Active02_FrostFog_C_OnEvaluateCondition final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsActiveTag_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsActiveTag_ReturnValue_1;                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_OnEvaluateCondition_ReturnValue;          // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsActiveTag_ReturnValue_2;                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Viessa_Active02_FrostFog_C_OnEvaluateCondition) == 0x000001, "Wrong alignment on Viessa_Active02_FrostFog_C_OnEvaluateCondition");
static_assert(sizeof(Viessa_Active02_FrostFog_C_OnEvaluateCondition) == 0x000009, "Wrong size on Viessa_Active02_FrostFog_C_OnEvaluateCondition");
static_assert(offsetof(Viessa_Active02_FrostFog_C_OnEvaluateCondition, ReturnValue) == 0x000000, "Member 'Viessa_Active02_FrostFog_C_OnEvaluateCondition::ReturnValue' has a wrong offset!");
static_assert(offsetof(Viessa_Active02_FrostFog_C_OnEvaluateCondition, CallFunc_IsActiveTag_ReturnValue) == 0x000001, "Member 'Viessa_Active02_FrostFog_C_OnEvaluateCondition::CallFunc_IsActiveTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(Viessa_Active02_FrostFog_C_OnEvaluateCondition, CallFunc_IsActiveTag_ReturnValue_1) == 0x000002, "Member 'Viessa_Active02_FrostFog_C_OnEvaluateCondition::CallFunc_IsActiveTag_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Viessa_Active02_FrostFog_C_OnEvaluateCondition, CallFunc_OnEvaluateCondition_ReturnValue) == 0x000003, "Member 'Viessa_Active02_FrostFog_C_OnEvaluateCondition::CallFunc_OnEvaluateCondition_ReturnValue' has a wrong offset!");
static_assert(offsetof(Viessa_Active02_FrostFog_C_OnEvaluateCondition, CallFunc_IsActiveTag_ReturnValue_2) == 0x000004, "Member 'Viessa_Active02_FrostFog_C_OnEvaluateCondition::CallFunc_IsActiveTag_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Viessa_Active02_FrostFog_C_OnEvaluateCondition, CallFunc_BooleanOR_ReturnValue) == 0x000005, "Member 'Viessa_Active02_FrostFog_C_OnEvaluateCondition::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Viessa_Active02_FrostFog_C_OnEvaluateCondition, CallFunc_BooleanOR_ReturnValue_1) == 0x000006, "Member 'Viessa_Active02_FrostFog_C_OnEvaluateCondition::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Viessa_Active02_FrostFog_C_OnEvaluateCondition, CallFunc_Not_PreBool_ReturnValue) == 0x000007, "Member 'Viessa_Active02_FrostFog_C_OnEvaluateCondition::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Viessa_Active02_FrostFog_C_OnEvaluateCondition, CallFunc_BooleanAND_ReturnValue) == 0x000008, "Member 'Viessa_Active02_FrostFog_C_OnEvaluateCondition::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function Viessa_Active02_FrostFog.Viessa_Active02_FrostFog_C.OnBeginOverlap
// 0x0010 (0x0010 - 0x0000)
struct Viessa_Active02_FrostFog_C_OnBeginOverlap final
{
public:
	class AActor*                                 OverlapActor;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Viessa_Active02_FrostFog_C_OnBeginOverlap) == 0x000008, "Wrong alignment on Viessa_Active02_FrostFog_C_OnBeginOverlap");
static_assert(sizeof(Viessa_Active02_FrostFog_C_OnBeginOverlap) == 0x000010, "Wrong size on Viessa_Active02_FrostFog_C_OnBeginOverlap");
static_assert(offsetof(Viessa_Active02_FrostFog_C_OnBeginOverlap, OverlapActor) == 0x000000, "Member 'Viessa_Active02_FrostFog_C_OnBeginOverlap::OverlapActor' has a wrong offset!");
static_assert(offsetof(Viessa_Active02_FrostFog_C_OnBeginOverlap, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'Viessa_Active02_FrostFog_C_OnBeginOverlap::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function Viessa_Active02_FrostFog.Viessa_Active02_FrostFog_C.ExecutePeriodDamage
// 0x0008 (0x0008 - 0x0000)
struct Viessa_Active02_FrostFog_C_ExecutePeriodDamage final
{
public:
	class AActor*                                 TargetActor_0;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Viessa_Active02_FrostFog_C_ExecutePeriodDamage) == 0x000008, "Wrong alignment on Viessa_Active02_FrostFog_C_ExecutePeriodDamage");
static_assert(sizeof(Viessa_Active02_FrostFog_C_ExecutePeriodDamage) == 0x000008, "Wrong size on Viessa_Active02_FrostFog_C_ExecutePeriodDamage");
static_assert(offsetof(Viessa_Active02_FrostFog_C_ExecutePeriodDamage, TargetActor_0) == 0x000000, "Member 'Viessa_Active02_FrostFog_C_ExecutePeriodDamage::TargetActor_0' has a wrong offset!");

}

