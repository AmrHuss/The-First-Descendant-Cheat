#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_CrosshairBase

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function WB_CrosshairBase.WB_CrosshairBase_C.ApplyCrosshairGridOpacity
// 0x0008 (0x0008 - 0x0000)
struct WB_CrosshairBase_C_ApplyCrosshairGridOpacity final
{
public:
	double                                        Opacity;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_CrosshairBase_C_ApplyCrosshairGridOpacity) == 0x000008, "Wrong alignment on WB_CrosshairBase_C_ApplyCrosshairGridOpacity");
static_assert(sizeof(WB_CrosshairBase_C_ApplyCrosshairGridOpacity) == 0x000008, "Wrong size on WB_CrosshairBase_C_ApplyCrosshairGridOpacity");
static_assert(offsetof(WB_CrosshairBase_C_ApplyCrosshairGridOpacity, Opacity) == 0x000000, "Member 'WB_CrosshairBase_C_ApplyCrosshairGridOpacity::Opacity' has a wrong offset!");

// Function WB_CrosshairBase.WB_CrosshairBase_C.ChangedCrosshairSpread
// 0x0030 (0x0030 - 0x0000)
struct WB_CrosshairBase_C_ChangedCrosshairSpread final
{
public:
	double                                        Spread;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetChildrenCount_ReturnValue;             // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_GetChildAt_ReturnValue;                   // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_CrosshairLayerBase_C*               K2Node_DynamicCast_AsWB_Crosshair_Layer_Base;      // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A[0x2];                                       // 0x002A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_CrosshairBase_C_ChangedCrosshairSpread) == 0x000008, "Wrong alignment on WB_CrosshairBase_C_ChangedCrosshairSpread");
static_assert(sizeof(WB_CrosshairBase_C_ChangedCrosshairSpread) == 0x000030, "Wrong size on WB_CrosshairBase_C_ChangedCrosshairSpread");
static_assert(offsetof(WB_CrosshairBase_C_ChangedCrosshairSpread, Spread) == 0x000000, "Member 'WB_CrosshairBase_C_ChangedCrosshairSpread::Spread' has a wrong offset!");
static_assert(offsetof(WB_CrosshairBase_C_ChangedCrosshairSpread, Temp_int_Variable) == 0x000008, "Member 'WB_CrosshairBase_C_ChangedCrosshairSpread::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WB_CrosshairBase_C_ChangedCrosshairSpread, CallFunc_GetChildrenCount_ReturnValue) == 0x00000C, "Member 'WB_CrosshairBase_C_ChangedCrosshairSpread::CallFunc_GetChildrenCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_CrosshairBase_C_ChangedCrosshairSpread, CallFunc_GetChildAt_ReturnValue) == 0x000010, "Member 'WB_CrosshairBase_C_ChangedCrosshairSpread::CallFunc_GetChildAt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_CrosshairBase_C_ChangedCrosshairSpread, CallFunc_Subtract_IntInt_ReturnValue) == 0x000018, "Member 'WB_CrosshairBase_C_ChangedCrosshairSpread::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_CrosshairBase_C_ChangedCrosshairSpread, K2Node_DynamicCast_AsWB_Crosshair_Layer_Base) == 0x000020, "Member 'WB_CrosshairBase_C_ChangedCrosshairSpread::K2Node_DynamicCast_AsWB_Crosshair_Layer_Base' has a wrong offset!");
static_assert(offsetof(WB_CrosshairBase_C_ChangedCrosshairSpread, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'WB_CrosshairBase_C_ChangedCrosshairSpread::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_CrosshairBase_C_ChangedCrosshairSpread, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000029, "Member 'WB_CrosshairBase_C_ChangedCrosshairSpread::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_CrosshairBase_C_ChangedCrosshairSpread, CallFunc_Add_IntInt_ReturnValue) == 0x00002C, "Member 'WB_CrosshairBase_C_ChangedCrosshairSpread::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function WB_CrosshairBase.WB_CrosshairBase_C.ChangedWeaponZoomed
// 0x0001 (0x0001 - 0x0000)
struct WB_CrosshairBase_C_ChangedWeaponZoomed final
{
public:
	bool                                          bInZoomed;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_CrosshairBase_C_ChangedWeaponZoomed) == 0x000001, "Wrong alignment on WB_CrosshairBase_C_ChangedWeaponZoomed");
static_assert(sizeof(WB_CrosshairBase_C_ChangedWeaponZoomed) == 0x000001, "Wrong size on WB_CrosshairBase_C_ChangedWeaponZoomed");
static_assert(offsetof(WB_CrosshairBase_C_ChangedWeaponZoomed, bInZoomed) == 0x000000, "Member 'WB_CrosshairBase_C_ChangedWeaponZoomed::bInZoomed' has a wrong offset!");

// Function WB_CrosshairBase.WB_CrosshairBase_C.EnemyInWeaponRange
// 0x0008 (0x0008 - 0x0000)
struct WB_CrosshairBase_C_EnemyInWeaponRange final
{
public:
	bool                                          bEnemyInWeaponRange;                               // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FColor                                 AimingNoticeCrosshairColor;                        // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_CrosshairBase_C_EnemyInWeaponRange) == 0x000004, "Wrong alignment on WB_CrosshairBase_C_EnemyInWeaponRange");
static_assert(sizeof(WB_CrosshairBase_C_EnemyInWeaponRange) == 0x000008, "Wrong size on WB_CrosshairBase_C_EnemyInWeaponRange");
static_assert(offsetof(WB_CrosshairBase_C_EnemyInWeaponRange, bEnemyInWeaponRange) == 0x000000, "Member 'WB_CrosshairBase_C_EnemyInWeaponRange::bEnemyInWeaponRange' has a wrong offset!");
static_assert(offsetof(WB_CrosshairBase_C_EnemyInWeaponRange, AimingNoticeCrosshairColor) == 0x000004, "Member 'WB_CrosshairBase_C_EnemyInWeaponRange::AimingNoticeCrosshairColor' has a wrong offset!");

// Function WB_CrosshairBase.WB_CrosshairBase_C.ExecuteUbergraph_WB_CrosshairBase
// 0x0008 (0x0008 - 0x0000)
struct WB_CrosshairBase_C_ExecuteUbergraph_WB_CrosshairBase final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_CrosshairBase_C_ExecuteUbergraph_WB_CrosshairBase) == 0x000004, "Wrong alignment on WB_CrosshairBase_C_ExecuteUbergraph_WB_CrosshairBase");
static_assert(sizeof(WB_CrosshairBase_C_ExecuteUbergraph_WB_CrosshairBase) == 0x000008, "Wrong size on WB_CrosshairBase_C_ExecuteUbergraph_WB_CrosshairBase");
static_assert(offsetof(WB_CrosshairBase_C_ExecuteUbergraph_WB_CrosshairBase, EntryPoint) == 0x000000, "Member 'WB_CrosshairBase_C_ExecuteUbergraph_WB_CrosshairBase::EntryPoint' has a wrong offset!");
static_assert(offsetof(WB_CrosshairBase_C_ExecuteUbergraph_WB_CrosshairBase, K2Node_Event_IsDesignTime) == 0x000004, "Member 'WB_CrosshairBase_C_ExecuteUbergraph_WB_CrosshairBase::K2Node_Event_IsDesignTime' has a wrong offset!");

// Function WB_CrosshairBase.WB_CrosshairBase_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WB_CrosshairBase_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_CrosshairBase_C_PreConstruct) == 0x000001, "Wrong alignment on WB_CrosshairBase_C_PreConstruct");
static_assert(sizeof(WB_CrosshairBase_C_PreConstruct) == 0x000001, "Wrong size on WB_CrosshairBase_C_PreConstruct");
static_assert(offsetof(WB_CrosshairBase_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WB_CrosshairBase_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WB_CrosshairBase.WB_CrosshairBase_C.UpdateOverlayPanel
// 0x0050 (0x0050 - 0x0000)
struct WB_CrosshairBase_C_UpdateOverlayPanel final
{
public:
	class UWidgetAnimation*                       ChangeAnimation;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetChildrenCount_ReturnValue;             // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_GetChildAt_ReturnValue;                   // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWB_CrosshairLayerBase_C*               K2Node_DynamicCast_AsWB_Crosshair_Layer_Base;      // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A[0x6];                                       // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UOverlaySlot*                           CallFunc_SlotAsOverlaySlot_ReturnValue;            // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_CrosshairBase_C_UpdateOverlayPanel) == 0x000008, "Wrong alignment on WB_CrosshairBase_C_UpdateOverlayPanel");
static_assert(sizeof(WB_CrosshairBase_C_UpdateOverlayPanel) == 0x000050, "Wrong size on WB_CrosshairBase_C_UpdateOverlayPanel");
static_assert(offsetof(WB_CrosshairBase_C_UpdateOverlayPanel, ChangeAnimation) == 0x000000, "Member 'WB_CrosshairBase_C_UpdateOverlayPanel::ChangeAnimation' has a wrong offset!");
static_assert(offsetof(WB_CrosshairBase_C_UpdateOverlayPanel, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'WB_CrosshairBase_C_UpdateOverlayPanel::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_CrosshairBase_C_UpdateOverlayPanel, CallFunc_PlayAnimationForward_ReturnValue) == 0x000010, "Member 'WB_CrosshairBase_C_UpdateOverlayPanel::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_CrosshairBase_C_UpdateOverlayPanel, Temp_int_Variable) == 0x000018, "Member 'WB_CrosshairBase_C_UpdateOverlayPanel::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(WB_CrosshairBase_C_UpdateOverlayPanel, CallFunc_GetChildrenCount_ReturnValue) == 0x00001C, "Member 'WB_CrosshairBase_C_UpdateOverlayPanel::CallFunc_GetChildrenCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_CrosshairBase_C_UpdateOverlayPanel, CallFunc_GetChildAt_ReturnValue) == 0x000020, "Member 'WB_CrosshairBase_C_UpdateOverlayPanel::CallFunc_GetChildAt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_CrosshairBase_C_UpdateOverlayPanel, CallFunc_Subtract_IntInt_ReturnValue) == 0x000028, "Member 'WB_CrosshairBase_C_UpdateOverlayPanel::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_CrosshairBase_C_UpdateOverlayPanel, K2Node_DynamicCast_AsWB_Crosshair_Layer_Base) == 0x000030, "Member 'WB_CrosshairBase_C_UpdateOverlayPanel::K2Node_DynamicCast_AsWB_Crosshair_Layer_Base' has a wrong offset!");
static_assert(offsetof(WB_CrosshairBase_C_UpdateOverlayPanel, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'WB_CrosshairBase_C_UpdateOverlayPanel::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WB_CrosshairBase_C_UpdateOverlayPanel, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000039, "Member 'WB_CrosshairBase_C_UpdateOverlayPanel::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_CrosshairBase_C_UpdateOverlayPanel, CallFunc_SlotAsOverlaySlot_ReturnValue) == 0x000040, "Member 'WB_CrosshairBase_C_UpdateOverlayPanel::CallFunc_SlotAsOverlaySlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_CrosshairBase_C_UpdateOverlayPanel, CallFunc_Add_IntInt_ReturnValue) == 0x000048, "Member 'WB_CrosshairBase_C_UpdateOverlayPanel::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function WB_CrosshairBase.WB_CrosshairBase_C.WeaponFireBursted
// 0x0010 (0x0010 - 0x0000)
struct WB_CrosshairBase_C_WeaponFireBursted final
{
public:
	class UUMGSequencePlayer*                     CallFunc_PlayUIAnimation_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_CrosshairBase_C_WeaponFireBursted) == 0x000008, "Wrong alignment on WB_CrosshairBase_C_WeaponFireBursted");
static_assert(sizeof(WB_CrosshairBase_C_WeaponFireBursted) == 0x000010, "Wrong size on WB_CrosshairBase_C_WeaponFireBursted");
static_assert(offsetof(WB_CrosshairBase_C_WeaponFireBursted, CallFunc_PlayUIAnimation_ReturnValue) == 0x000000, "Member 'WB_CrosshairBase_C_WeaponFireBursted::CallFunc_PlayUIAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_CrosshairBase_C_WeaponFireBursted, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'WB_CrosshairBase_C_WeaponFireBursted::CallFunc_IsValid_ReturnValue' has a wrong offset!");

}

