#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WB_CrosshairLayerBase_Circles

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function WB_CrosshairLayerBase_Circles.WB_CrosshairLayerBase_Circles_C.ExecuteUbergraph_WB_CrosshairLayerBase_Circles
// 0x00D8 (0x00D8 - 0x0000)
struct WB_CrosshairLayerBase_Circles_C_ExecuteUbergraph_WB_CrosshairLayerBase_Circles final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue;                          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue_1;                        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_2;           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_3;           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_BoolToDouble_ReturnValue;            // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0060(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_getWeaponRecoilResponse__pixels__recoil;  // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_4;           // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_4;      // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_1; // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_2; // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_3; // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_CrosshairLayerBase_Circles_C_ExecuteUbergraph_WB_CrosshairLayerBase_Circles) == 0x000008, "Wrong alignment on WB_CrosshairLayerBase_Circles_C_ExecuteUbergraph_WB_CrosshairLayerBase_Circles");
static_assert(sizeof(WB_CrosshairLayerBase_Circles_C_ExecuteUbergraph_WB_CrosshairLayerBase_Circles) == 0x0000D8, "Wrong size on WB_CrosshairLayerBase_Circles_C_ExecuteUbergraph_WB_CrosshairLayerBase_Circles");
static_assert(offsetof(WB_CrosshairLayerBase_Circles_C_ExecuteUbergraph_WB_CrosshairLayerBase_Circles, EntryPoint) == 0x000000, "Member 'WB_CrosshairLayerBase_Circles_C_ExecuteUbergraph_WB_CrosshairLayerBase_Circles::EntryPoint' has a wrong offset!");
static_assert(offsetof(WB_CrosshairLayerBase_Circles_C_ExecuteUbergraph_WB_CrosshairLayerBase_Circles, CallFunc_FClamp_ReturnValue) == 0x000008, "Member 'WB_CrosshairLayerBase_Circles_C_ExecuteUbergraph_WB_CrosshairLayerBase_Circles::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_CrosshairLayerBase_Circles_C_ExecuteUbergraph_WB_CrosshairLayerBase_Circles, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000010, "Member 'WB_CrosshairLayerBase_Circles_C_ExecuteUbergraph_WB_CrosshairLayerBase_Circles::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_CrosshairLayerBase_Circles_C_ExecuteUbergraph_WB_CrosshairLayerBase_Circles, CallFunc_Abs_ReturnValue) == 0x000018, "Member 'WB_CrosshairLayerBase_Circles_C_ExecuteUbergraph_WB_CrosshairLayerBase_Circles::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_CrosshairLayerBase_Circles_C_ExecuteUbergraph_WB_CrosshairLayerBase_Circles, CallFunc_Abs_ReturnValue_1) == 0x000020, "Member 'WB_CrosshairLayerBase_Circles_C_ExecuteUbergraph_WB_CrosshairLayerBase_Circles::CallFunc_Abs_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_CrosshairLayerBase_Circles_C_ExecuteUbergraph_WB_CrosshairLayerBase_Circles, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000028, "Member 'WB_CrosshairLayerBase_Circles_C_ExecuteUbergraph_WB_CrosshairLayerBase_Circles::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_CrosshairLayerBase_Circles_C_ExecuteUbergraph_WB_CrosshairLayerBase_Circles, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000030, "Member 'WB_CrosshairLayerBase_Circles_C_ExecuteUbergraph_WB_CrosshairLayerBase_Circles::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_CrosshairLayerBase_Circles_C_ExecuteUbergraph_WB_CrosshairLayerBase_Circles, CallFunc_Add_DoubleDouble_ReturnValue_2) == 0x000038, "Member 'WB_CrosshairLayerBase_Circles_C_ExecuteUbergraph_WB_CrosshairLayerBase_Circles::CallFunc_Add_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_CrosshairLayerBase_Circles_C_ExecuteUbergraph_WB_CrosshairLayerBase_Circles, CallFunc_Add_DoubleDouble_ReturnValue_3) == 0x000040, "Member 'WB_CrosshairLayerBase_Circles_C_ExecuteUbergraph_WB_CrosshairLayerBase_Circles::CallFunc_Add_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WB_CrosshairLayerBase_Circles_C_ExecuteUbergraph_WB_CrosshairLayerBase_Circles, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000048, "Member 'WB_CrosshairLayerBase_Circles_C_ExecuteUbergraph_WB_CrosshairLayerBase_Circles::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WB_CrosshairLayerBase_Circles_C_ExecuteUbergraph_WB_CrosshairLayerBase_Circles, CallFunc_MakeVector2D_ReturnValue) == 0x000050, "Member 'WB_CrosshairLayerBase_Circles_C_ExecuteUbergraph_WB_CrosshairLayerBase_Circles::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_CrosshairLayerBase_Circles_C_ExecuteUbergraph_WB_CrosshairLayerBase_Circles, CallFunc_Conv_BoolToDouble_ReturnValue) == 0x000058, "Member 'WB_CrosshairLayerBase_Circles_C_ExecuteUbergraph_WB_CrosshairLayerBase_Circles::CallFunc_Conv_BoolToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WB_CrosshairLayerBase_Circles_C_ExecuteUbergraph_WB_CrosshairLayerBase_Circles, K2Node_Event_MyGeometry) == 0x000060, "Member 'WB_CrosshairLayerBase_Circles_C_ExecuteUbergraph_WB_CrosshairLayerBase_Circles::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(WB_CrosshairLayerBase_Circles_C_ExecuteUbergraph_WB_CrosshairLayerBase_Circles, K2Node_Event_InDeltaTime) == 0x000098, "Member 'WB_CrosshairLayerBase_Circles_C_ExecuteUbergraph_WB_CrosshairLayerBase_Circles::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(WB_CrosshairLayerBase_Circles_C_ExecuteUbergraph_WB_CrosshairLayerBase_Circles, CallFunc_getWeaponRecoilResponse__pixels__recoil) == 0x0000A0, "Member 'WB_CrosshairLayerBase_Circles_C_ExecuteUbergraph_WB_CrosshairLayerBase_Circles::CallFunc_getWeaponRecoilResponse__pixels__recoil' has a wrong offset!");
static_assert(offsetof(WB_CrosshairLayerBase_Circles_C_ExecuteUbergraph_WB_CrosshairLayerBase_Circles, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x0000A8, "Member 'WB_CrosshairLayerBase_Circles_C_ExecuteUbergraph_WB_CrosshairLayerBase_Circles::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WB_CrosshairLayerBase_Circles_C_ExecuteUbergraph_WB_CrosshairLayerBase_Circles, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x0000B0, "Member 'WB_CrosshairLayerBase_Circles_C_ExecuteUbergraph_WB_CrosshairLayerBase_Circles::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WB_CrosshairLayerBase_Circles_C_ExecuteUbergraph_WB_CrosshairLayerBase_Circles, CallFunc_Add_DoubleDouble_ReturnValue_4) == 0x0000B8, "Member 'WB_CrosshairLayerBase_Circles_C_ExecuteUbergraph_WB_CrosshairLayerBase_Circles::CallFunc_Add_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WB_CrosshairLayerBase_Circles_C_ExecuteUbergraph_WB_CrosshairLayerBase_Circles, CallFunc_Multiply_DoubleDouble_ReturnValue_4) == 0x0000C0, "Member 'WB_CrosshairLayerBase_Circles_C_ExecuteUbergraph_WB_CrosshairLayerBase_Circles::CallFunc_Multiply_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(WB_CrosshairLayerBase_Circles_C_ExecuteUbergraph_WB_CrosshairLayerBase_Circles, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x0000C8, "Member 'WB_CrosshairLayerBase_Circles_C_ExecuteUbergraph_WB_CrosshairLayerBase_Circles::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(WB_CrosshairLayerBase_Circles_C_ExecuteUbergraph_WB_CrosshairLayerBase_Circles, CallFunc_SetScalarParameterValue_Value_ImplicitCast_1) == 0x0000CC, "Member 'WB_CrosshairLayerBase_Circles_C_ExecuteUbergraph_WB_CrosshairLayerBase_Circles::CallFunc_SetScalarParameterValue_Value_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(WB_CrosshairLayerBase_Circles_C_ExecuteUbergraph_WB_CrosshairLayerBase_Circles, CallFunc_SetScalarParameterValue_Value_ImplicitCast_2) == 0x0000D0, "Member 'WB_CrosshairLayerBase_Circles_C_ExecuteUbergraph_WB_CrosshairLayerBase_Circles::CallFunc_SetScalarParameterValue_Value_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(WB_CrosshairLayerBase_Circles_C_ExecuteUbergraph_WB_CrosshairLayerBase_Circles, CallFunc_SetScalarParameterValue_Value_ImplicitCast_3) == 0x0000D4, "Member 'WB_CrosshairLayerBase_Circles_C_ExecuteUbergraph_WB_CrosshairLayerBase_Circles::CallFunc_SetScalarParameterValue_Value_ImplicitCast_3' has a wrong offset!");

// Function WB_CrosshairLayerBase_Circles.WB_CrosshairLayerBase_Circles_C.getImagePlane
// 0x0008 (0x0008 - 0x0000)
struct WB_CrosshairLayerBase_Circles_C_GetImagePlane final
{
public:
	class UImage*                                 Image;                                             // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_CrosshairLayerBase_Circles_C_GetImagePlane) == 0x000008, "Wrong alignment on WB_CrosshairLayerBase_Circles_C_GetImagePlane");
static_assert(sizeof(WB_CrosshairLayerBase_Circles_C_GetImagePlane) == 0x000008, "Wrong size on WB_CrosshairLayerBase_Circles_C_GetImagePlane");
static_assert(offsetof(WB_CrosshairLayerBase_Circles_C_GetImagePlane, Image) == 0x000000, "Member 'WB_CrosshairLayerBase_Circles_C_GetImagePlane::Image' has a wrong offset!");

// Function WB_CrosshairLayerBase_Circles.WB_CrosshairLayerBase_Circles_C.GetMaterial
// 0x0008 (0x0008 - 0x0000)
struct WB_CrosshairLayerBase_Circles_C_GetMaterial final
{
public:
	class UMaterialInterface*                     Material;                                          // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_CrosshairLayerBase_Circles_C_GetMaterial) == 0x000008, "Wrong alignment on WB_CrosshairLayerBase_Circles_C_GetMaterial");
static_assert(sizeof(WB_CrosshairLayerBase_Circles_C_GetMaterial) == 0x000008, "Wrong size on WB_CrosshairLayerBase_Circles_C_GetMaterial");
static_assert(offsetof(WB_CrosshairLayerBase_Circles_C_GetMaterial, Material) == 0x000000, "Member 'WB_CrosshairLayerBase_Circles_C_GetMaterial::Material' has a wrong offset!");

// Function WB_CrosshairLayerBase_Circles.WB_CrosshairLayerBase_Circles_C.Tick
// 0x003C (0x003C - 0x0000)
struct WB_CrosshairLayerBase_Circles_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WB_CrosshairLayerBase_Circles_C_Tick) == 0x000004, "Wrong alignment on WB_CrosshairLayerBase_Circles_C_Tick");
static_assert(sizeof(WB_CrosshairLayerBase_Circles_C_Tick) == 0x00003C, "Wrong size on WB_CrosshairLayerBase_Circles_C_Tick");
static_assert(offsetof(WB_CrosshairLayerBase_Circles_C_Tick, MyGeometry) == 0x000000, "Member 'WB_CrosshairLayerBase_Circles_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(WB_CrosshairLayerBase_Circles_C_Tick, InDeltaTime) == 0x000038, "Member 'WB_CrosshairLayerBase_Circles_C_Tick::InDeltaTime' has a wrong offset!");

}

