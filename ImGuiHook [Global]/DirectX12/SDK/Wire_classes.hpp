#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Wire

#include "Basic.hpp"

#include "M1_classes.hpp"
#include "Engine_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "Wire_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass Wire.Wire_C
// 0x07F0 (0x0B80 - 0x0390)
class UWire_C : public UM1WireAnimInstance
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0390(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct Wire::FAnimBlueprintGeneratedMutableData __AnimBlueprintMutables;                           // 0x0398(0x0038)(HasGetValueTypeHash)
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x03D0(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x03D8(0x0008)()
	struct FAnimNode_Root                         AnimGraphNode_Root_1;                              // 0x03E0(0x0020)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x0400(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x0428(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x0450(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x0498(0x0020)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_5;                  // 0x04B8(0x0070)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_4;                  // 0x0528(0x0070)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_3;                  // 0x0598(0x0070)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_2;                  // 0x0608(0x0070)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer_1;                  // 0x0678(0x0070)()
	struct FAnimNode_BlendSpacePlayer             AnimGraphNode_BlendSpacePlayer;                    // 0x06E8(0x0070)()
	struct FAnimNode_BlendListByEnum              AnimGraphNode_BlendListByEnum_1;                   // 0x0758(0x0048)()
	struct FAnimNode_BlendListByEnum              AnimGraphNode_BlendListByEnum;                     // 0x07A0(0x0048)()
	struct FAnimNode_BlendListByBool              AnimGraphNode_BlendListByBool;                     // 0x07E8(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x0830(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x0850(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x0898(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x08B8(0x00C8)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose;                     // 0x0980(0x00C8)()
	struct FAnimNode_TwoWayBlend                  AnimGraphNode_TwoWayBlend;                         // 0x0A48(0x00C8)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x0B10(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x0B30(0x0048)()
	double                                        SideSpeedRatio;                                    // 0x0B78(0x0008)(Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AnimGraph(struct FPoseLink* AnimGraph_0);
	void ExecuteUbergraph_Wire(int32 EntryPoint);
	void WireLayer(const struct FPoseLink& InPose, struct FPoseLink* WireLayer_0);

	double GetReverseYaw() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Wire_C">();
	}
	static class UWire_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWire_C>();
	}
};
static_assert(alignof(UWire_C) == 0x000010, "Wrong alignment on UWire_C");
static_assert(sizeof(UWire_C) == 0x000B80, "Wrong size on UWire_C");
static_assert(offsetof(UWire_C, UberGraphFrame) == 0x000390, "Member 'UWire_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWire_C, __AnimBlueprintMutables) == 0x000398, "Member 'UWire_C::__AnimBlueprintMutables' has a wrong offset!");
static_assert(offsetof(UWire_C, AnimBlueprintExtension_PropertyAccess) == 0x0003D0, "Member 'UWire_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UWire_C, AnimBlueprintExtension_Base) == 0x0003D8, "Member 'UWire_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(UWire_C, AnimGraphNode_Root_1) == 0x0003E0, "Member 'UWire_C::AnimGraphNode_Root_1' has a wrong offset!");
static_assert(offsetof(UWire_C, AnimGraphNode_TransitionResult_1) == 0x000400, "Member 'UWire_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UWire_C, AnimGraphNode_TransitionResult) == 0x000428, "Member 'UWire_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UWire_C, AnimGraphNode_SequencePlayer_2) == 0x000450, "Member 'UWire_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UWire_C, AnimGraphNode_StateResult_2) == 0x000498, "Member 'UWire_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(UWire_C, AnimGraphNode_BlendSpacePlayer_5) == 0x0004B8, "Member 'UWire_C::AnimGraphNode_BlendSpacePlayer_5' has a wrong offset!");
static_assert(offsetof(UWire_C, AnimGraphNode_BlendSpacePlayer_4) == 0x000528, "Member 'UWire_C::AnimGraphNode_BlendSpacePlayer_4' has a wrong offset!");
static_assert(offsetof(UWire_C, AnimGraphNode_BlendSpacePlayer_3) == 0x000598, "Member 'UWire_C::AnimGraphNode_BlendSpacePlayer_3' has a wrong offset!");
static_assert(offsetof(UWire_C, AnimGraphNode_BlendSpacePlayer_2) == 0x000608, "Member 'UWire_C::AnimGraphNode_BlendSpacePlayer_2' has a wrong offset!");
static_assert(offsetof(UWire_C, AnimGraphNode_BlendSpacePlayer_1) == 0x000678, "Member 'UWire_C::AnimGraphNode_BlendSpacePlayer_1' has a wrong offset!");
static_assert(offsetof(UWire_C, AnimGraphNode_BlendSpacePlayer) == 0x0006E8, "Member 'UWire_C::AnimGraphNode_BlendSpacePlayer' has a wrong offset!");
static_assert(offsetof(UWire_C, AnimGraphNode_BlendListByEnum_1) == 0x000758, "Member 'UWire_C::AnimGraphNode_BlendListByEnum_1' has a wrong offset!");
static_assert(offsetof(UWire_C, AnimGraphNode_BlendListByEnum) == 0x0007A0, "Member 'UWire_C::AnimGraphNode_BlendListByEnum' has a wrong offset!");
static_assert(offsetof(UWire_C, AnimGraphNode_BlendListByBool) == 0x0007E8, "Member 'UWire_C::AnimGraphNode_BlendListByBool' has a wrong offset!");
static_assert(offsetof(UWire_C, AnimGraphNode_StateResult_1) == 0x000830, "Member 'UWire_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UWire_C, AnimGraphNode_SequencePlayer_1) == 0x000850, "Member 'UWire_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UWire_C, AnimGraphNode_StateResult) == 0x000898, "Member 'UWire_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UWire_C, AnimGraphNode_StateMachine) == 0x0008B8, "Member 'UWire_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UWire_C, AnimGraphNode_LinkedInputPose) == 0x000980, "Member 'UWire_C::AnimGraphNode_LinkedInputPose' has a wrong offset!");
static_assert(offsetof(UWire_C, AnimGraphNode_TwoWayBlend) == 0x000A48, "Member 'UWire_C::AnimGraphNode_TwoWayBlend' has a wrong offset!");
static_assert(offsetof(UWire_C, AnimGraphNode_Root) == 0x000B10, "Member 'UWire_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UWire_C, AnimGraphNode_SequencePlayer) == 0x000B30, "Member 'UWire_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UWire_C, SideSpeedRatio) == 0x000B78, "Member 'UWire_C::SideSpeedRatio' has a wrong offset!");

}

